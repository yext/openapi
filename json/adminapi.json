{
  "openapi": "3.0.0",
  "info": {
    "title": "Yext Admin API",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://api.yextapis.com/v2"
    }
  ],
  "paths": {
    "/accounts/{accountId}/availableservices": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listAvailableServices",
        "tags": [
          "Administrative API"
        ],
        "summary": "Available Services: List",
        "description": "Return list of services available to you under your agreements",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AvailableServicesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/newlocationaddrequests": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "createNewLocationAddRequest",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewLocationAddRequest"
              }
            }
          }
        },
        "tags": [
          "Administrative API"
        ],
        "summary": "Add Requests: Create (New Location)",
        "description": "Request that a new location be added and services added to it. The location is created only if the \"status\" field returned is \"COMPLETE\". In most cases, the \"status\" returned in the Add Request: Create response will be \"SUBMITTED\". For a list and explanation of each possible \"status\", please see the [**Add Requests: Get (Location)**](#operation/getAddRequest) section.\n\nTo receive real-time updates on the status of your Add Request, we recommend that you configure the [**Add Request Update: Webhook**](../webhooks/index.html#operation/addRequestWebhook) in the Developer Console (see the [**Configure Webhooks**](http://developer.yext.com/docs/guides/configure-webhooks/) guide for more information). Alternatively, use the [**Add Requests: Get (Location)**](#operation/getAddRequest) call to determine the current Add Request \"status\".\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/NewLocationAddRequestsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/existinglocationaddrequests": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "createExistingLocationAddRequest",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExistingLocationAddRequest"
              }
            }
          }
        },
        "tags": [
          "Administrative API"
        ],
        "summary": "Add Requests: Create (Existing Location)",
        "description": "Request that one or more available services be added to an existing location.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ExistingLocationAddRequestsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/existingsubaccountaddrequests": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "createExistingSubAccountAddRequest",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExistingSubAccountAddRequest"
              }
            }
          }
        },
        "tags": [
          "Administrative API"
        ],
        "summary": "Add Requests: Create (Existing Account)",
        "description": "Request that one or more available services be added (or increased in quantity) to an existing account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ExistingSubAccountAddRequestsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/cancelservices": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The ID of the account.\n\n**NOTE:** If you would like to cancel location services under a sub-account, enter the ID of the *main account* rather than the sub-account.\n"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "cancelServices",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelServicesRequest"
              }
            }
          }
        },
        "tags": [
          "Administrative API"
        ],
        "summary": "Services: Cancel (Location)",
        "description": "Cancel one or more active services provisioned on the location.\n\n**NOTE:** If you have added location services under a sub-account, use this endpoint on your *main account* to cancel them.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CancelServicesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/cancelsubaccountservices": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The ID of the account.\n\n**NOTE:** Enter the ID of the *main account* rather than the sub-account to cancel services provisioned on the sub-account.\n"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "cancelSubAccountServices",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSubAccountServicesRequest"
              }
            }
          }
        },
        "tags": [
          "Administrative API"
        ],
        "summary": "Services: Cancel (Account)",
        "description": "Cancel (or decrease the quantity of) one or more active services provisioned on the account.\n\n**NOTE:** If you have added services to a sub-account, use this endpoint on your *main account* to cancel them.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CancelSubAccountServicesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/cancelallsubaccountservices": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The ID of the account.\n\n**NOTE:** Enter the ID of the *main account* rather than the sub-account to cancel all of the services provisioned on the sub-account.\n"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "cancelAllSubAccountServices",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelAllSubAccountServicesRequest"
              }
            }
          }
        },
        "tags": [
          "Administrative API"
        ],
        "summary": "Services: Cancel All (Account)",
        "description": "Cancel all active services (all quantities) provisioned on the account.\n\n**NOTE:** If you have added services to a sub-account, use this endpoint on your *main account* to cancel all of them.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CancelAllSubAccountServicesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/processaddrequest": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "createProcessReviewAddRequest",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessReviewAddRequest"
              }
            }
          }
        },
        "tags": [
          "Administrative API"
        ],
        "summary": "Add Requests: Process (Sandbox API Only)",
        "description": "Request that an add request in REVIEW be processed to COMPLETE, CANCELED, or FAILED. Only applicable for location add requests.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/addrequests": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listAddRequests",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "SUBMITTED",
                "PROCESSING",
                "COMPLETE",
                "CANCELED",
                "REVIEW",
                "FAILED"
              ]
            },
            "description": "Filters the list to add requests in a specific status."
          },
          {
            "name": "submittedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DDThh:mm:ss` format)"
          },
          {
            "name": "submittedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DDThh:mm:ss` format)"
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DDThh:mm:ss` format)"
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DDThh:mm:ss` format)"
          },
          {
            "name": "sku",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agreementId",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "tags": [
          "Administrative API"
        ],
        "summary": "Add Requests: List (Location)",
        "description": "Get all of the add requests in the account that were created for locations. The response includes both New Location Add Requests and Existing Location Add Requests.\n\nPossible `status` values for each add request:\n  * SUBMITTED - The request has been submitted for processing. Updated status should be available soon, usually within seconds.\n  * PROCESSING - The request is currently being processed. Updated status should be available soon, usually within seconds.\n  * COMPLETE - The request was successfully processed and service was added. You can verify this by retrieving services for the location.\n  * CANCELED - The request was purposefully canceled by Yext and was not processed. Details are available in the *results* field.\n  * REVIEW - The request is being reviewed by Yext, most likely because this location may be a duplicate of another location already\n    receiving this service through Yext. Once the review is complete, *status* will be updated to either CANCELED or COMPLETE.\n  * FAILED - Processing the request failed due to a technical issue. Details may be available in the *statusDetail* field. No changes were made to your account, so you can\n    try the request again.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AddRequestsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/addrequests/{addRequestId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "name": "addRequestId",
          "in": "path",
          "schema": {
            "type": "integer"
          },
          "description": "addRequestId returned from a previous call to **Add Requests: Create (New Location)**, **Add Requests: Create (Existing Location)**, or retrieved from **Add Requests: List (Location)**\n",
          "required": true
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getAddRequest",
        "tags": [
          "Administrative API"
        ],
        "summary": "Add Requests: Get (Location)",
        "description": "Get status information about an add request that was previously created for a location.\n\nPossible statuses:\n  * SUBMITTED - The request has been submitted for processing. Updated status should be available soon, usually within seconds.\n  * PROCESSING - The request is currently being processed. Updated status should be available soon, usually within seconds.\n  * COMPLETE - The request was successfully processed and service was added. You can verify this by retrieving services for the location.\n  * CANCELED - The request was purposefully canceled by Yext and was not processed. Details are available in the *results* field.\n  * REVIEW - The request is being reviewed by Yext, most likely because this location may be a duplicate of another location already\n    receiving this service through Yext. Once the review is complete, *status* will be updated to either CANCELED or COMPLETE.\n  * FAILED - Processing the request failed due to a technical issue. Details may be available in the *statusDetail* field. No changes were made to your account, so you can\n    try the request again.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AddRequestResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/subaccountaddrequests": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listSubAccountAddRequests",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "SUBMITTED",
                "PROCESSING",
                "COMPLETE",
                "CANCELED",
                "FAILED"
              ]
            },
            "description": "Filters the list to add requests in a specific status."
          },
          {
            "name": "submittedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DDThh:mm:ss` format)"
          },
          {
            "name": "submittedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DDThh:mm:ss` format)"
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DDThh:mm:ss` format)"
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DDThh:mm:ss` format)"
          },
          {
            "name": "sku",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agreementId",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "subAccountId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "tags": [
          "Administrative API"
        ],
        "summary": "Add Requests: List (Sub-Account)",
        "description": "Get all of the add requests in the account that were created for sub-accounts.\n\nPossible `status` values for each add request:\n  * SUBMITTED - The request has been submitted for processing. Updated status should be available soon, usually within seconds.\n  * PROCESSING - The request is currently being processed. Updated status should be available soon, usually within seconds.\n  * COMPLETE - The request was successfully processed and service was added. You can verify this by retrieving services for the sub-account.\n  * CANCELED - The request was purposefully canceled by Yext and was not processed. Details are available in the *results* field.\n  * FAILED - Processing the request failed due to a technical issue. Details may be available in the *statusDetail* field. No changes were made to your account, so you can\n    try the request again.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/SubAccountAddRequestsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/subaccountaddrequests/{addRequestId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "name": "addRequestId",
          "in": "path",
          "schema": {
            "type": "integer"
          },
          "description": "addRequestId returned from a previous call to **Add Requests: Create (Existing Account)** or retrieved from **Add Requests: List (Sub-Account)**\n",
          "required": true
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getSubAccountAddRequest",
        "tags": [
          "Administrative API"
        ],
        "summary": "Add Requests: Get (Sub-Account)",
        "description": "Get status information about an add request that was previously created for a sub-account.\n\nPossible statuses:\n  * SUBMITTED - The request has been submitted for processing. Updated status should be available soon, usually within seconds.\n  * PROCESSING - The request is currently being processed. Updated status should be available soon, usually within seconds.\n  * COMPLETE - The request was successfully processed and service was added. You can verify this by retrieving services for the sub-account.\n  * CANCELED - The request was purposefully canceled by Yext and was not processed. Details are available in the *results* field.\n  * FAILED - Processing the request failed due to a technical issue. Details may be available in the *statusDetail* field. No changes were made to your account, so you can\n    try the request again.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/SubAccountAddRequestResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/services": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The ID of the account.\n\n**NOTE:** To retrieve information about services provisioned on a location under a sub-account, enter the ID of the *main account* rather than the sub-account.\n"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listServices",
        "tags": [
          "Administrative API"
        ],
        "summary": "Services: List (Location)",
        "description": "Retrieve a list of all services provisioned on a location.\n\n**NOTE:** If you have added location services under sub-accounts, they will be returned from this endpoint on your *main account*.\n",
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locationAccountId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "*(Portal Mode only)* Filters on the account that the location receiving service is in.\n"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "STOPPED",
                "ALL"
              ]
            },
            "description": "Status of the service. By default, returns only Active services, not All services."
          },
          {
            "name": "agreementId",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ServicesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/subaccountservices": {
      "parameters": [
        {
          "name": "accountId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "The ID of the account.\n\n**NOTE:** To retrieve information about services provisioned on a sub-account, enter the ID of the *main account* rather than the sub-account.\n"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listSubAccountServices",
        "tags": [
          "Administrative API"
        ],
        "summary": "Services: List (Sub-Account)",
        "description": "Retrieve a list of all services provisioned on a sub-account.\n\n**NOTE:** If you have added services to sub-accounts, they will be returned from this endpoint on your *main account*.\n",
        "parameters": [
          {
            "name": "sku",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subAccountId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "STOPPED",
                "ALL"
              ]
            },
            "description": "Status of the service. By default, returns only Active services, not All services."
          },
          {
            "name": "agreementId",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SubAccountServicesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/createsubaccount": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "createSubAccount",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubAccountRequest"
              }
            }
          }
        },
        "tags": [
          "Administrative API"
        ],
        "summary": "Accounts: Create Sub-Account",
        "description": "Request to create a new empty sub-account under this account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateSubAccountResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/resourcesapplyrequests": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "resourcesApplyRequest",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesApplyRequest"
              }
            }
          }
        },
        "tags": [
          "Administrative API"
        ],
        "summary": "Resources Apply Request: Create (Account)",
        "description": "Create a request to asynchronously apply resources using the URL of a GitHub repository.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ResourcesApplyRequestResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/resourcesapplyrequests/{requestId}": {
      "parameters": [
        {
          "name": "requestId",
          "in": "path",
          "schema": {
            "type": "integer"
          },
          "description": "requestId returned from a previous call to **Resources Apply Requests: Create (Account)**\n",
          "required": true
        },
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getResourcesApplyRequestStatus",
        "tags": [
          "Administrative API"
        ],
        "summary": "Resources Apply Request Status: Get (Account)",
        "description": "Make a request to get the status of the Resources Apply Request.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ResourcesApplyRequestResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts": {
      "parameters": [
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listAccounts",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns only accounts whose name contains the provided string"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "tags": [
          "Administrative API"
        ],
        "summary": "Accounts: List",
        "description": "List all accounts that you have access to. Unless you are in Partner Portal mode, this will only be your own account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AccountsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getAccount",
        "tags": [
          "Administrative API"
        ],
        "summary": "Accounts: Get",
        "description": "Get details for an account",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AccountResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "operationId": "updateAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccount"
              }
            }
          }
        },
        "tags": [
          "Administrative API"
        ],
        "summary": "Accounts: Update",
        "description": "Update an account's name or ID",
        "responses": {
          "200": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "query"
      },
      "api-key": {
        "type": "apiKey",
        "name": "api-key",
        "in": "header"
      }
    },
    "parameters": {
      "accountId": {
        "name": "accountId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "v": {
        "name": "v",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "A date in `YYYYMMDD` format."
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 0
        },
        "description": "\nNumber of results to skip. Used to page through results.\nCannot be used together with **`pageToken`**.\n"
      }
    },
    "schemas": {
      "ResponseMeta": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "example": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
            "description": "Unique ID for this request / response."
          }
        }
      },
      "ResponseError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Code that uniquely identifies the error or warning.\n"
          },
          "type": {
            "type": "string",
            "enum": [
              "FATAL_ERROR",
              "NON_FATAL_ERROR",
              "WARNING"
            ]
          },
          "message": {
            "type": "string",
            "description": "Message explaining the problem."
          }
        }
      },
      "ResponseMetaWithError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "description": "List of errors and warnings.",
                "items": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        ]
      },
      "AvailableService": {
        "title": "Available Service",
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "example": "SKU-00000165"
          },
          "agreementId": {
            "type": "integer",
            "example": 304348,
            "description": "The ID for the agreement that this service is offered under."
          },
          "serviceDescription": {
            "type": "string",
            "example": "Location Cloud Starter (Partner)",
            "description": "Information about this service."
          },
          "recipientType": {
            "type": "string",
            "enum": [
              "Location",
              "Sub-Account"
            ],
            "example": "Location",
            "description": "Recipient type of the service. Only shown with `v` parameters `20210318` and later."
          },
          "minimumUsage": {
            "type": "integer",
            "minimum": 1,
            "example": 14,
            "description": "Optional. The minimum amount of time a service has to be active before it can be canceled. In the units specified by *minimumUsageUnit*."
          },
          "minimumUsageUnit": {
            "type": "string",
            "enum": [
              "DAYS",
              "MONTHS"
            ],
            "example": "DAYS",
            "description": "Optional. The unit for *minimumUsage*."
          },
          "addOnTo": {
            "type": "array",
            "description": "Optional. List of SKUs that this is an add-on to.\n\nWhen adding this service for a location by creating an *addRequest*, you must either supply one of these SKUs along with this one, or the location must already have one of these services.\n",
            "items": {
              "type": "string"
            },
            "example": [
              "SKU-00000167",
              "SKU-00000168"
            ]
          }
        }
      },
      "NewLocationAddRequest": {
        "type": "object",
        "discriminator": {
          "propertyName": "newEntityType",
          "mapping": {
            "atm": "#/components/schemas/NewLocationAddRequestATM",
            "healthcareFacility": "#/components/schemas/NewLocationAddRequestHealthcareFacility",
            "healthcareProfessional": "#/components/schemas/NewLocationAddRequestHealthcareProfessional",
            "hotel": "#/components/schemas/NewLocationAddRequestHotel",
            "location": "#/components/schemas/NewLocationAddRequestLocation",
            "restaurant": "#/components/schemas/NewLocationAddRequestRestaurant"
          }
        },
        "required": [
          "newLocationId",
          "newLocationData",
          "newEntityData",
          "skus"
        ],
        "properties": {
          "newLocationId": {
            "type": "string",
            "description": "Your ID for the location to be added."
          },
          "newLocationAccountId": {
            "type": "string",
            "example": "CST-43843",
            "description": "*(Partner Portal mode)* Supply your ID for the account that the new location should be created in. If this account is your main account or an existing sub-account, the location will be placed there. Otherwise, a new account will be created.\n"
          },
          "newLocationAccountName": {
            "type": "string",
            "example": "Bill's Auto Shop",
            "description": "*(Partner Portal mode)* If a new account is created, this field's value will set the account's name. If a new account is created, and a value for this field is not provided, the new account's name will default to the location's name.\n"
          },
          "newAccountParentAccountId": {
            "type": "string",
            "example": "PAR-001",
            "description": "*(Partner Portal mode, advanced use only)* If you have a multi-layer account structure and want the new account created for this request to be under one of your sub-accounts, rather than directly under your main account, specify that sub-account's ID in this field.\n"
          },
          "newLocationData": {
            "description": "If you set `newLocationId`, you must specify either `newLocationData` or `newEntityData`.\n\nThis field allows you to set the profile data for a location, using our legacy format.\nProfile content is specified in the same format as when creating a location with the Locations: Create endpoint.\n\nIf the Add Request is processed successfully, this data will be used to create a new location in your account.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Location"
              }
            ]
          },
          "newEntityType": {
            "description": "If you set `newEntityData`, this field specifies the type of entity to be created.\n",
            "enum": [
              "atm",
              "healthcareFacility",
              "healthcareProfessional",
              "hotel",
              "location",
              "restaurant"
            ],
            "type": "string",
            "default": "location"
          },
          "newEntityData": {
            "description": "If you set `newLocationId`, you must specify either `newLocationData` or `newEntityData`.\n\nThis field allows you to set the profile data for an entity.\nProfile content is specified in the same format as when creating an entity with the Entities: Create endpoint.\nYou can only create entities of a type specified by `newEntityType`.\n\nIf the Add Request is processed successfully, this data will be used to create a new entity in your account.\n\n**The dropdown will specify the profile content for `newEntityData`. Specify the entity type with `newEntityType` described above.**\n"
          },
          "skus": {
            "type": "array",
            "description": "List of SKUs that you would like to sign the location up for, from among those listed in the **Available Services: List** response with Location recipientType.\n",
            "items": {
              "type": "string"
            },
            "example": [
              "SKU-00000167",
              "SKU-00000168"
            ]
          },
          "agreementId": {
            "type": "integer",
            "example": 1588,
            "description": "*(Advanced field)* The Agreement ID of the agreement that services will be added under. This value is set automatically by Yext when you create the Add request. (You can specify it yourself, but should not do so unless you have intentionally set up multiple active agreements with Yext, since it could cause your integration to break when you renew or upgrade your agreement.)\n"
          },
          "forceReview": {
            "type": "boolean",
            "example": false,
            "description": "*(Sandbox API only)* Forces this Add request into the `REVIEW` status if it otherwise would have completed successfully.\n"
          }
        }
      },
      "AtmWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "meta": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "countryCode": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)"
                  },
                  "folderId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The ID of the folder containing this Entity"
                  },
                  "id": {
                    "minLength": 0,
                    "type": "string",
                    "description": "ID of this Entity"
                  },
                  "labels": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer."
                  },
                  "language": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)"
                  }
                },
                "description": "Contains the metadata about the entity."
              },
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "address": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "city": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "countryCode": {
                    "minLength": 0,
                    "pattern": "^[a-zA-Z]{2}$",
                    "type": "string"
                  },
                  "extraDescription": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`)."
                  },
                  "line1": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "line2": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "postalCode": {
                    "minLength": 0,
                    "maxLength": 10,
                    "type": "string",
                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "region": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "sublocality": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name"
                  }
                },
                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided."
              },
              "accessHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the access hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "additionalHoursText": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)"
              },
              "alternateNames": {
                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "alternatePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "alternateWebsites": {
                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 255,
                  "format": "uri",
                  "type": "string",
                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                }
              },
              "appleActionLinks": {
                "description": "Use this field to add action links to your Apple Listings.\n\nThe call to action category will be displayed on the action link button.\n\nThe App Store URL should contain a valid link to the landing page of an App in the Apple App Store.\n\nThe Quick Link URL is where a user is taken when an action link is clicked by a user.\n\nThe App Name sub-field is not displayed on Apple Listings and is only used to distinguish the call-to-action type when utilizing action links in Apple posts.\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "category",
                    "quickLinkUrl",
                    "appName"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "appName": {
                      "minLength": 0,
                      "maxLength": 18,
                      "type": "string"
                    },
                    "appStoreUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    },
                    "category": {
                      "enum": [
                        "BOOK_TRAVEL",
                        "CHECK_IN",
                        "FEES_POLICIES",
                        "FLIGHT_STATUS",
                        "TICKETS",
                        "TICKETING",
                        "AMENITIES",
                        "FRONT_DESK",
                        "PARKING",
                        "GIFT_CARD",
                        "WAITLIST",
                        "DELIVERY",
                        "ORDER",
                        "TAKEOUT",
                        "PICKUP",
                        "RESERVE",
                        "MENU",
                        "APPOINTMENT",
                        "PORTFOLIO",
                        "QUOTE",
                        "SERVICES",
                        "STORE_ORDERS",
                        "STORE_SHOP",
                        "STORE_SUPPORT",
                        "SCHEDULE",
                        "SHOWTIMES",
                        "AVAILABILITY",
                        "PRICING",
                        "ACTIVITIES",
                        "BOOK",
                        "BOOK_(HOTEL)",
                        "BOOK_(RIDE)",
                        "BOOK_(TOUR)",
                        "CAREERS",
                        "CHARGE",
                        "COUPONS",
                        "DELIVERY_(RETAIL)",
                        "DONATE",
                        "EVENTS",
                        "ORDER_(RETAIL)",
                        "OTHER_MENU",
                        "PICKUP_(RETAIL)",
                        "RESERVE_(PARKING)",
                        "SHOWS",
                        "SPORTS",
                        "SUPPORT",
                        "TEE_TIME",
                        "GIFT_CARD_(RESTAURANT)"
                      ],
                      "type": "string"
                    },
                    "quickLinkUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    }
                  }
                }
              },
              "appleBusinessDescription": {
                "minLength": 0,
                "maxLength": 500,
                "type": "string",
                "description": "The business description to be sent to Apple"
              },
              "appleBusinessId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with an individual Business Folder in your Apple account"
              },
              "appleCompanyId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with your Apple account. Numerical values only"
              },
              "appleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity''s Apple profile\n\n\nImage must be at least 1600 x 1040 pixels\n\nImage may be no more than 4864 x 3163 pixels\n\nSupported Aspect Ratios:\n* 154 x 100\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "appleDisplayName": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "The name to be displayed on Apple for the entity.\nNOTE: The names of Brands and their respective Locations within an Apple Business Connect Account must match identically.\nCannot Include:\nHTML markup \n\n\nCannot Include:\n* HTML markup"
              },
              "categories": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "Yext Categories. (Supported for versions > 20240220)\n\nA map of category list external IDs (i.e. \"yext\") to a list of category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nPartial updates are accepted, meaning sending only the \"yext\" property will have no effect on any category list except the \"yext\" category. "
              },
              "categoryIds": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "Yext Category IDs. (Deprecated: For versions > 20240220)\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n"
              },
              "closed": {
                "type": "boolean",
                "description": "Indicates whether the entity is closed"
              },
              "customKeywords": {
                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string"
                }
              },
              "description": {
                "minLength": 10,
                "maxLength": 15000,
                "type": "string",
                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup"
              },
              "displayCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you"
              },
              "driveThroughHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the drive-through hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "dropoffCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of the drop-off area for the entity, as provided by you"
              },
              "facebookAbout": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "A description of the entity to be used in the \"About You\" section on Facebook"
              },
              "facebookCallToAction": {
                "required": [
                  "type"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "NONE",
                      "BOOK_NOW",
                      "CALL_NOW",
                      "CONTACT_US",
                      "SEND_MESSAGE",
                      "USE_APP",
                      "PLAY_GAME",
                      "SHOP_NOW",
                      "SIGN_UP",
                      "WATCH_VIDEO",
                      "SEND_EMAIL",
                      "LEARN_MORE",
                      "PURCHASE_GIFT_CARDS",
                      "ORDER_NOW",
                      "FOLLOW_PAGE"
                    ],
                    "type": "string",
                    "description": "The action the consumer is being prompted to take by the button's text"
                  },
                  "value": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field."
                  }
                },
                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string"
              },
              "facebookCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookDescriptor": {
                "minLength": 3,
                "maxLength": 75,
                "type": "string",
                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup"
              },
              "facebookName": {
                "minLength": 0,
                "type": "string",
                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions."
              },
              "facebookOverrideCity": {
                "minLength": 0,
                "type": "string",
                "description": "The city to be displayed on this entity's Facebook profile"
              },
              "facebookPageUrl": {
                "minLength": 0,
                "type": "string",
                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n- facebook.com/people/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\nThe success response will contain a warning message explaining why the URL wasn't stored in the system."
              },
              "facebookParentPageId": {
                "minLength": 0,
                "maxLength": 65,
                "type": "string",
                "description": "The Facebook Page ID of this entity's brand page if in a brand page location structure"
              },
              "facebookProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookStoreId": {
                "minLength": 0,
                "type": "string",
                "description": "The Store ID used for this entity in a brand page location structure"
              },
              "facebookVanityUrl": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page."
              },
              "facebookWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Facebook in place of the one given in **`websiteUrl`** (if applicable)."
              },
              "fax": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "featuredMessage": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 50,
                    "type": "string",
                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup"
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 255,
                    "format": "uri",
                    "type": "string",
                    "description": "Valid URL linked to the Featured Message text"
                  }
                },
                "description": "Information about the entity's Featured Message"
              },
              "frequentlyAskedQuestions": {
                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "question"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "answer": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    },
                    "question": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    }
                  }
                }
              },
              "geomodifier": {
                "minLength": 0,
                "type": "string",
                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)"
              },
              "googleAttributes": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "The unique IDs of the entity's Google Business Profile keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes."
              },
              "googleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleMessaging": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "smsNumber": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The SMS phone number of the entity's point of contact for messaging/ chat functionality.\nMust be a valid phone number.\nIf the phone number's calling code is for a country other than the one given in the entity's countryCode, the phone number provided must contain the calling code (e.g., +44 in +442038083831). Otherwise, the calling code is optional. "
                  },
                  "whatsappMessagingUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's WhatsApp account.\nMust be a valid URL\n"
                  }
                },
                "description": "Information about Google Messaging, WhatsApp and SMS, for the entity’s point of contact for messaging/chat functionality.\n\nNOTE: Only one, either WhatsApp or SMS is displayed on the Google listing. If both SMS Number and WhatsApp URL are provided only SMS Number will be displayed on the listing."
              },
              "googleMyBusinessLabels": {
                "description": "Google Business Profile Labels help users organize their locations into groups within GBP.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 50,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "googlePlaceId": {
                "minLength": 0,
                "type": "string",
                "description": "The unique identifier of this entity on Google Maps."
              },
              "googleProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 5000 x 5000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Google Business Profile in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field."
              },
              "holidayHoursConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity"
              },
              "hours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the hours of operation are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "impressum": {
                "minLength": 0,
                "maxLength": 2000,
                "type": "string",
                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media."
              },
              "isoRegionCode": {
                "minLength": 0,
                "type": "string",
                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used."
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "localPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits."
              },
              "locatedIn": {
                "type": "string",
                "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm."
              },
              "locationType": {
                "enum": [
                  "LOCATION",
                  "HEALTHCARE_FACILITY",
                  "HEALTHCARE_PROFESSIONAL",
                  "ATM",
                  "RESTAURANT",
                  "HOTEL"
                ],
                "type": "string",
                "description": "Indicates the entity's type, if it is not an event"
              },
              "logo": {
                "required": [
                  "image"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "clickthroughUrl": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  },
                  "description": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "details": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "image": {
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false,
                    "type": "object",
                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                    "properties": {
                      "alternateText": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "url": {
                        "minLength": 0,
                        "format": "uri",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "mainPhone": {
                "minLength": 0,
                "type": "string",
                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "mobilePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "openDate": {
                "format": "date",
                "type": "string",
                "description": "The date that the entity is set to open for the first time.\nMust be formatted in YYYY-MM-DD format.\n\nDate must be on or after 1970-01-01 Date must be before or on 2038-01-01\n"
              },
              "photoGallery": {
                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "required": [
                    "image"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                  "properties": {
                    "clickthroughUrl": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string"
                    },
                    "description": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "details": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "image": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                      "properties": {
                        "alternateText": {
                          "minLength": 0,
                          "type": "string"
                        },
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "pickupCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you"
              },
              "priceRange": {
                "enum": [
                  "UNSPECIFIED",
                  "ONE",
                  "TWO",
                  "THREE",
                  "FOUR"
                ],
                "type": "string",
                "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)"
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "questionsAndAnswers": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity"
              },
              "rankTrackingCompetitors": {
                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "name",
                    "website"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string",
                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup"
                    },
                    "website": {
                      "minLength": 0,
                      "maxLength": 255,
                      "format": "uri",
                      "type": "string",
                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                    }
                  }
                }
              },
              "rankTrackingEnabled": {
                "type": "boolean",
                "description": "Indicates whether Rank Tracking is enabled"
              },
              "rankTrackingFrequency": {
                "enum": [
                  "WEEKLY",
                  "MONTHLY",
                  "QUARTERLY"
                ],
                "type": "string",
                "description": "How often we send search queries to track your search performance"
              },
              "rankTrackingQueryTemplates": {
                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "KEYWORD",
                    "KEYWORD_ZIP",
                    "KEYWORD_CITY",
                    "KEYWORD_IN_CITY",
                    "KEYWORD_NEAR_ME",
                    "KEYWORD_CITY_STATE"
                  ],
                  "type": "string"
                }
              },
              "rankTrackingSites": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "GOOGLE_DESKTOP",
                    "GOOGLE_MOBILE",
                    "BING_DESKTOP",
                    "BING_MOBILE",
                    "YAHOO_DESKTOP",
                    "YAHOO_MOBILE"
                  ],
                  "type": "string"
                },
                "description": "The search engines that we will use to track your performance"
              },
              "reviewResponseConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity"
              },
              "routableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for driving directions to the entity, as provided by you"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "tollFreePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "ttyPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "walkableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for walking directions to the entity, as provided by you"
              },
              "websiteUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's website"
                  }
                },
                "description": "Information about the website for this entity"
              }
            }
          }
        ]
      },
      "EntityWrite": {
        "type": "object",
        "discriminator": {
          "propertyName": "EntityType",
          "mapping": {
            "atm": "#/components/schemas/AtmWrite",
            "event": "#/components/schemas/EventWrite",
            "faq": "#/components/schemas/FaqWrite",
            "financialProfessional": "#/components/schemas/FinancialProfessionalWrite",
            "healthcareFacility": "#/components/schemas/HealthcareFacilityWrite",
            "healthcareProfessional": "#/components/schemas/HealthcareProfessionalWrite",
            "helpArticle": "#/components/schemas/HelpArticleWrite",
            "hotel": "#/components/schemas/HotelWrite",
            "hotelRoomType": "#/components/schemas/HotelRoomTypeWrite",
            "job": "#/components/schemas/JobWrite",
            "location": "#/components/schemas/LocationWrite",
            "organization": "#/components/schemas/OrganizationWrite",
            "product": "#/components/schemas/ProductWrite",
            "restaurant": "#/components/schemas/RestaurantWrite"
          }
        },
        "properties": {
          "EntityType": {
            "description": "**This is used only to filter the fields below and should NOT be included in any API calls.\nIf create, specify the entity type in the query parameter. If update, specify the entity type\nin the request body in the `meta` object.**\n",
            "type": "string"
          }
        }
      },
      "EventWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "meta": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "countryCode": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)"
                  },
                  "folderId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The ID of the folder containing this Entity"
                  },
                  "id": {
                    "minLength": 0,
                    "type": "string",
                    "description": "ID of this Entity"
                  },
                  "labels": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer."
                  },
                  "language": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)"
                  }
                },
                "description": "Contains the metadata about the entity."
              },
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "address": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "city": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "countryCode": {
                    "minLength": 0,
                    "pattern": "^[a-zA-Z]{2}$",
                    "type": "string"
                  },
                  "extraDescription": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`)."
                  },
                  "line1": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "line2": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "postalCode": {
                    "minLength": 0,
                    "maxLength": 10,
                    "type": "string",
                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "region": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "sublocality": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name"
                  }
                },
                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided."
              },
              "additionalPromotingLocations": {
                "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ageRange": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "maxValue": {
                    "multipleOf": 1,
                    "type": "number",
                    "description": "Maximum age for the event"
                  },
                  "minValue": {
                    "multipleOf": 1,
                    "type": "number",
                    "description": "Minimum age for the event"
                  }
                },
                "description": "Contains the age range for the event"
              },
              "attendance": {
                "required": [
                  "attendanceMode"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "attendanceMode": {
                    "enum": [
                      "OFFLINE",
                      "ONLINE",
                      "MIXED"
                    ],
                    "type": "string"
                  },
                  "virtualLocationUrl": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                },
                "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events."
              },
              "categories": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "Yext Categories. (Supported for versions > 20240220)\n\nA map of category list external IDs (i.e. \"yext\") to a list of category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nPartial updates are accepted, meaning sending only the \"yext\" property will have no effect on any category list except the \"yext\" category. "
              },
              "categoryIds": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "Yext Category IDs. (Deprecated: For versions > 20240220)\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n"
              },
              "description": {
                "minLength": 10,
                "maxLength": 15000,
                "type": "string",
                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup"
              },
              "displayCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you"
              },
              "dropoffCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of the drop-off area for the entity, as provided by you"
              },
              "eventStatus": {
                "enum": [
                  "SCHEDULED",
                  "RESCHEDULED",
                  "POSTPONED",
                  "CANCELED",
                  "EVENT_MOVED_ONLINE"
                ],
                "type": "string",
                "description": "Information on whether the event will take place as scheduled"
              },
              "frequentlyAskedQuestions": {
                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "question"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "answer": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    },
                    "question": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    }
                  }
                }
              },
              "isFreeEvent": {
                "type": "boolean",
                "description": "Indicates whether or not the event is free"
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "linkedLocation": {
                "type": "string",
                "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager"
              },
              "organizerEmail": {
                "minLength": 0,
                "format": "email",
                "type": "string",
                "description": "Point of contact for the event organizer (not to be published publicly)"
              },
              "organizerName": {
                "minLength": 0,
                "type": "string",
                "description": "Point of contact for the event organizer (not to be published publicly)"
              },
              "organizerPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Point of contact for the event organizer (not to be published publicly)"
              },
              "performers": {
                "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string"
                }
              },
              "photoGallery": {
                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "required": [
                    "image"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                  "properties": {
                    "clickthroughUrl": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string"
                    },
                    "description": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "details": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "image": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                      "properties": {
                        "alternateText": {
                          "minLength": 0,
                          "type": "string"
                        },
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "pickupCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you"
              },
              "routableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for driving directions to the entity, as provided by you"
              },
              "ticketAvailability": {
                "enum": [
                  "IN_STOCK",
                  "SOLD_OUT",
                  "PRE_ORDER",
                  "UNSPECIFIED"
                ],
                "type": "string",
                "description": "Information about the availability of tickets for the event"
              },
              "ticketPriceRange": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "currencyCode": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Three letter currency code (ISO standard)"
                  },
                  "maxValue": {
                    "pattern": "^\\d*\\.?\\d*$",
                    "type": "string",
                    "description": "Maximum ticket price"
                  },
                  "minValue": {
                    "pattern": "^\\d*\\.?\\d*$",
                    "type": "string",
                    "description": "Minimum ticket price"
                  }
                },
                "description": "Contains the price range for the event"
              },
              "ticketSaleDateTime": {
                "format": "date-time",
                "type": "string",
                "description": "The date/time tickets are available for sale (local time)"
              },
              "ticketUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL to purchase tickets for the event (if ticketed)"
              },
              "time": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "end": {
                    "format": "date-time",
                    "type": "string",
                    "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n"
                  },
                  "start": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n"
                  }
                },
                "description": "Contains the start/end times for the event"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "venueName": {
                "minLength": 0,
                "type": "string",
                "description": "Name of the venue where the event is being held"
              },
              "walkableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for walking directions to the entity, as provided by you"
              },
              "websiteUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's website"
                  }
                },
                "description": "Information about the website for this entity"
              }
            }
          }
        ]
      },
      "FaqWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "meta": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "countryCode": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)"
                  },
                  "folderId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The ID of the folder containing this Entity"
                  },
                  "id": {
                    "minLength": 0,
                    "type": "string",
                    "description": "ID of this Entity"
                  },
                  "labels": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer."
                  },
                  "language": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)"
                  }
                },
                "description": "Contains the metadata about the entity."
              },
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "answer": {
                "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS",
                "type": "string",
                "format": "rich-text"
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "logo": {
                "required": [
                  "image"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "clickthroughUrl": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  },
                  "description": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "details": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "image": {
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false,
                    "type": "object",
                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                    "properties": {
                      "alternateText": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "url": {
                        "minLength": 0,
                        "format": "uri",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              }
            }
          }
        ]
      },
      "FinancialProfessionalWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "address": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "city": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "countryCode": {
                    "minLength": 0,
                    "pattern": "^[a-zA-Z]{2}$",
                    "type": "string"
                  },
                  "extraDescription": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`)."
                  },
                  "line1": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "line2": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "postalCode": {
                    "minLength": 0,
                    "maxLength": 10,
                    "type": "string",
                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "region": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "sublocality": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name"
                  }
                },
                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided."
              },
              "additionalHoursText": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)"
              },
              "addressHidden": {
                "type": "boolean",
                "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`."
              },
              "alternateNames": {
                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "alternatePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "alternateWebsites": {
                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 255,
                  "format": "uri",
                  "type": "string",
                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                }
              },
              "androidAppUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL where consumers can download the entity's Android app"
              },
              "appleActionLinks": {
                "description": "Use this field to add action links to your Apple Listings.\n\nThe call to action category will be displayed on the action link button.\n\nThe App Store URL should contain a valid link to the landing page of an App in the Apple App Store.\n\nThe Quick Link URL is where a user is taken when an action link is clicked by a user.\n\nThe App Name sub-field is not displayed on Apple Listings and is only used to distinguish the call-to-action type when utilizing action links in Apple posts.\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "category",
                    "quickLinkUrl",
                    "appName"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "appName": {
                      "minLength": 0,
                      "maxLength": 18,
                      "type": "string"
                    },
                    "appStoreUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    },
                    "category": {
                      "enum": [
                        "BOOK_TRAVEL",
                        "CHECK_IN",
                        "FEES_POLICIES",
                        "FLIGHT_STATUS",
                        "TICKETS",
                        "TICKETING",
                        "AMENITIES",
                        "FRONT_DESK",
                        "PARKING",
                        "GIFT_CARD",
                        "WAITLIST",
                        "DELIVERY",
                        "ORDER",
                        "TAKEOUT",
                        "PICKUP",
                        "RESERVE",
                        "MENU",
                        "APPOINTMENT",
                        "PORTFOLIO",
                        "QUOTE",
                        "SERVICES",
                        "STORE_ORDERS",
                        "STORE_SHOP",
                        "STORE_SUPPORT",
                        "SCHEDULE",
                        "SHOWTIMES",
                        "AVAILABILITY",
                        "PRICING",
                        "ACTIVITIES",
                        "BOOK",
                        "BOOK_(HOTEL)",
                        "BOOK_(RIDE)",
                        "BOOK_(TOUR)",
                        "CAREERS",
                        "CHARGE",
                        "COUPONS",
                        "DELIVERY_(RETAIL)",
                        "DONATE",
                        "EVENTS",
                        "ORDER_(RETAIL)",
                        "OTHER_MENU",
                        "PICKUP_(RETAIL)",
                        "RESERVE_(PARKING)",
                        "SHOWS",
                        "SPORTS",
                        "SUPPORT",
                        "TEE_TIME",
                        "GIFT_CARD_(RESTAURANT)"
                      ],
                      "type": "string"
                    },
                    "quickLinkUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    }
                  }
                }
              },
              "appleBusinessDescription": {
                "minLength": 0,
                "maxLength": 500,
                "type": "string",
                "description": "The business description to be sent to Apple"
              },
              "appleBusinessId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with an individual Business Folder in your Apple account"
              },
              "appleCompanyId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with your Apple account. Numerical values only"
              },
              "appleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity''s Apple profile\n\n\nImage must be at least 1600 x 1040 pixels\n\nImage may be no more than 4864 x 3163 pixels\n\nSupported Aspect Ratios:\n* 154 x 100\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "appleDisplayName": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "The name to be displayed on Apple for the entity.\nNOTE: The names of Brands and their respective Locations within an Apple Business Connect Account must match identically.\nCannot Include:\nHTML markup \n\n\nCannot Include:\n* HTML markup"
              },
              "associations": {
                "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "bios": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Bio Content Lists associated with this entity"
              },
              "brands": {
                "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "calendars": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the events Content Lists (Calendars) associated with this entity"
              },
              "categories": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "Yext Categories. (Supported for versions > 20240220)\n\nA map of category list external IDs (i.e. \"yext\") to a list of category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nPartial updates are accepted, meaning sending only the \"yext\" property will have no effect on any category list except the \"yext\" category. "
              },
              "categoryIds": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "Yext Category IDs. (Deprecated: For versions > 20240220)\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n"
              },
              "certifications": {
                "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 200,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "closed": {
                "type": "boolean",
                "description": "Indicates whether the entity is closed"
              },
              "customKeywords": {
                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string"
                }
              },
              "description": {
                "minLength": 10,
                "maxLength": 15000,
                "type": "string",
                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup"
              },
              "displayCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you"
              },
              "dropoffCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of the drop-off area for the entity, as provided by you"
              },
              "emails": {
                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "format": "email",
                  "type": "string"
                }
              },
              "facebookAbout": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "A description of the entity to be used in the \"About You\" section on Facebook"
              },
              "facebookCallToAction": {
                "required": [
                  "type"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "NONE",
                      "BOOK_NOW",
                      "CALL_NOW",
                      "CONTACT_US",
                      "SEND_MESSAGE",
                      "USE_APP",
                      "PLAY_GAME",
                      "SHOP_NOW",
                      "SIGN_UP",
                      "WATCH_VIDEO",
                      "SEND_EMAIL",
                      "LEARN_MORE",
                      "PURCHASE_GIFT_CARDS",
                      "ORDER_NOW",
                      "FOLLOW_PAGE"
                    ],
                    "type": "string",
                    "description": "The action the consumer is being prompted to take by the button's text"
                  },
                  "value": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field."
                  }
                },
                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string"
              },
              "facebookCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookDescriptor": {
                "minLength": 3,
                "maxLength": 75,
                "type": "string",
                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup"
              },
              "facebookName": {
                "minLength": 0,
                "type": "string",
                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions."
              },
              "facebookOverrideCity": {
                "minLength": 0,
                "type": "string",
                "description": "The city to be displayed on this entity's Facebook profile"
              },
              "facebookPageUrl": {
                "minLength": 0,
                "type": "string",
                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n- facebook.com/people/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\nThe success response will contain a warning message explaining why the URL wasn't stored in the system."
              },
              "facebookParentPageId": {
                "minLength": 0,
                "maxLength": 65,
                "type": "string",
                "description": "The Facebook Page ID of this entity's brand page if in a brand page location structure"
              },
              "facebookProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookStoreId": {
                "minLength": 0,
                "type": "string",
                "description": "The Store ID used for this entity in a brand page location structure"
              },
              "facebookVanityUrl": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page."
              },
              "facebookWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Facebook in place of the one given in **`websiteUrl`** (if applicable)."
              },
              "fax": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "featuredMessage": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 50,
                    "type": "string",
                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup"
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 255,
                    "format": "uri",
                    "type": "string",
                    "description": "Valid URL linked to the Featured Message text"
                  }
                },
                "description": "Information about the entity's Featured Message"
              },
              "firstPartyReviewPage": {
                "minLength": 0,
                "type": "string",
                "description": "Link to the review-collection page, where consumers can leave first-party reviews"
              },
              "frequentlyAskedQuestions": {
                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "question"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "answer": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    },
                    "question": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    }
                  }
                }
              },
              "geomodifier": {
                "minLength": 0,
                "type": "string",
                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)"
              },
              "googleAttributes": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "The unique IDs of the entity's Google Business Profile keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes."
              },
              "googleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleMessaging": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "smsNumber": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The SMS phone number of the entity's point of contact for messaging/ chat functionality.\nMust be a valid phone number.\nIf the phone number's calling code is for a country other than the one given in the entity's countryCode, the phone number provided must contain the calling code (e.g., +44 in +442038083831). Otherwise, the calling code is optional. "
                  },
                  "whatsappMessagingUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's WhatsApp account.\nMust be a valid URL\n"
                  }
                },
                "description": "Information about Google Messaging, WhatsApp and SMS, for the entity’s point of contact for messaging/chat functionality.\n\nNOTE: Only one, either WhatsApp or SMS is displayed on the Google listing. If both SMS Number and WhatsApp URL are provided only SMS Number will be displayed on the listing."
              },
              "googleMyBusinessLabels": {
                "description": "Google Business Profile Labels help users organize their locations into groups within GBP.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 50,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "googlePlaceId": {
                "minLength": 0,
                "type": "string",
                "description": "The unique identifier of this entity on Google Maps."
              },
              "googleProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 5000 x 5000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Google Business Profile in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field."
              },
              "headshot": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "A portrait of the healthcare professional",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "holidayHoursConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity"
              },
              "hours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the hours of operation are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "impressum": {
                "minLength": 0,
                "maxLength": 2000,
                "type": "string",
                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media."
              },
              "instagramHandle": {
                "minLength": 0,
                "maxLength": 30,
                "type": "string",
                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)"
              },
              "iosAppUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL where consumers can download the entity's app to their iPhone or iPad"
              },
              "isoRegionCode": {
                "minLength": 0,
                "type": "string",
                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used."
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "languages": {
                "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "linkedInUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your LinkedIn account, format should be https://www.linkedin.com/in/yourUsername"
              },
              "localPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits."
              },
              "logo": {
                "required": [
                  "image"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "clickthroughUrl": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  },
                  "description": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "details": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "image": {
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false,
                    "type": "object",
                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                    "properties": {
                      "alternateText": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "url": {
                        "minLength": 0,
                        "format": "uri",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "mainPhone": {
                "minLength": 0,
                "type": "string",
                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "menuUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL where consumers can view the entity's menu"
                  }
                },
                "description": "Information about the URL where consumers can view the entity's menu"
              },
              "mobilePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "onlineServiceHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the online service hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for the Entity's online service hours on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "openDate": {
                "format": "date",
                "type": "string",
                "description": "The date that the entity is set to open for the first time.\nMust be formatted in YYYY-MM-DD format.\n\nDate must be on or after 1970-01-01 Date must be before or on 2038-01-01\n"
              },
              "orderUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to place an order at this entity"
                  }
                },
                "description": "Information about the URL used to place orders that will be fulfilled by the entity"
              },
              "paymentOptions": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "AFTERPAY",
                    "ALIPAY",
                    "AMERICANEXPRESS",
                    "ANDROIDPAY",
                    "APPLEPAY",
                    "ATM",
                    "ATMQUICK",
                    "BACS",
                    "BANCONTACT",
                    "BANKDEPOSIT",
                    "BANKPAY",
                    "BGO",
                    "BITCOIN",
                    "Bar",
                    "CARTASI",
                    "CASH",
                    "CCS",
                    "CHECK",
                    "CHEQUESVACANCES",
                    "CONB",
                    "CONTACTLESSPAYME",
                    "CVVV",
                    "DEBITCARD",
                    "DEBITNOTE",
                    "DINERSCLUB",
                    "DIRECTDEBIT",
                    "DISCOVER",
                    "ECKARTE",
                    "ECOCHEQUE",
                    "EKENA",
                    "EMV",
                    "FINANCING",
                    "GIFTCARD",
                    "GOPAY",
                    "HAYAKAKEN",
                    "HEBAG",
                    "IBOD",
                    "ICCARDS",
                    "ICOCA",
                    "ID",
                    "IDEAL",
                    "INCA",
                    "INVOICE",
                    "JCB",
                    "JCoinPay",
                    "JKOPAY",
                    "KITACA",
                    "KLA",
                    "KLARNA",
                    "LINEPAY",
                    "MAESTRO",
                    "MANACA",
                    "MASTERCARD",
                    "MIPAY",
                    "MONIZZE",
                    "MPAY",
                    "Manuelle Lastsch",
                    "Merpay",
                    "NANACO",
                    "NEXI",
                    "NIMOCA",
                    "OREM",
                    "PASMO",
                    "PAYBACKPAY",
                    "PAYBOX",
                    "PAYCONIQ",
                    "PAYPAL",
                    "PAYPAY",
                    "PAYSEC",
                    "PIN",
                    "POSTEPAY",
                    "QRCODE",
                    "QUICPAY",
                    "RAKUTENEDY",
                    "RAKUTENPAY",
                    "SAMSUNGPAY",
                    "SODEXO",
                    "SUGOCA",
                    "SUICA",
                    "SWISH",
                    "TICKETRESTAURANT",
                    "TOICA",
                    "TRAVELERSCHECK",
                    "TSCUBIC",
                    "TWINT",
                    "UNIONPAY",
                    "VEV",
                    "VISA",
                    "VISAELECTRON",
                    "VOB",
                    "VOUCHER",
                    "VPAY",
                    "WAON",
                    "WECHATPAY",
                    "WIRETRANSFER",
                    "Yucho Pay",
                    "ZELLE",
                    "auPay",
                    "dBarai",
                    "Überweisung"
                  ],
                  "type": "string"
                },
                "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n"
              },
              "photoGallery": {
                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "required": [
                    "image"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                  "properties": {
                    "clickthroughUrl": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string"
                    },
                    "description": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "details": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "image": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                      "properties": {
                        "alternateText": {
                          "minLength": 0,
                          "type": "string"
                        },
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "pickupCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you"
              },
              "pinterestUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your Pinterest account, format should be https://www.pinterest.com/yourUsername"
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "productLists": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Products & Services Content Lists associated with this entity"
              },
              "products": {
                "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "questionsAndAnswers": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity"
              },
              "rankTrackingCompetitors": {
                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "name",
                    "website"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string",
                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup"
                    },
                    "website": {
                      "minLength": 0,
                      "maxLength": 255,
                      "format": "uri",
                      "type": "string",
                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                    }
                  }
                }
              },
              "rankTrackingEnabled": {
                "type": "boolean",
                "description": "Indicates whether Rank Tracking is enabled"
              },
              "rankTrackingFrequency": {
                "enum": [
                  "WEEKLY",
                  "MONTHLY",
                  "QUARTERLY"
                ],
                "type": "string",
                "description": "How often we send search queries to track your search performance"
              },
              "rankTrackingQueryTemplates": {
                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "KEYWORD",
                    "KEYWORD_ZIP",
                    "KEYWORD_CITY",
                    "KEYWORD_IN_CITY",
                    "KEYWORD_NEAR_ME",
                    "KEYWORD_CITY_STATE"
                  ],
                  "type": "string"
                }
              },
              "rankTrackingSites": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "GOOGLE_DESKTOP",
                    "GOOGLE_MOBILE",
                    "BING_DESKTOP",
                    "BING_MOBILE",
                    "YAHOO_DESKTOP",
                    "YAHOO_MOBILE"
                  ],
                  "type": "string"
                },
                "description": "The search engines that we will use to track your performance"
              },
              "reservationUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to make reservations at this entity"
                  }
                },
                "description": "Information about the URL consumers can visit to make reservations at this entity"
              },
              "reviewGenerationUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL given Review Invitation emails where consumers can leave a review about the entity"
              },
              "reviewResponseConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity"
              },
              "routableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for driving directions to the entity, as provided by you"
              },
              "serviceAreaPlaces": {
                "description": "Information about the area that is served by this entity. It is specified as a list of service area names, their associated types and google place ids.\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    },
                    "googlePlaceId": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "POSTAL_CODE",
                        "REGION",
                        "COUNTY",
                        "CITY",
                        "SUBLOCALITY"
                      ],
                      "type": "string"
                    }
                  }
                }
              },
              "services": {
                "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "specialities": {
                "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "tikTokUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your TikTok profile, format should be https://www.tiktok.com/yourUsername"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "tollFreePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "ttyPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "twitterHandle": {
                "minLength": 0,
                "maxLength": 15,
                "type": "string",
                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system."
              },
              "videos": {
                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "video"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "description": {
                      "minLength": 0,
                      "maxLength": 140,
                      "type": "string",
                      "description": "\nCannot Include:\n* HTML markup"
                    },
                    "video": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "walkableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for walking directions to the entity, as provided by you"
              },
              "websiteUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's website"
                  }
                },
                "description": "Information about the website for this entity"
              },
              "youTubeChannelUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your YouTube channel, format should be https://www.youtube.com/c/yourUsername"
              }
            }
          }
        ]
      },
      "HealthcareFacilityWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "meta": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "countryCode": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)"
                  },
                  "folderId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The ID of the folder containing this Entity"
                  },
                  "id": {
                    "minLength": 0,
                    "type": "string",
                    "description": "ID of this Entity"
                  },
                  "labels": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer."
                  },
                  "language": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)"
                  }
                },
                "description": "Contains the metadata about the entity."
              },
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "address": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "city": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "countryCode": {
                    "minLength": 0,
                    "pattern": "^[a-zA-Z]{2}$",
                    "type": "string"
                  },
                  "extraDescription": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`)."
                  },
                  "line1": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "line2": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "postalCode": {
                    "minLength": 0,
                    "maxLength": 10,
                    "type": "string",
                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "region": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "sublocality": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name"
                  }
                },
                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided."
              },
              "acceptingNewPatients": {
                "type": "boolean",
                "description": "Indicates whether the healthcare provider is accepting new patients."
              },
              "accessHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the access hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "additionalHoursText": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)"
              },
              "addressHidden": {
                "type": "boolean",
                "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`."
              },
              "alternateNames": {
                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "alternatePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "alternateWebsites": {
                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 255,
                  "format": "uri",
                  "type": "string",
                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                }
              },
              "appleActionLinks": {
                "description": "Use this field to add action links to your Apple Listings.\n\nThe call to action category will be displayed on the action link button.\n\nThe App Store URL should contain a valid link to the landing page of an App in the Apple App Store.\n\nThe Quick Link URL is where a user is taken when an action link is clicked by a user.\n\nThe App Name sub-field is not displayed on Apple Listings and is only used to distinguish the call-to-action type when utilizing action links in Apple posts.\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "category",
                    "quickLinkUrl",
                    "appName"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "appName": {
                      "minLength": 0,
                      "maxLength": 18,
                      "type": "string"
                    },
                    "appStoreUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    },
                    "category": {
                      "enum": [
                        "BOOK_TRAVEL",
                        "CHECK_IN",
                        "FEES_POLICIES",
                        "FLIGHT_STATUS",
                        "TICKETS",
                        "TICKETING",
                        "AMENITIES",
                        "FRONT_DESK",
                        "PARKING",
                        "GIFT_CARD",
                        "WAITLIST",
                        "DELIVERY",
                        "ORDER",
                        "TAKEOUT",
                        "PICKUP",
                        "RESERVE",
                        "MENU",
                        "APPOINTMENT",
                        "PORTFOLIO",
                        "QUOTE",
                        "SERVICES",
                        "STORE_ORDERS",
                        "STORE_SHOP",
                        "STORE_SUPPORT",
                        "SCHEDULE",
                        "SHOWTIMES",
                        "AVAILABILITY",
                        "PRICING",
                        "ACTIVITIES",
                        "BOOK",
                        "BOOK_(HOTEL)",
                        "BOOK_(RIDE)",
                        "BOOK_(TOUR)",
                        "CAREERS",
                        "CHARGE",
                        "COUPONS",
                        "DELIVERY_(RETAIL)",
                        "DONATE",
                        "EVENTS",
                        "ORDER_(RETAIL)",
                        "OTHER_MENU",
                        "PICKUP_(RETAIL)",
                        "RESERVE_(PARKING)",
                        "SHOWS",
                        "SPORTS",
                        "SUPPORT",
                        "TEE_TIME",
                        "GIFT_CARD_(RESTAURANT)"
                      ],
                      "type": "string"
                    },
                    "quickLinkUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    }
                  }
                }
              },
              "appleBusinessDescription": {
                "minLength": 0,
                "maxLength": 500,
                "type": "string",
                "description": "The business description to be sent to Apple"
              },
              "appleBusinessId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with an individual Business Folder in your Apple account"
              },
              "appleCompanyId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with your Apple account. Numerical values only"
              },
              "appleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity''s Apple profile\n\n\nImage must be at least 1600 x 1040 pixels\n\nImage may be no more than 4864 x 3163 pixels\n\nSupported Aspect Ratios:\n* 154 x 100\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "appleDisplayName": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "The name to be displayed on Apple for the entity.\nNOTE: The names of Brands and their respective Locations within an Apple Business Connect Account must match identically.\nCannot Include:\nHTML markup \n\n\nCannot Include:\n* HTML markup"
              },
              "associations": {
                "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "bios": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Bio Content Lists associated with this entity"
              },
              "brands": {
                "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "calendars": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the events Content Lists (Calendars) associated with this entity"
              },
              "categories": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "Yext Categories. (Supported for versions > 20240220)\n\nA map of category list external IDs (i.e. \"yext\") to a list of category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nPartial updates are accepted, meaning sending only the \"yext\" property will have no effect on any category list except the \"yext\" category. "
              },
              "categoryIds": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "Yext Category IDs. (Deprecated: For versions > 20240220)\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n"
              },
              "closed": {
                "type": "boolean",
                "description": "Indicates whether the entity is closed"
              },
              "conditionsTreated": {
                "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "covidMessaging": {
                "minLength": 0,
                "maxLength": 15000,
                "type": "string",
                "description": "Information or messaging related to COVID-19."
              },
              "covidTestAppointmentUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "An appointment URL for scheduling a COVID-19 test."
              },
              "covidTestingAppointmentRequired": {
                "type": "boolean",
                "description": "Indicates whether an appointment is required for a COVID-19 test."
              },
              "covidTestingDriveThroughSite": {
                "type": "boolean",
                "description": "Indicates whether location is a drive-through site for COVID-19 tests."
              },
              "covidTestingIsFree": {
                "type": "boolean",
                "description": "Indicates whether location offers free COVID-19 testing."
              },
              "covidTestingPatientRestrictions": {
                "type": "boolean",
                "description": "Indicates whether there are patient restrictions for COVID-19 testing."
              },
              "covidTestingReferralRequired": {
                "type": "boolean",
                "description": "Indicates whether a referral is required for COVID-19 testing."
              },
              "covidTestingSiteInstructions": {
                "minLength": 0,
                "maxLength": 15000,
                "type": "string",
                "description": "Information or instructions for the COVID-19 testing site."
              },
              "covidVaccineAppointmentRequired": {
                "type": "boolean",
                "description": "Indicates whether an appointment is required for a COVID-19 vaccine."
              },
              "covidVaccineDriveThroughSite": {
                "type": "boolean",
                "description": "Indicates whether location is a drive-through site for COVID-19 vaccines."
              },
              "covidVaccineInformationUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "An information URL for more information about COVID-19 vaccines."
              },
              "covidVaccinePatientRestrictions": {
                "type": "boolean",
                "description": "Indicates whether there are patient restrictions for a COVID-19 vaccine."
              },
              "covidVaccineReferralRequired": {
                "type": "boolean",
                "description": "Indicates whether a referral is required for a COVID-19 vaccine."
              },
              "covidVaccineSiteInstructions": {
                "minLength": 0,
                "maxLength": 15000,
                "type": "string",
                "description": "Information or instructions for the COVID-19 vaccination site."
              },
              "covidVaccinesOffered": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "PFIZER",
                    "MODERNA",
                    "JOHNSON_&_JOHNSON"
                  ],
                  "type": "string"
                },
                "description": "Indicates which COVID-19 vaccines the location offers."
              },
              "customKeywords": {
                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string"
                }
              },
              "description": {
                "minLength": 10,
                "maxLength": 15000,
                "type": "string",
                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup"
              },
              "displayCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you"
              },
              "dropoffCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of the drop-off area for the entity, as provided by you"
              },
              "emails": {
                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "format": "email",
                  "type": "string"
                }
              },
              "facebookAbout": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "A description of the entity to be used in the \"About You\" section on Facebook"
              },
              "facebookCallToAction": {
                "required": [
                  "type"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "NONE",
                      "BOOK_NOW",
                      "CALL_NOW",
                      "CONTACT_US",
                      "SEND_MESSAGE",
                      "USE_APP",
                      "PLAY_GAME",
                      "SHOP_NOW",
                      "SIGN_UP",
                      "WATCH_VIDEO",
                      "SEND_EMAIL",
                      "LEARN_MORE",
                      "PURCHASE_GIFT_CARDS",
                      "ORDER_NOW",
                      "FOLLOW_PAGE"
                    ],
                    "type": "string",
                    "description": "The action the consumer is being prompted to take by the button's text"
                  },
                  "value": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field."
                  }
                },
                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string"
              },
              "facebookCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookDescriptor": {
                "minLength": 3,
                "maxLength": 75,
                "type": "string",
                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup"
              },
              "facebookName": {
                "minLength": 0,
                "type": "string",
                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions."
              },
              "facebookOverrideCity": {
                "minLength": 0,
                "type": "string",
                "description": "The city to be displayed on this entity's Facebook profile"
              },
              "facebookPageUrl": {
                "minLength": 0,
                "type": "string",
                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n- facebook.com/people/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\nThe success response will contain a warning message explaining why the URL wasn't stored in the system."
              },
              "facebookParentPageId": {
                "minLength": 0,
                "maxLength": 65,
                "type": "string",
                "description": "The Facebook Page ID of this entity's brand page if in a brand page location structure"
              },
              "facebookProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookStoreId": {
                "minLength": 0,
                "type": "string",
                "description": "The Store ID used for this entity in a brand page location structure"
              },
              "facebookVanityUrl": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page."
              },
              "facebookWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Facebook in place of the one given in **`websiteUrl`** (if applicable)."
              },
              "fax": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "featuredMessage": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 50,
                    "type": "string",
                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup"
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 255,
                    "format": "uri",
                    "type": "string",
                    "description": "Valid URL linked to the Featured Message text"
                  }
                },
                "description": "Information about the entity's Featured Message"
              },
              "firstPartyReviewPage": {
                "minLength": 0,
                "type": "string",
                "description": "Link to the review-collection page, where consumers can leave first-party reviews"
              },
              "frequentlyAskedQuestions": {
                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "question"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "answer": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    },
                    "question": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    }
                  }
                }
              },
              "fullyVaccinatedStaff": {
                "type": "boolean",
                "description": "Indicates whether the staff is vaccinated against COVID-19."
              },
              "geomodifier": {
                "minLength": 0,
                "type": "string",
                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)"
              },
              "googleAttributes": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "The unique IDs of the entity's Google Business Profile keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes."
              },
              "googleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleMessaging": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "smsNumber": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The SMS phone number of the entity's point of contact for messaging/ chat functionality.\nMust be a valid phone number.\nIf the phone number's calling code is for a country other than the one given in the entity's countryCode, the phone number provided must contain the calling code (e.g., +44 in +442038083831). Otherwise, the calling code is optional. "
                  },
                  "whatsappMessagingUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's WhatsApp account.\nMust be a valid URL\n"
                  }
                },
                "description": "Information about Google Messaging, WhatsApp and SMS, for the entity’s point of contact for messaging/chat functionality.\n\nNOTE: Only one, either WhatsApp or SMS is displayed on the Google listing. If both SMS Number and WhatsApp URL are provided only SMS Number will be displayed on the listing."
              },
              "googleMyBusinessLabels": {
                "description": "Google Business Profile Labels help users organize their locations into groups within GBP.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 50,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "googlePlaceId": {
                "minLength": 0,
                "type": "string",
                "description": "The unique identifier of this entity on Google Maps."
              },
              "googleProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 5000 x 5000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Google Business Profile in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field."
              },
              "holidayHoursConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity"
              },
              "hours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the hours of operation are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "impressum": {
                "minLength": 0,
                "maxLength": 2000,
                "type": "string",
                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media."
              },
              "instagramHandle": {
                "minLength": 0,
                "maxLength": 30,
                "type": "string",
                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)"
              },
              "insuranceAccepted": {
                "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "isoRegionCode": {
                "minLength": 0,
                "type": "string",
                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used."
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "languages": {
                "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "linkedInUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your LinkedIn account, format should be https://www.linkedin.com/in/yourUsername"
              },
              "localPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits."
              },
              "locationType": {
                "enum": [
                  "LOCATION",
                  "HEALTHCARE_FACILITY",
                  "HEALTHCARE_PROFESSIONAL",
                  "ATM",
                  "RESTAURANT",
                  "HOTEL"
                ],
                "type": "string",
                "description": "Indicates the entity's type, if it is not an event"
              },
              "logo": {
                "required": [
                  "image"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "clickthroughUrl": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  },
                  "description": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "details": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "image": {
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false,
                    "type": "object",
                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                    "properties": {
                      "alternateText": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "url": {
                        "minLength": 0,
                        "format": "uri",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "mainPhone": {
                "minLength": 0,
                "type": "string",
                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "menuUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL where consumers can view the entity's menu"
                  }
                },
                "description": "Information about the URL where consumers can view the entity's menu"
              },
              "mobilePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "npi": {
                "minLength": 0,
                "type": "string",
                "description": "The National Provider Identifier (NPI) of the healthcare provider"
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "onlineServiceHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the online service hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for the Entity's online service hours on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "openDate": {
                "format": "date",
                "type": "string",
                "description": "The date that the entity is set to open for the first time.\nMust be formatted in YYYY-MM-DD format.\n\nDate must be on or after 1970-01-01 Date must be before or on 2038-01-01\n"
              },
              "orderUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to place an order at this entity"
                  }
                },
                "description": "Information about the URL used to place orders that will be fulfilled by the entity"
              },
              "paymentOptions": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "AFTERPAY",
                    "ALIPAY",
                    "AMERICANEXPRESS",
                    "ANDROIDPAY",
                    "APPLEPAY",
                    "ATM",
                    "ATMQUICK",
                    "BACS",
                    "BANCONTACT",
                    "BANKDEPOSIT",
                    "BANKPAY",
                    "BGO",
                    "BITCOIN",
                    "Bar",
                    "CARTASI",
                    "CASH",
                    "CCS",
                    "CHECK",
                    "CHEQUESVACANCES",
                    "CONB",
                    "CONTACTLESSPAYME",
                    "CVVV",
                    "DEBITCARD",
                    "DEBITNOTE",
                    "DINERSCLUB",
                    "DIRECTDEBIT",
                    "DISCOVER",
                    "ECKARTE",
                    "ECOCHEQUE",
                    "EKENA",
                    "EMV",
                    "FINANCING",
                    "GIFTCARD",
                    "GOPAY",
                    "HAYAKAKEN",
                    "HEBAG",
                    "IBOD",
                    "ICCARDS",
                    "ICOCA",
                    "ID",
                    "IDEAL",
                    "INCA",
                    "INVOICE",
                    "JCB",
                    "JCoinPay",
                    "JKOPAY",
                    "KITACA",
                    "KLA",
                    "KLARNA",
                    "LINEPAY",
                    "MAESTRO",
                    "MANACA",
                    "MASTERCARD",
                    "MIPAY",
                    "MONIZZE",
                    "MPAY",
                    "Manuelle Lastsch",
                    "Merpay",
                    "NANACO",
                    "NEXI",
                    "NIMOCA",
                    "OREM",
                    "PASMO",
                    "PAYBACKPAY",
                    "PAYBOX",
                    "PAYCONIQ",
                    "PAYPAL",
                    "PAYPAY",
                    "PAYSEC",
                    "PIN",
                    "POSTEPAY",
                    "QRCODE",
                    "QUICPAY",
                    "RAKUTENEDY",
                    "RAKUTENPAY",
                    "SAMSUNGPAY",
                    "SODEXO",
                    "SUGOCA",
                    "SUICA",
                    "SWISH",
                    "TICKETRESTAURANT",
                    "TOICA",
                    "TRAVELERSCHECK",
                    "TSCUBIC",
                    "TWINT",
                    "UNIONPAY",
                    "VEV",
                    "VISA",
                    "VISAELECTRON",
                    "VOB",
                    "VOUCHER",
                    "VPAY",
                    "WAON",
                    "WECHATPAY",
                    "WIRETRANSFER",
                    "Yucho Pay",
                    "ZELLE",
                    "auPay",
                    "dBarai",
                    "Überweisung"
                  ],
                  "type": "string"
                },
                "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n"
              },
              "photoGallery": {
                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "required": [
                    "image"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                  "properties": {
                    "clickthroughUrl": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string"
                    },
                    "description": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "details": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "image": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                      "properties": {
                        "alternateText": {
                          "minLength": 0,
                          "type": "string"
                        },
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "pickupCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you"
              },
              "pickupHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the pickup hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open for pickup on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "pinterestUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your Pinterest account, format should be https://www.pinterest.com/yourUsername"
              },
              "priceRange": {
                "enum": [
                  "UNSPECIFIED",
                  "ONE",
                  "TWO",
                  "THREE",
                  "FOUR"
                ],
                "type": "string",
                "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)"
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "productLists": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Products & Services Content Lists associated with this entity"
              },
              "questionsAndAnswers": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity"
              },
              "rankTrackingCompetitors": {
                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "name",
                    "website"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string",
                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup"
                    },
                    "website": {
                      "minLength": 0,
                      "maxLength": 255,
                      "format": "uri",
                      "type": "string",
                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                    }
                  }
                }
              },
              "rankTrackingEnabled": {
                "type": "boolean",
                "description": "Indicates whether Rank Tracking is enabled"
              },
              "rankTrackingFrequency": {
                "enum": [
                  "WEEKLY",
                  "MONTHLY",
                  "QUARTERLY"
                ],
                "type": "string",
                "description": "How often we send search queries to track your search performance"
              },
              "rankTrackingQueryTemplates": {
                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "KEYWORD",
                    "KEYWORD_ZIP",
                    "KEYWORD_CITY",
                    "KEYWORD_IN_CITY",
                    "KEYWORD_NEAR_ME",
                    "KEYWORD_CITY_STATE"
                  ],
                  "type": "string"
                }
              },
              "rankTrackingSites": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "GOOGLE_DESKTOP",
                    "GOOGLE_MOBILE",
                    "BING_DESKTOP",
                    "BING_MOBILE",
                    "YAHOO_DESKTOP",
                    "YAHOO_MOBILE"
                  ],
                  "type": "string"
                },
                "description": "The search engines that we will use to track your performance"
              },
              "reservationUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to make reservations at this entity"
                  }
                },
                "description": "Information about the URL consumers can visit to make reservations at this entity"
              },
              "reviewGenerationUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL given Review Invitation emails where consumers can leave a review about the entity"
              },
              "reviewResponseConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity"
              },
              "routableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for driving directions to the entity, as provided by you"
              },
              "serviceArea": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "places": {
                    "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    }
                  }
                },
                "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites."
              },
              "serviceAreaPlaces": {
                "description": "Information about the area that is served by this entity. It is specified as a list of service area names, their associated types and google place ids.\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    },
                    "googlePlaceId": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "POSTAL_CODE",
                        "REGION",
                        "COUNTY",
                        "CITY",
                        "SUBLOCALITY"
                      ],
                      "type": "string"
                    }
                  }
                }
              },
              "services": {
                "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "tikTokUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your TikTok profile, format should be https://www.tiktok.com/yourUsername"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "tollFreePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "ttyPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "twitterHandle": {
                "minLength": 0,
                "maxLength": 15,
                "type": "string",
                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system."
              },
              "uberLink": {
                "required": [
                  "presentation"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "presentation": {
                    "enum": [
                      "BUTTON",
                      "LINK"
                    ],
                    "type": "string",
                    "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it."
                  },
                  "text": {
                    "minLength": 0,
                    "maxLength": 100,
                    "type": "string",
                    "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`."
                  }
                },
                "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear"
              },
              "uberTripBranding": {
                "required": [
                  "text",
                  "url",
                  "description"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 150,
                    "type": "string",
                    "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**."
                  },
                  "text": {
                    "minLength": 0,
                    "maxLength": 28,
                    "type": "string",
                    "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**."
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**."
                  }
                },
                "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity"
              },
              "videos": {
                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "video"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "description": {
                      "minLength": 0,
                      "maxLength": 140,
                      "type": "string",
                      "description": "\nCannot Include:\n* HTML markup"
                    },
                    "video": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "walkableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for walking directions to the entity, as provided by you"
              },
              "websiteUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's website"
                  }
                },
                "description": "Information about the website for this entity"
              },
              "yearEstablished": {
                "multipleOf": 1,
                "minimum": 1000,
                "maximum": 2028,
                "type": "number",
                "description": "The year the entity was established."
              },
              "youTubeChannelUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your YouTube channel, format should be https://www.youtube.com/c/yourUsername"
              }
            }
          }
        ]
      },
      "HealthcareProfessionalWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "meta": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "countryCode": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)"
                  },
                  "folderId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The ID of the folder containing this Entity"
                  },
                  "id": {
                    "minLength": 0,
                    "type": "string",
                    "description": "ID of this Entity"
                  },
                  "labels": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer."
                  },
                  "language": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)"
                  }
                },
                "description": "Contains the metadata about the entity."
              },
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "address": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "city": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "countryCode": {
                    "minLength": 0,
                    "pattern": "^[a-zA-Z]{2}$",
                    "type": "string"
                  },
                  "extraDescription": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`)."
                  },
                  "line1": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "line2": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "postalCode": {
                    "minLength": 0,
                    "maxLength": 10,
                    "type": "string",
                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "region": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "sublocality": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name"
                  }
                },
                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided."
              },
              "acceptingNewPatients": {
                "type": "boolean",
                "description": "Indicates whether the healthcare provider is accepting new patients."
              },
              "additionalHoursText": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)"
              },
              "addressHidden": {
                "type": "boolean",
                "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`."
              },
              "admittingHospitals": {
                "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "alternateNames": {
                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "alternatePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "alternateWebsites": {
                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 255,
                  "format": "uri",
                  "type": "string",
                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                }
              },
              "appleActionLinks": {
                "description": "Use this field to add action links to your Apple Listings.\n\nThe call to action category will be displayed on the action link button.\n\nThe App Store URL should contain a valid link to the landing page of an App in the Apple App Store.\n\nThe Quick Link URL is where a user is taken when an action link is clicked by a user.\n\nThe App Name sub-field is not displayed on Apple Listings and is only used to distinguish the call-to-action type when utilizing action links in Apple posts.\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "category",
                    "quickLinkUrl",
                    "appName"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "appName": {
                      "minLength": 0,
                      "maxLength": 18,
                      "type": "string"
                    },
                    "appStoreUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    },
                    "category": {
                      "enum": [
                        "BOOK_TRAVEL",
                        "CHECK_IN",
                        "FEES_POLICIES",
                        "FLIGHT_STATUS",
                        "TICKETS",
                        "TICKETING",
                        "AMENITIES",
                        "FRONT_DESK",
                        "PARKING",
                        "GIFT_CARD",
                        "WAITLIST",
                        "DELIVERY",
                        "ORDER",
                        "TAKEOUT",
                        "PICKUP",
                        "RESERVE",
                        "MENU",
                        "APPOINTMENT",
                        "PORTFOLIO",
                        "QUOTE",
                        "SERVICES",
                        "STORE_ORDERS",
                        "STORE_SHOP",
                        "STORE_SUPPORT",
                        "SCHEDULE",
                        "SHOWTIMES",
                        "AVAILABILITY",
                        "PRICING",
                        "ACTIVITIES",
                        "BOOK",
                        "BOOK_(HOTEL)",
                        "BOOK_(RIDE)",
                        "BOOK_(TOUR)",
                        "CAREERS",
                        "CHARGE",
                        "COUPONS",
                        "DELIVERY_(RETAIL)",
                        "DONATE",
                        "EVENTS",
                        "ORDER_(RETAIL)",
                        "OTHER_MENU",
                        "PICKUP_(RETAIL)",
                        "RESERVE_(PARKING)",
                        "SHOWS",
                        "SPORTS",
                        "SUPPORT",
                        "TEE_TIME",
                        "GIFT_CARD_(RESTAURANT)"
                      ],
                      "type": "string"
                    },
                    "quickLinkUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    }
                  }
                }
              },
              "appleBusinessDescription": {
                "minLength": 0,
                "maxLength": 500,
                "type": "string",
                "description": "The business description to be sent to Apple"
              },
              "appleBusinessId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with an individual Business Folder in your Apple account"
              },
              "appleCompanyId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with your Apple account. Numerical values only"
              },
              "appleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity''s Apple profile\n\n\nImage must be at least 1600 x 1040 pixels\n\nImage may be no more than 4864 x 3163 pixels\n\nSupported Aspect Ratios:\n* 154 x 100\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "appleDisplayName": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "The name to be displayed on Apple for the entity.\nNOTE: The names of Brands and their respective Locations within an Apple Business Connect Account must match identically.\nCannot Include:\nHTML markup \n\n\nCannot Include:\n* HTML markup"
              },
              "associations": {
                "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "bios": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Bio Content Lists associated with this entity"
              },
              "brands": {
                "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "categories": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "Yext Categories. (Supported for versions > 20240220)\n\nA map of category list external IDs (i.e. \"yext\") to a list of category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nPartial updates are accepted, meaning sending only the \"yext\" property will have no effect on any category list except the \"yext\" category. "
              },
              "categoryIds": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "Yext Category IDs. (Deprecated: For versions > 20240220)\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n"
              },
              "certifications": {
                "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 200,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "closed": {
                "type": "boolean",
                "description": "Indicates whether the entity is closed"
              },
              "conditionsTreated": {
                "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "covidMessaging": {
                "minLength": 0,
                "maxLength": 15000,
                "type": "string",
                "description": "Information or messaging related to COVID-19."
              },
              "customKeywords": {
                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string"
                }
              },
              "degrees": {
                "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "ANP",
                    "APN",
                    "APRN",
                    "ARNP",
                    "AUD",
                    "BSW",
                    "CCCA",
                    "CNM",
                    "CNP",
                    "CNS",
                    "CPNP",
                    "CRNA",
                    "CRNP",
                    "DC",
                    "DDS",
                    "DMD",
                    "DNP",
                    "DO",
                    "DPM",
                    "DPT",
                    "DSW",
                    "DVM",
                    "FNP",
                    "GNP",
                    "LAC",
                    "LCSW",
                    "LPN",
                    "MBA",
                    "MBBS",
                    "MD",
                    "MPAS",
                    "MPH",
                    "MSW",
                    "ND",
                    "NNP",
                    "NP",
                    "OD",
                    "PA",
                    "PAC",
                    "PHARMD",
                    "PHD",
                    "PNP",
                    "PSYD",
                    "RD",
                    "RSW",
                    "VMD",
                    "WHNP"
                  ],
                  "type": "string"
                }
              },
              "description": {
                "minLength": 10,
                "maxLength": 15000,
                "type": "string",
                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup"
              },
              "displayCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you"
              },
              "dropoffCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of the drop-off area for the entity, as provided by you"
              },
              "educationList": {
                "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "type",
                    "institutionName",
                    "yearCompleted"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "institutionName": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "FELLOWSHIP",
                        "RESIDENCY",
                        "INTERNSHIP",
                        "MEDICAL_SCHOOL"
                      ],
                      "type": "string"
                    },
                    "yearCompleted": {
                      "multipleOf": 1,
                      "minimum": 1900,
                      "maximum": 2100,
                      "type": "number"
                    }
                  }
                }
              },
              "emails": {
                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "format": "email",
                  "type": "string"
                }
              },
              "facebookAbout": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "A description of the entity to be used in the \"About You\" section on Facebook"
              },
              "facebookCallToAction": {
                "required": [
                  "type"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "NONE",
                      "BOOK_NOW",
                      "CALL_NOW",
                      "CONTACT_US",
                      "SEND_MESSAGE",
                      "USE_APP",
                      "PLAY_GAME",
                      "SHOP_NOW",
                      "SIGN_UP",
                      "WATCH_VIDEO",
                      "SEND_EMAIL",
                      "LEARN_MORE",
                      "PURCHASE_GIFT_CARDS",
                      "ORDER_NOW",
                      "FOLLOW_PAGE"
                    ],
                    "type": "string",
                    "description": "The action the consumer is being prompted to take by the button's text"
                  },
                  "value": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field."
                  }
                },
                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string"
              },
              "facebookCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookDescriptor": {
                "minLength": 3,
                "maxLength": 75,
                "type": "string",
                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup"
              },
              "facebookName": {
                "minLength": 0,
                "type": "string",
                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions."
              },
              "facebookOverrideCity": {
                "minLength": 0,
                "type": "string",
                "description": "The city to be displayed on this entity's Facebook profile"
              },
              "facebookPageUrl": {
                "minLength": 0,
                "type": "string",
                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n- facebook.com/people/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\nThe success response will contain a warning message explaining why the URL wasn't stored in the system."
              },
              "facebookParentPageId": {
                "minLength": 0,
                "maxLength": 65,
                "type": "string",
                "description": "The Facebook Page ID of this entity's brand page if in a brand page location structure"
              },
              "facebookProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookStoreId": {
                "minLength": 0,
                "type": "string",
                "description": "The Store ID used for this entity in a brand page location structure"
              },
              "facebookVanityUrl": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page."
              },
              "facebookWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Facebook in place of the one given in **`websiteUrl`** (if applicable)."
              },
              "fax": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "featuredMessage": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 50,
                    "type": "string",
                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup"
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 255,
                    "format": "uri",
                    "type": "string",
                    "description": "Valid URL linked to the Featured Message text"
                  }
                },
                "description": "Information about the entity's Featured Message"
              },
              "firstName": {
                "minLength": 0,
                "maxLength": 35,
                "type": "string",
                "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup"
              },
              "firstPartyReviewPage": {
                "minLength": 0,
                "type": "string",
                "description": "Link to the review-collection page, where consumers can leave first-party reviews"
              },
              "frequentlyAskedQuestions": {
                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "question"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "answer": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    },
                    "question": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    }
                  }
                }
              },
              "gender": {
                "enum": [
                  "UNSPECIFIED",
                  "FEMALE",
                  "MALE",
                  "NONBINARY",
                  "TRANSGENDER_FEMALE",
                  "TRANSGENDER_MALE",
                  "OTHER",
                  "PREFER_NOT_TO_DISCLOSE"
                ],
                "type": "string",
                "description": "The gender of the healthcare professional"
              },
              "geomodifier": {
                "minLength": 0,
                "type": "string",
                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)"
              },
              "googleAttributes": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "The unique IDs of the entity's Google Business Profile keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes."
              },
              "googleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleMessaging": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "smsNumber": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The SMS phone number of the entity's point of contact for messaging/ chat functionality.\nMust be a valid phone number.\nIf the phone number's calling code is for a country other than the one given in the entity's countryCode, the phone number provided must contain the calling code (e.g., +44 in +442038083831). Otherwise, the calling code is optional. "
                  },
                  "whatsappMessagingUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's WhatsApp account.\nMust be a valid URL\n"
                  }
                },
                "description": "Information about Google Messaging, WhatsApp and SMS, for the entity’s point of contact for messaging/chat functionality.\n\nNOTE: Only one, either WhatsApp or SMS is displayed on the Google listing. If both SMS Number and WhatsApp URL are provided only SMS Number will be displayed on the listing."
              },
              "googleMyBusinessLabels": {
                "description": "Google Business Profile Labels help users organize their locations into groups within GBP.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 50,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "googlePlaceId": {
                "minLength": 0,
                "type": "string",
                "description": "The unique identifier of this entity on Google Maps."
              },
              "googleProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 5000 x 5000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Google Business Profile in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field."
              },
              "headshot": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "A portrait of the healthcare professional",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "holidayHoursConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity"
              },
              "hours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the hours of operation are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "impressum": {
                "minLength": 0,
                "maxLength": 2000,
                "type": "string",
                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media."
              },
              "instagramHandle": {
                "minLength": 0,
                "maxLength": 30,
                "type": "string",
                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)"
              },
              "insuranceAccepted": {
                "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "isClusterPrimary": {
                "type": "boolean",
                "description": "Indicates whether the healthcare entity is the primary entity in its group"
              },
              "isoRegionCode": {
                "minLength": 0,
                "type": "string",
                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used."
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "languages": {
                "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "lastName": {
                "minLength": 0,
                "maxLength": 35,
                "type": "string",
                "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup"
              },
              "linkedInUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your LinkedIn account, format should be https://www.linkedin.com/in/yourUsername"
              },
              "localPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits."
              },
              "locationType": {
                "enum": [
                  "LOCATION",
                  "HEALTHCARE_FACILITY",
                  "HEALTHCARE_PROFESSIONAL",
                  "ATM",
                  "RESTAURANT",
                  "HOTEL"
                ],
                "type": "string",
                "description": "Indicates the entity's type, if it is not an event"
              },
              "logo": {
                "required": [
                  "image"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "clickthroughUrl": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  },
                  "description": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "details": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "image": {
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false,
                    "type": "object",
                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                    "properties": {
                      "alternateText": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "url": {
                        "minLength": 0,
                        "format": "uri",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "mainPhone": {
                "minLength": 0,
                "type": "string",
                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "menuUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL where consumers can view the entity's menu"
                  }
                },
                "description": "Information about the URL where consumers can view the entity's menu"
              },
              "middleName": {
                "minLength": 0,
                "maxLength": 35,
                "type": "string",
                "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup"
              },
              "mobilePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "npi": {
                "minLength": 0,
                "type": "string",
                "description": "The National Provider Identifier (NPI) of the healthcare provider"
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "officeName": {
                "minLength": 0,
                "type": "string",
                "description": "The name of the office where the healthcare professional works, if different from **`name`**"
              },
              "onlineServiceHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the online service hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for the Entity's online service hours on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "openDate": {
                "format": "date",
                "type": "string",
                "description": "The date that the entity is set to open for the first time.\nMust be formatted in YYYY-MM-DD format.\n\nDate must be on or after 1970-01-01 Date must be before or on 2038-01-01\n"
              },
              "orderUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to place an order at this entity"
                  }
                },
                "description": "Information about the URL used to place orders that will be fulfilled by the entity"
              },
              "paymentOptions": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "AFTERPAY",
                    "ALIPAY",
                    "AMERICANEXPRESS",
                    "ANDROIDPAY",
                    "APPLEPAY",
                    "ATM",
                    "ATMQUICK",
                    "BACS",
                    "BANCONTACT",
                    "BANKDEPOSIT",
                    "BANKPAY",
                    "BGO",
                    "BITCOIN",
                    "Bar",
                    "CARTASI",
                    "CASH",
                    "CCS",
                    "CHECK",
                    "CHEQUESVACANCES",
                    "CONB",
                    "CONTACTLESSPAYME",
                    "CVVV",
                    "DEBITCARD",
                    "DEBITNOTE",
                    "DINERSCLUB",
                    "DIRECTDEBIT",
                    "DISCOVER",
                    "ECKARTE",
                    "ECOCHEQUE",
                    "EKENA",
                    "EMV",
                    "FINANCING",
                    "GIFTCARD",
                    "GOPAY",
                    "HAYAKAKEN",
                    "HEBAG",
                    "IBOD",
                    "ICCARDS",
                    "ICOCA",
                    "ID",
                    "IDEAL",
                    "INCA",
                    "INVOICE",
                    "JCB",
                    "JCoinPay",
                    "JKOPAY",
                    "KITACA",
                    "KLA",
                    "KLARNA",
                    "LINEPAY",
                    "MAESTRO",
                    "MANACA",
                    "MASTERCARD",
                    "MIPAY",
                    "MONIZZE",
                    "MPAY",
                    "Manuelle Lastsch",
                    "Merpay",
                    "NANACO",
                    "NEXI",
                    "NIMOCA",
                    "OREM",
                    "PASMO",
                    "PAYBACKPAY",
                    "PAYBOX",
                    "PAYCONIQ",
                    "PAYPAL",
                    "PAYPAY",
                    "PAYSEC",
                    "PIN",
                    "POSTEPAY",
                    "QRCODE",
                    "QUICPAY",
                    "RAKUTENEDY",
                    "RAKUTENPAY",
                    "SAMSUNGPAY",
                    "SODEXO",
                    "SUGOCA",
                    "SUICA",
                    "SWISH",
                    "TICKETRESTAURANT",
                    "TOICA",
                    "TRAVELERSCHECK",
                    "TSCUBIC",
                    "TWINT",
                    "UNIONPAY",
                    "VEV",
                    "VISA",
                    "VISAELECTRON",
                    "VOB",
                    "VOUCHER",
                    "VPAY",
                    "WAON",
                    "WECHATPAY",
                    "WIRETRANSFER",
                    "Yucho Pay",
                    "ZELLE",
                    "auPay",
                    "dBarai",
                    "Überweisung"
                  ],
                  "type": "string"
                },
                "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n"
              },
              "photoGallery": {
                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "required": [
                    "image"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                  "properties": {
                    "clickthroughUrl": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string"
                    },
                    "description": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "details": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "image": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                      "properties": {
                        "alternateText": {
                          "minLength": 0,
                          "type": "string"
                        },
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "pickupCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you"
              },
              "pinterestUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your Pinterest account, format should be https://www.pinterest.com/yourUsername"
              },
              "priceRange": {
                "enum": [
                  "UNSPECIFIED",
                  "ONE",
                  "TWO",
                  "THREE",
                  "FOUR"
                ],
                "type": "string",
                "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)"
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "productLists": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Products & Services Content Lists associated with this entity"
              },
              "questionsAndAnswers": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity"
              },
              "rankTrackingCompetitors": {
                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "name",
                    "website"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string",
                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup"
                    },
                    "website": {
                      "minLength": 0,
                      "maxLength": 255,
                      "format": "uri",
                      "type": "string",
                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                    }
                  }
                }
              },
              "rankTrackingEnabled": {
                "type": "boolean",
                "description": "Indicates whether Rank Tracking is enabled"
              },
              "rankTrackingFrequency": {
                "enum": [
                  "WEEKLY",
                  "MONTHLY",
                  "QUARTERLY"
                ],
                "type": "string",
                "description": "How often we send search queries to track your search performance"
              },
              "rankTrackingQueryTemplates": {
                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "KEYWORD",
                    "KEYWORD_ZIP",
                    "KEYWORD_CITY",
                    "KEYWORD_IN_CITY",
                    "KEYWORD_NEAR_ME",
                    "KEYWORD_CITY_STATE"
                  ],
                  "type": "string"
                }
              },
              "rankTrackingSites": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "GOOGLE_DESKTOP",
                    "GOOGLE_MOBILE",
                    "BING_DESKTOP",
                    "BING_MOBILE",
                    "YAHOO_DESKTOP",
                    "YAHOO_MOBILE"
                  ],
                  "type": "string"
                },
                "description": "The search engines that we will use to track your performance"
              },
              "reservationUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to make reservations at this entity"
                  }
                },
                "description": "Information about the URL consumers can visit to make reservations at this entity"
              },
              "reviewGenerationUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL given Review Invitation emails where consumers can leave a review about the entity"
              },
              "reviewResponseConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity"
              },
              "routableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for driving directions to the entity, as provided by you"
              },
              "serviceArea": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "places": {
                    "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    }
                  }
                },
                "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites."
              },
              "serviceAreaPlaces": {
                "description": "Information about the area that is served by this entity. It is specified as a list of service area names, their associated types and google place ids.\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    },
                    "googlePlaceId": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "POSTAL_CODE",
                        "REGION",
                        "COUNTY",
                        "CITY",
                        "SUBLOCALITY"
                      ],
                      "type": "string"
                    }
                  }
                }
              },
              "services": {
                "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "tikTokUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your TikTok profile, format should be https://www.tiktok.com/yourUsername"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "tollFreePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "ttyPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "twitterHandle": {
                "minLength": 0,
                "maxLength": 15,
                "type": "string",
                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system."
              },
              "uberLink": {
                "required": [
                  "presentation"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "presentation": {
                    "enum": [
                      "BUTTON",
                      "LINK"
                    ],
                    "type": "string",
                    "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it."
                  },
                  "text": {
                    "minLength": 0,
                    "maxLength": 100,
                    "type": "string",
                    "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`."
                  }
                },
                "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear"
              },
              "uberTripBranding": {
                "required": [
                  "text",
                  "url",
                  "description"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 150,
                    "type": "string",
                    "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**."
                  },
                  "text": {
                    "minLength": 0,
                    "maxLength": 28,
                    "type": "string",
                    "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**."
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**."
                  }
                },
                "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity"
              },
              "videos": {
                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "video"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "description": {
                      "minLength": 0,
                      "maxLength": 140,
                      "type": "string",
                      "description": "\nCannot Include:\n* HTML markup"
                    },
                    "video": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "walkableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for walking directions to the entity, as provided by you"
              },
              "websiteUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's website"
                  }
                },
                "description": "Information about the website for this entity"
              },
              "yearEstablished": {
                "multipleOf": 1,
                "minimum": 1000,
                "maximum": 2028,
                "type": "number",
                "description": "The year the entity was established."
              },
              "youTubeChannelUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your YouTube channel, format should be https://www.youtube.com/c/yourUsername"
              }
            }
          }
        ]
      },
      "HelpArticleWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              }
            }
          }
        ]
      },
      "HotelWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "meta": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "countryCode": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)"
                  },
                  "folderId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The ID of the folder containing this Entity"
                  },
                  "id": {
                    "minLength": 0,
                    "type": "string",
                    "description": "ID of this Entity"
                  },
                  "labels": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer."
                  },
                  "language": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)"
                  }
                },
                "description": "Contains the metadata about the entity."
              },
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "address": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "city": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "countryCode": {
                    "minLength": 0,
                    "pattern": "^[a-zA-Z]{2}$",
                    "type": "string"
                  },
                  "extraDescription": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`)."
                  },
                  "line1": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "line2": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "postalCode": {
                    "minLength": 0,
                    "maxLength": 10,
                    "type": "string",
                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "region": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "sublocality": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name"
                  }
                },
                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided."
              },
              "accessHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the access hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "additionalHoursText": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)"
              },
              "addressHidden": {
                "type": "boolean",
                "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`."
              },
              "adultPool": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a pool for adults only."
              },
              "airportShuttle": {
                "enum": [
                  "AIRPORT_SHUTTLE_AVAILABLE",
                  "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers a shuttle to/from the airport."
              },
              "airportTransfer": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations."
              },
              "allInclusive": {
                "enum": [
                  "ALL_INCLUSIVE_RATES_AVAILABLE",
                  "ALL_INCLUSIVE_RATES_ONLY",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers all-inclusive rates."
              },
              "alternateNames": {
                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "alternatePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "alternateWebsites": {
                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 255,
                  "format": "uri",
                  "type": "string",
                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                }
              },
              "androidAppUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL where consumers can download the entity's Android app"
              },
              "appleActionLinks": {
                "description": "Use this field to add action links to your Apple Listings.\n\nThe call to action category will be displayed on the action link button.\n\nThe App Store URL should contain a valid link to the landing page of an App in the Apple App Store.\n\nThe Quick Link URL is where a user is taken when an action link is clicked by a user.\n\nThe App Name sub-field is not displayed on Apple Listings and is only used to distinguish the call-to-action type when utilizing action links in Apple posts.\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "category",
                    "quickLinkUrl",
                    "appName"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "appName": {
                      "minLength": 0,
                      "maxLength": 18,
                      "type": "string"
                    },
                    "appStoreUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    },
                    "category": {
                      "enum": [
                        "BOOK_TRAVEL",
                        "CHECK_IN",
                        "FEES_POLICIES",
                        "FLIGHT_STATUS",
                        "TICKETS",
                        "TICKETING",
                        "AMENITIES",
                        "FRONT_DESK",
                        "PARKING",
                        "GIFT_CARD",
                        "WAITLIST",
                        "DELIVERY",
                        "ORDER",
                        "TAKEOUT",
                        "PICKUP",
                        "RESERVE",
                        "MENU",
                        "APPOINTMENT",
                        "PORTFOLIO",
                        "QUOTE",
                        "SERVICES",
                        "STORE_ORDERS",
                        "STORE_SHOP",
                        "STORE_SUPPORT",
                        "SCHEDULE",
                        "SHOWTIMES",
                        "AVAILABILITY",
                        "PRICING",
                        "ACTIVITIES",
                        "BOOK",
                        "BOOK_(HOTEL)",
                        "BOOK_(RIDE)",
                        "BOOK_(TOUR)",
                        "CAREERS",
                        "CHARGE",
                        "COUPONS",
                        "DELIVERY_(RETAIL)",
                        "DONATE",
                        "EVENTS",
                        "ORDER_(RETAIL)",
                        "OTHER_MENU",
                        "PICKUP_(RETAIL)",
                        "RESERVE_(PARKING)",
                        "SHOWS",
                        "SPORTS",
                        "SUPPORT",
                        "TEE_TIME",
                        "GIFT_CARD_(RESTAURANT)"
                      ],
                      "type": "string"
                    },
                    "quickLinkUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    }
                  }
                }
              },
              "appleBusinessDescription": {
                "minLength": 0,
                "maxLength": 500,
                "type": "string",
                "description": "The business description to be sent to Apple"
              },
              "appleBusinessId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with an individual Business Folder in your Apple account"
              },
              "appleCompanyId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with your Apple account. Numerical values only"
              },
              "appleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity''s Apple profile\n\n\nImage must be at least 1600 x 1040 pixels\n\nImage may be no more than 4864 x 3163 pixels\n\nSupported Aspect Ratios:\n* 154 x 100\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "appleDisplayName": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "The name to be displayed on Apple for the entity.\nNOTE: The names of Brands and their respective Locations within an Apple Business Connect Account must match identically.\nCannot Include:\nHTML markup \n\n\nCannot Include:\n* HTML markup"
              },
              "associations": {
                "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "babysittingOffered": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers babysitting."
              },
              "baggageStorage": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out."
              },
              "bar": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has an indoor or outdoor bar onsite."
              },
              "beachAccess": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has access to a beach."
              },
              "beachFrontProperty": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity is physically located next to a beach."
              },
              "bicycles": {
                "enum": [
                  "BICYCLE_RENTALS",
                  "BICYCLE_RENTALS_FOR_FREE",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers bicycles for rent or for free."
              },
              "bios": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Bio Content Lists associated with this entity"
              },
              "boutiqueStores": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible."
              },
              "brands": {
                "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "breakfast": {
                "enum": [
                  "BREAKFAST_AVAILABLE",
                  "BREAKFAST_AVAILABLE_FOR_FREE",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers breakfast."
              },
              "brunchHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the brunch hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "businessCenter": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a business center."
              },
              "calendars": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the events Content Lists (Calendars) associated with this entity"
              },
              "carRental": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers car rental."
              },
              "casino": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a casino on premise or nearby."
              },
              "categories": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "Yext Categories. (Supported for versions > 20240220)\n\nA map of category list external IDs (i.e. \"yext\") to a list of category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nPartial updates are accepted, meaning sending only the \"yext\" property will have no effect on any category list except the \"yext\" category. "
              },
              "categoryIds": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "Yext Category IDs. (Deprecated: For versions > 20240220)\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n"
              },
              "catsAllowed": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates if the entity is cat friendly."
              },
              "checkInTime": {
                "format": "time",
                "type": "string",
                "description": "The check-in time"
              },
              "checkOutTime": {
                "format": "time",
                "type": "string",
                "description": "The check-out time"
              },
              "classificationRating": {
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The 1 to 5 star rating of the entitiy based on its services and facilities."
              },
              "closed": {
                "type": "boolean",
                "description": "Indicates whether the entity is closed"
              },
              "concierge": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers concierge service."
              },
              "convenienceStore": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a convenience store."
              },
              "currencyExchange": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers currency exchange services."
              },
              "customKeywords": {
                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string"
                }
              },
              "description": {
                "minLength": 10,
                "maxLength": 15000,
                "type": "string",
                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup"
              },
              "displayCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you"
              },
              "doctorOnCall": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a doctor on premise or on call."
              },
              "dogsAllowed": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates if the entity is dog friendly."
              },
              "dropoffCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of the drop-off area for the entity, as provided by you"
              },
              "electricChargingStation": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has electric car chargine stations on premise."
              },
              "elevator": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has an elevator."
              },
              "ellipticalMachine": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has an elliptical machine."
              },
              "emails": {
                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "format": "email",
                  "type": "string"
                }
              },
              "facebookAbout": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "A description of the entity to be used in the \"About You\" section on Facebook"
              },
              "facebookCallToAction": {
                "required": [
                  "type"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "NONE",
                      "BOOK_NOW",
                      "CALL_NOW",
                      "CONTACT_US",
                      "SEND_MESSAGE",
                      "USE_APP",
                      "PLAY_GAME",
                      "SHOP_NOW",
                      "SIGN_UP",
                      "WATCH_VIDEO",
                      "SEND_EMAIL",
                      "LEARN_MORE",
                      "PURCHASE_GIFT_CARDS",
                      "ORDER_NOW",
                      "FOLLOW_PAGE"
                    ],
                    "type": "string",
                    "description": "The action the consumer is being prompted to take by the button's text"
                  },
                  "value": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field."
                  }
                },
                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string"
              },
              "facebookCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookDescriptor": {
                "minLength": 3,
                "maxLength": 75,
                "type": "string",
                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup"
              },
              "facebookName": {
                "minLength": 0,
                "type": "string",
                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions."
              },
              "facebookOverrideCity": {
                "minLength": 0,
                "type": "string",
                "description": "The city to be displayed on this entity's Facebook profile"
              },
              "facebookPageUrl": {
                "minLength": 0,
                "type": "string",
                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n- facebook.com/people/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\nThe success response will contain a warning message explaining why the URL wasn't stored in the system."
              },
              "facebookParentPageId": {
                "minLength": 0,
                "maxLength": 65,
                "type": "string",
                "description": "The Facebook Page ID of this entity's brand page if in a brand page location structure"
              },
              "facebookProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookStoreId": {
                "minLength": 0,
                "type": "string",
                "description": "The Store ID used for this entity in a brand page location structure"
              },
              "facebookVanityUrl": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page."
              },
              "facebookWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Facebook in place of the one given in **`websiteUrl`** (if applicable)."
              },
              "fax": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "featuredMessage": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 50,
                    "type": "string",
                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup"
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 255,
                    "format": "uri",
                    "type": "string",
                    "description": "Valid URL linked to the Featured Message text"
                  }
                },
                "description": "Information about the entity's Featured Message"
              },
              "firstPartyReviewPage": {
                "minLength": 0,
                "type": "string",
                "description": "Link to the review-collection page, where consumers can leave first-party reviews"
              },
              "fitnessCenter": {
                "enum": [
                  "FITNESS_CENTER_AVAILABLE",
                  "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a fitness center."
              },
              "floorCount": {
                "multipleOf": 1,
                "minimum": 0,
                "type": "number",
                "description": "The number of floors the entity has from ground floor to top floor."
              },
              "freeWeights": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has free weights."
              },
              "frequentlyAskedQuestions": {
                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "question"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "answer": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    },
                    "question": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    }
                  }
                }
              },
              "frontDesk": {
                "enum": [
                  "FRONT_DESK_AVAILABLE",
                  "FRONT_DESK_AVAILABLE_24_HOURS",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a front desk."
              },
              "fullyVaccinatedStaff": {
                "type": "boolean",
                "description": "Indicates whether the staff is vaccinated against COVID-19."
              },
              "gameRoom": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a game room."
              },
              "geomodifier": {
                "minLength": 0,
                "type": "string",
                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)"
              },
              "giftShop": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a gift shop."
              },
              "golf": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run."
              },
              "googleAttributes": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "The unique IDs of the entity's Google Business Profile keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes."
              },
              "googleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleMessaging": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "smsNumber": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The SMS phone number of the entity's point of contact for messaging/ chat functionality.\nMust be a valid phone number.\nIf the phone number's calling code is for a country other than the one given in the entity's countryCode, the phone number provided must contain the calling code (e.g., +44 in +442038083831). Otherwise, the calling code is optional. "
                  },
                  "whatsappMessagingUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's WhatsApp account.\nMust be a valid URL\n"
                  }
                },
                "description": "Information about Google Messaging, WhatsApp and SMS, for the entity’s point of contact for messaging/chat functionality.\n\nNOTE: Only one, either WhatsApp or SMS is displayed on the Google listing. If both SMS Number and WhatsApp URL are provided only SMS Number will be displayed on the listing."
              },
              "googleMyBusinessLabels": {
                "description": "Google Business Profile Labels help users organize their locations into groups within GBP.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 50,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "googlePlaceId": {
                "minLength": 0,
                "type": "string",
                "description": "The unique identifier of this entity on Google Maps."
              },
              "googleProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 5000 x 5000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Google Business Profile in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field."
              },
              "happyHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the happy hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for the Entity's happy hours on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "holidayHoursConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity"
              },
              "horsebackRiding": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers horseback riding."
              },
              "hotTub": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a hot tub."
              },
              "hours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the hours of operation are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "housekeeping": {
                "enum": [
                  "HOUSEKEEPING_AVAILABLE",
                  "HOUSEKEEPING_AVAILABLE_DAILY",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers housekeeping services."
              },
              "impressum": {
                "minLength": 0,
                "maxLength": 2000,
                "type": "string",
                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media."
              },
              "indoorPoolCount": {
                "multipleOf": 1,
                "minimum": 0,
                "type": "number",
                "description": "A count of the number of indoor pools"
              },
              "instagramHandle": {
                "minLength": 0,
                "maxLength": 30,
                "type": "string",
                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)"
              },
              "iosAppUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL where consumers can download the entity's app to their iPhone or iPad"
              },
              "isoRegionCode": {
                "minLength": 0,
                "type": "string",
                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used."
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "kidFriendly": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates if the entity is kid friendly."
              },
              "kidsClub": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates if the property has a Kids Club."
              },
              "kidsStayFree": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity allows kids to stay free."
              },
              "kitchenHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the kitchen hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "languages": {
                "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "laundry": {
                "enum": [
                  "FULL_SERVICE",
                  "SELF_SERVICE",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers laundry services."
              },
              "lazyRiver": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates if the property has a lazy river"
              },
              "lifeguard": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates if the property has a lifeguard on duty"
              },
              "linkedInUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your LinkedIn account, format should be https://www.linkedin.com/in/yourUsername"
              },
              "localPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits."
              },
              "localShuttle": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers local shuttle services."
              },
              "locationType": {
                "enum": [
                  "LOCATION",
                  "HEALTHCARE_FACILITY",
                  "HEALTHCARE_PROFESSIONAL",
                  "ATM",
                  "RESTAURANT",
                  "HOTEL"
                ],
                "type": "string",
                "description": "Indicates the entity's type, if it is not an event"
              },
              "logo": {
                "required": [
                  "image"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "clickthroughUrl": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  },
                  "description": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "details": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "image": {
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false,
                    "type": "object",
                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                    "properties": {
                      "alternateText": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "url": {
                        "minLength": 0,
                        "format": "uri",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "mainPhone": {
                "minLength": 0,
                "type": "string",
                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "massage": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers massage services."
              },
              "maxAgeOfKidsStayFree": {
                "multipleOf": 1,
                "minimum": 0,
                "type": "number",
                "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee"
              },
              "maxNumberOfKidsStayFree": {
                "multipleOf": 1,
                "minimum": 0,
                "type": "number",
                "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee"
              },
              "meetingRoomCount": {
                "multipleOf": 1,
                "minimum": 0,
                "type": "number",
                "description": "The number of meeting rooms the entity has."
              },
              "menuUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL where consumers can view the entity's menu"
                  }
                },
                "description": "Information about the URL where consumers can view the entity's menu"
              },
              "menus": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Menu Content Lists associated with this entity"
              },
              "mobilePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "mobilityAccessible": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity is mobility/wheelchair accessible"
              },
              "nightclub": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a nightclub."
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "openDate": {
                "format": "date",
                "type": "string",
                "description": "The date that the entity is set to open for the first time.\nMust be formatted in YYYY-MM-DD format.\n\nDate must be on or after 1970-01-01 Date must be before or on 2038-01-01\n"
              },
              "orderUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to place an order at this entity"
                  }
                },
                "description": "Information about the URL used to place orders that will be fulfilled by the entity"
              },
              "outdoorPoolCount": {
                "multipleOf": 1,
                "minimum": 0,
                "type": "number",
                "description": "The number of outdoor pools the entity has."
              },
              "parking": {
                "enum": [
                  "PARKING_AVAILABLE",
                  "PARKING_AVAILABLE_FOR_FREE",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers parking services."
              },
              "paymentOptions": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "AFTERPAY",
                    "ALIPAY",
                    "AMERICANEXPRESS",
                    "ANDROIDPAY",
                    "APPLEPAY",
                    "ATM",
                    "ATMQUICK",
                    "BACS",
                    "BANCONTACT",
                    "BANKDEPOSIT",
                    "BANKPAY",
                    "BGO",
                    "BITCOIN",
                    "Bar",
                    "CARTASI",
                    "CASH",
                    "CCS",
                    "CHECK",
                    "CHEQUESVACANCES",
                    "CONB",
                    "CONTACTLESSPAYME",
                    "CVVV",
                    "DEBITCARD",
                    "DEBITNOTE",
                    "DINERSCLUB",
                    "DIRECTDEBIT",
                    "DISCOVER",
                    "ECKARTE",
                    "ECOCHEQUE",
                    "EKENA",
                    "EMV",
                    "FINANCING",
                    "GIFTCARD",
                    "GOPAY",
                    "HAYAKAKEN",
                    "HEBAG",
                    "IBOD",
                    "ICCARDS",
                    "ICOCA",
                    "ID",
                    "IDEAL",
                    "INCA",
                    "INVOICE",
                    "JCB",
                    "JCoinPay",
                    "JKOPAY",
                    "KITACA",
                    "KLA",
                    "KLARNA",
                    "LINEPAY",
                    "MAESTRO",
                    "MANACA",
                    "MASTERCARD",
                    "MIPAY",
                    "MONIZZE",
                    "MPAY",
                    "Manuelle Lastsch",
                    "Merpay",
                    "NANACO",
                    "NEXI",
                    "NIMOCA",
                    "OREM",
                    "PASMO",
                    "PAYBACKPAY",
                    "PAYBOX",
                    "PAYCONIQ",
                    "PAYPAL",
                    "PAYPAY",
                    "PAYSEC",
                    "PIN",
                    "POSTEPAY",
                    "QRCODE",
                    "QUICPAY",
                    "RAKUTENEDY",
                    "RAKUTENPAY",
                    "SAMSUNGPAY",
                    "SODEXO",
                    "SUGOCA",
                    "SUICA",
                    "SWISH",
                    "TICKETRESTAURANT",
                    "TOICA",
                    "TRAVELERSCHECK",
                    "TSCUBIC",
                    "TWINT",
                    "UNIONPAY",
                    "VEV",
                    "VISA",
                    "VISAELECTRON",
                    "VOB",
                    "VOUCHER",
                    "VPAY",
                    "WAON",
                    "WECHATPAY",
                    "WIRETRANSFER",
                    "Yucho Pay",
                    "ZELLE",
                    "auPay",
                    "dBarai",
                    "Überweisung"
                  ],
                  "type": "string"
                },
                "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n"
              },
              "petsAllowed": {
                "enum": [
                  "PETS_WELCOME",
                  "PETS_WELCOME_FOR_FREE",
                  "NOT_APPLICABLE",
                  "NOT_ALLOWED"
                ],
                "type": "string",
                "description": "Indicates if the entity is pet friendly."
              },
              "photoGallery": {
                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "required": [
                    "image"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                  "properties": {
                    "clickthroughUrl": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string"
                    },
                    "description": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "details": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "image": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                      "properties": {
                        "alternateText": {
                          "minLength": 0,
                          "type": "string"
                        },
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "pickupCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you"
              },
              "pinterestUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your Pinterest account, format should be https://www.pinterest.com/yourUsername"
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "privateBeach": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has access to a private beach."
              },
              "privateCarService": {
                "enum": [
                  "PRIVATE_CAR_SERVICE",
                  "PRIVATE_CAR_SERVICE_FOR_FREE",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers private car services."
              },
              "productLists": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Products & Services Content Lists associated with this entity"
              },
              "questionsAndAnswers": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity"
              },
              "rankTrackingCompetitors": {
                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "name",
                    "website"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string",
                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup"
                    },
                    "website": {
                      "minLength": 0,
                      "maxLength": 255,
                      "format": "uri",
                      "type": "string",
                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                    }
                  }
                }
              },
              "rankTrackingEnabled": {
                "type": "boolean",
                "description": "Indicates whether Rank Tracking is enabled"
              },
              "rankTrackingFrequency": {
                "enum": [
                  "WEEKLY",
                  "MONTHLY",
                  "QUARTERLY"
                ],
                "type": "string",
                "description": "How often we send search queries to track your search performance"
              },
              "rankTrackingQueryTemplates": {
                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "KEYWORD",
                    "KEYWORD_ZIP",
                    "KEYWORD_CITY",
                    "KEYWORD_IN_CITY",
                    "KEYWORD_NEAR_ME",
                    "KEYWORD_CITY_STATE"
                  ],
                  "type": "string"
                }
              },
              "rankTrackingSites": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "GOOGLE_DESKTOP",
                    "GOOGLE_MOBILE",
                    "BING_DESKTOP",
                    "BING_MOBILE",
                    "YAHOO_DESKTOP",
                    "YAHOO_MOBILE"
                  ],
                  "type": "string"
                },
                "description": "The search engines that we will use to track your performance"
              },
              "reservationUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to make reservations at this entity"
                  }
                },
                "description": "Information about the URL consumers can visit to make reservations at this entity"
              },
              "restaurantCount": {
                "multipleOf": 1,
                "minimum": 0,
                "type": "number",
                "description": "The number of restaurants the entity has."
              },
              "reviewGenerationUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL given Review Invitation emails where consumers can leave a review about the entity"
              },
              "reviewResponseConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity"
              },
              "roomCount": {
                "multipleOf": 1,
                "minimum": 0,
                "type": "number",
                "description": "The number of rooms the entity has."
              },
              "roomService": {
                "enum": [
                  "ROOM_SERVICE_AVAILABLE",
                  "ROOM_SERVICE_AVAILABLE_24_HOURS",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers room service."
              },
              "routableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for driving directions to the entity, as provided by you"
              },
              "salon": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a salon."
              },
              "sauna": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a sauna."
              },
              "scuba": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers scuba diving."
              },
              "selfParking": {
                "enum": [
                  "SELF_PARKING_AVAILABLE",
                  "SELF_PARKING_AVAILABLE_FOR_FREE",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers self parking services."
              },
              "serviceArea": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "places": {
                    "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    }
                  }
                },
                "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites."
              },
              "serviceAreaPlaces": {
                "description": "Information about the area that is served by this entity. It is specified as a list of service area names, their associated types and google place ids.\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    },
                    "googlePlaceId": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "POSTAL_CODE",
                        "REGION",
                        "COUNTY",
                        "CITY",
                        "SUBLOCALITY"
                      ],
                      "type": "string"
                    }
                  }
                }
              },
              "services": {
                "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "smokeFreeProperty": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates if the entity is smoke free."
              },
              "snorkeling": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers snorkeling."
              },
              "socialHour": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers a social hour."
              },
              "spa": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a spa."
              },
              "tableService": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a sit-down restaurant."
              },
              "tennis": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has tennis courts."
              },
              "thermalPool": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a thermal pool."
              },
              "tikTokUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your TikTok profile, format should be https://www.tiktok.com/yourUsername"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "tollFreePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "treadmill": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a treadmill."
              },
              "ttyPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "turndownService": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers turndown service."
              },
              "twitterHandle": {
                "minLength": 0,
                "maxLength": 15,
                "type": "string",
                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system."
              },
              "uberLink": {
                "required": [
                  "presentation"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "presentation": {
                    "enum": [
                      "BUTTON",
                      "LINK"
                    ],
                    "type": "string",
                    "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it."
                  },
                  "text": {
                    "minLength": 0,
                    "maxLength": 100,
                    "type": "string",
                    "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`."
                  }
                },
                "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear"
              },
              "uberTripBranding": {
                "required": [
                  "text",
                  "url",
                  "description"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 150,
                    "type": "string",
                    "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**."
                  },
                  "text": {
                    "minLength": 0,
                    "maxLength": 28,
                    "type": "string",
                    "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**."
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**."
                  }
                },
                "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity"
              },
              "valetParking": {
                "enum": [
                  "VALET_PARKING_AVAILABLE",
                  "VALET_PARKING_AVAILABLE_FOR_FREE",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers valet parking services."
              },
              "vendingMachine": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a vending machine."
              },
              "videos": {
                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "video"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "description": {
                      "minLength": 0,
                      "maxLength": 140,
                      "type": "string",
                      "description": "\nCannot Include:\n* HTML markup"
                    },
                    "video": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "wadingPool": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a wading pool."
              },
              "wakeUpCalls": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers wake up call services."
              },
              "walkableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for walking directions to the entity, as provided by you"
              },
              "waterPark": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a water park."
              },
              "waterSkiing": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers water skiing."
              },
              "watercraft": {
                "enum": [
                  "WATERCRAFT_RENTALS",
                  "WATERCRAFT_RENTALS_FOR_FREE",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity offers any kind of watercrafts."
              },
              "waterslide": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a water slide."
              },
              "wavePool": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a wave pool."
              },
              "websiteUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's website"
                  }
                },
                "description": "Information about the website for this entity"
              },
              "weightMachine": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has a weight machine."
              },
              "wheelchairAccessible": {
                "enum": [
                  "YES",
                  "NO",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates if the entity is wheelchair accessible."
              },
              "wifiAvailable": {
                "enum": [
                  "WIFI_AVAILABLE",
                  "WIFI_AVAILABLE_FOR_FREE",
                  "NOT_APPLICABLE"
                ],
                "type": "string",
                "description": "Indicates whether the entity has WiFi available"
              },
              "yearEstablished": {
                "multipleOf": 1,
                "minimum": 1000,
                "maximum": 2028,
                "type": "number",
                "description": "The year the entity was established."
              },
              "yearLastRenovated": {
                "multipleOf": 1,
                "minimum": 1000,
                "maximum": 2028,
                "type": "number",
                "description": "The most recent year the entity was partially or completely renovated."
              },
              "youTubeChannelUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your YouTube channel, format should be https://www.youtube.com/c/yourUsername"
              }
            }
          }
        ]
      },
      "HotelRoomTypeWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "photoGallery": {
                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "required": [
                    "image"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                  "properties": {
                    "clickthroughUrl": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string"
                    },
                    "description": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "details": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "image": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                      "properties": {
                        "alternateText": {
                          "minLength": 0,
                          "type": "string"
                        },
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "videos": {
                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "video"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "description": {
                      "minLength": 0,
                      "maxLength": 140,
                      "type": "string",
                      "description": "\nCannot Include:\n* HTML markup"
                    },
                    "video": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "JobWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "meta": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "countryCode": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)"
                  },
                  "folderId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The ID of the folder containing this Entity"
                  },
                  "id": {
                    "minLength": 0,
                    "type": "string",
                    "description": "ID of this Entity"
                  },
                  "labels": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer."
                  },
                  "language": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)"
                  }
                },
                "description": "Contains the metadata about the entity."
              },
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "applicationUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The application URL"
              },
              "datePosted": {
                "format": "date",
                "type": "string",
                "description": "The date this entity was posted"
              },
              "description": {
                "minLength": 10,
                "maxLength": 15000,
                "type": "string",
                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup"
              },
              "displayCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you"
              },
              "employmentType": {
                "enum": [
                  "FULL_TIME",
                  "PART_TIME",
                  "CONTRACTOR",
                  "TEMPORARY",
                  "INTERN",
                  "VOLUNTEER",
                  "PER_DIEM",
                  "OTHER"
                ],
                "type": "string",
                "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc."
              },
              "hiringOrganization": {
                "minLength": 0,
                "type": "string",
                "description": "The organization that is hiring for the open job"
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "location": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "existingLocation": {
                    "type": "string",
                    "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists"
                  },
                  "externalLocation": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup"
                  }
                },
                "description": "The location where this job opening exists as either an existing location or an external location"
              },
              "logo": {
                "required": [
                  "image"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "clickthroughUrl": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  },
                  "description": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "details": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "image": {
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false,
                    "type": "object",
                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                    "properties": {
                      "alternateText": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "url": {
                        "minLength": 0,
                        "format": "uri",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "validThrough": {
                "format": "date-time",
                "type": "string",
                "description": "The date this entity is valid through."
              },
              "workRemote": {
                "type": "boolean",
                "description": "Indicates whether the job is remote."
              }
            }
          }
        ]
      },
      "LocationWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "meta": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "countryCode": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)"
                  },
                  "folderId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The ID of the folder containing this Entity"
                  },
                  "id": {
                    "minLength": 0,
                    "type": "string",
                    "description": "ID of this Entity"
                  },
                  "labels": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer."
                  },
                  "language": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)"
                  }
                },
                "description": "Contains the metadata about the entity."
              },
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "address": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "city": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "countryCode": {
                    "minLength": 0,
                    "pattern": "^[a-zA-Z]{2}$",
                    "type": "string"
                  },
                  "extraDescription": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`)."
                  },
                  "line1": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "line2": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "postalCode": {
                    "minLength": 0,
                    "maxLength": 10,
                    "type": "string",
                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "region": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "sublocality": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name"
                  }
                },
                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided."
              },
              "accessHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the access hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "additionalHoursText": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)"
              },
              "addressHidden": {
                "type": "boolean",
                "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`."
              },
              "alternateNames": {
                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "alternatePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "alternateWebsites": {
                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 255,
                  "format": "uri",
                  "type": "string",
                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                }
              },
              "androidAppUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL where consumers can download the entity's Android app"
              },
              "appleActionLinks": {
                "description": "Use this field to add action links to your Apple Listings.\n\nThe call to action category will be displayed on the action link button.\n\nThe App Store URL should contain a valid link to the landing page of an App in the Apple App Store.\n\nThe Quick Link URL is where a user is taken when an action link is clicked by a user.\n\nThe App Name sub-field is not displayed on Apple Listings and is only used to distinguish the call-to-action type when utilizing action links in Apple posts.\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "category",
                    "quickLinkUrl",
                    "appName"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "appName": {
                      "minLength": 0,
                      "maxLength": 18,
                      "type": "string"
                    },
                    "appStoreUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    },
                    "category": {
                      "enum": [
                        "BOOK_TRAVEL",
                        "CHECK_IN",
                        "FEES_POLICIES",
                        "FLIGHT_STATUS",
                        "TICKETS",
                        "TICKETING",
                        "AMENITIES",
                        "FRONT_DESK",
                        "PARKING",
                        "GIFT_CARD",
                        "WAITLIST",
                        "DELIVERY",
                        "ORDER",
                        "TAKEOUT",
                        "PICKUP",
                        "RESERVE",
                        "MENU",
                        "APPOINTMENT",
                        "PORTFOLIO",
                        "QUOTE",
                        "SERVICES",
                        "STORE_ORDERS",
                        "STORE_SHOP",
                        "STORE_SUPPORT",
                        "SCHEDULE",
                        "SHOWTIMES",
                        "AVAILABILITY",
                        "PRICING",
                        "ACTIVITIES",
                        "BOOK",
                        "BOOK_(HOTEL)",
                        "BOOK_(RIDE)",
                        "BOOK_(TOUR)",
                        "CAREERS",
                        "CHARGE",
                        "COUPONS",
                        "DELIVERY_(RETAIL)",
                        "DONATE",
                        "EVENTS",
                        "ORDER_(RETAIL)",
                        "OTHER_MENU",
                        "PICKUP_(RETAIL)",
                        "RESERVE_(PARKING)",
                        "SHOWS",
                        "SPORTS",
                        "SUPPORT",
                        "TEE_TIME",
                        "GIFT_CARD_(RESTAURANT)"
                      ],
                      "type": "string"
                    },
                    "quickLinkUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    }
                  }
                }
              },
              "appleBusinessDescription": {
                "minLength": 0,
                "maxLength": 500,
                "type": "string",
                "description": "The business description to be sent to Apple"
              },
              "appleBusinessId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with an individual Business Folder in your Apple account"
              },
              "appleCompanyId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with your Apple account. Numerical values only"
              },
              "appleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity''s Apple profile\n\n\nImage must be at least 1600 x 1040 pixels\n\nImage may be no more than 4864 x 3163 pixels\n\nSupported Aspect Ratios:\n* 154 x 100\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "appleDisplayName": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "The name to be displayed on Apple for the entity.\nNOTE: The names of Brands and their respective Locations within an Apple Business Connect Account must match identically.\nCannot Include:\nHTML markup \n\n\nCannot Include:\n* HTML markup"
              },
              "associations": {
                "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "bios": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Bio Content Lists associated with this entity"
              },
              "brands": {
                "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "brunchHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the brunch hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "calendars": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the events Content Lists (Calendars) associated with this entity"
              },
              "categories": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "Yext Categories. (Supported for versions > 20240220)\n\nA map of category list external IDs (i.e. \"yext\") to a list of category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nPartial updates are accepted, meaning sending only the \"yext\" property will have no effect on any category list except the \"yext\" category. "
              },
              "categoryIds": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "Yext Category IDs. (Deprecated: For versions > 20240220)\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n"
              },
              "closed": {
                "type": "boolean",
                "description": "Indicates whether the entity is closed"
              },
              "covidMessaging": {
                "minLength": 0,
                "maxLength": 15000,
                "type": "string",
                "description": "Information or messaging related to COVID-19."
              },
              "covidTestAppointmentUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "An appointment URL for scheduling a COVID-19 test."
              },
              "covidTestingAppointmentRequired": {
                "type": "boolean",
                "description": "Indicates whether an appointment is required for a COVID-19 test."
              },
              "covidTestingDriveThroughSite": {
                "type": "boolean",
                "description": "Indicates whether location is a drive-through site for COVID-19 tests."
              },
              "covidTestingIsFree": {
                "type": "boolean",
                "description": "Indicates whether location offers free COVID-19 testing."
              },
              "covidTestingPatientRestrictions": {
                "type": "boolean",
                "description": "Indicates whether there are patient restrictions for COVID-19 testing."
              },
              "covidTestingReferralRequired": {
                "type": "boolean",
                "description": "Indicates whether a referral is required for COVID-19 testing."
              },
              "covidTestingSiteInstructions": {
                "minLength": 0,
                "maxLength": 15000,
                "type": "string",
                "description": "Information or instructions for the COVID-19 testing site."
              },
              "covidVaccineAppointmentRequired": {
                "type": "boolean",
                "description": "Indicates whether an appointment is required for a COVID-19 vaccine."
              },
              "covidVaccineDriveThroughSite": {
                "type": "boolean",
                "description": "Indicates whether location is a drive-through site for COVID-19 vaccines."
              },
              "covidVaccineInformationUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "An information URL for more information about COVID-19 vaccines."
              },
              "covidVaccinePatientRestrictions": {
                "type": "boolean",
                "description": "Indicates whether there are patient restrictions for a COVID-19 vaccine."
              },
              "covidVaccineReferralRequired": {
                "type": "boolean",
                "description": "Indicates whether a referral is required for a COVID-19 vaccine."
              },
              "covidVaccineSiteInstructions": {
                "minLength": 0,
                "maxLength": 15000,
                "type": "string",
                "description": "Information or instructions for the COVID-19 vaccination site."
              },
              "covidVaccinesOffered": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "PFIZER",
                    "MODERNA",
                    "JOHNSON_&_JOHNSON"
                  ],
                  "type": "string"
                },
                "description": "Indicates which COVID-19 vaccines the location offers."
              },
              "customKeywords": {
                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string"
                }
              },
              "deliveryHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the delivery hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is delivering on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "description": {
                "minLength": 10,
                "maxLength": 15000,
                "type": "string",
                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup"
              },
              "displayCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you"
              },
              "driveThroughHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the drive-through hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "dropoffCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of the drop-off area for the entity, as provided by you"
              },
              "emails": {
                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "format": "email",
                  "type": "string"
                }
              },
              "facebookAbout": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "A description of the entity to be used in the \"About You\" section on Facebook"
              },
              "facebookCallToAction": {
                "required": [
                  "type"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "NONE",
                      "BOOK_NOW",
                      "CALL_NOW",
                      "CONTACT_US",
                      "SEND_MESSAGE",
                      "USE_APP",
                      "PLAY_GAME",
                      "SHOP_NOW",
                      "SIGN_UP",
                      "WATCH_VIDEO",
                      "SEND_EMAIL",
                      "LEARN_MORE",
                      "PURCHASE_GIFT_CARDS",
                      "ORDER_NOW",
                      "FOLLOW_PAGE"
                    ],
                    "type": "string",
                    "description": "The action the consumer is being prompted to take by the button's text"
                  },
                  "value": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field."
                  }
                },
                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string"
              },
              "facebookCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookDescriptor": {
                "minLength": 3,
                "maxLength": 75,
                "type": "string",
                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup"
              },
              "facebookName": {
                "minLength": 0,
                "type": "string",
                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions."
              },
              "facebookOverrideCity": {
                "minLength": 0,
                "type": "string",
                "description": "The city to be displayed on this entity's Facebook profile"
              },
              "facebookPageUrl": {
                "minLength": 0,
                "type": "string",
                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n- facebook.com/people/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\nThe success response will contain a warning message explaining why the URL wasn't stored in the system."
              },
              "facebookParentPageId": {
                "minLength": 0,
                "maxLength": 65,
                "type": "string",
                "description": "The Facebook Page ID of this entity's brand page if in a brand page location structure"
              },
              "facebookProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookStoreId": {
                "minLength": 0,
                "type": "string",
                "description": "The Store ID used for this entity in a brand page location structure"
              },
              "facebookVanityUrl": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page."
              },
              "facebookWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Facebook in place of the one given in **`websiteUrl`** (if applicable)."
              },
              "fax": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "featuredMessage": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 50,
                    "type": "string",
                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup"
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 255,
                    "format": "uri",
                    "type": "string",
                    "description": "Valid URL linked to the Featured Message text"
                  }
                },
                "description": "Information about the entity's Featured Message"
              },
              "firstPartyReviewPage": {
                "minLength": 0,
                "type": "string",
                "description": "Link to the review-collection page, where consumers can leave first-party reviews"
              },
              "frequentlyAskedQuestions": {
                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "question"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "answer": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    },
                    "question": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    }
                  }
                }
              },
              "fullyVaccinatedStaff": {
                "type": "boolean",
                "description": "Indicates whether the staff is vaccinated against COVID-19."
              },
              "geomodifier": {
                "minLength": 0,
                "type": "string",
                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)"
              },
              "googleAttributes": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "The unique IDs of the entity's Google Business Profile keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes."
              },
              "googleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleMessaging": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "smsNumber": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The SMS phone number of the entity's point of contact for messaging/ chat functionality.\nMust be a valid phone number.\nIf the phone number's calling code is for a country other than the one given in the entity's countryCode, the phone number provided must contain the calling code (e.g., +44 in +442038083831). Otherwise, the calling code is optional. "
                  },
                  "whatsappMessagingUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's WhatsApp account.\nMust be a valid URL\n"
                  }
                },
                "description": "Information about Google Messaging, WhatsApp and SMS, for the entity’s point of contact for messaging/chat functionality.\n\nNOTE: Only one, either WhatsApp or SMS is displayed on the Google listing. If both SMS Number and WhatsApp URL are provided only SMS Number will be displayed on the listing."
              },
              "googleMyBusinessLabels": {
                "description": "Google Business Profile Labels help users organize their locations into groups within GBP.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 50,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "googlePlaceId": {
                "minLength": 0,
                "type": "string",
                "description": "The unique identifier of this entity on Google Maps."
              },
              "googleProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 5000 x 5000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Google Business Profile in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field."
              },
              "happyHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the happy hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for the Entity's happy hours on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "holidayHoursConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity"
              },
              "hours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the hours of operation are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "impressum": {
                "minLength": 0,
                "maxLength": 2000,
                "type": "string",
                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media."
              },
              "instagramHandle": {
                "minLength": 0,
                "maxLength": 30,
                "type": "string",
                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)"
              },
              "iosAppUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL where consumers can download the entity's app to their iPhone or iPad"
              },
              "isoRegionCode": {
                "minLength": 0,
                "type": "string",
                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used."
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "kitchenHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the kitchen hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "languages": {
                "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "linkedInUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your LinkedIn account, format should be https://www.linkedin.com/in/yourUsername"
              },
              "localPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits."
              },
              "locationType": {
                "enum": [
                  "LOCATION",
                  "HEALTHCARE_FACILITY",
                  "HEALTHCARE_PROFESSIONAL",
                  "ATM",
                  "RESTAURANT",
                  "HOTEL"
                ],
                "type": "string",
                "description": "Indicates the entity's type, if it is not an event"
              },
              "logo": {
                "required": [
                  "image"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "clickthroughUrl": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  },
                  "description": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "details": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "image": {
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false,
                    "type": "object",
                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                    "properties": {
                      "alternateText": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "url": {
                        "minLength": 0,
                        "format": "uri",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "mainPhone": {
                "minLength": 0,
                "type": "string",
                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "menuUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL where consumers can view the entity's menu"
                  }
                },
                "description": "Information about the URL where consumers can view the entity's menu"
              },
              "menus": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Menu Content Lists associated with this entity"
              },
              "mobilePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "onlineServiceHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the online service hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for the Entity's online service hours on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "openDate": {
                "format": "date",
                "type": "string",
                "description": "The date that the entity is set to open for the first time.\nMust be formatted in YYYY-MM-DD format.\n\nDate must be on or after 1970-01-01 Date must be before or on 2038-01-01\n"
              },
              "orderUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to place an order at this entity"
                  }
                },
                "description": "Information about the URL used to place orders that will be fulfilled by the entity"
              },
              "paymentOptions": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "AFTERPAY",
                    "ALIPAY",
                    "AMERICANEXPRESS",
                    "ANDROIDPAY",
                    "APPLEPAY",
                    "ATM",
                    "ATMQUICK",
                    "BACS",
                    "BANCONTACT",
                    "BANKDEPOSIT",
                    "BANKPAY",
                    "BGO",
                    "BITCOIN",
                    "Bar",
                    "CARTASI",
                    "CASH",
                    "CCS",
                    "CHECK",
                    "CHEQUESVACANCES",
                    "CONB",
                    "CONTACTLESSPAYME",
                    "CVVV",
                    "DEBITCARD",
                    "DEBITNOTE",
                    "DINERSCLUB",
                    "DIRECTDEBIT",
                    "DISCOVER",
                    "ECKARTE",
                    "ECOCHEQUE",
                    "EKENA",
                    "EMV",
                    "FINANCING",
                    "GIFTCARD",
                    "GOPAY",
                    "HAYAKAKEN",
                    "HEBAG",
                    "IBOD",
                    "ICCARDS",
                    "ICOCA",
                    "ID",
                    "IDEAL",
                    "INCA",
                    "INVOICE",
                    "JCB",
                    "JCoinPay",
                    "JKOPAY",
                    "KITACA",
                    "KLA",
                    "KLARNA",
                    "LINEPAY",
                    "MAESTRO",
                    "MANACA",
                    "MASTERCARD",
                    "MIPAY",
                    "MONIZZE",
                    "MPAY",
                    "Manuelle Lastsch",
                    "Merpay",
                    "NANACO",
                    "NEXI",
                    "NIMOCA",
                    "OREM",
                    "PASMO",
                    "PAYBACKPAY",
                    "PAYBOX",
                    "PAYCONIQ",
                    "PAYPAL",
                    "PAYPAY",
                    "PAYSEC",
                    "PIN",
                    "POSTEPAY",
                    "QRCODE",
                    "QUICPAY",
                    "RAKUTENEDY",
                    "RAKUTENPAY",
                    "SAMSUNGPAY",
                    "SODEXO",
                    "SUGOCA",
                    "SUICA",
                    "SWISH",
                    "TICKETRESTAURANT",
                    "TOICA",
                    "TRAVELERSCHECK",
                    "TSCUBIC",
                    "TWINT",
                    "UNIONPAY",
                    "VEV",
                    "VISA",
                    "VISAELECTRON",
                    "VOB",
                    "VOUCHER",
                    "VPAY",
                    "WAON",
                    "WECHATPAY",
                    "WIRETRANSFER",
                    "Yucho Pay",
                    "ZELLE",
                    "auPay",
                    "dBarai",
                    "Überweisung"
                  ],
                  "type": "string"
                },
                "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n"
              },
              "photoGallery": {
                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "required": [
                    "image"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                  "properties": {
                    "clickthroughUrl": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string"
                    },
                    "description": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "details": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "image": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                      "properties": {
                        "alternateText": {
                          "minLength": 0,
                          "type": "string"
                        },
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "pickupCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you"
              },
              "pickupHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the pickup hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open for pickup on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "pinterestUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your Pinterest account, format should be https://www.pinterest.com/yourUsername"
              },
              "priceRange": {
                "enum": [
                  "UNSPECIFIED",
                  "ONE",
                  "TWO",
                  "THREE",
                  "FOUR"
                ],
                "type": "string",
                "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)"
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "productLists": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Products & Services Content Lists associated with this entity"
              },
              "products": {
                "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "questionsAndAnswers": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity"
              },
              "rankTrackingCompetitors": {
                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "name",
                    "website"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string",
                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup"
                    },
                    "website": {
                      "minLength": 0,
                      "maxLength": 255,
                      "format": "uri",
                      "type": "string",
                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                    }
                  }
                }
              },
              "rankTrackingEnabled": {
                "type": "boolean",
                "description": "Indicates whether Rank Tracking is enabled"
              },
              "rankTrackingFrequency": {
                "enum": [
                  "WEEKLY",
                  "MONTHLY",
                  "QUARTERLY"
                ],
                "type": "string",
                "description": "How often we send search queries to track your search performance"
              },
              "rankTrackingQueryTemplates": {
                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "KEYWORD",
                    "KEYWORD_ZIP",
                    "KEYWORD_CITY",
                    "KEYWORD_IN_CITY",
                    "KEYWORD_NEAR_ME",
                    "KEYWORD_CITY_STATE"
                  ],
                  "type": "string"
                }
              },
              "rankTrackingSites": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "GOOGLE_DESKTOP",
                    "GOOGLE_MOBILE",
                    "BING_DESKTOP",
                    "BING_MOBILE",
                    "YAHOO_DESKTOP",
                    "YAHOO_MOBILE"
                  ],
                  "type": "string"
                },
                "description": "The search engines that we will use to track your performance"
              },
              "reservationUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to make reservations at this entity"
                  }
                },
                "description": "Information about the URL consumers can visit to make reservations at this entity"
              },
              "reviewGenerationUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL given Review Invitation emails where consumers can leave a review about the entity"
              },
              "reviewResponseConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity"
              },
              "routableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for driving directions to the entity, as provided by you"
              },
              "seniorHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the senior hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for the Entity's senior hours on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "serviceArea": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "places": {
                    "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    }
                  }
                },
                "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites."
              },
              "serviceAreaPlaces": {
                "description": "Information about the area that is served by this entity. It is specified as a list of service area names, their associated types and google place ids.\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    },
                    "googlePlaceId": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "POSTAL_CODE",
                        "REGION",
                        "COUNTY",
                        "CITY",
                        "SUBLOCALITY"
                      ],
                      "type": "string"
                    }
                  }
                }
              },
              "services": {
                "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "specialities": {
                "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "takeoutHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the takeout hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open for takeout on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "tikTokUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your TikTok profile, format should be https://www.tiktok.com/yourUsername"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "tollFreePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "ttyPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "twitterHandle": {
                "minLength": 0,
                "maxLength": 15,
                "type": "string",
                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system."
              },
              "uberLink": {
                "required": [
                  "presentation"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "presentation": {
                    "enum": [
                      "BUTTON",
                      "LINK"
                    ],
                    "type": "string",
                    "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it."
                  },
                  "text": {
                    "minLength": 0,
                    "maxLength": 100,
                    "type": "string",
                    "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`."
                  }
                },
                "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear"
              },
              "uberTripBranding": {
                "required": [
                  "text",
                  "url",
                  "description"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 150,
                    "type": "string",
                    "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**."
                  },
                  "text": {
                    "minLength": 0,
                    "maxLength": 28,
                    "type": "string",
                    "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**."
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**."
                  }
                },
                "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity"
              },
              "videos": {
                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "video"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "description": {
                      "minLength": 0,
                      "maxLength": 140,
                      "type": "string",
                      "description": "\nCannot Include:\n* HTML markup"
                    },
                    "video": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "walkableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for walking directions to the entity, as provided by you"
              },
              "websiteUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's website"
                  }
                },
                "description": "Information about the website for this entity"
              },
              "yearEstablished": {
                "multipleOf": 1,
                "minimum": 1000,
                "maximum": 2028,
                "type": "number",
                "description": "The year the entity was established."
              },
              "youTubeChannelUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your YouTube channel, format should be https://www.youtube.com/c/yourUsername"
              }
            }
          }
        ]
      },
      "OrganizationWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "alternateNames": {
                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "alternateWebsites": {
                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 255,
                  "format": "uri",
                  "type": "string",
                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                }
              },
              "bios": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Bio Content Lists associated with this entity"
              },
              "customKeywords": {
                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string"
                }
              },
              "description": {
                "minLength": 10,
                "maxLength": 15000,
                "type": "string",
                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup"
              },
              "emails": {
                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "format": "email",
                  "type": "string"
                }
              },
              "facebookPageUrl": {
                "minLength": 0,
                "type": "string",
                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n- facebook.com/people/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\nThe success response will contain a warning message explaining why the URL wasn't stored in the system."
              },
              "instagramHandle": {
                "minLength": 0,
                "maxLength": 30,
                "type": "string",
                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)"
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "linkedInUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your LinkedIn account, format should be https://www.linkedin.com/in/yourUsername"
              },
              "logo": {
                "required": [
                  "image"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "clickthroughUrl": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  },
                  "description": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "details": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "image": {
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false,
                    "type": "object",
                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                    "properties": {
                      "alternateText": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "url": {
                        "minLength": 0,
                        "format": "uri",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "mainPhone": {
                "minLength": 0,
                "type": "string",
                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "operatingCountries": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "AD",
                    "AE",
                    "AF",
                    "AG",
                    "AI",
                    "AL",
                    "AM",
                    "AO",
                    "AR",
                    "AS",
                    "AT",
                    "AU",
                    "AW",
                    "AX",
                    "AZ",
                    "BA",
                    "BB",
                    "BD",
                    "BE",
                    "BF",
                    "BG",
                    "BH",
                    "BI",
                    "BJ",
                    "BL",
                    "BM",
                    "BN",
                    "BO",
                    "BQ",
                    "BR",
                    "BS",
                    "BT",
                    "BW",
                    "BY",
                    "BZ",
                    "CA",
                    "CD",
                    "CF",
                    "CG",
                    "CH",
                    "CI",
                    "CK",
                    "CL",
                    "CM",
                    "CN",
                    "CO",
                    "CR",
                    "CU",
                    "CV",
                    "CW",
                    "CY",
                    "CZ",
                    "DE",
                    "DJ",
                    "DK",
                    "DM",
                    "DO",
                    "DZ",
                    "EC",
                    "EE",
                    "EG",
                    "EH",
                    "ER",
                    "ES",
                    "ET",
                    "FI",
                    "FJ",
                    "FK",
                    "FM",
                    "FO",
                    "FR",
                    "GA",
                    "GB",
                    "GD",
                    "GE",
                    "GF",
                    "GG",
                    "GH",
                    "GI",
                    "GL",
                    "GM",
                    "GN",
                    "GP",
                    "GQ",
                    "GR",
                    "GT",
                    "GU",
                    "GW",
                    "GY",
                    "HK",
                    "HN",
                    "HR",
                    "HT",
                    "HU",
                    "ID",
                    "IE",
                    "IL",
                    "IM",
                    "IN",
                    "IQ",
                    "IR",
                    "IS",
                    "IT",
                    "JE",
                    "JM",
                    "JO",
                    "JP",
                    "KE",
                    "KG",
                    "KH",
                    "KI",
                    "KM",
                    "KN",
                    "KR",
                    "KW",
                    "KY",
                    "KZ",
                    "LA",
                    "LB",
                    "LC",
                    "LI",
                    "LK",
                    "LR",
                    "LS",
                    "LT",
                    "LU",
                    "LV",
                    "LY",
                    "MA",
                    "MC",
                    "MD",
                    "ME",
                    "MF",
                    "MG",
                    "MH",
                    "MK",
                    "ML",
                    "MM",
                    "MN",
                    "MO",
                    "MP",
                    "MQ",
                    "MR",
                    "MS",
                    "MT",
                    "MU",
                    "MV",
                    "MW",
                    "MX",
                    "MY",
                    "MZ",
                    "NA",
                    "NC",
                    "NE",
                    "NG",
                    "NI",
                    "NL",
                    "NO",
                    "NP",
                    "NR",
                    "NZ",
                    "OM",
                    "PA",
                    "PE",
                    "PF",
                    "PG",
                    "PH",
                    "PK",
                    "PL",
                    "PM",
                    "PR",
                    "PS",
                    "PT",
                    "PW",
                    "PY",
                    "QA",
                    "RE",
                    "RO",
                    "RS",
                    "RU",
                    "RW",
                    "SA",
                    "SB",
                    "SC",
                    "SD",
                    "SE",
                    "SG",
                    "SH",
                    "SI",
                    "SJ",
                    "SK",
                    "SL",
                    "SM",
                    "SN",
                    "SO",
                    "SR",
                    "SS",
                    "ST",
                    "SV",
                    "SX",
                    "SY",
                    "SZ",
                    "TC",
                    "TD",
                    "TG",
                    "TH",
                    "TJ",
                    "TL",
                    "TM",
                    "TN",
                    "TO",
                    "TR",
                    "TT",
                    "TV",
                    "TW",
                    "TZ",
                    "UA",
                    "UG",
                    "US",
                    "UY",
                    "UZ",
                    "VA",
                    "VC",
                    "VE",
                    "VG",
                    "VI",
                    "VN",
                    "VU",
                    "WF",
                    "WS",
                    "XK",
                    "YE",
                    "YT",
                    "ZA",
                    "ZM",
                    "ZW"
                  ],
                  "type": "string"
                },
                "description": "The list of countries the business operates in"
              },
              "photoGallery": {
                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "required": [
                    "image"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                  "properties": {
                    "clickthroughUrl": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string"
                    },
                    "description": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "details": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "image": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                      "properties": {
                        "alternateText": {
                          "minLength": 0,
                          "type": "string"
                        },
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "pinterestUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your Pinterest account, format should be https://www.pinterest.com/yourUsername"
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "questionsAndAnswers": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity"
              },
              "rankTrackingCompetitors": {
                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "name",
                    "website"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string",
                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup"
                    },
                    "website": {
                      "minLength": 0,
                      "maxLength": 255,
                      "format": "uri",
                      "type": "string",
                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                    }
                  }
                }
              },
              "rankTrackingEnabled": {
                "type": "boolean",
                "description": "Indicates whether Rank Tracking is enabled"
              },
              "rankTrackingFrequency": {
                "enum": [
                  "WEEKLY",
                  "MONTHLY",
                  "QUARTERLY"
                ],
                "type": "string",
                "description": "How often we send search queries to track your search performance"
              },
              "rankTrackingQueryTemplates": {
                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "KEYWORD",
                    "KEYWORD_ZIP",
                    "KEYWORD_CITY",
                    "KEYWORD_IN_CITY",
                    "KEYWORD_NEAR_ME",
                    "KEYWORD_CITY_STATE"
                  ],
                  "type": "string"
                }
              },
              "rankTrackingSites": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "GOOGLE_DESKTOP",
                    "GOOGLE_MOBILE",
                    "BING_DESKTOP",
                    "BING_MOBILE",
                    "YAHOO_DESKTOP",
                    "YAHOO_MOBILE"
                  ],
                  "type": "string"
                },
                "description": "The search engines that we will use to track your performance"
              },
              "tikTokUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your TikTok profile, format should be https://www.tiktok.com/yourUsername"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "twitterHandle": {
                "minLength": 0,
                "maxLength": 15,
                "type": "string",
                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system."
              },
              "videos": {
                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "video"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "description": {
                      "minLength": 0,
                      "maxLength": 140,
                      "type": "string",
                      "description": "\nCannot Include:\n* HTML markup"
                    },
                    "video": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "websiteUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's website"
                  }
                },
                "description": "Information about the website for this entity"
              },
              "youTubeChannelUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your YouTube channel, format should be https://www.youtube.com/c/yourUsername"
              }
            }
          }
        ]
      },
      "ProductWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "photoGallery": {
                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "required": [
                    "image"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                  "properties": {
                    "clickthroughUrl": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string"
                    },
                    "description": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "details": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "image": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                      "properties": {
                        "alternateText": {
                          "minLength": 0,
                          "type": "string"
                        },
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "videos": {
                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "video"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "description": {
                      "minLength": 0,
                      "maxLength": 140,
                      "type": "string",
                      "description": "\nCannot Include:\n* HTML markup"
                    },
                    "video": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "RestaurantWrite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityWrite"
          },
          {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "meta": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "countryCode": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)"
                  },
                  "folderId": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The ID of the folder containing this Entity"
                  },
                  "id": {
                    "minLength": 0,
                    "type": "string",
                    "description": "ID of this Entity"
                  },
                  "labels": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer."
                  },
                  "language": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)"
                  }
                },
                "description": "Contains the metadata about the entity."
              },
              "name": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "\n\n\nCannot Include:\n* HTML markup"
              },
              "address": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "city": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "countryCode": {
                    "minLength": 0,
                    "pattern": "^[a-zA-Z]{2}$",
                    "type": "string"
                  },
                  "extraDescription": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`)."
                  },
                  "line1": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "line2": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "\nCannot Include:\n* a URL or domain name"
                  },
                  "postalCode": {
                    "minLength": 0,
                    "maxLength": 10,
                    "type": "string",
                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "region": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name"
                  },
                  "sublocality": {
                    "minLength": 0,
                    "maxLength": 255,
                    "type": "string",
                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name"
                  }
                },
                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided."
              },
              "acceptsReservations": {
                "type": "boolean",
                "description": "Indicates whether the entity accepts reservations."
              },
              "accessHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the access hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the access hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "additionalHoursText": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)"
              },
              "addressHidden": {
                "type": "boolean",
                "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`."
              },
              "alternateNames": {
                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "alternatePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "alternateWebsites": {
                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 255,
                  "format": "uri",
                  "type": "string",
                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                }
              },
              "androidAppUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL where consumers can download the entity's Android app"
              },
              "appleActionLinks": {
                "description": "Use this field to add action links to your Apple Listings.\n\nThe call to action category will be displayed on the action link button.\n\nThe App Store URL should contain a valid link to the landing page of an App in the Apple App Store.\n\nThe Quick Link URL is where a user is taken when an action link is clicked by a user.\n\nThe App Name sub-field is not displayed on Apple Listings and is only used to distinguish the call-to-action type when utilizing action links in Apple posts.\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "category",
                    "quickLinkUrl",
                    "appName"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "appName": {
                      "minLength": 0,
                      "maxLength": 18,
                      "type": "string"
                    },
                    "appStoreUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    },
                    "category": {
                      "enum": [
                        "BOOK_TRAVEL",
                        "CHECK_IN",
                        "FEES_POLICIES",
                        "FLIGHT_STATUS",
                        "TICKETS",
                        "TICKETING",
                        "AMENITIES",
                        "FRONT_DESK",
                        "PARKING",
                        "GIFT_CARD",
                        "WAITLIST",
                        "DELIVERY",
                        "ORDER",
                        "TAKEOUT",
                        "PICKUP",
                        "RESERVE",
                        "MENU",
                        "APPOINTMENT",
                        "PORTFOLIO",
                        "QUOTE",
                        "SERVICES",
                        "STORE_ORDERS",
                        "STORE_SHOP",
                        "STORE_SUPPORT",
                        "SCHEDULE",
                        "SHOWTIMES",
                        "AVAILABILITY",
                        "PRICING",
                        "ACTIVITIES",
                        "BOOK",
                        "BOOK_(HOTEL)",
                        "BOOK_(RIDE)",
                        "BOOK_(TOUR)",
                        "CAREERS",
                        "CHARGE",
                        "COUPONS",
                        "DELIVERY_(RETAIL)",
                        "DONATE",
                        "EVENTS",
                        "ORDER_(RETAIL)",
                        "OTHER_MENU",
                        "PICKUP_(RETAIL)",
                        "RESERVE_(PARKING)",
                        "SHOWS",
                        "SPORTS",
                        "SUPPORT",
                        "TEE_TIME",
                        "GIFT_CARD_(RESTAURANT)"
                      ],
                      "type": "string"
                    },
                    "quickLinkUrl": {
                      "minLength": 0,
                      "maxLength": 2000,
                      "format": "uri",
                      "type": "string"
                    }
                  }
                }
              },
              "appleBusinessDescription": {
                "minLength": 0,
                "maxLength": 500,
                "type": "string",
                "description": "The business description to be sent to Apple"
              },
              "appleBusinessId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with an individual Business Folder in your Apple account"
              },
              "appleCompanyId": {
                "minLength": 0,
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "The ID associated with your Apple account. Numerical values only"
              },
              "appleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity''s Apple profile\n\n\nImage must be at least 1600 x 1040 pixels\n\nImage may be no more than 4864 x 3163 pixels\n\nSupported Aspect Ratios:\n* 154 x 100\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "appleDisplayName": {
                "minLength": 0,
                "maxLength": 5000,
                "type": "string",
                "description": "The name to be displayed on Apple for the entity.\nNOTE: The names of Brands and their respective Locations within an Apple Business Connect Account must match identically.\nCannot Include:\nHTML markup \n\n\nCannot Include:\n* HTML markup"
              },
              "associations": {
                "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "attire": {
                "enum": [
                  "UNSPECIFIED",
                  "DRESSY",
                  "CASUAL",
                  "FORMAL"
                ],
                "type": "string",
                "description": "The formality of clothing typically worn at this restaurant"
              },
              "bios": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Bio Content Lists associated with this entity"
              },
              "brands": {
                "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "brunchHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the brunch hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the brunch hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "calendars": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the events Content Lists (Calendars) associated with this entity"
              },
              "categories": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "Yext Categories. (Supported for versions > 20240220)\n\nA map of category list external IDs (i.e. \"yext\") to a list of category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nPartial updates are accepted, meaning sending only the \"yext\" property will have no effect on any category list except the \"yext\" category. "
              },
              "categoryIds": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "Yext Category IDs. (Deprecated: For versions > 20240220)\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n"
              },
              "closed": {
                "type": "boolean",
                "description": "Indicates whether the entity is closed"
              },
              "customKeywords": {
                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string"
                }
              },
              "deliveryHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the delivery hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is delivering on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the delivery hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "description": {
                "minLength": 10,
                "maxLength": 15000,
                "type": "string",
                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup"
              },
              "displayCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you"
              },
              "driveThroughHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the drive-through hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the drive-through hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "dropoffCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of the drop-off area for the entity, as provided by you"
              },
              "emails": {
                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "format": "email",
                  "type": "string"
                }
              },
              "facebookAbout": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "A description of the entity to be used in the \"About You\" section on Facebook"
              },
              "facebookCallToAction": {
                "required": [
                  "type"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "type": {
                    "enum": [
                      "NONE",
                      "BOOK_NOW",
                      "CALL_NOW",
                      "CONTACT_US",
                      "SEND_MESSAGE",
                      "USE_APP",
                      "PLAY_GAME",
                      "SHOP_NOW",
                      "SIGN_UP",
                      "WATCH_VIDEO",
                      "SEND_EMAIL",
                      "LEARN_MORE",
                      "PURCHASE_GIFT_CARDS",
                      "ORDER_NOW",
                      "FOLLOW_PAGE"
                    ],
                    "type": "string",
                    "description": "The action the consumer is being prompted to take by the button's text"
                  },
                  "value": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field."
                  }
                },
                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string"
              },
              "facebookCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookDescriptor": {
                "minLength": 3,
                "maxLength": 75,
                "type": "string",
                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup"
              },
              "facebookName": {
                "minLength": 0,
                "type": "string",
                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions."
              },
              "facebookOverrideCity": {
                "minLength": 0,
                "type": "string",
                "description": "The city to be displayed on this entity's Facebook profile"
              },
              "facebookPageUrl": {
                "minLength": 0,
                "type": "string",
                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n- facebook.com/people/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\nThe success response will contain a warning message explaining why the URL wasn't stored in the system."
              },
              "facebookParentPageId": {
                "minLength": 0,
                "maxLength": 65,
                "type": "string",
                "description": "The Facebook Page ID of this entity's brand page if in a brand page location structure"
              },
              "facebookProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "facebookStoreId": {
                "minLength": 0,
                "type": "string",
                "description": "The Store ID used for this entity in a brand page location structure"
              },
              "facebookVanityUrl": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page."
              },
              "facebookWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Facebook in place of the one given in **`websiteUrl`** (if applicable)."
              },
              "fax": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "featuredMessage": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 50,
                    "type": "string",
                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup"
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 255,
                    "format": "uri",
                    "type": "string",
                    "description": "Valid URL linked to the Featured Message text"
                  }
                },
                "description": "Information about the entity's Featured Message"
              },
              "firstPartyReviewPage": {
                "minLength": 0,
                "type": "string",
                "description": "Link to the review-collection page, where consumers can leave first-party reviews"
              },
              "frequentlyAskedQuestions": {
                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "question"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "answer": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    },
                    "question": {
                      "minLength": 1,
                      "maxLength": 4096,
                      "type": "string"
                    }
                  }
                }
              },
              "fullyVaccinatedStaff": {
                "type": "boolean",
                "description": "Indicates whether the staff is vaccinated against COVID-19."
              },
              "geomodifier": {
                "minLength": 0,
                "type": "string",
                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)"
              },
              "googleAttributes": {
                "additionalProperties": false,
                "type": "object",
                "properties": {},
                "description": "The unique IDs of the entity's Google Business Profile keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes."
              },
              "googleCoverPhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleMessaging": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "smsNumber": {
                    "minLength": 0,
                    "type": "string",
                    "description": "The SMS phone number of the entity's point of contact for messaging/ chat functionality.\nMust be a valid phone number.\nIf the phone number's calling code is for a country other than the one given in the entity's countryCode, the phone number provided must contain the calling code (e.g., +44 in +442038083831). Otherwise, the calling code is optional. "
                  },
                  "whatsappMessagingUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's WhatsApp account.\nMust be a valid URL\n"
                  }
                },
                "description": "Information about Google Messaging, WhatsApp and SMS, for the entity’s point of contact for messaging/chat functionality.\n\nNOTE: Only one, either WhatsApp or SMS is displayed on the Google listing. If both SMS Number and WhatsApp URL are provided only SMS Number will be displayed on the listing."
              },
              "googleMyBusinessLabels": {
                "description": "Google Business Profile Labels help users organize their locations into groups within GBP.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 50,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "googlePlaceId": {
                "minLength": 0,
                "type": "string",
                "description": "The unique identifier of this entity on Google Maps."
              },
              "googleProfilePhoto": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 5000 x 5000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  }
                }
              },
              "googleWebsiteOverride": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL you would like to submit to Google Business Profile in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field."
              },
              "happyHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the happy hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for the Entity's happy hours on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the happy hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "holidayHoursConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity"
              },
              "hours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the hours of operation are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "impressum": {
                "minLength": 0,
                "maxLength": 2000,
                "type": "string",
                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media."
              },
              "instagramHandle": {
                "minLength": 0,
                "maxLength": 30,
                "type": "string",
                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)"
              },
              "iosAppUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL where consumers can download the entity's app to their iPhone or iPad"
              },
              "isoRegionCode": {
                "minLength": 0,
                "type": "string",
                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used."
              },
              "keywords": {
                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "kitchenHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the kitchen hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the kitchen hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string"
                },
                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API."
              },
              "landingPageUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL of this entity's Landing Page that was created with Yext Pages"
              },
              "languages": {
                "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "linkedInUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your LinkedIn account, format should be https://www.linkedin.com/in/yourUsername"
              },
              "localPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits."
              },
              "locationType": {
                "enum": [
                  "LOCATION",
                  "HEALTHCARE_FACILITY",
                  "HEALTHCARE_PROFESSIONAL",
                  "ATM",
                  "RESTAURANT",
                  "HOTEL"
                ],
                "type": "string",
                "description": "Indicates the entity's type, if it is not an event"
              },
              "logo": {
                "required": [
                  "image"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                "properties": {
                  "clickthroughUrl": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string"
                  },
                  "description": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "details": {
                    "minLength": 0,
                    "type": "string"
                  },
                  "image": {
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false,
                    "type": "object",
                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                    "properties": {
                      "alternateText": {
                        "minLength": 0,
                        "type": "string"
                      },
                      "url": {
                        "minLength": 0,
                        "format": "uri",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "mainPhone": {
                "minLength": 0,
                "type": "string",
                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "mealsServed": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "BREAKFAST",
                    "LUNCH",
                    "BRUNCH",
                    "DINNER",
                    "HAPPY_HOUR",
                    "LATE_NIGHT"
                  ],
                  "type": "string"
                },
                "description": "Types of meals served at this restaurant"
              },
              "menuUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL where consumers can view the entity's menu"
                  }
                },
                "description": "Information about the URL where consumers can view the entity's menu"
              },
              "menus": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Menu Content Lists associated with this entity"
              },
              "mobilePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "nudgeEnabled": {
                "type": "boolean",
                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity"
              },
              "onlineServiceHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the online service hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for the Entity's online service hours on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the online service hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "openDate": {
                "format": "date",
                "type": "string",
                "description": "The date that the entity is set to open for the first time.\nMust be formatted in YYYY-MM-DD format.\n\nDate must be on or after 1970-01-01 Date must be before or on 2038-01-01\n"
              },
              "orderUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to place an order at this entity"
                  }
                },
                "description": "Information about the URL used to place orders that will be fulfilled by the entity"
              },
              "paymentOptions": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "AFTERPAY",
                    "ALIPAY",
                    "AMERICANEXPRESS",
                    "ANDROIDPAY",
                    "APPLEPAY",
                    "ATM",
                    "ATMQUICK",
                    "BACS",
                    "BANCONTACT",
                    "BANKDEPOSIT",
                    "BANKPAY",
                    "BGO",
                    "BITCOIN",
                    "Bar",
                    "CARTASI",
                    "CASH",
                    "CCS",
                    "CHECK",
                    "CHEQUESVACANCES",
                    "CONB",
                    "CONTACTLESSPAYME",
                    "CVVV",
                    "DEBITCARD",
                    "DEBITNOTE",
                    "DINERSCLUB",
                    "DIRECTDEBIT",
                    "DISCOVER",
                    "ECKARTE",
                    "ECOCHEQUE",
                    "EKENA",
                    "EMV",
                    "FINANCING",
                    "GIFTCARD",
                    "GOPAY",
                    "HAYAKAKEN",
                    "HEBAG",
                    "IBOD",
                    "ICCARDS",
                    "ICOCA",
                    "ID",
                    "IDEAL",
                    "INCA",
                    "INVOICE",
                    "JCB",
                    "JCoinPay",
                    "JKOPAY",
                    "KITACA",
                    "KLA",
                    "KLARNA",
                    "LINEPAY",
                    "MAESTRO",
                    "MANACA",
                    "MASTERCARD",
                    "MIPAY",
                    "MONIZZE",
                    "MPAY",
                    "Manuelle Lastsch",
                    "Merpay",
                    "NANACO",
                    "NEXI",
                    "NIMOCA",
                    "OREM",
                    "PASMO",
                    "PAYBACKPAY",
                    "PAYBOX",
                    "PAYCONIQ",
                    "PAYPAL",
                    "PAYPAY",
                    "PAYSEC",
                    "PIN",
                    "POSTEPAY",
                    "QRCODE",
                    "QUICPAY",
                    "RAKUTENEDY",
                    "RAKUTENPAY",
                    "SAMSUNGPAY",
                    "SODEXO",
                    "SUGOCA",
                    "SUICA",
                    "SWISH",
                    "TICKETRESTAURANT",
                    "TOICA",
                    "TRAVELERSCHECK",
                    "TSCUBIC",
                    "TWINT",
                    "UNIONPAY",
                    "VEV",
                    "VISA",
                    "VISAELECTRON",
                    "VOB",
                    "VOUCHER",
                    "VPAY",
                    "WAON",
                    "WECHATPAY",
                    "WIRETRANSFER",
                    "Yucho Pay",
                    "ZELLE",
                    "auPay",
                    "dBarai",
                    "Überweisung"
                  ],
                  "type": "string"
                },
                "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n"
              },
              "photoGallery": {
                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>",
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "required": [
                    "image"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                  "properties": {
                    "clickthroughUrl": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string"
                    },
                    "description": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "details": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "image": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n",
                      "properties": {
                        "alternateText": {
                          "minLength": 0,
                          "type": "string"
                        },
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "pickupCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you"
              },
              "pickupHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the pickup hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open for pickup on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the pickup hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "pinterestUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your Pinterest account, format should be https://www.pinterest.com/yourUsername"
              },
              "priceRange": {
                "enum": [
                  "UNSPECIFIED",
                  "ONE",
                  "TWO",
                  "THREE",
                  "FOUR"
                ],
                "type": "string",
                "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)"
              },
              "primaryConversationContact": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity"
              },
              "productLists": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ids": {
                    "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "type": "string"
                    }
                  },
                  "label": {
                    "minLength": 0,
                    "maxLength": 30,
                    "type": "string",
                    "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings."
                  }
                },
                "description": "Information about the Products & Services Content Lists associated with this entity"
              },
              "questionsAndAnswers": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity"
              },
              "rankTrackingCompetitors": {
                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "name",
                    "website"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string",
                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup"
                    },
                    "website": {
                      "minLength": 0,
                      "maxLength": 255,
                      "format": "uri",
                      "type": "string",
                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc."
                    }
                  }
                }
              },
              "rankTrackingEnabled": {
                "type": "boolean",
                "description": "Indicates whether Rank Tracking is enabled"
              },
              "rankTrackingFrequency": {
                "enum": [
                  "WEEKLY",
                  "MONTHLY",
                  "QUARTERLY"
                ],
                "type": "string",
                "description": "How often we send search queries to track your search performance"
              },
              "rankTrackingQueryTemplates": {
                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "KEYWORD",
                    "KEYWORD_ZIP",
                    "KEYWORD_CITY",
                    "KEYWORD_IN_CITY",
                    "KEYWORD_NEAR_ME",
                    "KEYWORD_CITY_STATE"
                  ],
                  "type": "string"
                }
              },
              "rankTrackingSites": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "enum": [
                    "GOOGLE_DESKTOP",
                    "GOOGLE_MOBILE",
                    "BING_DESKTOP",
                    "BING_MOBILE",
                    "YAHOO_DESKTOP",
                    "YAHOO_MOBILE"
                  ],
                  "type": "string"
                },
                "description": "The search engines that we will use to track your performance"
              },
              "reservationUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL used to make reservations at this entity"
                  }
                },
                "description": "Information about the URL consumers can visit to make reservations at this entity"
              },
              "reviewGenerationUrl": {
                "minLength": 0,
                "type": "string",
                "description": "The URL given Review Invitation emails where consumers can leave a review about the entity"
              },
              "reviewResponseConversationEnabled": {
                "type": "boolean",
                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity"
              },
              "routableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for driving directions to the entity, as provided by you"
              },
              "seniorHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the senior hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for the Entity's senior hours on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the senior hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "serviceArea": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "places": {
                    "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    }
                  }
                },
                "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites."
              },
              "serviceAreaPlaces": {
                "description": "Information about the area that is served by this entity. It is specified as a list of service area names, their associated types and google place ids.\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "name": {
                      "minLength": 0,
                      "maxLength": 100,
                      "type": "string"
                    },
                    "googlePlaceId": {
                      "minLength": 0,
                      "type": "string"
                    },
                    "type": {
                      "enum": [
                        "POSTAL_CODE",
                        "REGION",
                        "COUNTY",
                        "CITY",
                        "SUBLOCALITY"
                      ],
                      "type": "string"
                    }
                  }
                }
              },
              "services": {
                "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "specialities": {
                "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup"
                }
              },
              "takeoutHours": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "friday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Friday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "holidayHours": {
                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n",
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                      "required": [
                        "date"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "date": {
                          "format": "date",
                          "type": "string",
                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                        },
                        "isClosed": {
                          "type": "boolean",
                          "description": "Indicates if the takeout hours are \"closed\" on on the given date."
                        },
                        "isRegularHours": {
                          "type": "boolean",
                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                        },
                        "openIntervals": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "start",
                              "end"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "end": {
                                "format": "time",
                                "type": "string",
                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              },
                              "start": {
                                "format": "time",
                                "type": "string",
                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                              }
                            }
                          },
                          "description": "Contains the time intervals for which the Entity is open for takeout on the specified date."
                        }
                      }
                    }
                  },
                  "monday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Monday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "reopenDate": {
                    "format": "date",
                    "type": "string",
                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01"
                  },
                  "saturday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Saturday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "sunday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Sunday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "thursday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Thursday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "tuesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Tuesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  },
                  "wednesday": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "isClosed": {
                        "type": "boolean",
                        "description": "Indicates if the takeout hours are \"closed\" on Wednesday."
                      },
                      "openIntervals": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                          "required": [
                            "start",
                            "end"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "time",
                              "type": "string",
                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            },
                            "start": {
                              "format": "time",
                              "type": "string",
                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`)."
                            }
                          }
                        },
                        "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update."
                      }
                    }
                  }
                },
                "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day."
              },
              "tikTokUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your TikTok profile, format should be https://www.tiktok.com/yourUsername"
              },
              "timezone": {
                "minLength": 0,
                "type": "string",
                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`"
              },
              "tollFreePhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "ttyPhone": {
                "minLength": 0,
                "type": "string",
                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional."
              },
              "twitterHandle": {
                "minLength": 0,
                "maxLength": 15,
                "type": "string",
                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system."
              },
              "uberLink": {
                "required": [
                  "presentation"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "presentation": {
                    "enum": [
                      "BUTTON",
                      "LINK"
                    ],
                    "type": "string",
                    "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it."
                  },
                  "text": {
                    "minLength": 0,
                    "maxLength": 100,
                    "type": "string",
                    "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`."
                  }
                },
                "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear"
              },
              "uberTripBranding": {
                "required": [
                  "text",
                  "url",
                  "description"
                ],
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "description": {
                    "minLength": 0,
                    "maxLength": 150,
                    "type": "string",
                    "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**."
                  },
                  "text": {
                    "minLength": 0,
                    "maxLength": 28,
                    "type": "string",
                    "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**."
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**."
                  }
                },
                "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity"
              },
              "videos": {
                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "video"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "description": {
                      "minLength": 0,
                      "maxLength": 140,
                      "type": "string",
                      "description": "\nCannot Include:\n* HTML markup"
                    },
                    "video": {
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "url": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "walkableCoordinate": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "latitude": {
                    "minimum": -90,
                    "maximum": 90,
                    "type": "number"
                  },
                  "longitude": {
                    "minimum": -180,
                    "maximum": 180,
                    "type": "number"
                  }
                },
                "description": "Destination coordinates to use for walking directions to the entity, as provided by you"
              },
              "websiteUrl": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "displayUrl": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**."
                  },
                  "preferDisplayUrl": {
                    "type": "boolean",
                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field."
                  },
                  "url": {
                    "minLength": 0,
                    "maxLength": 2000,
                    "format": "uri",
                    "type": "string",
                    "description": "A valid URL for this entity's website"
                  }
                },
                "description": "Information about the website for this entity"
              },
              "yearEstablished": {
                "multipleOf": 1,
                "minimum": 1000,
                "maximum": 2028,
                "type": "number",
                "description": "The year the entity was established."
              },
              "youTubeChannelUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "URL for your YouTube channel, format should be https://www.youtube.com/c/yourUsername"
              }
            }
          }
        ]
      },
      "NewLocationAddRequestATM": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewLocationAddRequest"
          },
          {
            "type": "object",
            "properties": {
              "newEntityData": {
                "description": "If you set `newLocationId`, you must specify either `newLocationData` or `newEntityData`.\n\nThis field allows you to set the profile data for an entity.\nProfile content is specified in the same format as when creating an entity with the Entities: Create endpoint.\nYou can only create entities of a type specified by `newEntityType`.\n\nIf the Add Request is processed successfully, this data will be used to create a new entity in your account.\n\n**The dropdown will specify the profile content for `newEntityData`. Specify the entity type with `newEntityType` described above.**\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AtmWrite"
                  }
                ]
              }
            }
          }
        ]
      },
      "NewLocationAddRequestHealthcareFacility": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewLocationAddRequest"
          },
          {
            "type": "object",
            "properties": {
              "newEntityData": {
                "description": "If you set `newLocationId`, you must specify either `newLocationData` or `newEntityData`.\n\nThis field allows you to set the profile data for an entity.\nProfile content is specified in the same format as when creating an entity with the Entities: Create endpoint.\nYou can only create entities of a type specified by `newEntityType`.\n\nIf the Add Request is processed successfully, this data will be used to create a new entity in your account.\n\n**The dropdown will specify the profile content for `newEntityData`. Specify the entity type with `newEntityType` described above.**\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HealthcareFacilityWrite"
                  }
                ]
              }
            }
          }
        ]
      },
      "NewLocationAddRequestHealthcareProfessional": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewLocationAddRequest"
          },
          {
            "type": "object",
            "properties": {
              "newEntityData": {
                "description": "If you set `newLocationId`, you must specify either `newLocationData` or `newEntityData`.\n\nThis field allows you to set the profile data for an entity.\nProfile content is specified in the same format as when creating an entity with the Entities: Create endpoint.\nYou can only create entities of a type specified by `newEntityType`.\n\nIf the Add Request is processed successfully, this data will be used to create a new entity in your account.\n\n**The dropdown will specify the profile content for `newEntityData`. Specify the entity type with `newEntityType` described above.**\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HealthcareProfessionalWrite"
                  }
                ]
              }
            }
          }
        ]
      },
      "NewLocationAddRequestHotel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewLocationAddRequest"
          },
          {
            "type": "object",
            "properties": {
              "newEntityData": {
                "description": "If you set `newLocationId`, you must specify either `newLocationData` or `newEntityData`.\n\nThis field allows you to set the profile data for an entity.\nProfile content is specified in the same format as when creating an entity with the Entities: Create endpoint.\nYou can only create entities of a type specified by `newEntityType`.\n\nIf the Add Request is processed successfully, this data will be used to create a new entity in your account.\n\n**The dropdown will specify the profile content for `newEntityData`. Specify the entity type with `newEntityType` described above.**\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HotelWrite"
                  }
                ]
              }
            }
          }
        ]
      },
      "NewLocationAddRequestLocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewLocationAddRequest"
          },
          {
            "type": "object",
            "properties": {
              "newEntityData": {
                "description": "If you set `newLocationId`, you must specify either `newLocationData` or `newEntityData`.\n\nThis field allows you to set the profile data for an entity.\nProfile content is specified in the same format as when creating an entity with the Entities: Create endpoint.\nYou can only create entities of a type specified by `newEntityType`.\n\nIf the Add Request is processed successfully, this data will be used to create a new entity in your account.\n\n**The dropdown will specify the profile content for `newEntityData`. Specify the entity type with `newEntityType` described above.**\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/LocationWrite"
                  }
                ]
              }
            }
          }
        ]
      },
      "NewLocationAddRequestRestaurant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewLocationAddRequest"
          },
          {
            "type": "object",
            "properties": {
              "newEntityData": {
                "description": "If you set `newLocationId`, you must specify either `newLocationData` or `newEntityData`.\n\nThis field allows you to set the profile data for an entity.\nProfile content is specified in the same format as when creating an entity with the Entities: Create endpoint.\nYou can only create entities of a type specified by `newEntityType`.\n\nIf the Add Request is processed successfully, this data will be used to create a new entity in your account.\n\n**The dropdown will specify the profile content for `newEntityData`. Specify the entity type with `newEntityType` described above.**\n",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RestaurantWrite"
                  }
                ]
              }
            }
          }
        ]
      },
      "LocationType": {
        "type": "string",
        "enum": [
          "LOCATION",
          "HEALTHCARE_PROFESSIONAL",
          "HEALTHCARE_FACILITY",
          "RESTAURANT",
          "ATM"
        ]
      },
      "Photo": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Valid URL to image. Accepted formats: .jpg, .gif, .png.\n\nWhile updating this field, if the image could not be downloaded, or if its URL is invalid, the image will be ignored. The success response will contain a warning message explaining why the image was not stored in the system.\n"
          },
          "sourceUrl": {
            "type": "string",
            "readOnly": true,
            "description": "The URL the image was uploaded from, if applicable. Note that this URL may not currently be valid.\n"
          },
          "description": {
            "type": "string",
            "description": "Image description."
          },
          "details": {
            "type": "string",
            "description": "Image details."
          },
          "alternateText": {
            "type": "string",
            "description": "The alternate text to be used for accessibility purposes."
          },
          "width": {
            "type": "integer",
            "readOnly": true,
            "description": "Original photo width."
          },
          "height": {
            "type": "integer",
            "readOnly": true,
            "description": "Original photo height."
          },
          "derivatives": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The URL to derivative image.\nDerivative images are alternate versions of the original image (e.g., smaller versions used to improve page-load times on your site). They are primarily used with our Pages product."
                },
                "width": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Derivative photo width."
                },
                "height": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Derivative photo height."
                }
              },
              "description": "If no derivative photos are available, this attribute is omitted rather than empty."
            }
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 50,
            "description": "Primary key. Unique alphanumeric (Latin-1) ID assigned by the Customer."
          },
          "uid": {
            "type": "string",
            "readOnly": true,
            "description": "A static globally unique id for the location. Note that this field cannot be used in place of the location id in API calls to get or update location information."
          },
          "accountId": {
            "type": "string",
            "maxLength": 50,
            "description": "Must refer to an **account.id** that already exists."
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "The timestamp of the most recent change to this location record.  Will be ignored when the client is saving location data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
          },
          "timezone": {
            "readOnly": true,
            "description": "The timezone of the location\n",
            "minLength": 0,
            "type": "string"
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationType"
          },
          "locationName": {
            "type": "string",
            "maxLength": 100,
            "description": "Cannot include:\n* inappropriate language\n* HTML markup or entities\n* a URL or domain name\n* a phone number\n* control characters ([\\x00-\\x1F\\x7F])\n\nShould be in appropriate letter case (e.g., not in all capital letters)\n"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "middleName": {
            "type": "string",
            "description": "The middle name of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "officeName": {
            "type": "string",
            "description": "The name of the office where the healthcare professional works, if different from **locationName**\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "gender": {
            "type": "string",
            "description": "The gender of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n",
            "enum": [
              "FEMALE",
              "F",
              "MALE",
              "M",
              "UNSPECIFIED"
            ]
          },
          "npi": {
            "type": "string",
            "description": "The National Provider Identifier (NPI) of the healthcare provider\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.\n"
          },
          "address": {
            "type": "string",
            "maxLength": 255,
            "description": "Must be a valid address\n\nCannot be a P.O. Box\n"
          },
          "address2": {
            "type": "string",
            "maxLength": 255,
            "description": "Cannot be a P.O. Box"
          },
          "suppressAddress": {
            "type": "boolean",
            "description": "If true, do not show street address on listings. Defaults to false."
          },
          "displayAddress": {
            "type": "string",
            "maxLength": 255,
            "description": "Provides additional information to help consumers get to the location. This string appears along with the location's address (e.g., In Menlo Mall, 3rd Floor).\n\nIt may also be used in conjunction with a hidden address (i.e., when **suppressAddress** is true) to give consumers information about where the location is found (e.g., Servicing the New York area).\n\nCannot be a P.O. Box\n"
          },
          "city": {
            "type": "string",
            "maxLength": 80
          },
          "state": {
            "type": "string",
            "maxLength": 80,
            "description": "For US locations, the two-character code of the location’s state, or DC for the District of Columbia\nFor non-US locations, the name of the location’s province / region / state\n"
          },
          "sublocality": {
            "type": "string",
            "maxLength": 255,
            "description": "The name of the location's sublocality."
          },
          "zip": {
            "type": "string",
            "maxLength": 10,
            "description": "The location's postal code. For US locations, this field contains the five- or nine-digit ZIP code (the hyphen is optional). Validations are only done on `zip` if `countryCode` is US."
          },
          "countryCode": {
            "type": "string",
            "maxLength": 2,
            "description": "The two-character ISO 3166-1 code of the location's country or region. If omitted, US is used."
          },
          "serviceArea": {
            "type": "object",
            "properties": {
              "radius": {
                "type": "number",
                "format": "double",
                "description": "The distance around the location that the business serves\n\n**NOTE:** This field is no longer supported by Google Business Profile and is deprecated. We no longer accept or store values for **`radius`**.\n"
              },
              "unit": {
                "type": "string",
                "description": "The unit in which radius is measured.\n\n**NOTE:** This field is no longer supported by Google Business Profile and is deprecated. We no longer accept or store values for **`units`**.\n"
              },
              "places": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of places served by the location, where each place is either:\n* a postal code, or\n* the name of a city.\n"
              }
            },
            "description": "Area that is served by this location. It may be specified as a radius from the location's address or as a list of cities and/or postal codes.\n\n**Only for Google Business Profile:** Currently, **serviceArea** is only supported by Google Business Profile and will not affect your listings on other sites.\n"
          },
          "phone": {
            "type": "string",
            "description": "Must be a valid phone number."
          },
          "isPhoneTracked": {
            "type": "boolean",
            "description": "Set to true if the number listed in **phone** is a tracked phone number.\n\n**NOTE:** When updating **isPhoneTracked**, you must provide a value for **phone** in the same request.\n"
          },
          "localPhone": {
            "type": "string",
            "description": "Must be a valid, non-toll-free phone number.\n\nRequired if:\n* **isPhoneTracked** is true and the non-tracked number is a toll-free number, **OR**\n* **isPhoneTracked** is false and **phone** is a toll-free number\n"
          },
          "alternatePhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "faxPhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "mobilePhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "tollFreePhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "ttyPhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Yext Category IDs. A Location must have at least one and at most 10 Categories.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\n**NOTE:** The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n"
          },
          "featuredMessage": {
            "type": "string",
            "maxLength": 50,
            "description": "The Featured Message. Default: Call today!\n\nCannot include:\n* inappropriate language\n* HTML markup\n* a URL or domain name\n* a phone number\n* control characters ([\\x00-\\x1F\\x7F])\n* insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n"
          },
          "featuredMessageUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "Valid URL to which the Featured Message is linked"
          },
          "websiteUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL of the location's website. This URL will be shown on your listings unless you specify a value for `displayWebsiteUrl`.\n\nMust be a valid URL and is required whenever `displayWebsiteUrl` is specified.\n"
          },
          "displayWebsiteUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `websiteUrl`. You can use `displayWebsiteUrl` to display a short, memorable web address that redirects consumers to the URL given in `websiteUrl`.\n\nMust be a valid URL and be specified along with `websiteUrl`.\n"
          },
          "reservationUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "A valid URL used for reservations at this location."
          },
          "displayReservationUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `reservationUrl`. You can use `displayReservationUrl` to display a short, memorable web address that redirects consumers to the URL given in `reservationUrl`.\n\nMust be a valid URL and be specified along with `reservationUrl`.\n"
          },
          "menuUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL of the location's menu."
          },
          "displayMenuUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `menuUrl`. You can use `displayMenuUrl` to display a short, memorable web address that redirects consumers to the URL given in `menuUrl`.\n\nMust be a valid URL and be specified along with `menuUrl`.\n"
          },
          "orderUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL used to place orders that will be fulfilled at the location."
          },
          "displayOrderUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `orderUrl`. You can use `displayOrderUrl` to display a short, memorable web address that redirects consumers to the URL given in `orderUrl`.\n\nMust be a valid URL and be specified along with `orderUrl`.\n"
          },
          "hours": {
            "type": "string",
            "maxLength": 255,
            "description": "Hours should be submitted as a comma-separated list of days, where each day's hours are specified as follows:\n\nd:oh:om:ch:cm\n* d = day of the week –\n  * 1 – Sunday\n  * 2 – Monday\n  * 3 – Tuesday\n  * 4 – Wednesday\n  * 5 – Thursday\n  * 6 – Friday\n  * 7 – Saturday\n* oh:om = opening time in 24-hour format\n* ch:cm = closing time in 24-hour format\n\nTimes with single-digit hours (e.g., 9 AM) can be submitted with or without a leading zero (9:00 or 09:00).\n\n**Example:** open 9 AM to 5 PM Monday and Tuesday, open 10 AM to 4 PM on Saturday – 2:9:00:17:00,3:9:00:17:00,7:10:00:16:00\n\nSPECIAL CASES:\n* To indicate that a location is open 24 hours on a specific day, set 00:00 as both the opening and closing time for that day.\n  * **Example:** open all day on Saturdays – 7:00:00:00:00\n* To indicate that a location is closed on a specific day, omit that day from the list or set it as closed (\"closed\" is not case sensitive).\n  * **Example:** closed on Sundays – 1:closed\n  * **NOTE:** If a location is closed seven days a week, set at least one day to closed. Otherwise, **hours** is an empty string, and we assume you are not submitting hours information for that location.\n* To indicate that a location has split hours on a specific day, submit a set of hours for each block of time the location is open.\n  * **Example:** open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM on Mondays – 2:9:00:12:00,2:13:00:17:00\n\n**NOTE:** To set hours for specific days of the year rather than days of the week, use **holidayHours**.\n"
          },
          "additionalHoursText": {
            "type": "string",
            "maxLength": 255,
            "description": "Additional information about business hours that does not fit in **hours** (e.g., Closed during the winter)"
          },
          "holidayHours": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "hours": {
                  "type": "string",
                  "description": "Special opening and closing times in 24-hour format (OH:OM:CH:CM, where OH:OM is the opening time and CH:CM is the closing time).\n\nTimes with single-digit hours (e.g., 9 AM) can be submitted with or without a leading zero (9:00 or 09:00).\n\nExamples:\n* 9:00:15:00 — Opening at 9:00 AM, closing at 3:00 PM\n* \"\" (empty string) — Closed all day\n* 0:00:0:00 or 0:00:23:59 — Open 24 hours\n* 9:00:15:00,17:00:19:00 — Split hours: open from 9:00 AM to 3:00 PM and again from 5:00 PM to 7:00 PM\n\n**NOTE:** If **isRegularHours** is set to true, we will ignore this field.\n"
                },
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "The date on which the holiday hours will be in effect"
                },
                "isRegularHours": {
                  "type": "boolean",
                  "default": false,
                  "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                }
              }
            },
            "description": "Holiday hours for this location.\n\n**NOTE:** hours must be set in order for holidayHours to appear on your listings)\n"
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "maxLength": 5000
          },
          "conditionsTreated": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the conditions treated by the healthcare provider\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.\n"
          },
          "certifications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the certifications held by the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "educationList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The kind of education or training completed",
                  "enum": [
                    "FELLOWSHIP",
                    "INTERNSHIP",
                    "MEDICAL_SCHOOL",
                    "RESIDENCY"
                  ]
                },
                "institutionName": {
                  "type": "string",
                  "description": "The name of the institution where the healthcare professional received the education or training"
                },
                "yearCompleted": {
                  "type": "string",
                  "description": "The year the healthcare professional completed the education or training"
                }
              }
            },
            "description": "A list of the types of education and training completed by the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "degrees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the degrees earned by the healthcare professional\n\n**NOTE:**  This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n\nValid values:\n\n* `ANP` (Adult Nurse Practitioner)\n* `APN` (Advanced Practice Nurse)\n* `APRN` (Advanced Practice Registered Nurse)\n* `ARNP` (Advanced Registered Nurse Practitioner)\n* `CNM` (Certified Nurse Midwife)\n* `CNP` (Certified Nurse Practitioner)\n* `CNS` (Clinical Nurse Specialist)\n* `CPNP` (Certified Pediatric Nurse Practitioner)\n* `CRNA` (Certified Registered Nurse Anesthetist)\n* `CRNP` (Certified Registered Nurse Practitioner)\n* `DC` (Doctor of Chiropractic)\n* `DDS` (Doctor of Dental Surgery)\n* `DMD` (Doctor of Dental Medicine)\n* `DO` (Doctor of Osteopathy)\n* `DPM` (Doctor of Podiatric Medicine)\n* `DVM` (Doctor of Veterinary Medicine)\n* `FNP` (Family Nurse Practitioner)\n* `GNP` (Geriatric Nurse Practitioner)\n* `LAC` (Licensed Acupuncturist)\n* `LPN` (Licensed Practical Nurse)\n* `MD` (Medical Doctor)\n* `ND` (Naturopathic Doctor)\n* `NP` (Nurse Practitioner)\n* `OD` (Doctor of Optometry)\n* `PA` (Physician Assistant)\n* `PAC` (Physician Assistant Certified)\n* `PHARMD` (Doctor of Pharmacy)\n* `PHD` (Doctor of Philosophy)\n* `PNP` (Pediatric Nurse Practitioner)\n* `VMD` (Veterinary Medical Doctor)\n* `WHNP` (Womens Health Nurse Practitioner)\n"
          },
          "admittingHospitals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of hospitals where the healthcare professional admits patients\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "acceptingNewPatients": {
            "type": "boolean",
            "description": "Indicates whether the healthcare provider is accepting new patients\n\nDefault is true\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.\n"
          },
          "closed": {
            "type": "object",
            "properties": {
              "isClosed": {
                "type": "boolean",
                "description": "Indicates whether the location is closed"
              }
            },
            "description": "A set of field-value pairs indicating whether the location is closed and, if it is closed, the date of its closing.\n\n**NOTE:** This field does not appear in the GET response unless it has been explicitly set in a PUT request.\n"
          },
          "paymentOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The payment methods accepted at this location\n\nValid elements depend on the location's country. For US locations, valid elements are:\n* AMERICANEXPRESS\n* CASH\n* CHECK\n* DINERSCLUB\n* DISCOVER\n* FINANCING\n* INVOICE\n* MASTERCARD\n* TRAVELERSCHECK\n* VISA\n* ANDROIDPAY\n* APPLEPAY\n* SAMSUNGPAY\n* BITCOIN\n* PAYPAL\n"
          },
          "insuranceAccepted": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of insurance policies accepted by the healthcare provider\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "logo": {
            "$ref": "#/components/schemas/Photo"
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Photo"
            },
            "description": "Up to 50 Photos.\n\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n"
          },
          "headshot": {
            "type": "object",
            "description": "A portrait of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo"
              }
            ]
          },
          "videoUrls": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 255
            },
            "description": "Valid YouTube URLs for embedding a video on some publisher sites.\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n"
          },
          "instagramHandle": {
            "type": "string",
            "description": "Valid Instagram username for the location (e.g., NewCityFiat (without the leading \"@\"))"
          },
          "twitterHandle": {
            "type": "string",
            "maxLength": 15,
            "description": "Valid Twitter handle for the location (e.g., JohnSmith (without the leading '@')).\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system."
          },
          "googleWebsiteOverride": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL you would like to submit to Google Business Profile in place of the one given in **websiteUrl** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n"
          },
          "googleCoverPhoto": {
            "type": "object",
            "description": "The cover photo for your business's Google profile\n\nNOTE: Your cover photo must meet all of the following requirements:\n* have a 16:9 aspect ratio\n* be at least 480 x 270 pixels\n* be no more than 2120 x 1192 pixels\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo"
              }
            ]
          },
          "googleProfilePhoto": {
            "type": "object",
            "description": "The profile photo for your business's Google profile\n\n**NOTE:** Your profile picture must meet all of the following requirements:\n* be a square\n* be at least 250 x 250 pixels\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo"
              }
            ]
          },
          "googleAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID Of the Google Business Profile keyword\n\nKeywords are determined by the location's primary category (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`).\n"
                },
                "optionIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The unique IDs of any options selected for the keyword.\n\nKeyword options provide more details on how the keyword applies to the location (e.g., if **`id`** is `has_drive_through`, **`optionIds`** may be `true` or `false`).\n"
                }
              }
            },
            "description": "The Google Business Profile attributes for this location.\n"
          },
          "facebookPageUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "URL for the location's Facebook Page.\n\nValid formats:\n* facebook.com/profile.php?id=[numId]\n* facebook.com/group.php?gid=[numId]\n* facebook.com/groups/[numId]\n* facebook.com/[Name]\n* facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\n**NOTE:** This value is automatically set to the location's Facebook Page URL. You can only manually set **facebookPageUrl** if the location meets one of the following criteria:\n* It is not subscribed to a Listings package that contains Facebook.\n* It is opted out of Facebook.\n"
          },
          "facebookCallToAction": {
            "description": "Designates the Facebook Call-to-Action button text and value",
            "type": "object",
            "properties": {
              "type": {
                "description": "The action the consumer is being prompted to take by the button's text",
                "enum": [
                  "NONE",
                  "BOOK_NOW",
                  "CALL_NOW",
                  "CONTACT_US",
                  "SEND_MESSAGE",
                  "USE_APP",
                  "PLAY_GAME",
                  "SHOP_NOW",
                  "SIGN_UP",
                  "WATCH_VIDEO",
                  "SEND_EMAIL",
                  "LEARN_MORE",
                  "PURCHASE_GIFT_CARDS",
                  "ORDER_NOW",
                  "FOLLOW_PAGE"
                ],
                "type": "string"
              },
              "value": {
                "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "facebookCoverPhoto": {
            "type": "object",
            "description": "The cover photo for your business's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou must have a cover photo in order for your listing to appear on Facebook.\n\n**NOTE:** Your cover photo must be at least 400 pixels wide.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo"
              }
            ]
          },
          "facebookProfilePicture": {
            "type": "object",
            "description": "The profile picture for your business's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n**NOTE:** Your profile picture must be larger than 180 x 180 pixels.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo"
              }
            ]
          },
          "uberLinkType": {
            "type": "string",
            "description": "Indicates whether the embedded Uber link for this location appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your location set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n",
            "enum": [
              "LINK",
              "BUTTON"
            ]
          },
          "uberLinkText": {
            "type": "string",
            "maxLength": 100,
            "description": "The text of the embedded Uber link\n\nDefault is \"Ride there with Uber\".\n\n**NOTE:** This field is only available if **uberLinkType** is LINK.\n"
          },
          "uberTripBrandingText": {
            "type": "string",
            "maxLength": 28,
            "description": "The text of the call-to-action that will appear in the Uber app during a trip to your location (e.g., Check out our menu!)\n\n**NOTE:** If a value for **uberTripBrandingText** is provided, values must also be provided for **uberTripBrandingUrl** and **uberTripBrandingDescription**.\n"
          },
          "uberTripBrandingUrl": {
            "type": "string",
            "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your location.\n\n**NOTE:** If a value for **uberTripBrandingUrl** is provided, values must also be provided for **uberTripBrandingText** and **uberTripBrandingDescription**.\n"
          },
          "uberTripBrandingDescription": {
            "type": "string",
            "maxLength": 150,
            "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your location.\n\n**NOTE:** If a value for **uberTripBrandingDescription** is provided, values must also be provided for **uberTripBrandingText** and **uberTripBrandingUrl**.\n"
          },
          "uberEmbedCode": {
            "type": "string",
            "readOnly": true,
            "description": "The Yext-powered code that can be copied and pasted into the markup of emails or web pages where the embedded Uber link should appear"
          },
          "uberLink": {
            "type": "string",
            "readOnly": true,
            "description": "The Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear"
          },
          "uberLinkRaw": {
            "type": "string",
            "readOnly": true,
            "description": "The Uber universal link for the location.\n\nFor more information on universal links, see Uber's developer documentation.\n\n**NOTE**: This field is only available in the LiveAPI and only for US locations.\n"
          },
          "yearEstablished": {
            "type": "string",
            "maxLength": 4,
            "description": "The year that this location was opened, not the number of years it was open\n\nMinimum of 1000, maximum of current year + 10.\n"
          },
          "displayLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude where the map pin should be displayed, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "displayLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude where the map pin should be displayed, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "routableLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for driving directions to the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "routableLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for driving directions to the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "walkableLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for walking directions to the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "walkableLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for walking directions to the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "pickupLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for pickup spot for the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "pickupLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for pickup spot for the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "dropoffLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for drop off spot for the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "dropoffLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for drop off spot for the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextDisplayLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude where the map pin should be displayed, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextDisplayLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude where the map pin should be displayed, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextRoutableLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for driving directions to the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextRoutableLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for driving directions to the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextWalkableLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for walking directions to the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextWalkableLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for walking directions to the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextPickupLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for pickup spot for the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextPickupLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for pickup spot for the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextDropoffLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for drop off spot for the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextDropoffLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for drop off spot for the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 255
            },
            "description": "Up to five emails addresses for reaching this location\n\nMust be valid email addresses\n"
          },
          "specialities": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 specialities (e.g., for food and dining: Chicago style)\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "associations": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 association memberships relevant to the location (e.g., New York Doctors Association)\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 products sold at this location\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 services offered at this location\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "brands": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 brands sold by this location\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "language": {
            "type": "string",
            "maxLength": 10,
            "description": "Language code of the language in which this location's information is provided. This language is considered the Location's primary language in our system.\n\n\nIf you would like to provide your Location data in more than one language, you can create a Language Profile for each of these additional (alternate) languages.\n"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 languages spoken at this location.\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 keywords may be provided\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "menusLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Menus. This label will appear on your location's listings."
          },
          "menuIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Menus associated with this location."
          },
          "bioListsLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Bio lists. This label will appear on your location's listings."
          },
          "bioListIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Bio lists associated with this location."
          },
          "productListsLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Product & Services lists. This label will appear on your location's listings."
          },
          "productListIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Product lists associated with this location."
          },
          "eventListsLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Event lists. This label will appear on your location's listings."
          },
          "eventListIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Event lists associated with this location."
          },
          "folderId": {
            "type": "string",
            "description": "The folder that this location is in. Must be a valid, existing Yext Folder ID"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the location labels that have been added to this location. Location labels help you identify locations that share a certain characteristic; they do not appear on your location's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nIn Locations: Update requests:\n* If the **`v`** parameter is before `20180223`: setting the value of **`labelIds`** to an empty array has no effect on the current value\n* If the **`v`** parameter is `20180223` or after: setting the value of **`labelIds`** to an empty array deletes the current value\n"
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "A set of key-value pairs indicating the location's custom fields and their values. The keys are the **`ids`** of the custom fields, and the values are the fields' contents for this location.\n\nTo retrieve a list of custom fields for your account, use the Custom Fields: List endpoint.\n\nIf a field's **`type`** is `SINGLE_OPTION` or `MULTI_OPTION`, the option or options that apply to this location must be represented by their **`key`**s.\n\nExamples of each type of custom field:\n\n* BOOLEAN:\n    * `{ \"9662\": \"true\" }`\n* DAILY_TIMES:\n    * `{ \"10012\": { \"dailyTimes\": \"2:7:00,3:7:00,4:7:00,5:7:00,6:7:00,7:7:00,1:7:00\" } }`\n* DATE:\n    * `{ \"7066\": \"2016-10-12\" }`\n* GALLERY:\n    * `{ \"7070\": [ { \"url\": \"http://a.mktgcdn.com/p/ounkg7aq6Oy029-sRf4CIH64/128x128.jpg\" }, { \"url\": \"http://a.mktgcdn.com/p/YkQGqxK8jFBqOlailQ9QIBsgs/1.0000/316x316.png\" } ] }`\n* HOURS:\n    * `{ \"10011\": { \"hours\": \"1:7:00:20:00,2:7:00:20:00,3:7:00:20:00,4:7:00:20:00,5:7:00:20:00,6:7:00:20:00,7:7:00:20:00\", \"additionalHoursText\": \"Also by appointment\" }`\n* LOCATION_LIST:\n    * `{ \"8098\" : [ \"locationId1\", \"locationId2\" ] }`\n* MULTILINE_TEXT (up to 4,000 characters):\n    * `{ \"1592\": \"Take Route 13 south. Pass Riverrun Reservoir. At the traffic light before the post office, turn right off of Route 13. Pass the library and community center on your right and then pass a diner on your left. Cross over the bridge and at the third intersection, turn left onto Jones Street. We are located on the right side in the middle of the block.\" }`\n* MULTI_OPTION:\n    * `{ \"7068\": [\"2614\", \"2615\"] }` (`\"2614\"` and `\"2615\"` are the options' **`key`**s)\n* NUMBER:\n    * `{ \"7078\": \"123\" }`\n* PHOTO:\n    * `{ \"7071\": { \"url\": \"http://a.mktgcdn.com/p/bRtQXQZP2kEzgy2C8/800x800.jpg\", \"description\": \"New storefront\", \"details\": \"A picture of the new storefront\" } }`\n    * `{ \"7071\": null }` (This setting will clear the existing value of the Photo custom field.)\n* SINGLE_OPTION:\n    * `{ \"7069\": \"2617\" }` (`\"2617\"` is the option's **`key`**)\n* TEXT (up to 255 characters):\n    * `{ \"6157\": \"Buy One, Get One 50% Off\" }`\n* TEXT_LIST:\n    * `{ \"7072\": [ \"Item 1\", \"Item 2\", \"Item 3\" ] }`\n* URL:\n    * `{ \"9381\": \"http://www.location.example.com\" }`\n* VIDEO:\n    * `{ \"7077\": { \"url\": \"http://www.youtube.com/watch?v=6KQPho\" } }`\n* VIDEO_GALLERY:\n    * `{ \"8452\": [ { \"url\": \"http://www.youtube.com/watch?v=B1EC1U\" }, { \"url\": \"http://www.youtube.com/watch?v=SkEtnN\" } ] }`\n"
          },
          "intelligentSearchTrackingEnabled": {
            "type": "boolean",
            "description": "Indicates whether Intelligent Search Tracker is enabled.\n\nThe Intelligent Search Tracker allows you to understand your performance in local search.\n"
          },
          "intelligentSearchTrackingFrequency": {
            "type": "string",
            "enum": [
              "WEEKLY",
              "MONTHLY",
              "QUARTERLY"
            ],
            "description": "How often we send search queries to track your search performance.\n"
          },
          "locationKeywords": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NAME",
                "PRIMARY_CATEGORY"
              ]
            },
            "description": "Keywords that we will use to track your search performance. These keywords are based on the location information you've stored in our system.\n"
          },
          "customKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional keywords you would like us to use when tracking your search performance\n"
          },
          "queryTemplates": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "KEYWORD",
                "KEYWORD_ZIP",
                "KEYWORD_CITY",
                "KEYWORD_IN_CITY",
                "KEYWORD_NEAR_ME",
                "KEYWORD_CITY_STATE"
              ]
            },
            "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n"
          },
          "alternateNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Other names for your business that you would like us to use when tracking your search performance\n"
          },
          "alternateWebsites": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Other websites for your business that we should look for when tracking your search performance\n"
          },
          "competitors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The competitor's name"
                },
                "website": {
                  "type": "string",
                  "description": "The competitor's website."
                }
              }
            },
            "description": "The names and websites of the competitors whose search performance you would like to compare to your own\n"
          },
          "trackingSites": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "GOOGLE_DESKTOP",
                "GOOGLE_MOBILE",
                "BING_DESKTOP",
                "BING_MOBILE",
                "YAHOO_DESKTOP",
                "YAHOO_MOBILE"
              ]
            },
            "description": "The search engines that we will use to track your performance\n"
          },
          "isoRegionCode": {
            "type": "string",
            "readOnly": true,
            "description": "The ISO 3166-2 region code for the location.\n\nYext will determine the location’s code and update isoRegionCode with that value. If Yext is unable to determine the code for the location, the location’s ISO 3166-1 alpha-2 country code will be used.\n"
          },
          "reviewBalancingURL": {
            "type": "string",
            "maxLength": 255,
            "readOnly": true,
            "description": "Link to the balancing URL that will auto-direct consumers to certain sites to leave reviews, based on review-generation settings\n"
          },
          "firstPartyReviewPage": {
            "type": "string",
            "maxLength": 255,
            "readOnly": true,
            "description": "Link to the review-collection page, where consumers can leave first-party reviews\n"
          },
          "isClusterPrimary": {
            "type": "boolean",
            "description": "Indicates whether the location is the primary location in its group\n"
          },
          "schemaTypes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            },
            "description": "List of Schema Types for this location, based on its categories\n"
          },
          "attire": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "DRESSY",
              "CASUAL",
              "FORMAL"
            ],
            "description": "The formality of clothing typically worn at this location\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.\n"
          },
          "priceRange": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "ONE",
              "TWO",
              "THREE",
              "FOUR"
            ],
            "description": "The typical price of products sold at this location, on a scale of 1 (low) to 4 (high)\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.\n"
          },
          "mealsServed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Types of meals served at this location\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.\n\nValid values:\n\n* `BREAKFAST`\n* `LUNCH`\n* `BRUNCH`\n* `HAPPY_HOUR`\n* `LATE_NIGHT`\n"
          },
          "locatedIn": {
            "type": "string",
            "description": "For ATMs, the external ID of the location that the ATM is installed in. The location must be in the same business account as the ATM.\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `ATM`.\n"
          },
          "primaryContact": {
            "type": "string",
            "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n"
          },
          "reviewResponseConversationEnabled": {
            "type": "boolean",
            "description": "Indicates whether or not review response conversations are enabled for the Yext Knowledge Assistant\n"
          },
          "holidayHoursConfirmationEnabled": {
            "type": "boolean",
            "description": "Indicates whether or not holiday hour confirmation alerts are enabled for the Yext Knowledge Assistant\n"
          }
        }
      },
      "Entity": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "meta": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "accountId": {
                "minLength": 0,
                "type": "string",
                "description": "ID of the account associated with this Entity"
              },
              "countryCode": {
                "minLength": 0,
                "type": "string",
                "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
              },
              "createdTimestamp": {
                "minLength": 0,
                "type": "string",
                "description": "The timestamp of when the entity record was created."
              },
              "entityType": {
                "minLength": 0,
                "type": "string",
                "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
              },
              "folderId": {
                "minLength": 0,
                "type": "string",
                "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
              },
              "id": {
                "minLength": 0,
                "type": "string",
                "description": "ID of this Entity\n\nFiltering Type: `text`"
              },
              "labels": {
                "uniqueItems": false,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                },
                "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer.\n\nFiltering Type: `list of text`"
              },
              "language": {
                "minLength": 0,
                "type": "string",
                "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
              },
              "timestamp": {
                "minLength": 0,
                "type": "string",
                "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
              },
              "uid": {
                "minLength": 0,
                "type": "string",
                "description": "The internal ID of the entity. This UID is a static, globally unique ID. Note that this value cannot be used in place of id in API calls to retrieve or edit Entity information.\n\nIf the v param is before `20221206`, the returned value will be a hashed version of the entity UID (aka internal ID of the entity).\n"
              }
            },
            "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
          },
          "name": {
            "minLength": 0,
            "maxLength": 5000,
            "type": "string",
            "description": "\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * board\n   * brand\n   * card\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * hotelRoomType\n   * job\n   * location\n   * organization\n   * product\n   * restaurant\n```"
          },
          "address": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "city": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
              },
              "countryCode": {
                "minLength": 0,
                "pattern": "^[a-zA-Z]{2}$",
                "type": "string",
                "description": "Filtering Type: `text`"
              },
              "extraDescription": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
              },
              "line1": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
              },
              "line2": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
              },
              "postalCode": {
                "minLength": 0,
                "maxLength": 10,
                "type": "string",
                "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
              },
              "region": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
              },
              "sublocality": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
              }
            },
            "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "acceptingNewPatients": {
            "type": "boolean",
            "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
          },
          "acceptsReservations": {
            "type": "boolean",
            "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
          },
          "accessHours": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "friday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "holidayHours": {
                "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "date"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "date": {
                      "format": "date",
                      "type": "string",
                      "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                    },
                    "isClosed": {
                      "type": "boolean",
                      "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                    },
                    "isRegularHours": {
                      "type": "boolean",
                      "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                    },
                    "openIntervals": {
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "end": {
                            "format": "time",
                            "type": "string",
                            "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          },
                          "start": {
                            "format": "time",
                            "type": "string",
                            "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          }
                        },
                        "description": "Filtering Type: `object`"
                      },
                      "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "monday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "reopenDate": {
                "format": "date",
                "type": "string",
                "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
              },
              "saturday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "sunday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "thursday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "tuesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "wednesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              }
            },
            "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "additionalHoursText": {
            "minLength": 0,
            "maxLength": 255,
            "type": "string",
            "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "additionalPromotingLocations": {
            "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "description": "Filtering Type: `entityId`"
            }
          },
          "addressHidden": {
            "type": "boolean",
            "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "admittingHospitals": {
            "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "adultPool": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "ageRange": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "maxValue": {
                "multipleOf": 1,
                "type": "number",
                "description": "Maximum age for the event\n\nFiltering Type: `integer`"
              },
              "minValue": {
                "multipleOf": 1,
                "type": "number",
                "description": "Minimum age for the event\n\nFiltering Type: `integer`"
              }
            },
            "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
          },
          "airportShuttle": {
            "enum": [
              "AIRPORT_SHUTTLE_AVAILABLE",
              "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "airportTransfer": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "allInclusive": {
            "enum": [
              "ALL_INCLUSIVE_RATES_AVAILABLE",
              "ALL_INCLUSIVE_RATES_ONLY",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "alternateNames": {
            "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "alternatePhone": {
            "minLength": 0,
            "type": "string",
            "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "alternateWebsites": {
            "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 255,
              "format": "uri",
              "type": "string",
              "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
            }
          },
          "androidAppUrl": {
            "minLength": 0,
            "type": "string",
            "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * brand\n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "answer": {
            "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
            "type": "string",
            "format": "rich-text"
          },
          "appleActionLinks": {
            "description": "Use this field to add action links to your Apple Listings.\n\nThe call to action category will be displayed on the action link button.\n\nThe App Store URL should contain a valid link to the landing page of an App in the Apple App Store.\n\nThe Quick Link URL is where a user is taken when an action link is clicked by a user.\n\nThe App Name sub-field is not displayed on Apple Listings and is only used to distinguish the call-to-action type when utilizing action links in Apple posts.\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "required": [
                "category",
                "quickLinkUrl",
                "appName"
              ],
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "appName": {
                  "minLength": 0,
                  "maxLength": 18,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                },
                "appStoreUrl": {
                  "minLength": 0,
                  "maxLength": 2000,
                  "format": "uri",
                  "type": "string",
                  "description": "Filtering Type: `text`"
                },
                "category": {
                  "enum": [
                    "BOOK_TRAVEL",
                    "CHECK_IN",
                    "FEES_POLICIES",
                    "FLIGHT_STATUS",
                    "TICKETS",
                    "TICKETING",
                    "AMENITIES",
                    "FRONT_DESK",
                    "PARKING",
                    "GIFT_CARD",
                    "WAITLIST",
                    "DELIVERY",
                    "ORDER",
                    "TAKEOUT",
                    "PICKUP",
                    "RESERVE",
                    "MENU",
                    "APPOINTMENT",
                    "PORTFOLIO",
                    "QUOTE",
                    "SERVICES",
                    "STORE_ORDERS",
                    "STORE_SHOP",
                    "STORE_SUPPORT",
                    "SCHEDULE",
                    "SHOWTIMES",
                    "AVAILABILITY",
                    "PRICING",
                    "ACTIVITIES",
                    "BOOK",
                    "BOOK_(HOTEL)",
                    "BOOK_(RIDE)",
                    "BOOK_(TOUR)",
                    "CAREERS",
                    "CHARGE",
                    "COUPONS",
                    "DELIVERY_(RETAIL)",
                    "DONATE",
                    "EVENTS",
                    "ORDER_(RETAIL)",
                    "OTHER_MENU",
                    "PICKUP_(RETAIL)",
                    "RESERVE_(PARKING)",
                    "SHOWS",
                    "SPORTS",
                    "SUPPORT",
                    "TEE_TIME",
                    "GIFT_CARD_(RESTAURANT)"
                  ],
                  "type": "string",
                  "description": "Filtering Type: `option`"
                },
                "quickLinkUrl": {
                  "minLength": 0,
                  "maxLength": 2000,
                  "format": "uri",
                  "type": "string",
                  "description": "Filtering Type: `text`"
                }
              },
              "description": "Filtering Type: `object`"
            }
          },
          "appleBusinessDescription": {
            "minLength": 0,
            "maxLength": 500,
            "type": "string",
            "description": "The business description to be sent to Apple\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "appleBusinessId": {
            "minLength": 0,
            "pattern": "^\\d*\\.?\\d*$",
            "type": "string",
            "description": "The ID associated with an individual Business Folder in your Apple account\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "appleCompanyId": {
            "minLength": 0,
            "pattern": "^\\d*\\.?\\d*$",
            "type": "string",
            "description": "The ID associated with your Apple account. Numerical values only\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "appleCoverPhoto": {
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "type": "object",
            "description": "The cover photo for the entity''s Apple profile\n\n\nImage must be at least 1600 x 1040 pixels\n\nImage may be no more than 4864 x 3163 pixels\n\nSupported Aspect Ratios:\n* 154 x 100\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "properties": {
              "alternateText": {
                "minLength": 0,
                "type": "string",
                "description": "Filtering Type: `text`"
              },
              "url": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "Filtering Type: `text`"
              }
            }
          },
          "appleDisplayName": {
            "minLength": 0,
            "maxLength": 5000,
            "type": "string",
            "description": "The name to be displayed on Apple for the entity.\nNOTE: The names of Brands and their respective Locations within an Apple Business Connect Account must match identically.\nCannot Include:\nHTML markup \n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "applicationUrl": {
            "minLength": 0,
            "format": "uri",
            "type": "string",
            "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
          },
          "associations": {
            "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "attendance": {
            "required": [
              "attendanceMode"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "attendanceMode": {
                "enum": [
                  "OFFLINE",
                  "ONLINE",
                  "MIXED"
                ],
                "type": "string",
                "description": "Filtering Type: `option`"
              },
              "virtualLocationUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "Filtering Type: `text`"
              }
            },
            "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
          },
          "attire": {
            "enum": [
              "UNSPECIFIED",
              "DRESSY",
              "CASUAL",
              "FORMAL"
            ],
            "type": "string",
            "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
          },
          "babysittingOffered": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "baggageStorage": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "bar": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "beachAccess": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "beachFrontProperty": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "bicycles": {
            "enum": [
              "BICYCLE_RENTALS",
              "BICYCLE_RENTALS_FOR_FREE",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "bios": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "ids": {
                "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                }
              },
              "label": {
                "minLength": 0,
                "maxLength": 30,
                "type": "string",
                "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "boutiqueStores": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "brands": {
            "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "breakfast": {
            "enum": [
              "BREAKFAST_AVAILABLE",
              "BREAKFAST_AVAILABLE_FOR_FREE",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "brunchHours": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "friday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "holidayHours": {
                "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "date"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "date": {
                      "format": "date",
                      "type": "string",
                      "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                    },
                    "isClosed": {
                      "type": "boolean",
                      "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                    },
                    "isRegularHours": {
                      "type": "boolean",
                      "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                    },
                    "openIntervals": {
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "end": {
                            "format": "time",
                            "type": "string",
                            "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          },
                          "start": {
                            "format": "time",
                            "type": "string",
                            "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          }
                        },
                        "description": "Filtering Type: `object`"
                      },
                      "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "monday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "reopenDate": {
                "format": "date",
                "type": "string",
                "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
              },
              "saturday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "sunday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "thursday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "tuesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "wednesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              }
            },
            "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
          },
          "businessCenter": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "calendars": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "ids": {
                "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                }
              },
              "label": {
                "minLength": 0,
                "maxLength": 30,
                "type": "string",
                "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "carRental": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "casino": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "categories": {
            "additionalProperties": false,
            "type": "object",
            "properties": {},
            "description": "Yext Categories. (Supported for versions > 20240220)\n\nA map of category list external IDs (i.e. \"yext\") to a list of category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nPartial updates are accepted, meaning sending only the \"yext\" property will have no effect on any category list except the \"yext\" category. \n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "categoryIds": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "minLength": 0,
              "type": "string",
              "description": "Filtering Type: `text`"
            },
            "description": "Yext Category IDs. (Deprecated: For versions > 20240220)\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "catsAllowed": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "certifications": {
            "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 200,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "checkInTime": {
            "format": "time",
            "type": "string",
            "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "checkOutTime": {
            "format": "time",
            "type": "string",
            "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "classificationRating": {
            "pattern": "^\\d*\\.?\\d*$",
            "type": "string",
            "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "closed": {
            "type": "boolean",
            "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "concierge": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "conditionsTreated": {
            "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "convenienceStore": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "covidMessaging": {
            "minLength": 0,
            "maxLength": 15000,
            "type": "string",
            "description": "Information or messaging related to COVID-19.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * location\n```"
          },
          "covidTestAppointmentUrl": {
            "minLength": 0,
            "format": "uri",
            "type": "string",
            "description": "An appointment URL for scheduling a COVID-19 test.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidTestingAppointmentRequired": {
            "type": "boolean",
            "description": "Indicates whether an appointment is required for a COVID-19 test.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidTestingDriveThroughSite": {
            "type": "boolean",
            "description": "Indicates whether location is a drive-through site for COVID-19 tests.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidTestingIsFree": {
            "type": "boolean",
            "description": "Indicates whether location offers free COVID-19 testing.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidTestingPatientRestrictions": {
            "type": "boolean",
            "description": "Indicates whether there are patient restrictions for COVID-19 testing.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidTestingReferralRequired": {
            "type": "boolean",
            "description": "Indicates whether a referral is required for COVID-19 testing.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidTestingSiteInstructions": {
            "minLength": 0,
            "maxLength": 15000,
            "type": "string",
            "description": "Information or instructions for the COVID-19 testing site.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidVaccineAppointmentRequired": {
            "type": "boolean",
            "description": "Indicates whether an appointment is required for a COVID-19 vaccine.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidVaccineDriveThroughSite": {
            "type": "boolean",
            "description": "Indicates whether location is a drive-through site for COVID-19 vaccines.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidVaccineInformationUrl": {
            "minLength": 0,
            "format": "uri",
            "type": "string",
            "description": "An information URL for more information about COVID-19 vaccines.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidVaccinePatientRestrictions": {
            "type": "boolean",
            "description": "Indicates whether there are patient restrictions for a COVID-19 vaccine.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidVaccineReferralRequired": {
            "type": "boolean",
            "description": "Indicates whether a referral is required for a COVID-19 vaccine.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidVaccineSiteInstructions": {
            "minLength": 0,
            "maxLength": 15000,
            "type": "string",
            "description": "Information or instructions for the COVID-19 vaccination site.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "covidVaccinesOffered": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "PFIZER",
                "MODERNA",
                "JOHNSON_&_JOHNSON"
              ],
              "type": "string",
              "description": "Filtering Type: `option`"
            },
            "description": "Indicates which COVID-19 vaccines the location offers.\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n```"
          },
          "currencyExchange": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "customKeywords": {
            "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "Filtering Type: `text`"
            }
          },
          "datePosted": {
            "format": "date",
            "type": "string",
            "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
          },
          "degrees": {
            "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "ANP",
                "APN",
                "APRN",
                "ARNP",
                "AUD",
                "BSW",
                "CCCA",
                "CNM",
                "CNP",
                "CNS",
                "CPNP",
                "CRNA",
                "CRNP",
                "DC",
                "DDS",
                "DMD",
                "DNP",
                "DO",
                "DPM",
                "DPT",
                "DSW",
                "DVM",
                "FNP",
                "GNP",
                "LAC",
                "LCSW",
                "LPN",
                "MBA",
                "MBBS",
                "MD",
                "MPAS",
                "MPH",
                "MSW",
                "ND",
                "NNP",
                "NP",
                "OD",
                "PA",
                "PAC",
                "PHARMD",
                "PHD",
                "PNP",
                "PSYD",
                "RD",
                "RSW",
                "VMD",
                "WHNP"
              ],
              "type": "string",
              "description": "Filtering Type: `option`"
            }
          },
          "deliveryHours": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "friday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "holidayHours": {
                "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "date"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "date": {
                      "format": "date",
                      "type": "string",
                      "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                    },
                    "isClosed": {
                      "type": "boolean",
                      "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                    },
                    "isRegularHours": {
                      "type": "boolean",
                      "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                    },
                    "openIntervals": {
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "end": {
                            "format": "time",
                            "type": "string",
                            "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          },
                          "start": {
                            "format": "time",
                            "type": "string",
                            "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          }
                        },
                        "description": "Filtering Type: `object`"
                      },
                      "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "monday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "reopenDate": {
                "format": "date",
                "type": "string",
                "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
              },
              "saturday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "sunday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "thursday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "tuesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "wednesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              }
            },
            "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
          },
          "description": {
            "minLength": 10,
            "maxLength": 15000,
            "type": "string",
            "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * organization\n   * restaurant\n```"
          },
          "displayCoordinate": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "latitude": {
                "minimum": -90,
                "maximum": 90,
                "type": "number",
                "description": "Filtering Type: `float`"
              },
              "longitude": {
                "minimum": -180,
                "maximum": 180,
                "type": "number",
                "description": "Filtering Type: `float`"
              }
            },
            "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
          },
          "doctorOnCall": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "dogsAllowed": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "driveThroughHours": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "friday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "holidayHours": {
                "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "date"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "date": {
                      "format": "date",
                      "type": "string",
                      "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                    },
                    "isClosed": {
                      "type": "boolean",
                      "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                    },
                    "isRegularHours": {
                      "type": "boolean",
                      "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                    },
                    "openIntervals": {
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "end": {
                            "format": "time",
                            "type": "string",
                            "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          },
                          "start": {
                            "format": "time",
                            "type": "string",
                            "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          }
                        },
                        "description": "Filtering Type: `object`"
                      },
                      "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "monday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "reopenDate": {
                "format": "date",
                "type": "string",
                "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
              },
              "saturday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "sunday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "thursday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "tuesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "wednesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              }
            },
            "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
          },
          "dropoffCoordinate": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "latitude": {
                "minimum": -90,
                "maximum": 90,
                "type": "number",
                "description": "Filtering Type: `float`"
              },
              "longitude": {
                "minimum": -180,
                "maximum": 180,
                "type": "number",
                "description": "Filtering Type: `float`"
              }
            },
            "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "educationList": {
            "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "required": [
                "type",
                "institutionName",
                "yearCompleted"
              ],
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "institutionName": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                },
                "type": {
                  "enum": [
                    "FELLOWSHIP",
                    "RESIDENCY",
                    "INTERNSHIP",
                    "MEDICAL_SCHOOL"
                  ],
                  "type": "string",
                  "description": "Filtering Type: `option`"
                },
                "yearCompleted": {
                  "multipleOf": 1,
                  "minimum": 1900,
                  "maximum": 2100,
                  "type": "number",
                  "description": "Filtering Type: `integer`"
                }
              },
              "description": "Filtering Type: `object`"
            }
          },
          "electricChargingStation": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "elevator": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "ellipticalMachine": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "emails": {
            "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "format": "email",
              "type": "string",
              "description": "Filtering Type: `text`"
            }
          },
          "employmentType": {
            "enum": [
              "FULL_TIME",
              "PART_TIME",
              "CONTRACTOR",
              "TEMPORARY",
              "INTERN",
              "VOLUNTEER",
              "PER_DIEM",
              "OTHER"
            ],
            "type": "string",
            "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
          },
          "eventStatus": {
            "enum": [
              "SCHEDULED",
              "RESCHEDULED",
              "POSTPONED",
              "CANCELED",
              "EVENT_MOVED_ONLINE"
            ],
            "type": "string",
            "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
          },
          "facebookAbout": {
            "minLength": 0,
            "maxLength": 255,
            "type": "string",
            "description": "A description of the entity to be used in the \"About You\" section on Facebook\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "facebookCallToAction": {
            "required": [
              "type"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "type": {
                "enum": [
                  "NONE",
                  "BOOK_NOW",
                  "CALL_NOW",
                  "CONTACT_US",
                  "SEND_MESSAGE",
                  "USE_APP",
                  "PLAY_GAME",
                  "SHOP_NOW",
                  "SIGN_UP",
                  "WATCH_VIDEO",
                  "SEND_EMAIL",
                  "LEARN_MORE",
                  "PURCHASE_GIFT_CARDS",
                  "ORDER_NOW",
                  "FOLLOW_PAGE"
                ],
                "type": "string",
                "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
              },
              "value": {
                "minLength": 0,
                "type": "string",
                "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
              }
            },
            "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "facebookCoverPhoto": {
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "type": "object",
            "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "properties": {
              "alternateText": {
                "minLength": 0,
                "type": "string",
                "description": "Filtering Type: `text`"
              },
              "url": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "Filtering Type: `text`"
              }
            }
          },
          "facebookDescriptor": {
            "minLength": 3,
            "maxLength": 75,
            "type": "string",
            "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "facebookName": {
            "minLength": 0,
            "type": "string",
            "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "facebookOverrideCity": {
            "minLength": 0,
            "type": "string",
            "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "facebookPageUrl": {
            "minLength": 0,
            "type": "string",
            "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n- facebook.com/people/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\nThe success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "facebookParentPageId": {
            "minLength": 0,
            "maxLength": 65,
            "type": "string",
            "description": "The Facebook Page ID of this entity's brand page if in a brand page location structure\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * brand\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "facebookProfilePhoto": {
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "type": "object",
            "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage area (width x height) may be no more than 41000000 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "properties": {
              "alternateText": {
                "minLength": 0,
                "type": "string",
                "description": "Filtering Type: `text`"
              },
              "url": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "Filtering Type: `text`"
              }
            }
          },
          "facebookStoreId": {
            "minLength": 0,
            "type": "string",
            "description": "The Store ID used for this entity in a brand page location structure\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "facebookVanityUrl": {
            "minLength": 0,
            "maxLength": 50,
            "type": "string",
            "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "facebookWebsiteOverride": {
            "minLength": 0,
            "format": "uri",
            "type": "string",
            "description": "The URL you would like to submit to Facebook in place of the one given in **`websiteUrl`** (if applicable).\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "fax": {
            "minLength": 0,
            "type": "string",
            "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "featuredMessage": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "description": {
                "minLength": 0,
                "maxLength": 50,
                "type": "string",
                "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
              },
              "url": {
                "minLength": 0,
                "maxLength": 255,
                "format": "uri",
                "type": "string",
                "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "firstName": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
          },
          "firstPartyReviewPage": {
            "minLength": 0,
            "type": "string",
            "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "fitnessCenter": {
            "enum": [
              "FITNESS_CENTER_AVAILABLE",
              "FITNESS_CENTER_AVAILABLE_FOR_FREE",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "floorCount": {
            "multipleOf": 1,
            "minimum": 0,
            "type": "number",
            "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "freeWeights": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "frequentlyAskedQuestions": {
            "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "required": [
                "question"
              ],
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "answer": {
                  "minLength": 1,
                  "maxLength": 4096,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                },
                "question": {
                  "minLength": 1,
                  "maxLength": 4096,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                }
              },
              "description": "Filtering Type: `object`"
            }
          },
          "frontDesk": {
            "enum": [
              "FRONT_DESK_AVAILABLE",
              "FRONT_DESK_AVAILABLE_24_HOURS",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "fullyVaccinatedStaff": {
            "type": "boolean",
            "description": "Indicates whether the staff is vaccinated against COVID-19.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "gameRoom": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "gender": {
            "enum": [
              "UNSPECIFIED",
              "FEMALE",
              "MALE",
              "NONBINARY",
              "TRANSGENDER_FEMALE",
              "TRANSGENDER_MALE",
              "OTHER",
              "PREFER_NOT_TO_DISCLOSE"
            ],
            "type": "string",
            "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
          },
          "geomodifier": {
            "minLength": 0,
            "type": "string",
            "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "giftShop": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "golf": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "googleAttributes": {
            "additionalProperties": false,
            "type": "object",
            "properties": {},
            "description": "The unique IDs of the entity's Google Business Profile keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "googleCoverPhoto": {
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "type": "object",
            "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "properties": {
              "alternateText": {
                "minLength": 0,
                "type": "string",
                "description": "Filtering Type: `text`"
              },
              "url": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "Filtering Type: `text`"
              }
            }
          },
          "googleMessaging": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "smsNumber": {
                "minLength": 0,
                "type": "string",
                "description": "The SMS phone number of the entity's point of contact for messaging/ chat functionality.\nMust be a valid phone number.\nIf the phone number's calling code is for a country other than the one given in the entity's countryCode, the phone number provided must contain the calling code (e.g., +44 in +442038083831). Otherwise, the calling code is optional. \n\nFiltering Type: `text`"
              },
              "whatsappMessagingUrl": {
                "minLength": 0,
                "maxLength": 2000,
                "format": "uri",
                "type": "string",
                "description": "A valid URL for this entity's WhatsApp account.\nMust be a valid URL\n\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about Google Messaging, WhatsApp and SMS, for the entity’s point of contact for messaging/chat functionality.\n\nNOTE: Only one, either WhatsApp or SMS is displayed on the Google listing. If both SMS Number and WhatsApp URL are provided only SMS Number will be displayed on the listing.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "googleMyBusinessLabels": {
            "description": "Google Business Profile Labels help users organize their locations into groups within GBP.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 50,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "googlePlaceId": {
            "minLength": 0,
            "type": "string",
            "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "googleProfilePhoto": {
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "type": "object",
            "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 5000 x 5000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "properties": {
              "alternateText": {
                "minLength": 0,
                "type": "string",
                "description": "Filtering Type: `text`"
              },
              "url": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "Filtering Type: `text`"
              }
            }
          },
          "googleWebsiteOverride": {
            "minLength": 0,
            "format": "uri",
            "type": "string",
            "description": "The URL you would like to submit to Google Business Profile in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "happyHours": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "friday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "holidayHours": {
                "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "date"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "date": {
                      "format": "date",
                      "type": "string",
                      "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                    },
                    "isClosed": {
                      "type": "boolean",
                      "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                    },
                    "isRegularHours": {
                      "type": "boolean",
                      "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                    },
                    "openIntervals": {
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "end": {
                            "format": "time",
                            "type": "string",
                            "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          },
                          "start": {
                            "format": "time",
                            "type": "string",
                            "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          }
                        },
                        "description": "Filtering Type: `object`"
                      },
                      "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "monday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "reopenDate": {
                "format": "date",
                "type": "string",
                "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
              },
              "saturday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "sunday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "thursday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "tuesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "wednesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              }
            },
            "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
          },
          "headshot": {
            "required": [
              "url"
            ],
            "additionalProperties": false,
            "type": "object",
            "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
            "properties": {
              "alternateText": {
                "minLength": 0,
                "type": "string",
                "description": "Filtering Type: `text`"
              },
              "url": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "Filtering Type: `text`"
              }
            }
          },
          "hiringOrganization": {
            "minLength": 0,
            "type": "string",
            "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
          },
          "holidayHoursConversationEnabled": {
            "type": "boolean",
            "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "horsebackRiding": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "hotTub": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "hours": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "friday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "holidayHours": {
                "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "date"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "date": {
                      "format": "date",
                      "type": "string",
                      "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                    },
                    "isClosed": {
                      "type": "boolean",
                      "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                    },
                    "isRegularHours": {
                      "type": "boolean",
                      "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                    },
                    "openIntervals": {
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "end": {
                            "format": "time",
                            "type": "string",
                            "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          },
                          "start": {
                            "format": "time",
                            "type": "string",
                            "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          }
                        },
                        "description": "Filtering Type: `object`"
                      },
                      "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "monday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "reopenDate": {
                "format": "date",
                "type": "string",
                "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
              },
              "saturday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "sunday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "thursday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "tuesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "wednesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              }
            },
            "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "housekeeping": {
            "enum": [
              "HOUSEKEEPING_AVAILABLE",
              "HOUSEKEEPING_AVAILABLE_DAILY",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "impressum": {
            "minLength": 0,
            "maxLength": 2000,
            "type": "string",
            "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "indoorPoolCount": {
            "multipleOf": 1,
            "minimum": 0,
            "type": "number",
            "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "instagramHandle": {
            "minLength": 0,
            "maxLength": 30,
            "type": "string",
            "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "insuranceAccepted": {
            "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "iosAppUrl": {
            "minLength": 0,
            "type": "string",
            "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * brand\n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "isClusterPrimary": {
            "type": "boolean",
            "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
          },
          "isFreeEvent": {
            "type": "boolean",
            "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
          },
          "isoRegionCode": {
            "minLength": 0,
            "type": "string",
            "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "keywords": {
            "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * card\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "kidFriendly": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "kidsClub": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "kidsStayFree": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "kitchenHours": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "friday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "holidayHours": {
                "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "date"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "date": {
                      "format": "date",
                      "type": "string",
                      "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                    },
                    "isClosed": {
                      "type": "boolean",
                      "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                    },
                    "isRegularHours": {
                      "type": "boolean",
                      "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                    },
                    "openIntervals": {
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "end": {
                            "format": "time",
                            "type": "string",
                            "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          },
                          "start": {
                            "format": "time",
                            "type": "string",
                            "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          }
                        },
                        "description": "Filtering Type: `object`"
                      },
                      "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "monday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "reopenDate": {
                "format": "date",
                "type": "string",
                "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
              },
              "saturday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "sunday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "thursday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "tuesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "wednesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              }
            },
            "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
          },
          "labels": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * board\n   * brand\n   * card\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * hotelRoomType\n   * job\n   * location\n   * organization\n   * product\n   * restaurant\n```"
          },
          "landingPageUrl": {
            "minLength": 0,
            "format": "uri",
            "type": "string",
            "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * card\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
          },
          "languages": {
            "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "lastName": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
          },
          "laundry": {
            "enum": [
              "FULL_SERVICE",
              "SELF_SERVICE",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "lazyRiver": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "lifeguard": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "linkedInUrl": {
            "minLength": 0,
            "format": "uri",
            "type": "string",
            "description": "URL for your LinkedIn account, format should be https://www.linkedin.com/in/yourUsername\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "linkedLocation": {
            "type": "string",
            "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
          },
          "localPhone": {
            "minLength": 0,
            "type": "string",
            "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "localShuttle": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "locatedIn": {
            "type": "string",
            "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
          },
          "location": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "existingLocation": {
                "type": "string",
                "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
              },
              "externalLocation": {
                "minLength": 0,
                "maxLength": 255,
                "type": "string",
                "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
              }
            },
            "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
          },
          "locationType": {
            "enum": [
              "LOCATION",
              "HEALTHCARE_FACILITY",
              "HEALTHCARE_PROFESSIONAL",
              "ATM",
              "RESTAURANT",
              "HOTEL"
            ],
            "type": "string",
            "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "logo": {
            "required": [
              "image"
            ],
            "additionalProperties": false,
            "type": "object",
            "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * organization\n   * restaurant\n```",
            "properties": {
              "clickthroughUrl": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "Filtering Type: `text`"
              },
              "description": {
                "minLength": 0,
                "type": "string",
                "description": "Filtering Type: `text`"
              },
              "details": {
                "minLength": 0,
                "type": "string",
                "description": "Filtering Type: `text`"
              },
              "image": {
                "required": [
                  "url"
                ],
                "additionalProperties": false,
                "type": "object",
                "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                "properties": {
                  "alternateText": {
                    "minLength": 0,
                    "type": "string",
                    "description": "Filtering Type: `text`"
                  },
                  "url": {
                    "minLength": 0,
                    "format": "uri",
                    "type": "string",
                    "description": "Filtering Type: `text`"
                  }
                }
              }
            }
          },
          "mainPhone": {
            "minLength": 0,
            "type": "string",
            "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "massage": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "maxAgeOfKidsStayFree": {
            "multipleOf": 1,
            "minimum": 0,
            "type": "number",
            "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "maxNumberOfKidsStayFree": {
            "multipleOf": 1,
            "minimum": 0,
            "type": "number",
            "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "mealsServed": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "BREAKFAST",
                "LUNCH",
                "BRUNCH",
                "DINNER",
                "HAPPY_HOUR",
                "LATE_NIGHT"
              ],
              "type": "string",
              "description": "Filtering Type: `option`"
            },
            "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
          },
          "meetingRoomCount": {
            "multipleOf": 1,
            "minimum": 0,
            "type": "number",
            "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "menuUrl": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "displayUrl": {
                "minLength": 0,
                "maxLength": 2000,
                "format": "uri",
                "type": "string",
                "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\nFiltering Type: `text`"
              },
              "preferDisplayUrl": {
                "type": "boolean",
                "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
              },
              "url": {
                "minLength": 0,
                "maxLength": 2000,
                "format": "uri",
                "type": "string",
                "description": "A valid URL where consumers can view the entity's menu\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "menus": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "ids": {
                "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                }
              },
              "label": {
                "minLength": 0,
                "maxLength": 30,
                "type": "string",
                "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
          },
          "middleName": {
            "minLength": 0,
            "maxLength": 35,
            "type": "string",
            "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
          },
          "mobilePhone": {
            "minLength": 0,
            "type": "string",
            "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "mobilityAccessible": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "nightclub": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "npi": {
            "minLength": 0,
            "type": "string",
            "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
          },
          "nudgeEnabled": {
            "type": "boolean",
            "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * organization\n   * product\n   * restaurant\n```"
          },
          "officeName": {
            "minLength": 0,
            "type": "string",
            "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
          },
          "onlineServiceHours": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "friday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "holidayHours": {
                "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "date"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "date": {
                      "format": "date",
                      "type": "string",
                      "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                    },
                    "isClosed": {
                      "type": "boolean",
                      "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                    },
                    "isRegularHours": {
                      "type": "boolean",
                      "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                    },
                    "openIntervals": {
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "end": {
                            "format": "time",
                            "type": "string",
                            "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          },
                          "start": {
                            "format": "time",
                            "type": "string",
                            "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          }
                        },
                        "description": "Filtering Type: `object`"
                      },
                      "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "monday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "reopenDate": {
                "format": "date",
                "type": "string",
                "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
              },
              "saturday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "sunday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "thursday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "tuesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "wednesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              }
            },
            "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
          },
          "openDate": {
            "format": "date",
            "type": "string",
            "description": "The date that the entity is set to open for the first time.\nMust be formatted in YYYY-MM-DD format.\n\nDate must be on or after 1970-01-01 Date must be before or on 2038-01-01\n\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "operatingCountries": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "AD",
                "AE",
                "AF",
                "AG",
                "AI",
                "AL",
                "AM",
                "AO",
                "AR",
                "AS",
                "AT",
                "AU",
                "AW",
                "AX",
                "AZ",
                "BA",
                "BB",
                "BD",
                "BE",
                "BF",
                "BG",
                "BH",
                "BI",
                "BJ",
                "BL",
                "BM",
                "BN",
                "BO",
                "BQ",
                "BR",
                "BS",
                "BT",
                "BW",
                "BY",
                "BZ",
                "CA",
                "CD",
                "CF",
                "CG",
                "CH",
                "CI",
                "CK",
                "CL",
                "CM",
                "CN",
                "CO",
                "CR",
                "CU",
                "CV",
                "CW",
                "CY",
                "CZ",
                "DE",
                "DJ",
                "DK",
                "DM",
                "DO",
                "DZ",
                "EC",
                "EE",
                "EG",
                "EH",
                "ER",
                "ES",
                "ET",
                "FI",
                "FJ",
                "FK",
                "FM",
                "FO",
                "FR",
                "GA",
                "GB",
                "GD",
                "GE",
                "GF",
                "GG",
                "GH",
                "GI",
                "GL",
                "GM",
                "GN",
                "GP",
                "GQ",
                "GR",
                "GT",
                "GU",
                "GW",
                "GY",
                "HK",
                "HN",
                "HR",
                "HT",
                "HU",
                "ID",
                "IE",
                "IL",
                "IM",
                "IN",
                "IQ",
                "IR",
                "IS",
                "IT",
                "JE",
                "JM",
                "JO",
                "JP",
                "KE",
                "KG",
                "KH",
                "KI",
                "KM",
                "KN",
                "KR",
                "KW",
                "KY",
                "KZ",
                "LA",
                "LB",
                "LC",
                "LI",
                "LK",
                "LR",
                "LS",
                "LT",
                "LU",
                "LV",
                "LY",
                "MA",
                "MC",
                "MD",
                "ME",
                "MF",
                "MG",
                "MH",
                "MK",
                "ML",
                "MM",
                "MN",
                "MO",
                "MP",
                "MQ",
                "MR",
                "MS",
                "MT",
                "MU",
                "MV",
                "MW",
                "MX",
                "MY",
                "MZ",
                "NA",
                "NC",
                "NE",
                "NG",
                "NI",
                "NL",
                "NO",
                "NP",
                "NR",
                "NZ",
                "OM",
                "PA",
                "PE",
                "PF",
                "PG",
                "PH",
                "PK",
                "PL",
                "PM",
                "PR",
                "PS",
                "PT",
                "PW",
                "PY",
                "QA",
                "RE",
                "RO",
                "RS",
                "RU",
                "RW",
                "SA",
                "SB",
                "SC",
                "SD",
                "SE",
                "SG",
                "SH",
                "SI",
                "SJ",
                "SK",
                "SL",
                "SM",
                "SN",
                "SO",
                "SR",
                "SS",
                "ST",
                "SV",
                "SX",
                "SY",
                "SZ",
                "TC",
                "TD",
                "TG",
                "TH",
                "TJ",
                "TL",
                "TM",
                "TN",
                "TO",
                "TR",
                "TT",
                "TV",
                "TW",
                "TZ",
                "UA",
                "UG",
                "US",
                "UY",
                "UZ",
                "VA",
                "VC",
                "VE",
                "VG",
                "VI",
                "VN",
                "VU",
                "WF",
                "WS",
                "XK",
                "YE",
                "YT",
                "ZA",
                "ZM",
                "ZW"
              ],
              "type": "string",
              "description": "Filtering Type: `option`"
            },
            "description": "The list of countries the business operates in\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * organization\n```"
          },
          "orderUrl": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "displayUrl": {
                "minLength": 0,
                "maxLength": 2000,
                "format": "uri",
                "type": "string",
                "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\nFiltering Type: `text`"
              },
              "preferDisplayUrl": {
                "type": "boolean",
                "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
              },
              "url": {
                "minLength": 0,
                "maxLength": 2000,
                "format": "uri",
                "type": "string",
                "description": "A valid URL used to place an order at this entity\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "organizerEmail": {
            "minLength": 0,
            "format": "email",
            "type": "string",
            "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
          },
          "organizerName": {
            "minLength": 0,
            "type": "string",
            "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
          },
          "organizerPhone": {
            "minLength": 0,
            "type": "string",
            "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
          },
          "outdoorPoolCount": {
            "multipleOf": 1,
            "minimum": 0,
            "type": "number",
            "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "parking": {
            "enum": [
              "PARKING_AVAILABLE",
              "PARKING_AVAILABLE_FOR_FREE",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "paymentOptions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "AFTERPAY",
                "ALIPAY",
                "AMERICANEXPRESS",
                "ANDROIDPAY",
                "APPLEPAY",
                "ATM",
                "ATMQUICK",
                "BACS",
                "BANCONTACT",
                "BANKDEPOSIT",
                "BANKPAY",
                "BGO",
                "BITCOIN",
                "Bar",
                "CARTASI",
                "CASH",
                "CCS",
                "CHECK",
                "CHEQUESVACANCES",
                "CONB",
                "CONTACTLESSPAYME",
                "CVVV",
                "DEBITCARD",
                "DEBITNOTE",
                "DINERSCLUB",
                "DIRECTDEBIT",
                "DISCOVER",
                "ECKARTE",
                "ECOCHEQUE",
                "EKENA",
                "EMV",
                "FINANCING",
                "GIFTCARD",
                "GOPAY",
                "HAYAKAKEN",
                "HEBAG",
                "IBOD",
                "ICCARDS",
                "ICOCA",
                "ID",
                "IDEAL",
                "INCA",
                "INVOICE",
                "JCB",
                "JCoinPay",
                "JKOPAY",
                "KITACA",
                "KLA",
                "KLARNA",
                "LINEPAY",
                "MAESTRO",
                "MANACA",
                "MASTERCARD",
                "MIPAY",
                "MONIZZE",
                "MPAY",
                "Manuelle Lastsch",
                "Merpay",
                "NANACO",
                "NEXI",
                "NIMOCA",
                "OREM",
                "PASMO",
                "PAYBACKPAY",
                "PAYBOX",
                "PAYCONIQ",
                "PAYPAL",
                "PAYPAY",
                "PAYSEC",
                "PIN",
                "POSTEPAY",
                "QRCODE",
                "QUICPAY",
                "RAKUTENEDY",
                "RAKUTENPAY",
                "SAMSUNGPAY",
                "SODEXO",
                "SUGOCA",
                "SUICA",
                "SWISH",
                "TICKETRESTAURANT",
                "TOICA",
                "TRAVELERSCHECK",
                "TSCUBIC",
                "TWINT",
                "UNIONPAY",
                "VEV",
                "VISA",
                "VISAELECTRON",
                "VOB",
                "VOUCHER",
                "VPAY",
                "WAON",
                "WECHATPAY",
                "WIRETRANSFER",
                "Yucho Pay",
                "ZELLE",
                "auPay",
                "dBarai",
                "Überweisung"
              ],
              "type": "string",
              "description": "Filtering Type: `option`"
            },
            "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "performers": {
            "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "Filtering Type: `text`"
            }
          },
          "petsAllowed": {
            "enum": [
              "PETS_WELCOME",
              "PETS_WELCOME_FOR_FREE",
              "NOT_APPLICABLE",
              "NOT_ALLOWED"
            ],
            "type": "string",
            "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "photoGallery": {
            "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 500 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * hotelRoomType\n   * location\n   * organization\n   * product\n   * restaurant\n```",
            "uniqueItems": false,
            "type": "array",
            "items": {
              "required": [
                "image"
              ],
              "additionalProperties": false,
              "type": "object",
              "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
              "properties": {
                "clickthroughUrl": {
                  "minLength": 0,
                  "format": "uri",
                  "type": "string",
                  "description": "Filtering Type: `text`"
                },
                "description": {
                  "minLength": 0,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                },
                "details": {
                  "minLength": 0,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                },
                "image": {
                  "required": [
                    "url"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                  "properties": {
                    "alternateText": {
                      "minLength": 0,
                      "type": "string",
                      "description": "Filtering Type: `text`"
                    },
                    "url": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string",
                      "description": "Filtering Type: `text`"
                    }
                  }
                }
              }
            }
          },
          "pickupCoordinate": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "latitude": {
                "minimum": -90,
                "maximum": 90,
                "type": "number",
                "description": "Filtering Type: `float`"
              },
              "longitude": {
                "minimum": -180,
                "maximum": 180,
                "type": "number",
                "description": "Filtering Type: `float`"
              }
            },
            "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "pickupHours": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "friday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "holidayHours": {
                "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "date"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "date": {
                      "format": "date",
                      "type": "string",
                      "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                    },
                    "isClosed": {
                      "type": "boolean",
                      "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                    },
                    "isRegularHours": {
                      "type": "boolean",
                      "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                    },
                    "openIntervals": {
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "end": {
                            "format": "time",
                            "type": "string",
                            "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          },
                          "start": {
                            "format": "time",
                            "type": "string",
                            "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          }
                        },
                        "description": "Filtering Type: `object`"
                      },
                      "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "monday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "reopenDate": {
                "format": "date",
                "type": "string",
                "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
              },
              "saturday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "sunday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "thursday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "tuesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "wednesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              }
            },
            "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
          },
          "pinterestUrl": {
            "minLength": 0,
            "format": "uri",
            "type": "string",
            "description": "URL for your Pinterest account, format should be https://www.pinterest.com/yourUsername\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "priceRange": {
            "enum": [
              "UNSPECIFIED",
              "ONE",
              "TWO",
              "THREE",
              "FOUR"
            ],
            "type": "string",
            "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
          },
          "primaryConversationContact": {
            "minLength": 0,
            "type": "string",
            "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * organization\n   * product\n   * restaurant\n```"
          },
          "privateBeach": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "privateCarService": {
            "enum": [
              "PRIVATE_CAR_SERVICE",
              "PRIVATE_CAR_SERVICE_FOR_FREE",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "productLists": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "ids": {
                "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                }
              },
              "label": {
                "minLength": 0,
                "maxLength": 30,
                "type": "string",
                "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "products": {
            "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "questionsAndAnswers": {
            "type": "boolean",
            "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "rankTrackingCompetitors": {
            "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "required": [
                "name",
                "website"
              ],
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "name": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                },
                "website": {
                  "minLength": 0,
                  "maxLength": 255,
                  "format": "uri",
                  "type": "string",
                  "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                }
              },
              "description": "Filtering Type: `object`"
            }
          },
          "rankTrackingEnabled": {
            "type": "boolean",
            "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "rankTrackingFrequency": {
            "enum": [
              "WEEKLY",
              "MONTHLY",
              "QUARTERLY"
            ],
            "type": "string",
            "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "rankTrackingQueryTemplates": {
            "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "KEYWORD",
                "KEYWORD_ZIP",
                "KEYWORD_CITY",
                "KEYWORD_IN_CITY",
                "KEYWORD_NEAR_ME",
                "KEYWORD_CITY_STATE"
              ],
              "type": "string",
              "description": "Filtering Type: `option`"
            }
          },
          "rankTrackingSites": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "GOOGLE_DESKTOP",
                "GOOGLE_MOBILE",
                "BING_DESKTOP",
                "BING_MOBILE",
                "YAHOO_DESKTOP",
                "YAHOO_MOBILE"
              ],
              "type": "string",
              "description": "Filtering Type: `option`"
            },
            "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "reservationUrl": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "displayUrl": {
                "minLength": 0,
                "maxLength": 2000,
                "format": "uri",
                "type": "string",
                "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\nFiltering Type: `text`"
              },
              "preferDisplayUrl": {
                "type": "boolean",
                "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
              },
              "url": {
                "minLength": 0,
                "maxLength": 2000,
                "format": "uri",
                "type": "string",
                "description": "A valid URL used to make reservations at this entity\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "restaurantCount": {
            "multipleOf": 1,
            "minimum": 0,
            "type": "number",
            "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "reviewGenerationUrl": {
            "minLength": 0,
            "type": "string",
            "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "reviewResponseConversationEnabled": {
            "type": "boolean",
            "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "roomCount": {
            "multipleOf": 1,
            "minimum": 0,
            "type": "number",
            "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "roomService": {
            "enum": [
              "ROOM_SERVICE_AVAILABLE",
              "ROOM_SERVICE_AVAILABLE_24_HOURS",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "routableCoordinate": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "latitude": {
                "minimum": -90,
                "maximum": 90,
                "type": "number",
                "description": "Filtering Type: `float`"
              },
              "longitude": {
                "minimum": -180,
                "maximum": 180,
                "type": "number",
                "description": "Filtering Type: `float`"
              }
            },
            "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "salon": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "sauna": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "scuba": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "selfParking": {
            "enum": [
              "SELF_PARKING_AVAILABLE",
              "SELF_PARKING_AVAILABLE_FOR_FREE",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "seniorHours": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "friday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "holidayHours": {
                "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "date"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "date": {
                      "format": "date",
                      "type": "string",
                      "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                    },
                    "isClosed": {
                      "type": "boolean",
                      "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                    },
                    "isRegularHours": {
                      "type": "boolean",
                      "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                    },
                    "openIntervals": {
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "end": {
                            "format": "time",
                            "type": "string",
                            "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          },
                          "start": {
                            "format": "time",
                            "type": "string",
                            "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          }
                        },
                        "description": "Filtering Type: `object`"
                      },
                      "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "monday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "reopenDate": {
                "format": "date",
                "type": "string",
                "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
              },
              "saturday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "sunday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "thursday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "tuesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "wednesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              }
            },
            "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
          },
          "serviceArea": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "places": {
                "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                }
              }
            },
            "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "serviceAreaPlaces": {
            "description": "Information about the area that is served by this entity. It is specified as a list of service area names, their associated types and google place ids.\n**Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "name": {
                  "minLength": 0,
                  "maxLength": 100,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                },
                "googlePlaceId": {
                  "minLength": 0,
                  "type": "string",
                  "description": "Filtering Type: `text`"
                },
                "type": {
                  "enum": [
                    "POSTAL_CODE",
                    "REGION",
                    "COUNTY",
                    "CITY",
                    "SUBLOCALITY"
                  ],
                  "type": "string",
                  "description": "Filtering Type: `option`"
                }
              },
              "description": "Filtering Type: `object`"
            }
          },
          "services": {
            "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "smokeFreeProperty": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "snorkeling": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "socialHour": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "spa": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "specialities": {
            "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 0,
              "maxLength": 100,
              "type": "string",
              "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
            }
          },
          "tableService": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "takeoutHours": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "friday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "holidayHours": {
                "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "required": [
                    "date"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "date": {
                      "format": "date",
                      "type": "string",
                      "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                    },
                    "isClosed": {
                      "type": "boolean",
                      "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                    },
                    "isRegularHours": {
                      "type": "boolean",
                      "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                    },
                    "openIntervals": {
                      "uniqueItems": false,
                      "type": "array",
                      "items": {
                        "required": [
                          "start",
                          "end"
                        ],
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "end": {
                            "format": "time",
                            "type": "string",
                            "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          },
                          "start": {
                            "format": "time",
                            "type": "string",
                            "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                          }
                        },
                        "description": "Filtering Type: `object`"
                      },
                      "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "monday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "reopenDate": {
                "format": "date",
                "type": "string",
                "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
              },
              "saturday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "sunday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "thursday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "tuesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              },
              "wednesday": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "isClosed": {
                    "type": "boolean",
                    "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                  },
                  "openIntervals": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                      "required": [
                        "start",
                        "end"
                      ],
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "end": {
                          "format": "time",
                          "type": "string",
                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        },
                        "start": {
                          "format": "time",
                          "type": "string",
                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                        }
                      },
                      "description": "Filtering Type: `object`"
                    },
                    "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                  }
                },
                "description": "Filtering Type: `object`"
              }
            },
            "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
          },
          "tennis": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "thermalPool": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "ticketAvailability": {
            "enum": [
              "IN_STOCK",
              "SOLD_OUT",
              "PRE_ORDER",
              "UNSPECIFIED"
            ],
            "type": "string",
            "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
          },
          "ticketPriceRange": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "currencyCode": {
                "minLength": 0,
                "type": "string",
                "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
              },
              "maxValue": {
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
              },
              "minValue": {
                "pattern": "^\\d*\\.?\\d*$",
                "type": "string",
                "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
              }
            },
            "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
          },
          "ticketSaleDateTime": {
            "format": "date-time",
            "type": "string",
            "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
          },
          "ticketUrl": {
            "minLength": 0,
            "format": "uri",
            "type": "string",
            "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
          },
          "tikTokUrl": {
            "minLength": 0,
            "format": "uri",
            "type": "string",
            "description": "URL for your TikTok profile, format should be https://www.tiktok.com/yourUsername\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "time": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "end": {
                "format": "date-time",
                "type": "string",
                "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
              },
              "start": {
                "format": "date-time",
                "type": "string",
                "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
              }
            },
            "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
          },
          "timeZoneUtcOffset": {
            "minLength": 0,
            "type": "string",
            "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
          },
          "timezone": {
            "minLength": 0,
            "type": "string",
            "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * board\n   * card\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * hotelRoomType\n   * job\n   * location\n   * organization\n   * product\n   * restaurant\n```"
          },
          "tollFreePhone": {
            "minLength": 0,
            "type": "string",
            "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "treadmill": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "ttyPhone": {
            "minLength": 0,
            "type": "string",
            "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "turndownService": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "twitterHandle": {
            "minLength": 0,
            "maxLength": 15,
            "type": "string",
            "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "uberLink": {
            "required": [
              "presentation"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "presentation": {
                "enum": [
                  "BUTTON",
                  "LINK"
                ],
                "type": "string",
                "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
              },
              "text": {
                "minLength": 0,
                "maxLength": 100,
                "type": "string",
                "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "uberTripBranding": {
            "required": [
              "text",
              "url",
              "description"
            ],
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "description": {
                "minLength": 0,
                "maxLength": 150,
                "type": "string",
                "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
              },
              "text": {
                "minLength": 0,
                "maxLength": 28,
                "type": "string",
                "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
              },
              "url": {
                "minLength": 0,
                "format": "uri",
                "type": "string",
                "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "valetParking": {
            "enum": [
              "VALET_PARKING_AVAILABLE",
              "VALET_PARKING_AVAILABLE_FOR_FREE",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "validThrough": {
            "format": "date-time",
            "type": "string",
            "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
          },
          "vendingMachine": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "venueName": {
            "minLength": 0,
            "type": "string",
            "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
          },
          "videos": {
            "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * hotelRoomType\n   * location\n   * organization\n   * product\n   * restaurant\n```",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "required": [
                "video"
              ],
              "additionalProperties": false,
              "type": "object",
              "properties": {
                "description": {
                  "minLength": 0,
                  "maxLength": 140,
                  "type": "string",
                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                },
                "video": {
                  "required": [
                    "url"
                  ],
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "url": {
                      "minLength": 0,
                      "format": "uri",
                      "type": "string",
                      "description": "Filtering Type: `text`"
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              },
              "description": "Filtering Type: `object`"
            }
          },
          "wadingPool": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "wakeUpCalls": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "walkableCoordinate": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "latitude": {
                "minimum": -90,
                "maximum": 90,
                "type": "number",
                "description": "Filtering Type: `float`"
              },
              "longitude": {
                "minimum": -180,
                "maximum": 180,
                "type": "number",
                "description": "Filtering Type: `float`"
              }
            },
            "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "waterPark": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "waterSkiing": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "watercraft": {
            "enum": [
              "WATERCRAFT_RENTALS",
              "WATERCRAFT_RENTALS_FOR_FREE",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "waterslide": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "wavePool": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "websiteUrl": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "displayUrl": {
                "minLength": 0,
                "maxLength": 2000,
                "format": "uri",
                "type": "string",
                "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\nFiltering Type: `text`"
              },
              "preferDisplayUrl": {
                "type": "boolean",
                "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
              },
              "url": {
                "minLength": 0,
                "maxLength": 2000,
                "format": "uri",
                "type": "string",
                "description": "A valid URL for this entity's website\n\nFiltering Type: `text`"
              }
            },
            "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          },
          "weightMachine": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "wheelchairAccessible": {
            "enum": [
              "YES",
              "NO",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "wifiAvailable": {
            "enum": [
              "WIFI_AVAILABLE",
              "WIFI_AVAILABLE_FOR_FREE",
              "NOT_APPLICABLE"
            ],
            "type": "string",
            "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "workRemote": {
            "type": "boolean",
            "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
          },
          "yearEstablished": {
            "multipleOf": 1,
            "minimum": 1000,
            "maximum": 2028,
            "type": "number",
            "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "yearLastRenovated": {
            "multipleOf": 1,
            "minimum": 1000,
            "maximum": 2028,
            "type": "number",
            "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
          },
          "yextDisplayCoordinate": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "latitude": {
                "minimum": -90,
                "maximum": 90,
                "type": "number",
                "description": "Filtering Type: `float`"
              },
              "longitude": {
                "minimum": -180,
                "maximum": 180,
                "type": "number",
                "description": "Filtering Type: `float`"
              }
            },
            "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
          },
          "yextDropoffCoordinate": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "latitude": {
                "minimum": -90,
                "maximum": 90,
                "type": "number",
                "description": "Filtering Type: `float`"
              },
              "longitude": {
                "minimum": -180,
                "maximum": 180,
                "type": "number",
                "description": "Filtering Type: `float`"
              }
            },
            "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "yextPickupCoordinate": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "latitude": {
                "minimum": -90,
                "maximum": 90,
                "type": "number",
                "description": "Filtering Type: `float`"
              },
              "longitude": {
                "minimum": -180,
                "maximum": 180,
                "type": "number",
                "description": "Filtering Type: `float`"
              }
            },
            "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "yextRoutableCoordinate": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "latitude": {
                "minimum": -90,
                "maximum": 90,
                "type": "number",
                "description": "Filtering Type: `float`"
              },
              "longitude": {
                "minimum": -180,
                "maximum": 180,
                "type": "number",
                "description": "Filtering Type: `float`"
              }
            },
            "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "yextWalkableCoordinate": {
            "additionalProperties": false,
            "type": "object",
            "properties": {
              "latitude": {
                "minimum": -90,
                "maximum": 90,
                "type": "number",
                "description": "Filtering Type: `float`"
              },
              "longitude": {
                "minimum": -180,
                "maximum": 180,
                "type": "number",
                "description": "Filtering Type: `float`"
              }
            },
            "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
          },
          "youTubeChannelUrl": {
            "minLength": 0,
            "format": "uri",
            "type": "string",
            "description": "URL for your YouTube channel, format should be https://www.youtube.com/c/yourUsername\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * organization\n   * restaurant\n```"
          }
        }
      },
      "AddRequest": {
        "title": "Location Add Request Response",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 39483,
            "readOnly": true,
            "description": "The Yext ID of the created add request."
          },
          "locationMode": {
            "type": "string",
            "description": "Whether the request is to add service for an existing location or to create a new location and add service to it.\n",
            "enum": [
              "EXISTING",
              "NEW"
            ]
          },
          "existingLocationId": {
            "type": "string",
            "description": "The existing location ID to add service to.\n\nThis field is provided only when *locationMode* is EXISTING. Either this field or *newLocationId* will be provided.\n"
          },
          "newLocationId": {
            "type": "string",
            "description": "The new location ID to create and add service to.\n\nThis field is provided only when *locationMode* is NEW. Either this field or *existingLocationId* will be provided.\n"
          },
          "newLocationAccountId": {
            "type": "string",
            "description": "*(Partner Portal mode)* The account ID to create a new location under.\n\nThis field is provided only for Partner Portal and when *locationMode* is NEW.\n"
          },
          "newLocationAccountName": {
            "type": "string",
            "description": "*(Partner Portal mode)* The account name to create a new location under.\n\nThis field is provided only for Partner Portal and when *locationMode* is NEW and when *newLocationAccountName* was specified in the add request.\n"
          },
          "newAccountParentAccountId": {
            "type": "string",
            "description": "*(Partner Portal mode)* The account ID to create a new account and location under.\n\nThis field is provided only for Partner Portal, when *locationMode* is NEW and *newAccountParentAccountId* was specified in the add request.\n"
          },
          "newLocationData": {
            "description": "The location profile data used in creating a new location for this add request.\n\nOptional. Provided only for the **Add Requests: Create (New Location)** endpoint.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Location"
              }
            ]
          },
          "newEntityData": {
            "description": "The entity profile data used in creating a new entity for this add request.\n\nOptional. Provided only for the **Add Requests: Create (New Location)** endpoint.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Entity"
              }
            ]
          },
          "skus": {
            "type": "array",
            "description": "List of SKUs to sign the location up for, from among those listed in the **Available Services: List** response with Location recipientType.\n",
            "items": {
              "type": "string"
            },
            "example": [
              "SKU-00000167",
              "SKU-00000168"
            ]
          },
          "agreementId": {
            "type": "integer",
            "description": "The Agreement ID of the agreement that services will be added under.\n"
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "description": "The current status of the add request.",
            "enum": [
              "SUBMITTED",
              "PROCESSING",
              "COMPLETE",
              "CANCELED",
              "REVIEW",
              "FAILED"
            ]
          },
          "dateSubmitted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date the add request was submitted."
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date the add request was completed. An empty string if the request has not been completed."
          },
          "statusDetail": {
            "type": "string",
            "readOnly": true,
            "description": "Results from processing."
          }
        }
      },
      "ExistingLocationAddRequest": {
        "type": "object",
        "required": [
          "existingLocationId",
          "skus"
        ],
        "properties": {
          "existingLocationId": {
            "type": "string",
            "description": "ID of the location to add service for. It must already be in your account (or, if you use the Partner Portal, any of your sub-accounts).",
            "example": "A48934"
          },
          "existingLocationAccountId": {
            "type": "string",
            "description": "*(Partner Portal mode only)* If the *existingLocationId* you specified is not unique among your sub-accounts, use this to specify which account the existing location is in.\n",
            "example": "B098329"
          },
          "skus": {
            "type": "array",
            "description": "List of SKUs that you would like to sign the location up for, from among those listed in the **Available Services: List** response with Location recipientType.\n",
            "items": {
              "type": "string"
            },
            "example": [
              "SKU-00000167",
              "SKU-00000168"
            ]
          },
          "agreementId": {
            "type": "integer",
            "description": "*(Advanced field)* The Agreement ID of the agreement that services will be added under. This is set automatically by Yext when you create the add request. (You can specify it yourself, but should not do so unless you have intentionally set up multiple active agreements with Yext, since this could cause your integration to break when you renew or upgrade your agreement.)\n",
            "example": 1588
          },
          "forceReview": {
            "type": "boolean",
            "description": "*(Sandbox API only)* Forces this add request into the REVIEW status if it otherwise would have completed successfully.\n",
            "example": false
          }
        }
      },
      "SkuQuantity": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string",
            "example": "SKU-00000195",
            "description": "The specified SKU."
          },
          "quantity": {
            "type": "integer",
            "example": 1,
            "description": "The quantity of the specified SKU."
          }
        }
      },
      "ExistingSubAccountAddRequest": {
        "type": "object",
        "required": [
          "subAccountId",
          "skuAdditions"
        ],
        "properties": {
          "subAccountId": {
            "type": "string",
            "description": "The existing account ID to add service to.\n",
            "example": "B093879"
          },
          "skuAdditions": {
            "type": "array",
            "description": "List of objects representing the SKUs to be added (or increased in quantity) to the\naccount, from among those listed in the **Available Services: List** response with Sub-Account recipientType. If the sub-account already has an active service for a SKU, the service quantity will be increased. The added quantity will default to 1 for any SKU without a specified quantity.\n",
            "items": {
              "$ref": "#/components/schemas/SkuQuantity"
            },
            "example": [
              {
                "sku": "SKU-00000195",
                "quantity": 1
              },
              {
                "sku": "SKU-00000196",
                "quantity": 2
              }
            ]
          },
          "agreementId": {
            "type": "integer",
            "description": "*(Advanced field)* The Agreement ID of the agreement that services will be added under. This is set automatically by Yext when you create the add request. (You can specify it yourself, but should not do so unless you have intentionally set up multiple active agreements with Yext, since this could cause your integration to break when you renew or upgrade your agreement.).\n",
            "example": 1588
          }
        }
      },
      "SubAccountAddRequest": {
        "title": "Sub-Account Add Request Response",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 15037,
            "readOnly": true,
            "description": "The Yext ID of the created add request."
          },
          "subAccountId": {
            "type": "string",
            "description": "The existing sub-account ID to add service to.\n"
          },
          "skuAdditions": {
            "type": "array",
            "description": "List of objects representing the SKUs to be added (or increased in quantity) to the sub-account, from among those listed in the **Available Services: List** response with Sub-Account recipientType. If the sub-account already has an active service for a SKU, the service quantity will be increased. The added quantity will default to 1 for any SKU without a specified quantity.\n",
            "items": {
              "$ref": "#/components/schemas/SkuQuantity"
            },
            "example": [
              {
                "sku": "SKU-00000195",
                "quantity": 1
              },
              {
                "sku": "SKU-00000196",
                "quantity": 2
              }
            ]
          },
          "agreementId": {
            "type": "integer",
            "description": "The Agreement ID of the agreement that services will be added under.\n"
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "description": "The current status of the add request.",
            "enum": [
              "SUBMITTED",
              "PROCESSING",
              "COMPLETE",
              "CANCELED",
              "FAILED"
            ]
          },
          "dateSubmitted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date the add request was submitted."
          },
          "statusDetail": {
            "type": "string",
            "readOnly": true,
            "description": "Results from processing."
          }
        }
      },
      "CancelServicesRequest": {
        "type": "object",
        "required": [
          "locationId"
        ],
        "properties": {
          "locationId": {
            "type": "string",
            "example": "L439843"
          },
          "locationAccountId": {
            "type": "string",
            "example": "C34833",
            "description": "*(Partner Portal mode only)* The account that the location receiving service is in.\n"
          },
          "agreementId": {
            "type": "integer",
            "example": 1588,
            "description": "The ID of the agreement under which you want services canceled. You do not need to supply this except in advanced scenarios."
          },
          "skus": {
            "type": "array",
            "description": "List of SKUs that you would like to cancel on the location. The location must have active services for at least one of the provided SKUs. If you do not provide a list of SKUs, all active services for the location will be canceled.",
            "items": {
              "type": "string"
            },
            "example": [
              "SKU-00000167",
              "SKU-00000168"
            ]
          }
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 34983,
            "description": "Yext ID for the service."
          },
          "locationId": {
            "type": "string",
            "example": "L439843",
            "description": "The location receiving service."
          },
          "locationAccountId": {
            "type": "string",
            "example": "C34833",
            "description": "*(Partner Portal mode only)* The account that the location receiving service is in.\n"
          },
          "agreementId": {
            "type": "integer",
            "description": "The ID of your agreement with Yext under which this service is being delivered. This is important to you only in advanced scenarios where you have set up multiple active agreements with Yext."
          },
          "sku": {
            "type": "string",
            "example": "SKU-00048343"
          },
          "serviceDescription": {
            "type": "string",
            "example": "Partner Location Cloud (Starter)"
          },
          "started": {
            "type": "string",
            "format": "date",
            "description": "The date that this service started."
          },
          "stopped": {
            "type": "string",
            "format": "date",
            "description": "Optional. The date that this service stopped."
          },
          "stopOnDate": {
            "type": "string",
            "format": "date",
            "description": "Optional. Future date on which the service should be stopped if it's still active when that date arrives."
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "STOPPED"
            ]
          }
        }
      },
      "CancelSubAccountServicesRequest": {
        "type": "object",
        "required": [
          "subAccountId",
          "skuRemovals"
        ],
        "properties": {
          "subAccountId": {
            "type": "string",
            "example": "B093879"
          },
          "skuRemovals": {
            "type": "array",
            "description": "List of objects representing the SKUs to be removed (or decreased in quantity) from the sub-account. The sub-account must have active services for at least one of the provided SKUs. If the decrease in quantity would result in 0 service quantity, the service will be STOPPED. The removed quantity will default to 1 for any SKU without a specified quantity. To cancel all active services provisioned on the account, use the **Services: Cancel All (Account)** endpoint.\n",
            "items": {
              "$ref": "#/components/schemas/SkuQuantity"
            },
            "example": [
              {
                "sku": "SKU-00000195",
                "quantity": 1
              },
              {
                "sku": "SKU-00000196",
                "quantity": 2
              }
            ]
          },
          "agreementId": {
            "type": "integer",
            "example": 1588,
            "description": "The ID of the agreement under which you want services canceled. You do not need to supply this except in advanced scenarios."
          }
        }
      },
      "SubAccountService": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 69072,
            "description": "Yext ID for the service."
          },
          "subAccountId": {
            "type": "string",
            "example": "B093879",
            "description": "The sub-account receiving service."
          },
          "agreementId": {
            "type": "integer",
            "description": "The ID of your agreement with Yext under which this service is being delivered. This is important to you only in advanced scenarios where you have set up multiple active agreements with Yext."
          },
          "sku": {
            "type": "string",
            "example": "SKU-00000195"
          },
          "serviceDescription": {
            "type": "string",
            "example": "Answers Experience"
          },
          "serviceQuantity": {
            "type": "integer",
            "example": 2,
            "description": "The quantity of the SKU that the service currently has."
          },
          "started": {
            "type": "string",
            "format": "date",
            "description": "The date that this service started."
          },
          "stopped": {
            "type": "string",
            "format": "date",
            "description": "Optional. The date that this service stopped."
          },
          "stopOnDate": {
            "type": "string",
            "format": "date",
            "description": "Optional. Future date on which the service should be stopped if it's still active when that date arrives."
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "STOPPED"
            ]
          }
        }
      },
      "CancelAllSubAccountServicesRequest": {
        "type": "object",
        "required": [
          "subAccountId"
        ],
        "properties": {
          "subAccountId": {
            "type": "string",
            "example": "B093879"
          },
          "agreementId": {
            "type": "integer",
            "example": 1588,
            "description": "The ID of the agreement under which you want services canceled. You do not need to supply this except in advanced scenarios."
          }
        }
      },
      "ProcessReviewAddRequest": {
        "type": "object",
        "required": [
          "addRequestId",
          "status"
        ],
        "properties": {
          "addRequestId": {
            "type": "integer",
            "description": "ID of the add request with REVIEW status"
          },
          "status": {
            "type": "string",
            "description": "Action to take on the add request.",
            "example": "COMPLETE"
          }
        }
      },
      "CreateSubAccountRequest": {
        "type": "object",
        "required": [
          "newSubAccountId",
          "newSubAccountName",
          "countryCode"
        ],
        "properties": {
          "newSubAccountId": {
            "type": "string",
            "description": "The external sub-account ID for the new sub-account.\n",
            "example": "B093879"
          },
          "newSubAccountName": {
            "type": "string",
            "description": "The name for the new sub-account.\n",
            "example": "Yext Sub-Account"
          },
          "countryCode": {
            "type": "string",
            "description": "The country code for the new sub-account.\n",
            "example": "US"
          }
        }
      },
      "CreateSubAccount": {
        "title": "Create Sub-Account Response",
        "type": "object",
        "properties": {
          "newSubAccountId": {
            "type": "string",
            "description": "The external sub-account ID for the newly created sub-account.\n",
            "example": "B093879"
          },
          "newSubAccountName": {
            "type": "string",
            "description": "The name for the newly created sub-account.\n",
            "example": "Yext Sub-Account"
          },
          "countryCode": {
            "type": "string",
            "description": "The country code for the newly created sub-account.\n",
            "example": "US"
          }
        }
      },
      "Source": {
        "type": "object",
        "required": [
          "type",
          "url"
        ],
        "description": "This is an object containing the information about where the Resources are located. The attributes in this object include type, url and variables.\n",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of repository for resources",
            "example": "GitHub"
          },
          "url": {
            "type": "string",
            "description": "URL path for the CaC resources. It varies with the source type.",
            "example": "https://github.com/YextSolutions/basic-free-trial"
          },
          "variables": {
            "type": "object",
            "description": "This is an object containing any resources variables that should be passed to the applier.",
            "example": {
              "title": "Yext source"
            }
          }
        }
      },
      "ResourcesApplyRequest": {
        "type": "object",
        "required": [
          "targetAccountId",
          "source"
        ],
        "properties": {
          "targetAccountId": {
            "type": "string",
            "description": "ID for the account which the resources will be applied to.\n",
            "example": "B093879"
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          }
        }
      },
      "ResourcesApplyRequestResponse": {
        "title": "Resources Apply Request Response",
        "type": "object",
        "properties": {
          "targetAccountId": {
            "type": "string",
            "description": "ID for the account which the resources were applied to.\n",
            "example": "B093879"
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          },
          "status": {
            "type": "string",
            "readOnly": true,
            "description": "The current status of the resources apply request.",
            "enum": [
              "SUBMITTED",
              "PROCESSING",
              "COMPLETE",
              "CANCELED",
              "REVIEW",
              "FAILED"
            ]
          },
          "dateSubmitted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date the resources apply request was submitted."
          },
          "dateCompleted": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "description": "The date the resources apply request was completed. An empty string if the request has not been completed."
          },
          "statusDetail": {
            "type": "string",
            "readOnly": true,
            "description": "Results from processing."
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": "CUST-439843"
          },
          "locationCount": {
            "type": "integer",
            "readOnly": true,
            "description": "The number of locations in this account."
          },
          "subAccountCount": {
            "type": "integer",
            "readOnly": true,
            "description": "The number of sub-accounts directly under this account, if any."
          },
          "parentAccountId": {
            "type": "string",
            "description": "Customer-provided ID of the account that this is a sub-account of, if any. Not provided if this is a top-level account."
          },
          "accountName": {
            "type": "string",
            "description": "The name of this account."
          },
          "contactFirstName": {
            "type": "string",
            "description": "First name of the contact user for this account."
          },
          "contactLastName": {
            "type": "string",
            "description": "Last name of the contact user for this account."
          },
          "contactPhone": {
            "type": "string",
            "description": "Phone number of the contact user for this account."
          },
          "contactEmail": {
            "type": "string",
            "description": "Email address of the contact user for this account."
          }
        }
      },
      "UpdateAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "New ID of the account"
          },
          "accountName": {
            "type": "string",
            "description": "New name of the account"
          }
        }
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "Error Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ErrorResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMetaWithError"
                },
                "response": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "AvailableServicesResponse": {
        "description": "Available Service Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "AvailableServiceResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "availableServices": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AvailableService"
                      }
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "availableServices": [
                  {
                    "sku": "SKU-00000167",
                    "serviceDescription": "Location Cloud Starter (Partner)",
                    "recipientType": "Location",
                    "agreementId": 1588,
                    "minimumUsage": 1,
                    "minimumUsageUnits": "MONTHS"
                  },
                  {
                    "sku": "SKU-00000168",
                    "serviceDescription": "Location Cloud Professional (Partner)",
                    "recipientType": "Location",
                    "agreementId": 1588,
                    "minimumUsage": 1,
                    "minimumUsageUnits": "MONTHS"
                  },
                  {
                    "sku": "SKU-00000170",
                    "serviceDescription": "Axciom Add-on (Partner)",
                    "recipientType": "Location",
                    "agreementId": 1588,
                    "addOnTo": [
                      "SKU-00000167",
                      "SKU-00000168"
                    ]
                  },
                  {
                    "sku": "SKU-00000195",
                    "serviceDescription": "Answers Experience",
                    "recipientType": "Sub-Account",
                    "agreementId": 1588,
                    "minimumUsage": 1,
                    "minimumUsageUnits": "MONTHS"
                  }
                ],
                "count": 4
              }
            }
          }
        }
      },
      "NewLocationAddRequestsResponse": {
        "description": "Location Add Request Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "AddRequestResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/AddRequest"
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "id": 13046,
                "locationMode": "NEW",
                "newLocationId": "LOC-123",
                "newLocationData": {
                  "id": "LOC-123",
                  "locationName": "Yext",
                  "address": "1 Madison Avenue, 5th Floor",
                  "city": "New York",
                  "state": "NY",
                  "zip": "10010",
                  "countryCode": "US",
                  "language": "en",
                  "phone": "18884442988",
                  "categoryIds": [
                    "1"
                  ],
                  "locationType": "LOCATION"
                },
                "skus": [
                  "SKU-00000167"
                ],
                "agreementId": 1588,
                "status": "SUBMITTED",
                "dateSubmitted": "2017-05-12T16:08:25",
                "statusDetail": "The request has been submitted for processing. Updated status should be available soon, usually within seconds."
              }
            }
          }
        }
      },
      "ExistingLocationAddRequestsResponse": {
        "description": "Location Add Request Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "AddRequestResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/AddRequest"
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "id": 13047,
                "existingLocationId": "A48934",
                "locationMode": "EXISTING",
                "skus": [
                  "SKU-00000170"
                ],
                "agreementId": 1588,
                "status": "SUBMITTED",
                "dateSubmitted": "2017-05-13T14:22:18",
                "statusDetail": "The request has been submitted for processing. Updated status should be available soon, usually within seconds."
              }
            }
          }
        }
      },
      "ExistingSubAccountAddRequestsResponse": {
        "description": "Sub-Account Add Request Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "SubAccountAddRequestResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/SubAccountAddRequest"
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "id": 15037,
                "subAccountId": "B093879",
                "skuAdditions": [
                  {
                    "sku": "SKU-00000195",
                    "quantity": 1
                  },
                  {
                    "sku": "SKU-00000196",
                    "quantity": 2
                  }
                ],
                "agreementId": 1588,
                "status": "SUBMITTED",
                "dateSubmitted": "2021-02-26T14:22:18",
                "statusDetail": "The request has been submitted for processing. Updated status should be available soon, usually within seconds."
              }
            }
          }
        }
      },
      "CancelServicesResponse": {
        "description": "Cancel Location Services Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "CancelServicesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Service"
                  }
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": [
                {
                  "id": 8018,
                  "sku": "DEV-00010003",
                  "serviceDescription": "Axciom Add-on (Partner)",
                  "agreementId": 1588,
                  "locationId": "1775725677797917505",
                  "status": "STOPPED",
                  "started": "2017-02-10",
                  "stopped": "2017-05-14"
                }
              ]
            }
          }
        }
      },
      "CancelSubAccountServicesResponse": {
        "description": "Cancel Sub-Account Services Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "CancelSubAccountServicesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubAccountService"
                  }
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": [
                {
                  "id": 9000,
                  "subAccountId": "B093879",
                  "agreementId": 1588,
                  "sku": "SKU-00000195",
                  "serviceDescription": "Answers Experience",
                  "serviceQuantity": 2,
                  "started": "2021-01-10",
                  "status": "ACTIVE"
                },
                {
                  "id": 9001,
                  "subAccountId": "B093879",
                  "agreementId": 1588,
                  "sku": "SKU-00000196",
                  "serviceDescription": "Answers Experience 2",
                  "serviceQuantity": 1,
                  "started": "2021-01-10",
                  "stopped": "2021-03-01",
                  "status": "STOPPED"
                }
              ]
            }
          }
        }
      },
      "CancelAllSubAccountServicesResponse": {
        "description": "Cancel All Sub-Account Services Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "CancelAllSubAccountServicesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubAccountService"
                  }
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": [
                {
                  "id": 9000,
                  "subAccountId": "B093879",
                  "agreementId": 1588,
                  "sku": "SKU-00000195",
                  "serviceDescription": "Answers Experience",
                  "serviceQuantity": 1,
                  "started": "2021-01-10",
                  "stopped": "2021-03-01",
                  "status": "STOPPED"
                },
                {
                  "id": 9001,
                  "subAccountId": "B093879",
                  "agreementId": 1588,
                  "sku": "SKU-00000196",
                  "serviceDescription": "Answers Experience 2",
                  "serviceQuantity": 3,
                  "started": "2021-01-10",
                  "stopped": "2021-03-01",
                  "status": "STOPPED"
                },
                {
                  "id": 9002,
                  "subAccountId": "B093879",
                  "agreementId": 1588,
                  "sku": "SKU-00000197",
                  "serviceDescription": "Answers Experience 3",
                  "serviceQuantity": 1,
                  "started": "2021-01-11",
                  "stopped": "2021-03-01",
                  "status": "STOPPED"
                }
              ]
            }
          }
        }
      },
      "EmptyResponse": {
        "description": "Empty Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "EmptyResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "AddRequestsResponse": {
        "description": "Location Add Requests Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "AddRequestsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "addRequests": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AddRequest"
                      }
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "addRequests": [
                  {
                    "id": 13027,
                    "locationMode": "NEW",
                    "newLocationId": "LOC-001",
                    "skus": [
                      "SKU-00000167"
                    ],
                    "agreementId": 1588,
                    "status": "COMPLETE",
                    "dateSubmitted": "2017-05-10T19:23:07",
                    "dateCompleted": "2017-05-10T19:31:29",
                    "statusDetail": "The request was completed and the specified services were started. Location ID LOC-123 was created in this request."
                  },
                  {
                    "id": 13026,
                    "locationMode": "NEW",
                    "newLocationId": "LOC-003",
                    "skus": [
                      "SKU-00000167"
                    ],
                    "agreementId": 1588,
                    "status": "REVIEW",
                    "dateSubmitted": "2017-05-10T19:23:07",
                    "dateCompleted": "",
                    "statusDetail": "Yext is reviewing this request to ensure that the specified location does not already have incompatible service in another account. You do not need to take any action."
                  },
                  {
                    "id": 13025,
                    "locationMode": "EXISTING",
                    "existingLocationId": "Yext NYC",
                    "skus": [
                      "SKU-00000167"
                    ],
                    "agreementId": 1588,
                    "status": "COMPLETE",
                    "dateSubmitted": "2017-05-10T18:36:52",
                    "dateCompleted": "2017-05-10T18:36:53",
                    "statusDetail": "The request was completed and the specified services were started."
                  }
                ],
                "count": 3
              }
            }
          }
        }
      },
      "AddRequestResponse": {
        "description": "Location Add Request Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "AddRequestResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/AddRequest"
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "id": 13027,
                "locationMode": "NEW",
                "skus": [
                  "SKU-00000167"
                ],
                "agreementId": 1588,
                "status": "COMPLETE",
                "dateSubmitted": "2017-05-10T19:23:07",
                "dateCompleted": "2017-05-10T19:31:29",
                "statusDetail": "The request was completed and the specified services were started. Location ID LOC-123 was created in this request."
              }
            }
          }
        }
      },
      "SubAccountAddRequestsResponse": {
        "description": "Sub-Account Add Requests Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "SubAccountAddRequestsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "addRequests": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubAccountAddRequest"
                      }
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "addRequests": [
                  {
                    "id": 15037,
                    "subAccountId": "B093879",
                    "skuAdditions": [
                      {
                        "sku": "SKU-00000195",
                        "quantity": 1
                      },
                      {
                        "sku": "SKU-00000196",
                        "quantity": 2
                      }
                    ],
                    "agreementId": 1588,
                    "status": "COMPLETE",
                    "dateSubmitted": "2021-02-26T14:22:48",
                    "dateCompleted": "2021-02-26T14:23:05",
                    "statusDetail": "The request was completed and the specified services were started/updated."
                  },
                  {
                    "id": 15038,
                    "subAccountId": "B093879",
                    "skuAdditions": [
                      {
                        "sku": "SKU-00000195",
                        "quantity": 1
                      },
                      {
                        "sku": "SKU-00000196",
                        "quantity": 2
                      }
                    ],
                    "agreementId": 1588,
                    "status": "COMPLETE",
                    "dateSubmitted": "2021-02-27T15:22:48",
                    "dateCompleted": "2021-02-27T15:23:05",
                    "statusDetail": "The request was completed and the specified services were started/updated."
                  },
                  {
                    "id": 15039,
                    "subAccountId": "B093879",
                    "skuAdditions": [
                      {
                        "sku": "SKU-00000195",
                        "quantity": 1
                      }
                    ],
                    "agreementId": 1588,
                    "status": "COMPLETE",
                    "dateSubmitted": "2021-02-27T15:42:47",
                    "dateCompleted": "2021-02-27T15:43:01",
                    "statusDetail": "The request was completed and the specified services were started/updated."
                  }
                ],
                "count": 3
              }
            }
          }
        }
      },
      "SubAccountAddRequestResponse": {
        "description": "Sub-Account Add Request Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "SubAccountAddRequestResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/SubAccountAddRequest"
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "id": 15037,
                "subAccountId": "B093879",
                "skuAdditions": [
                  {
                    "sku": "SKU-00000195",
                    "quantity": 1
                  },
                  {
                    "sku": "SKU-00000196",
                    "quantity": 2
                  }
                ],
                "agreementId": 1588,
                "status": "COMPLETE",
                "dateSubmitted": "2021-02-26T14:22:48",
                "dateCompleted": "2021-02-26T14:23:05",
                "statusDetail": "The request was completed and the specified services were started/updated."
              }
            }
          }
        }
      },
      "ServicesResponse": {
        "description": "Location Services Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ServicesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Service"
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "count": 3,
                "services": [
                  {
                    "id": 8000,
                    "sku": "SKU-00000170",
                    "serviceDescription": "Axciom Add-on (Partner)",
                    "agreementId": 1588,
                    "locationId": "LOC-123",
                    "status": "ACTIVE",
                    "started": "2017-05-13"
                  },
                  {
                    "id": 8001,
                    "sku": "SKU-00000167",
                    "serviceDescription": "Location Cloud Starter (Partner)",
                    "agreementId": 1588,
                    "locationId": "LOC-123",
                    "status": "ACTIVE",
                    "started": "2017-05-10"
                  },
                  {
                    "id": 8002,
                    "sku": "SKU-00000167",
                    "serviceDescription": "Location Cloud Starter (Partner)",
                    "agreementId": 1588,
                    "locationId": "LOC-267",
                    "status": "STOPPED",
                    "started": "2017-05-10",
                    "stopped": "2017-05-15"
                  }
                ]
              }
            }
          }
        }
      },
      "SubAccountServicesResponse": {
        "description": "Sub-Account Services Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "SubAccountServicesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubAccountService"
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "count": 3,
                "services": [
                  {
                    "id": 8000,
                    "subAccountId": "B093879",
                    "agreementId": 1588,
                    "sku": "SKU-00000195",
                    "serviceDescription": "Answers Experience",
                    "serviceQuantity": 3,
                    "started": "2021-02-03",
                    "status": "ACTIVE"
                  },
                  {
                    "id": 8001,
                    "subAccountId": "B093879",
                    "agreementId": 1588,
                    "sku": "SKU-00000196",
                    "serviceDescription": "Answers Experience 2",
                    "serviceQuantity": 1,
                    "started": "2021-02-25",
                    "status": "ACTIVE"
                  },
                  {
                    "id": 8002,
                    "subAccountId": "B093879",
                    "agreementId": 1588,
                    "sku": "SKU-00000197",
                    "serviceDescription": "Answers Experience 3",
                    "serviceQuantity": 1,
                    "started": "2021-02-26",
                    "status": "ACTIVE"
                  }
                ]
              }
            }
          }
        }
      },
      "CreateSubAccountResponse": {
        "description": "Create Sub-Account Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "CreateSubAccountResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/CreateSubAccount"
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "newSubAccountId": "B093879",
                "newSubAccountName": "Yext Sub-Account",
                "countryCode": "US"
              }
            }
          }
        }
      },
      "ResourcesApplyRequestResponse": {
        "description": "Resources Apply Request Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ResourcesApplyRequestResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/ResourcesApplyRequestResponse"
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "id": 13027,
                "targetAccountId": "B093879",
                "status": "COMPLETE",
                "dateSubmitted": "2017-05-10T19:23:07",
                "dateCompleted": "2017-05-10T19:31:29",
                "source": {
                  "type": "GITHUB",
                  "url": "https://github.com/YextSolutions/basic-free-trial",
                  "variables": {
                    "title": "Yext source"
                  }
                }
              }
            }
          }
        }
      },
      "AccountsResponse": {
        "description": "Accounts Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "AccountsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "accounts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "count": 1,
                "accounts": [
                  {
                    "accountId": "1264805",
                    "locationCount": 11,
                    "subAccountCount": 0,
                    "accountName": "Yext Demo Account",
                    "contactFirstName": "John",
                    "contactLastName": "Doe",
                    "contactPhone": "1234567890",
                    "contactEmail": "johndoe@email.com"
                  }
                ]
              }
            }
          }
        }
      },
      "AccountResponse": {
        "description": "Account Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "AccountResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "accountId": 1264805,
                "locationCount": 11,
                "subAccountCount": 0,
                "accountName": "Yext Demo Account",
                "contactFirstName": "John",
                "contactLastName": "Doe",
                "contactPhone": "1234567890",
                "contactEmail": "johndoe@email.com"
              }
            }
          }
        }
      },
      "IdResponse": {
        "description": "ID Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "IdResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "api_key": []
    },
    {
      "api-key": []
    }
  ],
  "tags": [
    {
      "name": "Administrative API",
      "description": "NOTE: You need a sandbox account to test your Administrative API integration. Contact your Account Manager to have one created for you."
    }
  ]
}