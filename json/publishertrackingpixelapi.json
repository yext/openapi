{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "title": "Pixel Documentation",
    "description": "# Overview\nIt’s important that we track listing impressions and clicks so that we can demonstrate the value of the Yext Listings product to our customers. To collect these statistics, you should embed a tracking pixel on any pages in your site that include Yext-powered listings.\n\n**Notes**\n* Performance statistics are not used to audit for billing purposes; they are simply for the customer’s benefit.\n* If the listing is being shown in a location where the pixel cannot be embedded (e.g., on a mobile device), then you can make a server-side call to the pixel and pass additional parameters that would usually be obtained from the pixel request.\n\n**Requirements**\n* The crucial tracking requisites are impressions (search results pages and business profile pages) and website clicks (search results pages and business profile pages).\n* Publishers must separate statistics across their different properties (e.g., mobile app stats vs web stats)\n\n## Examples\nYou can implement the click-tracking pixel by using JavaScript to add an img tag to the page's HTML:\n<pre><code>\nimg src=\"https://pixel.yext-pub.com/plpixel?source=detailspage&action=click&target=website&pid=*yourPID*&ids=113159\" width=1 height=1\n</code></pre>\n\nAnother example of how to implement website click-tracking appears below.\n\n<pre><code>\nfunction yext_track(target){\n    var track = new Image(); \n    track.src=\"https://pixel.yext-pub.com/plpixel?source=detailspage&action=click&pid=*yourPID*&ids=113159\" + \"&target=\" + target;\n}\n</code></pre>\n\nKeeping Page Loads Fast\n* The simplest way to add a tracking pixel to your site is to use an img tag, as shown above.\n* If you are concerned about any small latency this tag will add to your page load time, you can use JavaScript to add it to the DOM after the page is loaded.\n\nFor example:\n\n<pre><code>\n(function() {\n  var img = document.createElement('img');\n  img.setAttribute('src', 'https://pixel.yext-pub.com/plpixel?pid=yourPID&ids=80748,72094&source=serp&action=impression&query=therapy');\n  img.setAttribute('width', '1');\n  img.setAttribute('height', '1');\n  document.getElementsByTagName('body')[0].appendChild(img);\n})();\n</code></pre>\n"
  },
  "servers": [
    {
      "url": "https://pixel.yext-pub.com"
    }
  ],
  "paths": {
    "/plpixel": {
      "parameters": [
        {
          "$ref": "#/components/parameters/pid"
        },
        {
          "$ref": "#/components/parameters/ids"
        },
        {
          "$ref": "#/components/parameters/source"
        },
        {
          "$ref": "#/components/parameters/action"
        },
        {
          "$ref": "#/components/parameters/query"
        },
        {
          "$ref": "#/components/parameters/querylocation"
        },
        {
          "$ref": "#/components/parameters/rank"
        },
        {
          "$ref": "#/components/parameters/target"
        },
        {
          "$ref": "#/components/parameters/property"
        },
        {
          "$ref": "#/components/parameters/useragent"
        },
        {
          "$ref": "#/components/parameters/userid"
        },
        {
          "$ref": "#/components/parameters/pageurl"
        },
        {
          "$ref": "#/components/parameters/additional"
        }
      ],
      "get": {
        "operationId": "Pixel",
        "summary": "Pixel",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request (Incorrect Format)"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "pid": {
        "name": "pid",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "required": true,
        "description": "Publisher secure ID. This value will be provided to you.\n"
      },
      "ids": {
        "name": "ids",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "required": true,
        "description": "Comma-separated list of Yext location Ids\n"
      },
      "source": {
        "name": "source",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "serp",
            "mapbubble",
            "detailspage",
            "drivingdirections"
          ]
        },
        "required": true,
        "description": "Type of page where the event took place. Most commonly, you will use **serp** on the search results page, **detailspage** on the business profile page, and not use the others.\n"
      },
      "action": {
        "name": "action",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "impression",
            "click"
          ]
        },
        "required": true,
        "description": "Type of event that took place\n"
      },
      "query": {
        "name": "query",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "The search query that caused the SERP to be displayed. If your site’s search is powered by a single input field, then just provide that field.\n* Required if **source** is **serp**\n* The value of this field must be URL encoded\n"
      },
      "querylocation": {
        "name": "querylocation",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Search queries that allow the user to specify a target location should pass the entered location in this parameter.  If your site allows the user inputs to enter both fields in \"Find X near Y\", \"X\" should be provided as \"query\" and \"Y\" should be provided as **querylocation**.\n* Required if **source** is **serp**\n* The value of this field must be URL encoded\n"
      },
      "rank": {
        "name": "rank",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "The search rank of the identified listing in the organic results. The rank should be absolute (e.g., the first result on page 2 should have rank 11, assuming 10 results per page).\n* Comma-separated list of integers, 1-indexed, parallel to ids.\n* A rank of '5' in the first index would indicate that the first listing in the list appeared fifth in the organic results\n"
      },
      "target": {
        "name": "target",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "bios",
            "directions",
            "email",
            "events",
            "hours",
            "map",
            "mappin",
            "menus",
            "moreinfo",
            "name",
            "phone",
            "products",
            "reviews",
            "searchnearby",
            "share",
            "website"
          ]
        },
        "description": "Indicates which part of the page the user clicked on. For clicks on the SERP that send the user to the details page, you may optionally report a target of moreinfo rather than specifying a particular field.\nIf no appropriate value is available, please contact us.\n* Required if **action** is **click**\n"
      },
      "property": {
        "name": "property",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Indicates the Internet property where the event took place.\nYou should always provide this value if your listings are available on multiple platforms or properties (e.g., website, iPhone app, and Android app or publisher.example.com and local.publisher.com).\n* This value does not have to be a domain name, but please choose something that’s likely to be unique.\n"
      },
      "useragent": {
        "name": "useragent",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "The user agent from the original web request.\n* Required  if and only if making a server-side call to report a web page view\n"
      },
      "userid": {
        "name": "userid",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "A unique identifier for the IP address of the original web request, to be used for filtering erroneous traffic. \nThe IP address itself is preferred, but any arbitrary string (e.g., a hash of the IP address) is acceptable.\n* Required if and only if making a server-side call\n"
      },
      "pageurl": {
        "name": "pageurl",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "The URL of the original web request\n* Required  if and only if making a server-side call to report a web page view\n"
      },
      "additional": {
        "name": "additional",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Any additional data you wish to include\nFor example, you may want to include details to indicate that this event was the result of someone printing a map or requesting driving directions, or to disambiguate between two different kinds of detail page impressions\n"
      }
    }
  }
}