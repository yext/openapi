{
  "openapi": "3.0.0",
  "info": {
    "title": "Yext API",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://api.yext.com/v2"
    }
  ],
  "paths": {
    "/accounts/{accountId}/entities": {
      "get": {
        "operationId": "KnowledgeApiServer.listEntities",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of Entity types to filter on. Example: `\"location,event\"`\n\nShould be from the following types:\n  * `atm`\n  * `event`\n  * `faq`\n  * `financialProfessional`\n  * `healthcareFacility`\n  * `healthcareProfessional`\n  * `hotel`\n  * `hotelRoomType`\n  * `job`\n  * `location`\n  * `organization`\n  * `product`\n  * `restaurant`\n\nOR the API name of a custom entity type.\n",
            "name": "entityTypes",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of field names. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"address.line1\"`). Custom fields are specified in the same way, albeit with their `c_*` name.",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "This parameter represents one or more filtering conditions that are applied to the set of entities that would otherwise be returned. This parameter should be provided as a URL-encoded string containing a JSON object.\n\nFor example, if the filter JSON is `{\"name\":{\"$eq\":\"John\"}}`, then the filter param after URL-encoding will be: `filter=%7B%22name%22%3A%7B%22%24eq%22%3A%22John%22%7D%7D`\n\n**Basic Filter Structure**\n\nThe filter object at its core consists of a *matcher*, a *field*, and an *argument*.\n\nFor example, in the following filter JSON:\n\n```\n{\n  \"name\":{\n    \"$eq\":\"John\"\n  }\n}\n```\n\n`$eq` is the *matcher*, or filtering operation (equals, in this example),\n\n`name` is the *field* being filtered by, and\n\n`John` is *value* to be matched against.\n\n**Combining Multiple Filters**\n\nMultiple filters can be combined into one object using *combinators*. For example, the following filter JSON combines multiple filters using the combinator `$and`. `$or` is also supported.\n```\n{\n  \"$and\":[\n    {\n      \"firstName\":{\n        \"$eq\":\"John\"\n      }\n    },\n    {\n      \"countryCode\":{\n        \"$in\":[\n          \"US\",\n          \"GB\"\n        ]\n      }\n    }\n  ]\n}\n```\n\n**Filter Negation**\n\nCertain filter types may be negated. For example:\n\n```\n{\n  \"$not\" {\n    \"name\":{\n      \"$eq\":\"John\"\n    }\n  }\n}\n```\n\nThis can also be written more simply with a `!` in the `$eq` parameter. The following filter would have the same effect:\n\n```\n{\n  \"name\":{\n    \"!$eq\":\"John\"\n  }\n}\n```\n\n**Filter Complement**\n\nYou can also search for the complement of a filter. This filter would match entities that do not contain \"hello\" in their descriptions, or do not have a description set. This is different from negation which can only match entities who have the negated field set to something.\n\n```\n{\n  \"$complement\":{\n    \"description\":{\n      \"$contains\":\"hello\"\n    }\n  }\n}\n```\n\n**Addressing Subfields**\n\nSubfields of fields can be addressed using the \"dot\" notation while filtering. For example, if you have a custom field called **`c_myCustomField`**:\n\n```\n{\n  \"c_myCustomField\":{\n    \"age\": 30,\n    \"name\": \"Jim\",\n  }\n}\n```\n\nWhile filtering, subfields may be addressed using the \"dot\" notation.\n\n```\n{\n  \"c_myCustomField.name\":{\n    \"!$eq\":\"John\"\n  }\n}\n```\n\nFields that are nested deeper may be addressed using dot notation, as well. For example, if **`name`** in the above example was a compound field with two subfields **`first`** and **`last`**, **`first`** may be addressed as **`c_myCustomField.name.first`**.\n\n**Field Support**\n\nEntity fields correspond to certain filter types, which support matchers. Going by the example above, the field **`name`** supports the `TEXT` filter type, which supports `$eq` (equals) and `$startsWith` (starts with).\n\n**TEXT**\n\nThe `TEXT` filter type is supported for text fields. (e.g., **`name`**, **`countryCode`**)\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq (equals)</th>\n    <th>\n\n    {\n      \"countryCode\":{\n        \"$eq\":\"US\"\n      }\n    },\n    {\n      \"countryCode\":{\n        \"!$eq\":\"US\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n  Matches if the field starts with the argument value.\n\n  e.g., \"Amazing\" starts with \"amaz\"\n\n    {\n       \"address.line1\":{\n          \"$startsWith\": \"Jo\"\n       }\n    }\n\n  Supports negation. Case insensitive.\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n  Matches if field value is a member of the argument list.\n\n    {\n      \"firstName\":{\n        \"$in\": [\"John\", \"Jimmy\"]\n      }\n    }\n\n  Does not support negation. Negation can be mimicked by using an \"OR\" matcher, for example:\n\n    {\n      \"$and\":[\n        {\n          \"firstName\":{\n            \"!$eq\": \"John\"\n          }\n        },\n        {\n          \"firstName\":{\n            \"!$eq\": \"Jimmy\"\n          }\n        }\n      ]\n    }\n\n  </tr>\n  <tr>\n    <th>$contains</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$contains\":\"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" is contained in any string within **`c_myString`**.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n  <tr>\n    <th>$containsAny</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$containsAny\":[\n          \"sample1\", \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if either \"sample1\" or \"sample2\" is contained in any string within **`c_myString`**. The argument list can contain more than two strings.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n  <tr>\n    <th>$containsAll</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$containsAll\":[\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"sample1\" and \"sample2\" are contained in any string within **`c_myString`**. The argument list can contain more than two strings.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n</table>\n\n</br>\n**BOOLEAN**\n\n\nThe BOOLEAN filter type is supported for boolean fields and Yes / No custom fields.\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"isFreeEvent\": {\n        \"$eq\": true\n      }\n    }\n\n  For booleans, the filter takes a boolean value, not a string.\n  Supports negation.\n  </tr>\n</table>\n\n</br>\n**STRUCT**\n\nThe STRUCT filter type is supported for compound fields with subfields.\n\n*e.g., **`address`**, **`featuredMessage`**, fields of custom types*\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$hasProperty</th>\n    <th>\n\n  Matches if argument is a key (subfield) of field being filtered by. This filter type is useful for filtering by compound fields or to check if certain fields have a value set.\n\n    {\n      \"address\": {\n        \"$hasProperty\": \"line1\"\n      }\n    }\n\n  Note that if a given property of a compound field is not set, the filter will not match. For example, if `line1` of **`address`** is not set for an entity, then the above matcher will not match the entity.\n\n  Supports negation.\n\n  </tr>\n</table>\n\n</br>\n**OPTION**\n\nThe OPTION filter type is supported for options custom fields and fields that have a predetermined list of valid values.\n\n *e.g., **`eventStatus`**, **`gender`**, `SINGLE_OPTION` and `MULTI_OPTION` types of custom fields.*\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n  Matching is case insensitive and insensitive to consecutive whitespace.\n\n  e.g., \"XYZ 123\" matches \"xyz       123\"\n\n    {\n      \"eventStatus\": {\n        \"$eq\": \"SCHEDULED\"\n      }\n    }\n\n  Supports negation. Negating `$eq` on the list will match any field that does not hold any of the provided values.\n\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n    {\n      \"eventStatus\": {\n        \"$in\": [\n          \"SCHEDULED\",\n          \"POSTPONED\"\n        ]\n      }\n    }\n\n  Does not support negation. However, negation can be mimicked by using an `$and` matcher to negate individually over the desired values. For example:\n\n    {\n      \"$and\": [\n        {\n          \"eventStatus\":{\n            \"!$eq\": \"SCHEDULED\"\n          }\n        },\n        {\n          \"firstName\":{\n            \"!$eq\": \"POSTPONED\"\n          }\n        }\n      ]\n    }\n\n  </tr>\n</table>\n\n</br>\n**PHONE**\n\nThe PHONE filter type is supported for phone number fields only. PHONE will support the same matchers as TEXT, except that for `$eq`, the same phone number with or without calling code will match.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"mainPhone\":{\n        \"$eq\":\"+18187076189\"\n      }\n    },\n    {\n      \"mainPhone\":{\n        \"$eq\":\"8187076189\"\n      }\n    },\n    {\n      \"mainPhone\":{\n        \"!$eq\":\"9177076189\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n  Matches if the field starts with the argument value.\n\n  e.g., \"8187076189\" starts with \"818\"\n\n    {\n      \"mainPhone\":{\n        \"$startsWith\": \"818\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n  Matches if field value is a member of the argument list.\n\n    {\n      \"mainPhone\":{\n        \"$in\": [\n          \"8185551616\",\n          \"9171112211\"\n        ]\n      }\n    }\n\n  Does not support negation. However, negation can be mimicked by using an `$and` matcher to negate individually over the desired values.\n\n  </tr>\n</table>\n\n</br>\n**INTEGER, FLOAT, DATE, DATETIME, and TIME**\n\nThese filter types are strictly ordered -- therefore, they support the following matchers:\n- Equals\n- Less Than / Less Than or Equal To\n- Greater Than / Greater Than or Equal To\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n  Equals\n\n    {\n      \"ageRange.maxValue\": {\n        \"$eq\": \"80\"\n      }\n    }\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$lt</th>\n    <th>\n\n  Less than\n\n    {\n      \"time.start\": {\n        \"$lt\": \"2018-08-28T05:56\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$gt</th>\n    <th>\n\n  Greater than\n\n    {\n      \"ageRange.maxValue\": {\n        \"$gt\": \"50\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$le</th>\n    <th>\n\n  Less than or equal to\n\n    {\n      \"ageRange.maxValue\": {\n        \"$le\": \"40\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$ge</th>\n    <th>\n\n  Greater than or equal to\n\n    {\n      \"time.end\": {\n        \"$ge\":  \"2018-08-28T05:56\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>Combinations</th>\n    <th>\n\n  While we do not support \"between\" in our filtering syntax, it is possible to combine multiple matchers for a result similar to an \"and\" operation:\n\n    {\n      \"ageRange.maxValue : {\n        \"$gt\" : 10,\n        \"$lt\": 20\n      }\n    }\n\n  </tr>\n</table>\n\n</br>\n**LIST OF TEXT**\n\nAny field that has a list of valid values and supports any of the previously mentioned filter types will also support the `$contains` matcher.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eq\": \"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" EXACTLY matches any string within **`c_myStringList`**.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAny</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAny\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if any one of \"sample1\" or \"sample2\" EXACTLY match a string within **`c_myStringList`** . The argument can have more than two strings.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"sample1\" AND \"sample2\" EXACTLY match a string within **`c_myStringList`**. The argument can have more than two strings.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$contains</th>\n    <th>\n\n    {\n      \"c_myStringList\":{\n        \"$contains\":\"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" is contained in any string within **`c_myStringList`**.\n\n  Note that this matching is \"left edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This is a sample\", \"Sample one\", \"Sample 2\" but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$containsAny</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$containsAny\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n\n  This filter will match if either \"sample1\" or \"sample2\" is contained in any string within **`c_myStringList`**. The argument list can have more than two strings.\n\n  Note that similar to `$contains`, the matching for `$containsAny` is \"left edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This is a sample\", \"Sample one\", \"Sample 2\" but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$containsAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$containsAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if BOTH \"sample1\" and \"sample2\" are contained in strings within **`c_myStringList`**. The argument list can have more than two strings.\n\n  Note that similar to `$contains`, the matching for `$containsAll` is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$startsWith\":\"sample\"\n      }\n    }\n\n  This filter will match if any string within **`c_myStringList`** starts with \"sample\".\n\n  Does not supports negation. Case Insensitive.\n\n  </tr>\n</table>\n\n</br>\n**LIST OF BOOLEAN, OPTION, PHONE, INTEGER, FLOAT, DATE, DATETIME, OR TIME**\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"c_myDateList\": {\n        \"$eq\": \"2019-01-01\"\n      }\n    }\n\n\n  This filter will match if \"2019-01-01\" EXACTLY matches any date within **`c_myDateList`**.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAny</th>\n    <th>\n\n    {\n      \"c_myIntegerList\": {\n        \"$eqAny\": [1, 2]\n      }\n    }\n\n  This filter will match if 1 or 2 EXACTLY match any integer within **`c_myIntegerList`**. The argument list can have more than two elements.\n\n  Supports negation.\n\n  </tr>\n\n  <tr>\n    <th>$eqAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"2019-01-01\" AND \"2019-01-02\" EXACTLY match a date within **`c_myDateList`**. The argument list can have more than two elements.\n\n  Supports negation.\n\n  </tr>\n</table>\n\n</br>\n**LIST OF STRUCT**\n\nFiltering on lists of struct types is a bit nuanced. Filtering can only be done on lists of structs of the SAME type.\nFor example, if **`c_myStructList`** is a list of compound fields with the subfields **`age`** and **`name`**, then one can address the **`age`** properties of each field in **`c_myStructList`** as a flattened list of integers and filtering upon them. For example, the following filter:\n\n```\n{\n  \"c_myStructList.age\":{\n    \"$eq\": 20\n  }\n}\n```\n\nwill match if any field in the list has an **`age`** property equal to 20. Similarly, any filter that can be applied to lists of integers could be applied to **`age`** in this case (`$eq`, `$eqAll`, `$eqAny`).\n\n</br>\n\n**HOURS**\n\nBy filtering on an hours field, you can find which entities are open or closed at a specified time or during a certain time range. All of these filters also take an entity’s holiday hours and reopen date into account.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$openAt</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openAt\":\n          \"2019-01-06T13:45\"\n      }\n    }\n\n\n  This filter would match entities open at the specified time.\n\n  </tr>\n  <tr>\n    <th>$closedAt</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedAt:\n          \"2019-01-06T13:45\"\n      }\n    }\n\n  </tr>\n\n  <tr>\n    <th>$openForAllOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openForAllOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n\n  This filter would match only those entities that are open for the entire range between 2019-01-06T13:45 and 2019-01-06T15:00.\n\n    {\n      \"hours\": {\n        \"$openForAllOf\":\n          \"2019-05-10\"\n      }\n    }\n\n  This filter would match entities open for the entire 24 hour period on 2019-05-10.\n\n  You can also supply a year, a month, or an hour to filter for entities open for the entire year, month, or hour, respectively.\n\n  </tr>\n  <tr>\n    <th>$openForAnyOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openForAnyOf\": {\n          \"start\": \"now\",\n          \"end\": \"now+2h\"\n        }\n      }\n    }\n\n  This filter will match any entities that are open for at least a portion of the time range between now and two hours from now.\n\n  </tr>\n  <tr>\n    <th>$closedForAllOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedForAllOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n  This filter will match only those entities that are closed for the entire given time range.\n  </tr>\n  <tr>\n    <th>$closedForAnyOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedForAnyOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n  This filter will match any entities that are closed for at least a portion of the given time range.\n  </tr>\n</table>\n\n</br>\n\n**Filtering by Dates and Times**\n\n**Time zones**\n\nThe filtering language supports searching both in local time and within a certain time zone. Searching in local time will simply ignore the time zone on the target entities, while providing one will convert the zone of your queried time to the zone of the target entities.\n\nTo search in local time, simply provide the date or time without any zone: `2019-06-07T15:30` or `2019-06-07`.\n\nTo conduct a zoned search, provide the name of the time zone in brackets after the time, as it is shown in the tz database: `2019-06-07T15:30[America/New_York]` or `2019-06-06[America/Phoenix]`.\n\n\n**Date and time types**\n\nIn addition to searching with dates and datetimes, you can also query with years, months, and hours. For example, the filter:\n\n```\n{\n  \"time.start\": {\n    \"$eq\": \"2018\"\n  }\n}\n```\n\nwould match all start times in the year 2018. The same logic would apply for a month (`2019-05`), a date (`2019-05-01`), or an hour (`2019-05-01T06`).\n\nThese types also work with ordered searches. For example:\n\n```\n{\n \"time.start\": {\n    \"$lt\": \"2018\"\n }\n}\n```\n\nwould match start times before 2018 (i.e., anything in 2017 or before). On the other hand, the same query with a `$le` matcher would include anything in or before 2018.\n\n**\"Now\" and Date Math**\n\nInstead of providing a static date or time, you can also use `now` in place of any date time. When you do so, the system will calculate the time when the query is made and conduct a zoned search.\n\nIn order to search for a future or past time relative to `now`, you can use date math. For example, you can enter `now+3h` or `now-1d`, which would mean 3 hours from now and 1 day ago, respectively. You can also add and subtract minutes (`m`), months (`M`), and years (`y`).\n\nIt is also possible to add or subtract time from a static date or datetime. Simply add `||` between the static value and any addition or subtraction. For example, `2019-02-03||+1d` would be the same as `2019-02-04`.\n\nYou can also convert date and time types to other types. For example, to convert the datetime `2019-05-06T22:15` to a date, use `2019-05-06T22:15||/d`. Doing so would yield the same result as using `2019-05-06`. This method also works with `now`: `now/d` will give you today’s date without the time.\n\n</br>\n**Filtering Across an Entity**\n\nIt is possible to search for a specific text string across all fields of an entity by using the `$anywhere` matcher.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$anywhere</th>\n    <th>\n\n  Matches if the argument text appears anywhere in the entity (including subfields, structs, and lists)\n\n    {\n      \"$anywhere\": \"hello\"\n    }\n\n  This filter will match all entities that contain the string \"hello\" or strings that begin with \"hello\".\n\n  </tr>\n</table>\n\n</br>\n**Examples**\n\nThe following filter will match against entities that:\n- Are of type `event` (note that entity types can also be filtered by the **`entityTypes`** query parameter)\n- Have a name that starts with the text \"Century\"\n- Have a maximum age between 10 and 20\n- Have a minimum age between 5 and 7\n- Start after 7 PM (19:00) on August 28, 2018\n\n```\n{\n  \"$and\":[\n    {\n      \"entityType\":{\n        \"$eq\":\"event\"\n      }\n    },\n    {\n      \"name\":{\n        \"$startsWith\":\"Century\"\n      }\n    },\n    {\n      \"ageRange.maxValue\":{\n        \"$gt\":10,\n        \"$lt\":20\n      }\n    },\n    {\n      \"ageRange.minValue\":{\n        \"$gt\":5,\n        \"$lt\":7\n      }\n    },\n    {\n      \"time.start\":{\n        \"$ge\":\"2018-08-28T19:00\"\n      }\n    }\n  ]\n}\n```\n",
            "name": "filter",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if at least one field is of type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "name": "format",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of language codes.\n\nWhen present, the system will return Entities that have profiles in one or more of the provided languages. For each Location, only the first available profile from the provided list of languages will be returned. The keyword `\"primary\"` can be used to refer to a Location’s primary profile without providing a specific language code. If an Entity does not have profiles in any of the languages provided, that Entity's primary profile will be returned.\n",
            "name": "languages",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "multipleOf": 1,
              "maximum": 50,
              "type": "number",
              "default": "10"
            },
            "description": "Number of results to return.",
            "name": "limit",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "multipleOf": 1,
              "type": "number",
              "default": "0"
            },
            "description": "Number of results to skip. Used to page through results.\nCannot be used together with **`pageToken`**.\n\nFor Live API requests, the offset cannot be higher than 9,950. For Knowledge API the maximum limit is only enforced if a filter and/or sortBy parameter are given.\n",
            "name": "offset",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "If a response to a previous request contained the **`pageToken`** field, pass that field's value as the **`pageToken`** parameter to retrieve the next page of data.",
            "name": "pageToken",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "description": "Optional parameter to resolve all embedded fields in a Location object response.\n  - `false`: Location object returns placeholder labels, e.g., \"Your [[CITY]] store\"\n  - `true`: Location object returns placeholder values, e.g., \"Your Fairfax store\"\n",
            "name": "resolvePlaceholders",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A list of fields and sort directions to order results by. Each ordering in the list should be in the format `{\"field_name\", \"sort_direction\"}`, where `sort_direction` is either `ASCENDING` or `DESCENDING`.\n\nFor example, to order by `name` the sort order would be `[{\"name\":\"ASCENDING\"}]`. To order by `name` and then `description`, the sort order would be `[{\"name\":\"ASCENDING\"},{\"description\":\"ASCENDING\"}]`.\n",
            "name": "sortBy",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Entities: List",
        "description": "Retrieve a list of Entities within an account",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "count": {
                          "multipleOf": 1,
                          "type": "number",
                          "description": "Total number of Entities that meet the filter criteria (ignores **``limit``** / **``offset``** parameters)"
                        },
                        "entities": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "meta": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "accountId": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "ID of the account associated with this Entity"
                                  },
                                  "countryCode": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                                  },
                                  "entityType": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                                  },
                                  "folderId": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                                  },
                                  "id": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "ID of this Entity\n\nFiltering Type: `text`"
                                  },
                                  "labels": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "multipleOf": 1,
                                      "type": "number",
                                      "description": "Filtering Type: `integer`"
                                    },
                                    "description": "This Entity's labels\n\nFiltering Type: `list of integer`"
                                  },
                                  "language": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                                  },
                                  "timestamp": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                                  },
                                  "uid": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                                  }
                                },
                                "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "name": {
                                "minLength": 0,
                                "maxLength": 5000,
                                "type": "string",
                                "description": "\n\n\nCannot Include:\n* HTML markup\n* a phone number\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "address": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "city": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                                  },
                                  "countryCode": {
                                    "minLength": 0,
                                    "pattern": "^[a-zA-Z]{2}$",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "extraDescription": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                                  },
                                  "line1": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "line2": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "line3": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "postalCode": {
                                    "minLength": 0,
                                    "maxLength": 10,
                                    "type": "string",
                                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "region": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "sublocality": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "acceptingNewPatients": {
                                "type": "boolean",
                                "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                              },
                              "acceptsReservations": {
                                "type": "boolean",
                                "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "accessHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "additionalHoursText": {
                                "minLength": 0,
                                "maxLength": 255,
                                "type": "string",
                                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "additionalPromotingLocations": {
                                "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Filtering Type: `entityId`"
                                }
                              },
                              "addressHidden": {
                                "type": "boolean",
                                "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "admittingHospitals": {
                                "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "adultPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ageRange": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "maxValue": {
                                    "multipleOf": 1,
                                    "type": "number",
                                    "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                                  },
                                  "minValue": {
                                    "multipleOf": 1,
                                    "type": "number",
                                    "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                                  }
                                },
                                "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "airportShuttle": {
                                "enum": [
                                  "AIRPORT_SHUTTLE_AVAILABLE",
                                  "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "airportTransfer": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "allInclusive": {
                                "enum": [
                                  "ALL_INCLUSIVE_RATES_AVAILABLE",
                                  "ALL_INCLUSIVE_RATES_ONLY",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "alternateNames": {
                                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "alternatePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "alternateWebsites": {
                                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 255,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                }
                              },
                              "androidAppUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "answer": {
                                "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                                "type": "string",
                                "format": "rich-text"
                              },
                              "applicationUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "associations": {
                                "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "attendance": {
                                "required": [
                                  "attendanceMode"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "attendanceMode": {
                                    "enum": [
                                      "OFFLINE",
                                      "ONLINE",
                                      "MIXED"
                                    ],
                                    "type": "string",
                                    "description": "Filtering Type: `option`"
                                  },
                                  "virtualLocationUrl": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "attire": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "DRESSY",
                                  "CASUAL",
                                  "FORMAL"
                                ],
                                "type": "string",
                                "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "babysittingOffered": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "baggageStorage": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bar": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "beachAccess": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "beachFrontProperty": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bicycles": {
                                "enum": [
                                  "BICYCLE_RENTALS",
                                  "BICYCLE_RENTALS_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bios": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "boutiqueStores": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "brands": {
                                "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "breakfast": {
                                "enum": [
                                  "BREAKFAST_AVAILABLE",
                                  "BREAKFAST_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "brunchHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "businessCenter": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "calendars": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "carRental": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "casino": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "categoryIds": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "catsAllowed": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "certifications": {
                                "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "checkInTime": {
                                "format": "time",
                                "type": "string",
                                "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "checkOutTime": {
                                "format": "time",
                                "type": "string",
                                "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "classificationRating": {
                                "pattern": "^\\d*\\.?\\d*$",
                                "type": "string",
                                "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "closed": {
                                "type": "boolean",
                                "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "concierge": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "conditionsTreated": {
                                "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "convenienceStore": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "currencyExchange": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "customKeywords": {
                                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "datePosted": {
                                "format": "date",
                                "type": "string",
                                "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "degrees": {
                                "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "ANP",
                                    "APN",
                                    "APRN",
                                    "ARNP",
                                    "CNM",
                                    "CNP",
                                    "CNS",
                                    "CPNP",
                                    "CRNA",
                                    "CRNP",
                                    "DC",
                                    "DDS",
                                    "DMD",
                                    "DNP",
                                    "DO",
                                    "DPM",
                                    "DVM",
                                    "FNP",
                                    "GNP",
                                    "LAC",
                                    "LPN",
                                    "MBA",
                                    "MBBS",
                                    "MD",
                                    "MPH",
                                    "ND",
                                    "NP",
                                    "OD",
                                    "PA",
                                    "PAC",
                                    "PHARMD",
                                    "PHD",
                                    "PNP",
                                    "PSYD",
                                    "VMD",
                                    "WHNP"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                }
                              },
                              "deliveryHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "description": {
                                "minLength": 10,
                                "maxLength": 15000,
                                "type": "string",
                                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "displayCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "doctorOnCall": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "dogsAllowed": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "driveThroughHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                              },
                              "dropoffCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "educationList": {
                                "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "type",
                                    "institutionName",
                                    "yearCompleted"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "institutionName": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "type": {
                                      "enum": [
                                        "FELLOWSHIP",
                                        "RESIDENCY",
                                        "INTERNSHIP",
                                        "MEDICAL_SCHOOL"
                                      ],
                                      "type": "string",
                                      "description": "Filtering Type: `option`"
                                    },
                                    "yearCompleted": {
                                      "multipleOf": 1,
                                      "minimum": 1900,
                                      "maximum": 2100,
                                      "type": "number",
                                      "description": "Filtering Type: `integer`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "electricChargingStation": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "elevator": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ellipticalMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "emails": {
                                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "format": "email",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "employmentType": {
                                "enum": [
                                  "FULL_TIME",
                                  "PART_TIME",
                                  "CONTRACTOR",
                                  "TEMPORARY",
                                  "INTERN",
                                  "VOLUNTEER",
                                  "PER_DIEM",
                                  "OTHER"
                                ],
                                "type": "string",
                                "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "eventStatus": {
                                "enum": [
                                  "SCHEDULED",
                                  "RESCHEDULED",
                                  "POSTPONED",
                                  "CANCELED",
                                  "EVENT_MOVED_ONLINE"
                                ],
                                "type": "string",
                                "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "facebookCallToAction": {
                                "required": [
                                  "type"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "NONE",
                                      "BOOK_NOW",
                                      "CALL_NOW",
                                      "CONTACT_US",
                                      "SEND_MESSAGE",
                                      "USE_APP",
                                      "PLAY_GAME",
                                      "SHOP_NOW",
                                      "SIGN_UP",
                                      "WATCH_VIDEO",
                                      "SEND_EMAIL",
                                      "LEARN_MORE",
                                      "PURCHASE_GIFT_CARDS",
                                      "ORDER_NOW",
                                      "FOLLOW_PAGE"
                                    ],
                                    "type": "string",
                                    "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                                  },
                                  "value": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookCoverPhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "facebookDescriptor": {
                                "minLength": 3,
                                "maxLength": 75,
                                "type": "string",
                                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookOverrideCity": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookPageUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookProfilePhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "facebookVanityUrl": {
                                "minLength": 0,
                                "maxLength": 50,
                                "type": "string",
                                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "fax": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "featuredMessage": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "firstName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "firstPartyReviewPage": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "fitnessCenter": {
                                "enum": [
                                  "FITNESS_CENTER_AVAILABLE",
                                  "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "floorCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "freeWeights": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "frequentlyAskedQuestions": {
                                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "question"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "answer": {
                                      "minLength": 1,
                                      "maxLength": 4096,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "question": {
                                      "minLength": 1,
                                      "maxLength": 4096,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "frontDesk": {
                                "enum": [
                                  "FRONT_DESK_AVAILABLE",
                                  "FRONT_DESK_AVAILABLE_24_HOURS",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "gameRoom": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "gender": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "FEMALE",
                                  "MALE"
                                ],
                                "type": "string",
                                "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "geomodifier": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "giftShop": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "golf": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "googleAttributes": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {},
                                "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "googleCoverPhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "googleMyBusinessLabels": {
                                "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 50,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "googlePlaceId": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "googleProfilePhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "googleWebsiteOverride": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "happyHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "headshot": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "hiringOrganization": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "holidayHoursConversationEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "horsebackRiding": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "hotTub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "hours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "housekeeping": {
                                "enum": [
                                  "HOUSEKEEPING_AVAILABLE",
                                  "HOUSEKEEPING_AVAILABLE_DAILY",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "impressum": {
                                "minLength": 0,
                                "maxLength": 2000,
                                "type": "string",
                                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "indoorPoolCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "instagramHandle": {
                                "minLength": 0,
                                "maxLength": 30,
                                "type": "string",
                                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "insuranceAccepted": {
                                "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "iosAppUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "isClusterPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "isFreeEvent": {
                                "type": "boolean",
                                "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "isoRegionCode": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "keywords": {
                                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "kidFriendly": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kidsClub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kidsStayFree": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kitchenHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "labels": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "landingPageUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "languages": {
                                "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "lastName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "laundry": {
                                "enum": [
                                  "FULL_SERVICE",
                                  "SELF_SERVICE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "lazyRiver": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "lifeguard": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "linkedLocation": {
                                "type": "string",
                                "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                              },
                              "localPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "localShuttle": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "locatedIn": {
                                "type": "string",
                                "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                              },
                              "location": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "existingLocation": {
                                    "type": "string",
                                    "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                                  },
                                  "externalLocation": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "locationType": {
                                "enum": [
                                  "LOCATION",
                                  "HEALTHCARE_FACILITY",
                                  "HEALTHCARE_PROFESSIONAL",
                                  "ATM",
                                  "RESTAURANT",
                                  "HOTEL"
                                ],
                                "type": "string",
                                "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "logo": {
                                "required": [
                                  "image"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "clickthroughUrl": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "description": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "details": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "image": {
                                    "required": [
                                      "url"
                                    ],
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                    "properties": {
                                      "alternateText": {
                                        "minLength": 0,
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      },
                                      "url": {
                                        "minLength": 0,
                                        "format": "uri",
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      }
                                    }
                                  }
                                }
                              },
                              "mainPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "massage": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "maxAgeOfKidsStayFree": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "maxNumberOfKidsStayFree": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "mealsServed": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "BREAKFAST",
                                    "LUNCH",
                                    "BRUNCH",
                                    "DINNER",
                                    "HAPPY_HOUR",
                                    "LATE_NIGHT"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "meetingRoomCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "menuUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL where consumers can view the entity's menu\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "menus": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "middleName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "mobilePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "mobilityAccessible": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "nightclub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "npi": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                              },
                              "nudgeEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "officeName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "onlineServiceHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                              },
                              "orderUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL used to place an order at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "organizerEmail": {
                                "minLength": 0,
                                "format": "email",
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "organizerName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "organizerPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "outdoorPoolCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "parking": {
                                "enum": [
                                  "PARKING_AVAILABLE",
                                  "PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "paymentOptions": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "ALIPAY",
                                    "AMERICANEXPRESS",
                                    "ANDROIDPAY",
                                    "APPLEPAY",
                                    "ATM",
                                    "ATMQUICK",
                                    "BACS",
                                    "BANCONTACT",
                                    "BANKDEPOSIT",
                                    "BANKPAY",
                                    "BGO",
                                    "BITCOIN",
                                    "Bar",
                                    "CARTASI",
                                    "CASH",
                                    "CCS",
                                    "CHECK",
                                    "CONB",
                                    "CVVV",
                                    "DEBITNOTE",
                                    "DINERSCLUB",
                                    "DIRECTDEBIT",
                                    "DISCOVER",
                                    "ECKARTE",
                                    "ECOCHEQUE",
                                    "EKENA",
                                    "EMV",
                                    "FINANCING",
                                    "GOPAY",
                                    "HAYAKAKEN",
                                    "HEBAG",
                                    "IBOD",
                                    "ICCARDS",
                                    "ICOCA",
                                    "ID",
                                    "IDEAL",
                                    "INCA",
                                    "INVOICE",
                                    "JCB",
                                    "JCoinPay",
                                    "JKOPAY",
                                    "KITACA",
                                    "KLA",
                                    "KLARNA",
                                    "LINEPAY",
                                    "MAESTRO",
                                    "MANACA",
                                    "MASTERCARD",
                                    "MIPAY",
                                    "MONIZZE",
                                    "MPAY",
                                    "Manuelle Lastsch",
                                    "Merpay",
                                    "NANACO",
                                    "NEXI",
                                    "NIMOCA",
                                    "OREM",
                                    "PASMO",
                                    "PAYBACKPAY",
                                    "PAYBOX",
                                    "PAYCONIQ",
                                    "PAYPAL",
                                    "PAYPAY",
                                    "PAYSEC",
                                    "PIN",
                                    "POSTEPAY",
                                    "QRCODE",
                                    "QUICPAY",
                                    "RAKUTENEDY",
                                    "RAKUTENPAY",
                                    "SAMSUNGPAY",
                                    "SODEXO",
                                    "SUGOCA",
                                    "SUICA",
                                    "SWISH",
                                    "TICKETRESTAURANT",
                                    "TOICA",
                                    "TRAVELERSCHECK",
                                    "TSCUBIC",
                                    "TWINT",
                                    "UNIONPAY",
                                    "VEV",
                                    "VISA",
                                    "VISAELECTRON",
                                    "VOB",
                                    "VOUCHER",
                                    "VPAY",
                                    "WAON",
                                    "WECHATPAY",
                                    "WIRETRANSFER",
                                    "Yucho Pay",
                                    "ZELLE",
                                    "auPay",
                                    "dBarai",
                                    "Überweisung"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "performers": {
                                "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "petsAllowed": {
                                "enum": [
                                  "PETS_WELCOME",
                                  "PETS_WELCOME_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "photoGallery": {
                                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "image"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                  "properties": {
                                    "clickthroughUrl": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "description": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "details": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "image": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "pickupCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "pickupHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                              },
                              "priceRange": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "ONE",
                                  "TWO",
                                  "THREE",
                                  "FOUR"
                                ],
                                "type": "string",
                                "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                              },
                              "primaryConversationContact": {
                                "minLength": 0,
                                "type": "string",
                                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "privateBeach": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "privateCarService": {
                                "enum": [
                                  "PRIVATE_CAR_SERVICE",
                                  "PRIVATE_CAR_SERVICE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "productLists": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "products": {
                                "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "questionsAndAnswers": {
                                "type": "boolean",
                                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingCompetitors": {
                                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "name",
                                    "website"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                    },
                                    "website": {
                                      "minLength": 0,
                                      "maxLength": 255,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "rankTrackingEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingFrequency": {
                                "enum": [
                                  "WEEKLY",
                                  "MONTHLY",
                                  "QUARTERLY"
                                ],
                                "type": "string",
                                "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingQueryTemplates": {
                                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "KEYWORD",
                                    "KEYWORD_ZIP",
                                    "KEYWORD_CITY",
                                    "KEYWORD_IN_CITY",
                                    "KEYWORD_NEAR_ME",
                                    "KEYWORD_CITY_STATE"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                }
                              },
                              "rankTrackingSites": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "GOOGLE_DESKTOP",
                                    "GOOGLE_MOBILE",
                                    "BING_DESKTOP",
                                    "BING_MOBILE",
                                    "YAHOO_DESKTOP",
                                    "YAHOO_MOBILE"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "reservationUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL used to make reservations at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "restaurantCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "reviewGenerationUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "reviewResponseConversationEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "roomCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "roomService": {
                                "enum": [
                                  "ROOM_SERVICE_AVAILABLE",
                                  "ROOM_SERVICE_AVAILABLE_24_HOURS",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "routableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "salon": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "sauna": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "scuba": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "selfParking": {
                                "enum": [
                                  "SELF_PARKING_AVAILABLE",
                                  "SELF_PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "seniorHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "serviceArea": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "places": {
                                    "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  }
                                },
                                "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "serviceAreaPlaces": {
                                "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "type": {
                                      "enum": [
                                        "POSTAL_CODE",
                                        "REGION",
                                        "COUNTY",
                                        "CITY",
                                        "SUBLOCALITY"
                                      ],
                                      "type": "string",
                                      "description": "Filtering Type: `option`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "services": {
                                "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "smokeFreeProperty": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "snorkeling": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "socialHour": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "spa": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "specialities": {
                                "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "tableService": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "takeoutHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "tennis": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "thermalPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ticketAvailability": {
                                "enum": [
                                  "IN_STOCK",
                                  "SOLD_OUT",
                                  "PRE_ORDER",
                                  "UNSPECIFIED"
                                ],
                                "type": "string",
                                "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketPriceRange": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "currencyCode": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                                  },
                                  "maxValue": {
                                    "pattern": "^\\d*\\.?\\d*$",
                                    "type": "string",
                                    "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                                  },
                                  "minValue": {
                                    "pattern": "^\\d*\\.?\\d*$",
                                    "type": "string",
                                    "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                                  }
                                },
                                "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketSaleDateTime": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "time": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "end": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                  },
                                  "start": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                  }
                                },
                                "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "timeZoneUtcOffset": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "timezone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "tollFreePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "treadmill": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ttyPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "turndownService": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "twitterHandle": {
                                "minLength": 0,
                                "maxLength": 15,
                                "type": "string",
                                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "uberLink": {
                                "required": [
                                  "presentation"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "presentation": {
                                    "enum": [
                                      "BUTTON",
                                      "LINK"
                                    ],
                                    "type": "string",
                                    "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                                  },
                                  "text": {
                                    "minLength": 0,
                                    "maxLength": 100,
                                    "type": "string",
                                    "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "uberTripBranding": {
                                "required": [
                                  "text",
                                  "url",
                                  "description"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "minLength": 0,
                                    "maxLength": 150,
                                    "type": "string",
                                    "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "text": {
                                    "minLength": 0,
                                    "maxLength": 28,
                                    "type": "string",
                                    "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "valetParking": {
                                "enum": [
                                  "VALET_PARKING_AVAILABLE",
                                  "VALET_PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "validThrough": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "vendingMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "venueName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "videos": {
                                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "video"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "minLength": 0,
                                      "maxLength": 140,
                                      "type": "string",
                                      "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                    },
                                    "video": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "wadingPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wakeUpCalls": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "walkableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "waterPark": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "waterSkiing": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "watercraft": {
                                "enum": [
                                  "WATERCRAFT_RENTALS",
                                  "WATERCRAFT_RENTALS_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "waterslide": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wavePool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "websiteUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL for this entity's website\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "weightMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wheelchairAccessible": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wifiAvailable": {
                                "enum": [
                                  "WIFI_AVAILABLE",
                                  "WIFI_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "workRemote": {
                                "type": "boolean",
                                "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "yearEstablished": {
                                "multipleOf": 1,
                                "minimum": 1000,
                                "maximum": 2028,
                                "type": "number",
                                "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yearLastRenovated": {
                                "multipleOf": 1,
                                "minimum": 1000,
                                "maximum": 2028,
                                "type": "number",
                                "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "yextDisplayCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "yextDropoffCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextPickupCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextRoutableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextWalkableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              }
                            }
                          }
                        },
                        "pageToken": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Pass this value into the next request as the **`pageToken`** parameter to retrieve the next page of data.\n\nIf the response of a request contains the last page of data, a **`pageToken`** value will not be returned. A **`pageToken`** will never appear in the response if the request contains the **`sortOrder`**, **`randomization`**, or **`randomizationToken`** parameters.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "KnowledgeApiServer.createEntity",
        "requestBody": {
          "description": "The entity to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityWrite"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The type of entity to be created. Should be one of the following:\n  * `atm`\n  * `event`\n  * `faq`\n  * `financialProfessional`\n  * `healthcareFacility`\n  * `healthcareProfessional`\n  * `hotel`\n  * `hotelRoomType`\n  * `job`\n  * `location`\n  * `organization`\n  * `product`\n  * `restaurant`\n\nOR the API name of a custom entity type.\n",
            "name": "entityType",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "The formatting language used to parse rich text field values. Present and **required** if an only if the request contains a field with type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n",
            "name": "format",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "description": "Optional parameter to strip unsupported formats in rich text fields. When this parameter is included, the unsupported formats in rich text fields will be stripped and saved as plain text; otherwise if this parameter is not included, unsupported formats will return an error.\n",
            "name": "stripUnsupportedFormats",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of top-level fields to apply from the template. If provided, only the fields specified will be applied to the entity.\n\nIgnored if **`templateId`** is not provided.\n",
            "name": "templateFields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The ID of the template to apply to the entity\n\n**NOTE:** Some fields that are part of the provided template but not present in the API will be applied - e.g. Linked Accounts\n",
            "name": "templateId",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Entities: Create",
        "description": "Create a new Entity\n\n**NOTE:**\n  * If the **`v`** parameter is before `20181129`: the 201 response contains the created Entity's **`id`**\n  * If the **`v`** parameter is on or after `20181129`: the 201 response contains the created Entity in its entirety\n",
        "responses": {
          "201": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "meta": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "accountId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of the account associated with this Entity"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                            },
                            "entityType": {
                              "minLength": 0,
                              "type": "string",
                              "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                            },
                            "folderId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                            },
                            "id": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of this Entity\n\nFiltering Type: `text`"
                            },
                            "labels": {
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              },
                              "description": "This Entity's labels\n\nFiltering Type: `list of integer`"
                            },
                            "language": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                            },
                            "timestamp": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                            },
                            "uid": {
                              "minLength": 0,
                              "type": "string",
                              "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                            }
                          },
                          "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "name": {
                          "minLength": 0,
                          "maxLength": 5000,
                          "type": "string",
                          "description": "\n\n\nCannot Include:\n* HTML markup\n* a phone number\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "address": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "city": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "pattern": "^[a-zA-Z]{2}$",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "extraDescription": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                            },
                            "line1": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line2": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line3": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "postalCode": {
                              "minLength": 0,
                              "maxLength": 10,
                              "type": "string",
                              "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "region": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "sublocality": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "acceptingNewPatients": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "acceptsReservations": {
                          "type": "boolean",
                          "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "accessHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalHoursText": {
                          "minLength": 0,
                          "maxLength": 255,
                          "type": "string",
                          "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalPromotingLocations": {
                          "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Filtering Type: `entityId`"
                          }
                        },
                        "addressHidden": {
                          "type": "boolean",
                          "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "admittingHospitals": {
                          "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "adultPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ageRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "maxValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                            },
                            "minValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                            }
                          },
                          "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "airportShuttle": {
                          "enum": [
                            "AIRPORT_SHUTTLE_AVAILABLE",
                            "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "airportTransfer": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "allInclusive": {
                          "enum": [
                            "ALL_INCLUSIVE_RATES_AVAILABLE",
                            "ALL_INCLUSIVE_RATES_ONLY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "alternateNames": {
                          "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "alternatePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "alternateWebsites": {
                          "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 255,
                            "format": "uri",
                            "type": "string",
                            "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                          }
                        },
                        "androidAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "answer": {
                          "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                          "type": "string",
                          "format": "rich-text"
                        },
                        "applicationUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "associations": {
                          "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "attendance": {
                          "required": [
                            "attendanceMode"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "attendanceMode": {
                              "enum": [
                                "OFFLINE",
                                "ONLINE",
                                "MIXED"
                              ],
                              "type": "string",
                              "description": "Filtering Type: `option`"
                            },
                            "virtualLocationUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          },
                          "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "attire": {
                          "enum": [
                            "UNSPECIFIED",
                            "DRESSY",
                            "CASUAL",
                            "FORMAL"
                          ],
                          "type": "string",
                          "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "babysittingOffered": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "baggageStorage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bar": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachAccess": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachFrontProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bicycles": {
                          "enum": [
                            "BICYCLE_RENTALS",
                            "BICYCLE_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bios": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "boutiqueStores": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brands": {
                          "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "breakfast": {
                          "enum": [
                            "BREAKFAST_AVAILABLE",
                            "BREAKFAST_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brunchHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "businessCenter": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "calendars": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "carRental": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "casino": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "categoryIds": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          },
                          "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "catsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "certifications": {
                          "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "checkInTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "checkOutTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "classificationRating": {
                          "pattern": "^\\d*\\.?\\d*$",
                          "type": "string",
                          "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "closed": {
                          "type": "boolean",
                          "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "concierge": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "conditionsTreated": {
                          "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "convenienceStore": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "currencyExchange": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "customKeywords": {
                          "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "datePosted": {
                          "format": "date",
                          "type": "string",
                          "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "degrees": {
                          "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ANP",
                              "APN",
                              "APRN",
                              "ARNP",
                              "CNM",
                              "CNP",
                              "CNS",
                              "CPNP",
                              "CRNA",
                              "CRNP",
                              "DC",
                              "DDS",
                              "DMD",
                              "DNP",
                              "DO",
                              "DPM",
                              "DVM",
                              "FNP",
                              "GNP",
                              "LAC",
                              "LPN",
                              "MBA",
                              "MBBS",
                              "MD",
                              "MPH",
                              "ND",
                              "NP",
                              "OD",
                              "PA",
                              "PAC",
                              "PHARMD",
                              "PHD",
                              "PNP",
                              "PSYD",
                              "VMD",
                              "WHNP"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "deliveryHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "description": {
                          "minLength": 10,
                          "maxLength": 15000,
                          "type": "string",
                          "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "displayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "doctorOnCall": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "dogsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "driveThroughHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                        },
                        "dropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "educationList": {
                          "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "type",
                              "institutionName",
                              "yearCompleted"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "institutionName": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "FELLOWSHIP",
                                  "RESIDENCY",
                                  "INTERNSHIP",
                                  "MEDICAL_SCHOOL"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              },
                              "yearCompleted": {
                                "multipleOf": 1,
                                "minimum": 1900,
                                "maximum": 2100,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "electricChargingStation": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "elevator": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ellipticalMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "emails": {
                          "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "format": "email",
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "employmentType": {
                          "enum": [
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "OTHER"
                          ],
                          "type": "string",
                          "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "eventStatus": {
                          "enum": [
                            "SCHEDULED",
                            "RESCHEDULED",
                            "POSTPONED",
                            "CANCELED",
                            "EVENT_MOVED_ONLINE"
                          ],
                          "type": "string",
                          "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "facebookCallToAction": {
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "type": {
                              "enum": [
                                "NONE",
                                "BOOK_NOW",
                                "CALL_NOW",
                                "CONTACT_US",
                                "SEND_MESSAGE",
                                "USE_APP",
                                "PLAY_GAME",
                                "SHOP_NOW",
                                "SIGN_UP",
                                "WATCH_VIDEO",
                                "SEND_EMAIL",
                                "LEARN_MORE",
                                "PURCHASE_GIFT_CARDS",
                                "ORDER_NOW",
                                "FOLLOW_PAGE"
                              ],
                              "type": "string",
                              "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                            },
                            "value": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookDescriptor": {
                          "minLength": 3,
                          "maxLength": 75,
                          "type": "string",
                          "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookOverrideCity": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookPageUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookVanityUrl": {
                          "minLength": 0,
                          "maxLength": 50,
                          "type": "string",
                          "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fax": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "featuredMessage": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 50,
                              "type": "string",
                              "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "firstName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "firstPartyReviewPage": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fitnessCenter": {
                          "enum": [
                            "FITNESS_CENTER_AVAILABLE",
                            "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "floorCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "freeWeights": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "frequentlyAskedQuestions": {
                          "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "question"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "answer": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "question": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "frontDesk": {
                          "enum": [
                            "FRONT_DESK_AVAILABLE",
                            "FRONT_DESK_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gameRoom": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gender": {
                          "enum": [
                            "UNSPECIFIED",
                            "FEMALE",
                            "MALE"
                          ],
                          "type": "string",
                          "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "geomodifier": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "giftShop": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "golf": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "googleAttributes": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {},
                          "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "googleCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleMyBusinessLabels": {
                          "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 50,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "googlePlaceId": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "googleProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleWebsiteOverride": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "happyHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "headshot": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "hiringOrganization": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "holidayHoursConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "horsebackRiding": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hotTub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "housekeeping": {
                          "enum": [
                            "HOUSEKEEPING_AVAILABLE",
                            "HOUSEKEEPING_AVAILABLE_DAILY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "impressum": {
                          "minLength": 0,
                          "maxLength": 2000,
                          "type": "string",
                          "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "indoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "instagramHandle": {
                          "minLength": 0,
                          "maxLength": 30,
                          "type": "string",
                          "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "insuranceAccepted": {
                          "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "iosAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "isClusterPrimary": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "isFreeEvent": {
                          "type": "boolean",
                          "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "isoRegionCode": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "keywords": {
                          "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "kidFriendly": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsClub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsStayFree": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kitchenHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "labels": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string"
                          },
                          "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "landingPageUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "languages": {
                          "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "lastName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "laundry": {
                          "enum": [
                            "FULL_SERVICE",
                            "SELF_SERVICE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lazyRiver": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lifeguard": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "linkedLocation": {
                          "type": "string",
                          "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                        },
                        "localPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "localShuttle": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "locatedIn": {
                          "type": "string",
                          "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                        },
                        "location": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "existingLocation": {
                              "type": "string",
                              "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                            },
                            "externalLocation": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "locationType": {
                          "enum": [
                            "LOCATION",
                            "HEALTHCARE_FACILITY",
                            "HEALTHCARE_PROFESSIONAL",
                            "ATM",
                            "RESTAURANT",
                            "HOTEL"
                          ],
                          "type": "string",
                          "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "logo": {
                          "required": [
                            "image"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                          "properties": {
                            "clickthroughUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "description": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "details": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "image": {
                              "required": [
                                "url"
                              ],
                              "additionalProperties": false,
                              "type": "object",
                              "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                              "properties": {
                                "alternateText": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "url": {
                                  "minLength": 0,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              }
                            }
                          }
                        },
                        "mainPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "massage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxAgeOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxNumberOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "mealsServed": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "BREAKFAST",
                              "LUNCH",
                              "BRUNCH",
                              "DINNER",
                              "HAPPY_HOUR",
                              "LATE_NIGHT"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "meetingRoomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "menuUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL where consumers can view the entity's menu\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "menus": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "middleName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "mobilePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "mobilityAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "nightclub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "npi": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "nudgeEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "officeName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "onlineServiceHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "orderUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to place an order at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "organizerEmail": {
                          "minLength": 0,
                          "format": "email",
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "outdoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "parking": {
                          "enum": [
                            "PARKING_AVAILABLE",
                            "PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "paymentOptions": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ALIPAY",
                              "AMERICANEXPRESS",
                              "ANDROIDPAY",
                              "APPLEPAY",
                              "ATM",
                              "ATMQUICK",
                              "BACS",
                              "BANCONTACT",
                              "BANKDEPOSIT",
                              "BANKPAY",
                              "BGO",
                              "BITCOIN",
                              "Bar",
                              "CARTASI",
                              "CASH",
                              "CCS",
                              "CHECK",
                              "CONB",
                              "CVVV",
                              "DEBITNOTE",
                              "DINERSCLUB",
                              "DIRECTDEBIT",
                              "DISCOVER",
                              "ECKARTE",
                              "ECOCHEQUE",
                              "EKENA",
                              "EMV",
                              "FINANCING",
                              "GOPAY",
                              "HAYAKAKEN",
                              "HEBAG",
                              "IBOD",
                              "ICCARDS",
                              "ICOCA",
                              "ID",
                              "IDEAL",
                              "INCA",
                              "INVOICE",
                              "JCB",
                              "JCoinPay",
                              "JKOPAY",
                              "KITACA",
                              "KLA",
                              "KLARNA",
                              "LINEPAY",
                              "MAESTRO",
                              "MANACA",
                              "MASTERCARD",
                              "MIPAY",
                              "MONIZZE",
                              "MPAY",
                              "Manuelle Lastsch",
                              "Merpay",
                              "NANACO",
                              "NEXI",
                              "NIMOCA",
                              "OREM",
                              "PASMO",
                              "PAYBACKPAY",
                              "PAYBOX",
                              "PAYCONIQ",
                              "PAYPAL",
                              "PAYPAY",
                              "PAYSEC",
                              "PIN",
                              "POSTEPAY",
                              "QRCODE",
                              "QUICPAY",
                              "RAKUTENEDY",
                              "RAKUTENPAY",
                              "SAMSUNGPAY",
                              "SODEXO",
                              "SUGOCA",
                              "SUICA",
                              "SWISH",
                              "TICKETRESTAURANT",
                              "TOICA",
                              "TRAVELERSCHECK",
                              "TSCUBIC",
                              "TWINT",
                              "UNIONPAY",
                              "VEV",
                              "VISA",
                              "VISAELECTRON",
                              "VOB",
                              "VOUCHER",
                              "VPAY",
                              "WAON",
                              "WECHATPAY",
                              "WIRETRANSFER",
                              "Yucho Pay",
                              "ZELLE",
                              "auPay",
                              "dBarai",
                              "Überweisung"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "performers": {
                          "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "petsAllowed": {
                          "enum": [
                            "PETS_WELCOME",
                            "PETS_WELCOME_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "photoGallery": {
                          "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "image"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                            "properties": {
                              "clickthroughUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "description": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "details": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "image": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "pickupHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                        },
                        "priceRange": {
                          "enum": [
                            "UNSPECIFIED",
                            "ONE",
                            "TWO",
                            "THREE",
                            "FOUR"
                          ],
                          "type": "string",
                          "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "primaryConversationContact": {
                          "minLength": 0,
                          "type": "string",
                          "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "privateBeach": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "privateCarService": {
                          "enum": [
                            "PRIVATE_CAR_SERVICE",
                            "PRIVATE_CAR_SERVICE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "productLists": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "products": {
                          "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "questionsAndAnswers": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingCompetitors": {
                          "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "name",
                              "website"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "website": {
                                "minLength": 0,
                                "maxLength": 255,
                                "format": "uri",
                                "type": "string",
                                "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "rankTrackingEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingFrequency": {
                          "enum": [
                            "WEEKLY",
                            "MONTHLY",
                            "QUARTERLY"
                          ],
                          "type": "string",
                          "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingQueryTemplates": {
                          "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "KEYWORD",
                              "KEYWORD_ZIP",
                              "KEYWORD_CITY",
                              "KEYWORD_IN_CITY",
                              "KEYWORD_NEAR_ME",
                              "KEYWORD_CITY_STATE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "rankTrackingSites": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "GOOGLE_DESKTOP",
                              "GOOGLE_MOBILE",
                              "BING_DESKTOP",
                              "BING_MOBILE",
                              "YAHOO_DESKTOP",
                              "YAHOO_MOBILE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reservationUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to make reservations at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "restaurantCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "reviewGenerationUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reviewResponseConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "roomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "roomService": {
                          "enum": [
                            "ROOM_SERVICE_AVAILABLE",
                            "ROOM_SERVICE_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "routableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "salon": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "sauna": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "scuba": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "selfParking": {
                          "enum": [
                            "SELF_PARKING_AVAILABLE",
                            "SELF_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "seniorHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "serviceArea": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "places": {
                              "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            }
                          },
                          "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "serviceAreaPlaces": {
                          "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "POSTAL_CODE",
                                  "REGION",
                                  "COUNTY",
                                  "CITY",
                                  "SUBLOCALITY"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "services": {
                          "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "smokeFreeProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "snorkeling": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "socialHour": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "spa": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "specialities": {
                          "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "tableService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "takeoutHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "tennis": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "thermalPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ticketAvailability": {
                          "enum": [
                            "IN_STOCK",
                            "SOLD_OUT",
                            "PRE_ORDER",
                            "UNSPECIFIED"
                          ],
                          "type": "string",
                          "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketPriceRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                            },
                            "maxValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                            },
                            "minValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                            }
                          },
                          "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketSaleDateTime": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "time": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "date-time",
                              "type": "string",
                              "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            },
                            "start": {
                              "format": "date-time",
                              "type": "string",
                              "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            }
                          },
                          "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "timeZoneUtcOffset": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "timezone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "tollFreePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "treadmill": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ttyPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "turndownService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "twitterHandle": {
                          "minLength": 0,
                          "maxLength": 15,
                          "type": "string",
                          "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberLink": {
                          "required": [
                            "presentation"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "presentation": {
                              "enum": [
                                "BUTTON",
                                "LINK"
                              ],
                              "type": "string",
                              "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 100,
                              "type": "string",
                              "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberTripBranding": {
                          "required": [
                            "text",
                            "url",
                            "description"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 150,
                              "type": "string",
                              "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 28,
                              "type": "string",
                              "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "valetParking": {
                          "enum": [
                            "VALET_PARKING_AVAILABLE",
                            "VALET_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "validThrough": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "vendingMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "venueName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "videos": {
                          "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "video"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "description": {
                                "minLength": 0,
                                "maxLength": 140,
                                "type": "string",
                                "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "video": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "wadingPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wakeUpCalls": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "walkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "waterPark": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterSkiing": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "watercraft": {
                          "enum": [
                            "WATERCRAFT_RENTALS",
                            "WATERCRAFT_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterslide": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wavePool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "websiteUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL for this entity's website\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "weightMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wheelchairAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wifiAvailable": {
                          "enum": [
                            "WIFI_AVAILABLE",
                            "WIFI_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "workRemote": {
                          "type": "boolean",
                          "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "yearEstablished": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yearLastRenovated": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "yextDisplayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "yextDropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextPickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextRoutableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextWalkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/entities/{entityId}": {
      "get": {
        "operationId": "KnowledgeApiServer.getEntity",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The external ID of the requested Entity",
            "name": "entityId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of field names. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"address.line1\"`). Custom fields are specified in the same way, albeit with their `c_*` name.",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if at least one field is of type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "name": "format",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "description": "Optional parameter to resolve all embedded fields in a Location object response.\n  - `false`: Location object returns placeholder labels, e.g., \"Your [[CITY]] store\"\n  - `true`: Location object returns placeholder values, e.g., \"Your Fairfax store\"\n",
            "name": "resolvePlaceholders",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Entities: Get",
        "description": "Retrieve information for an Entity with a given ID",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "meta": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "accountId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of the account associated with this Entity"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                            },
                            "entityType": {
                              "minLength": 0,
                              "type": "string",
                              "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                            },
                            "folderId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                            },
                            "id": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of this Entity\n\nFiltering Type: `text`"
                            },
                            "labels": {
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              },
                              "description": "This Entity's labels\n\nFiltering Type: `list of integer`"
                            },
                            "language": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                            },
                            "timestamp": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                            },
                            "uid": {
                              "minLength": 0,
                              "type": "string",
                              "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                            }
                          },
                          "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "name": {
                          "minLength": 0,
                          "maxLength": 5000,
                          "type": "string",
                          "description": "\n\n\nCannot Include:\n* HTML markup\n* a phone number\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "address": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "city": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "pattern": "^[a-zA-Z]{2}$",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "extraDescription": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                            },
                            "line1": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line2": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line3": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "postalCode": {
                              "minLength": 0,
                              "maxLength": 10,
                              "type": "string",
                              "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "region": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "sublocality": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "acceptingNewPatients": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "acceptsReservations": {
                          "type": "boolean",
                          "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "accessHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalHoursText": {
                          "minLength": 0,
                          "maxLength": 255,
                          "type": "string",
                          "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalPromotingLocations": {
                          "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Filtering Type: `entityId`"
                          }
                        },
                        "addressHidden": {
                          "type": "boolean",
                          "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "admittingHospitals": {
                          "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "adultPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ageRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "maxValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                            },
                            "minValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                            }
                          },
                          "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "airportShuttle": {
                          "enum": [
                            "AIRPORT_SHUTTLE_AVAILABLE",
                            "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "airportTransfer": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "allInclusive": {
                          "enum": [
                            "ALL_INCLUSIVE_RATES_AVAILABLE",
                            "ALL_INCLUSIVE_RATES_ONLY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "alternateNames": {
                          "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "alternatePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "alternateWebsites": {
                          "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 255,
                            "format": "uri",
                            "type": "string",
                            "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                          }
                        },
                        "androidAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "answer": {
                          "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                          "type": "string",
                          "format": "rich-text"
                        },
                        "applicationUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "associations": {
                          "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "attendance": {
                          "required": [
                            "attendanceMode"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "attendanceMode": {
                              "enum": [
                                "OFFLINE",
                                "ONLINE",
                                "MIXED"
                              ],
                              "type": "string",
                              "description": "Filtering Type: `option`"
                            },
                            "virtualLocationUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          },
                          "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "attire": {
                          "enum": [
                            "UNSPECIFIED",
                            "DRESSY",
                            "CASUAL",
                            "FORMAL"
                          ],
                          "type": "string",
                          "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "babysittingOffered": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "baggageStorage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bar": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachAccess": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachFrontProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bicycles": {
                          "enum": [
                            "BICYCLE_RENTALS",
                            "BICYCLE_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bios": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "boutiqueStores": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brands": {
                          "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "breakfast": {
                          "enum": [
                            "BREAKFAST_AVAILABLE",
                            "BREAKFAST_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brunchHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "businessCenter": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "calendars": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "carRental": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "casino": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "categoryIds": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          },
                          "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "catsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "certifications": {
                          "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "checkInTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "checkOutTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "classificationRating": {
                          "pattern": "^\\d*\\.?\\d*$",
                          "type": "string",
                          "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "closed": {
                          "type": "boolean",
                          "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "concierge": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "conditionsTreated": {
                          "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "convenienceStore": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "currencyExchange": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "customKeywords": {
                          "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "datePosted": {
                          "format": "date",
                          "type": "string",
                          "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "degrees": {
                          "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ANP",
                              "APN",
                              "APRN",
                              "ARNP",
                              "CNM",
                              "CNP",
                              "CNS",
                              "CPNP",
                              "CRNA",
                              "CRNP",
                              "DC",
                              "DDS",
                              "DMD",
                              "DNP",
                              "DO",
                              "DPM",
                              "DVM",
                              "FNP",
                              "GNP",
                              "LAC",
                              "LPN",
                              "MBA",
                              "MBBS",
                              "MD",
                              "MPH",
                              "ND",
                              "NP",
                              "OD",
                              "PA",
                              "PAC",
                              "PHARMD",
                              "PHD",
                              "PNP",
                              "PSYD",
                              "VMD",
                              "WHNP"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "deliveryHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "description": {
                          "minLength": 10,
                          "maxLength": 15000,
                          "type": "string",
                          "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "displayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "doctorOnCall": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "dogsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "driveThroughHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                        },
                        "dropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "educationList": {
                          "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "type",
                              "institutionName",
                              "yearCompleted"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "institutionName": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "FELLOWSHIP",
                                  "RESIDENCY",
                                  "INTERNSHIP",
                                  "MEDICAL_SCHOOL"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              },
                              "yearCompleted": {
                                "multipleOf": 1,
                                "minimum": 1900,
                                "maximum": 2100,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "electricChargingStation": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "elevator": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ellipticalMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "emails": {
                          "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "format": "email",
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "employmentType": {
                          "enum": [
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "OTHER"
                          ],
                          "type": "string",
                          "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "eventStatus": {
                          "enum": [
                            "SCHEDULED",
                            "RESCHEDULED",
                            "POSTPONED",
                            "CANCELED",
                            "EVENT_MOVED_ONLINE"
                          ],
                          "type": "string",
                          "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "facebookCallToAction": {
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "type": {
                              "enum": [
                                "NONE",
                                "BOOK_NOW",
                                "CALL_NOW",
                                "CONTACT_US",
                                "SEND_MESSAGE",
                                "USE_APP",
                                "PLAY_GAME",
                                "SHOP_NOW",
                                "SIGN_UP",
                                "WATCH_VIDEO",
                                "SEND_EMAIL",
                                "LEARN_MORE",
                                "PURCHASE_GIFT_CARDS",
                                "ORDER_NOW",
                                "FOLLOW_PAGE"
                              ],
                              "type": "string",
                              "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                            },
                            "value": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookDescriptor": {
                          "minLength": 3,
                          "maxLength": 75,
                          "type": "string",
                          "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookOverrideCity": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookPageUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookVanityUrl": {
                          "minLength": 0,
                          "maxLength": 50,
                          "type": "string",
                          "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fax": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "featuredMessage": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 50,
                              "type": "string",
                              "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "firstName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "firstPartyReviewPage": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fitnessCenter": {
                          "enum": [
                            "FITNESS_CENTER_AVAILABLE",
                            "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "floorCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "freeWeights": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "frequentlyAskedQuestions": {
                          "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "question"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "answer": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "question": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "frontDesk": {
                          "enum": [
                            "FRONT_DESK_AVAILABLE",
                            "FRONT_DESK_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gameRoom": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gender": {
                          "enum": [
                            "UNSPECIFIED",
                            "FEMALE",
                            "MALE"
                          ],
                          "type": "string",
                          "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "geomodifier": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "giftShop": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "golf": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "googleAttributes": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {},
                          "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "googleCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleMyBusinessLabels": {
                          "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 50,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "googlePlaceId": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "googleProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleWebsiteOverride": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "happyHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "headshot": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "hiringOrganization": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "holidayHoursConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "horsebackRiding": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hotTub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "housekeeping": {
                          "enum": [
                            "HOUSEKEEPING_AVAILABLE",
                            "HOUSEKEEPING_AVAILABLE_DAILY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "impressum": {
                          "minLength": 0,
                          "maxLength": 2000,
                          "type": "string",
                          "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "indoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "instagramHandle": {
                          "minLength": 0,
                          "maxLength": 30,
                          "type": "string",
                          "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "insuranceAccepted": {
                          "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "iosAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "isClusterPrimary": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "isFreeEvent": {
                          "type": "boolean",
                          "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "isoRegionCode": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "keywords": {
                          "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "kidFriendly": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsClub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsStayFree": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kitchenHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "labels": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string"
                          },
                          "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "landingPageUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "languages": {
                          "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "lastName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "laundry": {
                          "enum": [
                            "FULL_SERVICE",
                            "SELF_SERVICE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lazyRiver": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lifeguard": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "linkedLocation": {
                          "type": "string",
                          "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                        },
                        "localPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "localShuttle": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "locatedIn": {
                          "type": "string",
                          "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                        },
                        "location": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "existingLocation": {
                              "type": "string",
                              "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                            },
                            "externalLocation": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "locationType": {
                          "enum": [
                            "LOCATION",
                            "HEALTHCARE_FACILITY",
                            "HEALTHCARE_PROFESSIONAL",
                            "ATM",
                            "RESTAURANT",
                            "HOTEL"
                          ],
                          "type": "string",
                          "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "logo": {
                          "required": [
                            "image"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                          "properties": {
                            "clickthroughUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "description": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "details": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "image": {
                              "required": [
                                "url"
                              ],
                              "additionalProperties": false,
                              "type": "object",
                              "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                              "properties": {
                                "alternateText": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "url": {
                                  "minLength": 0,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              }
                            }
                          }
                        },
                        "mainPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "massage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxAgeOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxNumberOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "mealsServed": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "BREAKFAST",
                              "LUNCH",
                              "BRUNCH",
                              "DINNER",
                              "HAPPY_HOUR",
                              "LATE_NIGHT"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "meetingRoomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "menuUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL where consumers can view the entity's menu\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "menus": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "middleName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "mobilePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "mobilityAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "nightclub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "npi": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "nudgeEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "officeName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "onlineServiceHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "orderUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to place an order at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "organizerEmail": {
                          "minLength": 0,
                          "format": "email",
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "outdoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "parking": {
                          "enum": [
                            "PARKING_AVAILABLE",
                            "PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "paymentOptions": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ALIPAY",
                              "AMERICANEXPRESS",
                              "ANDROIDPAY",
                              "APPLEPAY",
                              "ATM",
                              "ATMQUICK",
                              "BACS",
                              "BANCONTACT",
                              "BANKDEPOSIT",
                              "BANKPAY",
                              "BGO",
                              "BITCOIN",
                              "Bar",
                              "CARTASI",
                              "CASH",
                              "CCS",
                              "CHECK",
                              "CONB",
                              "CVVV",
                              "DEBITNOTE",
                              "DINERSCLUB",
                              "DIRECTDEBIT",
                              "DISCOVER",
                              "ECKARTE",
                              "ECOCHEQUE",
                              "EKENA",
                              "EMV",
                              "FINANCING",
                              "GOPAY",
                              "HAYAKAKEN",
                              "HEBAG",
                              "IBOD",
                              "ICCARDS",
                              "ICOCA",
                              "ID",
                              "IDEAL",
                              "INCA",
                              "INVOICE",
                              "JCB",
                              "JCoinPay",
                              "JKOPAY",
                              "KITACA",
                              "KLA",
                              "KLARNA",
                              "LINEPAY",
                              "MAESTRO",
                              "MANACA",
                              "MASTERCARD",
                              "MIPAY",
                              "MONIZZE",
                              "MPAY",
                              "Manuelle Lastsch",
                              "Merpay",
                              "NANACO",
                              "NEXI",
                              "NIMOCA",
                              "OREM",
                              "PASMO",
                              "PAYBACKPAY",
                              "PAYBOX",
                              "PAYCONIQ",
                              "PAYPAL",
                              "PAYPAY",
                              "PAYSEC",
                              "PIN",
                              "POSTEPAY",
                              "QRCODE",
                              "QUICPAY",
                              "RAKUTENEDY",
                              "RAKUTENPAY",
                              "SAMSUNGPAY",
                              "SODEXO",
                              "SUGOCA",
                              "SUICA",
                              "SWISH",
                              "TICKETRESTAURANT",
                              "TOICA",
                              "TRAVELERSCHECK",
                              "TSCUBIC",
                              "TWINT",
                              "UNIONPAY",
                              "VEV",
                              "VISA",
                              "VISAELECTRON",
                              "VOB",
                              "VOUCHER",
                              "VPAY",
                              "WAON",
                              "WECHATPAY",
                              "WIRETRANSFER",
                              "Yucho Pay",
                              "ZELLE",
                              "auPay",
                              "dBarai",
                              "Überweisung"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "performers": {
                          "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "petsAllowed": {
                          "enum": [
                            "PETS_WELCOME",
                            "PETS_WELCOME_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "photoGallery": {
                          "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "image"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                            "properties": {
                              "clickthroughUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "description": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "details": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "image": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "pickupHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                        },
                        "priceRange": {
                          "enum": [
                            "UNSPECIFIED",
                            "ONE",
                            "TWO",
                            "THREE",
                            "FOUR"
                          ],
                          "type": "string",
                          "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "primaryConversationContact": {
                          "minLength": 0,
                          "type": "string",
                          "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "privateBeach": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "privateCarService": {
                          "enum": [
                            "PRIVATE_CAR_SERVICE",
                            "PRIVATE_CAR_SERVICE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "productLists": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "products": {
                          "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "questionsAndAnswers": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingCompetitors": {
                          "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "name",
                              "website"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "website": {
                                "minLength": 0,
                                "maxLength": 255,
                                "format": "uri",
                                "type": "string",
                                "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "rankTrackingEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingFrequency": {
                          "enum": [
                            "WEEKLY",
                            "MONTHLY",
                            "QUARTERLY"
                          ],
                          "type": "string",
                          "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingQueryTemplates": {
                          "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "KEYWORD",
                              "KEYWORD_ZIP",
                              "KEYWORD_CITY",
                              "KEYWORD_IN_CITY",
                              "KEYWORD_NEAR_ME",
                              "KEYWORD_CITY_STATE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "rankTrackingSites": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "GOOGLE_DESKTOP",
                              "GOOGLE_MOBILE",
                              "BING_DESKTOP",
                              "BING_MOBILE",
                              "YAHOO_DESKTOP",
                              "YAHOO_MOBILE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reservationUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to make reservations at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "restaurantCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "reviewGenerationUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reviewResponseConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "roomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "roomService": {
                          "enum": [
                            "ROOM_SERVICE_AVAILABLE",
                            "ROOM_SERVICE_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "routableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "salon": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "sauna": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "scuba": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "selfParking": {
                          "enum": [
                            "SELF_PARKING_AVAILABLE",
                            "SELF_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "seniorHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "serviceArea": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "places": {
                              "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            }
                          },
                          "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "serviceAreaPlaces": {
                          "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "POSTAL_CODE",
                                  "REGION",
                                  "COUNTY",
                                  "CITY",
                                  "SUBLOCALITY"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "services": {
                          "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "smokeFreeProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "snorkeling": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "socialHour": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "spa": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "specialities": {
                          "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "tableService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "takeoutHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "tennis": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "thermalPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ticketAvailability": {
                          "enum": [
                            "IN_STOCK",
                            "SOLD_OUT",
                            "PRE_ORDER",
                            "UNSPECIFIED"
                          ],
                          "type": "string",
                          "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketPriceRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                            },
                            "maxValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                            },
                            "minValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                            }
                          },
                          "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketSaleDateTime": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "time": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "date-time",
                              "type": "string",
                              "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            },
                            "start": {
                              "format": "date-time",
                              "type": "string",
                              "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            }
                          },
                          "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "timeZoneUtcOffset": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "timezone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "tollFreePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "treadmill": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ttyPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "turndownService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "twitterHandle": {
                          "minLength": 0,
                          "maxLength": 15,
                          "type": "string",
                          "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberLink": {
                          "required": [
                            "presentation"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "presentation": {
                              "enum": [
                                "BUTTON",
                                "LINK"
                              ],
                              "type": "string",
                              "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 100,
                              "type": "string",
                              "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberTripBranding": {
                          "required": [
                            "text",
                            "url",
                            "description"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 150,
                              "type": "string",
                              "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 28,
                              "type": "string",
                              "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "valetParking": {
                          "enum": [
                            "VALET_PARKING_AVAILABLE",
                            "VALET_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "validThrough": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "vendingMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "venueName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "videos": {
                          "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "video"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "description": {
                                "minLength": 0,
                                "maxLength": 140,
                                "type": "string",
                                "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "video": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "wadingPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wakeUpCalls": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "walkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "waterPark": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterSkiing": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "watercraft": {
                          "enum": [
                            "WATERCRAFT_RENTALS",
                            "WATERCRAFT_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterslide": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wavePool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "websiteUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL for this entity's website\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "weightMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wheelchairAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wifiAvailable": {
                          "enum": [
                            "WIFI_AVAILABLE",
                            "WIFI_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "workRemote": {
                          "type": "boolean",
                          "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "yearEstablished": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yearLastRenovated": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "yextDisplayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "yextDropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextPickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextRoutableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextWalkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "KnowledgeApiServer.updateEntity",
        "requestBody": {
          "description": "Information to update on the entity",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityWrite"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The external ID of the requested Entity",
            "name": "entityId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "The formatting language used to parse rich text field values. Present and **required** if an only if the request contains a field with type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n",
            "name": "format",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "type": "boolean"
            },
            "description": "Optional parameter to strip unsupported formats in rich text fields. When this parameter is included, the unsupported formats in rich text fields will be stripped and saved as plain text; otherwise if this parameter is not included, unsupported formats will return an error.\n",
            "name": "stripUnsupportedFormats",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of top-level fields to apply from the template. If provided, only the fields specified will be applied to the entity.\n\nIgnored if **`templateId`** is not provided.\n",
            "name": "templateFields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The ID of the template to apply to the entity\n\n**NOTE:** Some fields that are part of the provided template but not present in the API will be applied - e.g. Linked Accounts\n",
            "name": "templateId",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Entities: Update",
        "description": "Update the Entity with the given ID",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "meta": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "accountId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of the account associated with this Entity"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                            },
                            "entityType": {
                              "minLength": 0,
                              "type": "string",
                              "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                            },
                            "folderId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                            },
                            "id": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of this Entity\n\nFiltering Type: `text`"
                            },
                            "labels": {
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              },
                              "description": "This Entity's labels\n\nFiltering Type: `list of integer`"
                            },
                            "language": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                            },
                            "timestamp": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                            },
                            "uid": {
                              "minLength": 0,
                              "type": "string",
                              "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                            }
                          },
                          "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "name": {
                          "minLength": 0,
                          "maxLength": 5000,
                          "type": "string",
                          "description": "\n\n\nCannot Include:\n* HTML markup\n* a phone number\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "address": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "city": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "pattern": "^[a-zA-Z]{2}$",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "extraDescription": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                            },
                            "line1": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line2": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line3": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "postalCode": {
                              "minLength": 0,
                              "maxLength": 10,
                              "type": "string",
                              "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "region": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "sublocality": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "acceptingNewPatients": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "acceptsReservations": {
                          "type": "boolean",
                          "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "accessHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalHoursText": {
                          "minLength": 0,
                          "maxLength": 255,
                          "type": "string",
                          "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalPromotingLocations": {
                          "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Filtering Type: `entityId`"
                          }
                        },
                        "addressHidden": {
                          "type": "boolean",
                          "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "admittingHospitals": {
                          "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "adultPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ageRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "maxValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                            },
                            "minValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                            }
                          },
                          "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "airportShuttle": {
                          "enum": [
                            "AIRPORT_SHUTTLE_AVAILABLE",
                            "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "airportTransfer": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "allInclusive": {
                          "enum": [
                            "ALL_INCLUSIVE_RATES_AVAILABLE",
                            "ALL_INCLUSIVE_RATES_ONLY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "alternateNames": {
                          "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "alternatePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "alternateWebsites": {
                          "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 255,
                            "format": "uri",
                            "type": "string",
                            "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                          }
                        },
                        "androidAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "answer": {
                          "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                          "type": "string",
                          "format": "rich-text"
                        },
                        "applicationUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "associations": {
                          "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "attendance": {
                          "required": [
                            "attendanceMode"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "attendanceMode": {
                              "enum": [
                                "OFFLINE",
                                "ONLINE",
                                "MIXED"
                              ],
                              "type": "string",
                              "description": "Filtering Type: `option`"
                            },
                            "virtualLocationUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          },
                          "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "attire": {
                          "enum": [
                            "UNSPECIFIED",
                            "DRESSY",
                            "CASUAL",
                            "FORMAL"
                          ],
                          "type": "string",
                          "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "babysittingOffered": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "baggageStorage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bar": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachAccess": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachFrontProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bicycles": {
                          "enum": [
                            "BICYCLE_RENTALS",
                            "BICYCLE_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bios": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "boutiqueStores": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brands": {
                          "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "breakfast": {
                          "enum": [
                            "BREAKFAST_AVAILABLE",
                            "BREAKFAST_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brunchHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "businessCenter": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "calendars": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "carRental": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "casino": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "categoryIds": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          },
                          "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "catsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "certifications": {
                          "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "checkInTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "checkOutTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "classificationRating": {
                          "pattern": "^\\d*\\.?\\d*$",
                          "type": "string",
                          "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "closed": {
                          "type": "boolean",
                          "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "concierge": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "conditionsTreated": {
                          "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "convenienceStore": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "currencyExchange": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "customKeywords": {
                          "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "datePosted": {
                          "format": "date",
                          "type": "string",
                          "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "degrees": {
                          "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ANP",
                              "APN",
                              "APRN",
                              "ARNP",
                              "CNM",
                              "CNP",
                              "CNS",
                              "CPNP",
                              "CRNA",
                              "CRNP",
                              "DC",
                              "DDS",
                              "DMD",
                              "DNP",
                              "DO",
                              "DPM",
                              "DVM",
                              "FNP",
                              "GNP",
                              "LAC",
                              "LPN",
                              "MBA",
                              "MBBS",
                              "MD",
                              "MPH",
                              "ND",
                              "NP",
                              "OD",
                              "PA",
                              "PAC",
                              "PHARMD",
                              "PHD",
                              "PNP",
                              "PSYD",
                              "VMD",
                              "WHNP"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "deliveryHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "description": {
                          "minLength": 10,
                          "maxLength": 15000,
                          "type": "string",
                          "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "displayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "doctorOnCall": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "dogsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "driveThroughHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                        },
                        "dropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "educationList": {
                          "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "type",
                              "institutionName",
                              "yearCompleted"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "institutionName": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "FELLOWSHIP",
                                  "RESIDENCY",
                                  "INTERNSHIP",
                                  "MEDICAL_SCHOOL"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              },
                              "yearCompleted": {
                                "multipleOf": 1,
                                "minimum": 1900,
                                "maximum": 2100,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "electricChargingStation": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "elevator": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ellipticalMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "emails": {
                          "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "format": "email",
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "employmentType": {
                          "enum": [
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "OTHER"
                          ],
                          "type": "string",
                          "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "eventStatus": {
                          "enum": [
                            "SCHEDULED",
                            "RESCHEDULED",
                            "POSTPONED",
                            "CANCELED",
                            "EVENT_MOVED_ONLINE"
                          ],
                          "type": "string",
                          "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "facebookCallToAction": {
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "type": {
                              "enum": [
                                "NONE",
                                "BOOK_NOW",
                                "CALL_NOW",
                                "CONTACT_US",
                                "SEND_MESSAGE",
                                "USE_APP",
                                "PLAY_GAME",
                                "SHOP_NOW",
                                "SIGN_UP",
                                "WATCH_VIDEO",
                                "SEND_EMAIL",
                                "LEARN_MORE",
                                "PURCHASE_GIFT_CARDS",
                                "ORDER_NOW",
                                "FOLLOW_PAGE"
                              ],
                              "type": "string",
                              "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                            },
                            "value": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookDescriptor": {
                          "minLength": 3,
                          "maxLength": 75,
                          "type": "string",
                          "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookOverrideCity": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookPageUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookVanityUrl": {
                          "minLength": 0,
                          "maxLength": 50,
                          "type": "string",
                          "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fax": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "featuredMessage": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 50,
                              "type": "string",
                              "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "firstName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "firstPartyReviewPage": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fitnessCenter": {
                          "enum": [
                            "FITNESS_CENTER_AVAILABLE",
                            "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "floorCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "freeWeights": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "frequentlyAskedQuestions": {
                          "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "question"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "answer": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "question": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "frontDesk": {
                          "enum": [
                            "FRONT_DESK_AVAILABLE",
                            "FRONT_DESK_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gameRoom": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gender": {
                          "enum": [
                            "UNSPECIFIED",
                            "FEMALE",
                            "MALE"
                          ],
                          "type": "string",
                          "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "geomodifier": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "giftShop": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "golf": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "googleAttributes": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {},
                          "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "googleCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleMyBusinessLabels": {
                          "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 50,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "googlePlaceId": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "googleProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleWebsiteOverride": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "happyHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "headshot": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "hiringOrganization": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "holidayHoursConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "horsebackRiding": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hotTub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "housekeeping": {
                          "enum": [
                            "HOUSEKEEPING_AVAILABLE",
                            "HOUSEKEEPING_AVAILABLE_DAILY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "impressum": {
                          "minLength": 0,
                          "maxLength": 2000,
                          "type": "string",
                          "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "indoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "instagramHandle": {
                          "minLength": 0,
                          "maxLength": 30,
                          "type": "string",
                          "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "insuranceAccepted": {
                          "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "iosAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "isClusterPrimary": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "isFreeEvent": {
                          "type": "boolean",
                          "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "isoRegionCode": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "keywords": {
                          "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "kidFriendly": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsClub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsStayFree": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kitchenHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "labels": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string"
                          },
                          "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "landingPageUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "languages": {
                          "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "lastName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "laundry": {
                          "enum": [
                            "FULL_SERVICE",
                            "SELF_SERVICE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lazyRiver": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lifeguard": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "linkedLocation": {
                          "type": "string",
                          "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                        },
                        "localPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "localShuttle": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "locatedIn": {
                          "type": "string",
                          "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                        },
                        "location": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "existingLocation": {
                              "type": "string",
                              "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                            },
                            "externalLocation": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "locationType": {
                          "enum": [
                            "LOCATION",
                            "HEALTHCARE_FACILITY",
                            "HEALTHCARE_PROFESSIONAL",
                            "ATM",
                            "RESTAURANT",
                            "HOTEL"
                          ],
                          "type": "string",
                          "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "logo": {
                          "required": [
                            "image"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                          "properties": {
                            "clickthroughUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "description": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "details": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "image": {
                              "required": [
                                "url"
                              ],
                              "additionalProperties": false,
                              "type": "object",
                              "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                              "properties": {
                                "alternateText": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "url": {
                                  "minLength": 0,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              }
                            }
                          }
                        },
                        "mainPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "massage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxAgeOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxNumberOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "mealsServed": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "BREAKFAST",
                              "LUNCH",
                              "BRUNCH",
                              "DINNER",
                              "HAPPY_HOUR",
                              "LATE_NIGHT"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "meetingRoomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "menuUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL where consumers can view the entity's menu\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "menus": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "middleName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "mobilePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "mobilityAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "nightclub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "npi": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "nudgeEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "officeName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "onlineServiceHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "orderUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to place an order at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "organizerEmail": {
                          "minLength": 0,
                          "format": "email",
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "outdoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "parking": {
                          "enum": [
                            "PARKING_AVAILABLE",
                            "PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "paymentOptions": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ALIPAY",
                              "AMERICANEXPRESS",
                              "ANDROIDPAY",
                              "APPLEPAY",
                              "ATM",
                              "ATMQUICK",
                              "BACS",
                              "BANCONTACT",
                              "BANKDEPOSIT",
                              "BANKPAY",
                              "BGO",
                              "BITCOIN",
                              "Bar",
                              "CARTASI",
                              "CASH",
                              "CCS",
                              "CHECK",
                              "CONB",
                              "CVVV",
                              "DEBITNOTE",
                              "DINERSCLUB",
                              "DIRECTDEBIT",
                              "DISCOVER",
                              "ECKARTE",
                              "ECOCHEQUE",
                              "EKENA",
                              "EMV",
                              "FINANCING",
                              "GOPAY",
                              "HAYAKAKEN",
                              "HEBAG",
                              "IBOD",
                              "ICCARDS",
                              "ICOCA",
                              "ID",
                              "IDEAL",
                              "INCA",
                              "INVOICE",
                              "JCB",
                              "JCoinPay",
                              "JKOPAY",
                              "KITACA",
                              "KLA",
                              "KLARNA",
                              "LINEPAY",
                              "MAESTRO",
                              "MANACA",
                              "MASTERCARD",
                              "MIPAY",
                              "MONIZZE",
                              "MPAY",
                              "Manuelle Lastsch",
                              "Merpay",
                              "NANACO",
                              "NEXI",
                              "NIMOCA",
                              "OREM",
                              "PASMO",
                              "PAYBACKPAY",
                              "PAYBOX",
                              "PAYCONIQ",
                              "PAYPAL",
                              "PAYPAY",
                              "PAYSEC",
                              "PIN",
                              "POSTEPAY",
                              "QRCODE",
                              "QUICPAY",
                              "RAKUTENEDY",
                              "RAKUTENPAY",
                              "SAMSUNGPAY",
                              "SODEXO",
                              "SUGOCA",
                              "SUICA",
                              "SWISH",
                              "TICKETRESTAURANT",
                              "TOICA",
                              "TRAVELERSCHECK",
                              "TSCUBIC",
                              "TWINT",
                              "UNIONPAY",
                              "VEV",
                              "VISA",
                              "VISAELECTRON",
                              "VOB",
                              "VOUCHER",
                              "VPAY",
                              "WAON",
                              "WECHATPAY",
                              "WIRETRANSFER",
                              "Yucho Pay",
                              "ZELLE",
                              "auPay",
                              "dBarai",
                              "Überweisung"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "performers": {
                          "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "petsAllowed": {
                          "enum": [
                            "PETS_WELCOME",
                            "PETS_WELCOME_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "photoGallery": {
                          "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "image"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                            "properties": {
                              "clickthroughUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "description": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "details": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "image": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "pickupHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                        },
                        "priceRange": {
                          "enum": [
                            "UNSPECIFIED",
                            "ONE",
                            "TWO",
                            "THREE",
                            "FOUR"
                          ],
                          "type": "string",
                          "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "primaryConversationContact": {
                          "minLength": 0,
                          "type": "string",
                          "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "privateBeach": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "privateCarService": {
                          "enum": [
                            "PRIVATE_CAR_SERVICE",
                            "PRIVATE_CAR_SERVICE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "productLists": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "products": {
                          "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "questionsAndAnswers": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingCompetitors": {
                          "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "name",
                              "website"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "website": {
                                "minLength": 0,
                                "maxLength": 255,
                                "format": "uri",
                                "type": "string",
                                "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "rankTrackingEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingFrequency": {
                          "enum": [
                            "WEEKLY",
                            "MONTHLY",
                            "QUARTERLY"
                          ],
                          "type": "string",
                          "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingQueryTemplates": {
                          "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "KEYWORD",
                              "KEYWORD_ZIP",
                              "KEYWORD_CITY",
                              "KEYWORD_IN_CITY",
                              "KEYWORD_NEAR_ME",
                              "KEYWORD_CITY_STATE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "rankTrackingSites": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "GOOGLE_DESKTOP",
                              "GOOGLE_MOBILE",
                              "BING_DESKTOP",
                              "BING_MOBILE",
                              "YAHOO_DESKTOP",
                              "YAHOO_MOBILE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reservationUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to make reservations at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "restaurantCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "reviewGenerationUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reviewResponseConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "roomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "roomService": {
                          "enum": [
                            "ROOM_SERVICE_AVAILABLE",
                            "ROOM_SERVICE_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "routableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "salon": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "sauna": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "scuba": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "selfParking": {
                          "enum": [
                            "SELF_PARKING_AVAILABLE",
                            "SELF_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "seniorHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "serviceArea": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "places": {
                              "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            }
                          },
                          "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "serviceAreaPlaces": {
                          "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "POSTAL_CODE",
                                  "REGION",
                                  "COUNTY",
                                  "CITY",
                                  "SUBLOCALITY"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "services": {
                          "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "smokeFreeProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "snorkeling": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "socialHour": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "spa": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "specialities": {
                          "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "tableService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "takeoutHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "tennis": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "thermalPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ticketAvailability": {
                          "enum": [
                            "IN_STOCK",
                            "SOLD_OUT",
                            "PRE_ORDER",
                            "UNSPECIFIED"
                          ],
                          "type": "string",
                          "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketPriceRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                            },
                            "maxValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                            },
                            "minValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                            }
                          },
                          "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketSaleDateTime": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "time": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "date-time",
                              "type": "string",
                              "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            },
                            "start": {
                              "format": "date-time",
                              "type": "string",
                              "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            }
                          },
                          "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "timeZoneUtcOffset": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "timezone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "tollFreePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "treadmill": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ttyPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "turndownService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "twitterHandle": {
                          "minLength": 0,
                          "maxLength": 15,
                          "type": "string",
                          "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberLink": {
                          "required": [
                            "presentation"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "presentation": {
                              "enum": [
                                "BUTTON",
                                "LINK"
                              ],
                              "type": "string",
                              "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 100,
                              "type": "string",
                              "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberTripBranding": {
                          "required": [
                            "text",
                            "url",
                            "description"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 150,
                              "type": "string",
                              "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 28,
                              "type": "string",
                              "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "valetParking": {
                          "enum": [
                            "VALET_PARKING_AVAILABLE",
                            "VALET_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "validThrough": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "vendingMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "venueName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "videos": {
                          "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "video"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "description": {
                                "minLength": 0,
                                "maxLength": 140,
                                "type": "string",
                                "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "video": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "wadingPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wakeUpCalls": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "walkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "waterPark": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterSkiing": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "watercraft": {
                          "enum": [
                            "WATERCRAFT_RENTALS",
                            "WATERCRAFT_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterslide": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wavePool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "websiteUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL for this entity's website\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "weightMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wheelchairAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wifiAvailable": {
                          "enum": [
                            "WIFI_AVAILABLE",
                            "WIFI_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "workRemote": {
                          "type": "boolean",
                          "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "yearEstablished": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yearLastRenovated": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "yextDisplayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "yextDropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextPickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextRoutableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextWalkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "KnowledgeApiServer.deleteEntity",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The external ID of the requested Entity",
            "name": "entityId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Entities: Delete",
        "description": "Delete the Entity with the given ID",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "id": {
                      "minLength": 0,
                      "type": "string",
                      "description": "The ID of the deleted Entity"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/entityprofiles/{entityId}": {
      "get": {
        "operationId": "KnowledgeApiServer.listLanguageProfiles",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The external ID of the requested Entity",
            "name": "entityId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of Entity types to filter on. Example: `\"location,event\"`\n\nShould be from the following types:\n  * `atm`\n  * `event`\n  * `faq`\n  * `financialProfessional`\n  * `healthcareFacility`\n  * `healthcareProfessional`\n  * `hotel`\n  * `hotelRoomType`\n  * `job`\n  * `location`\n  * `organization`\n  * `product`\n  * `restaurant`\n\nOR the API name of a custom entity type.\n",
            "name": "entityTypes",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of field names. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"address.line1\"`). Custom fields are specified in the same way, albeit with their `c_*` name.",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if at least one field is of type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "name": "format",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The comma-separated language codes corresponding to the languages of the profile that the user wishes to retrieve",
            "name": "languageCodes",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "false"
            },
            "description": "- `false`: The response will only contain overridable or language-specific fields for the requested language.\n- `true`:  The response will contain the full location profile in the requested language, including data that remains the same across languages.\n",
            "name": "rendered",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Entity Language Profiles: List",
        "description": "Retrieve Language Profiles for an Entity\n\n* If the **`v`** parameter is before `20190103`: by default, returned alternate Language Profiles include **`googleAttributes`** and **`categoryIds`** fields\n* If the **`v`** parameter is `20190103` or later: by default, returned alternate Language Profiles do not include **`googleAttributes`** and **`categoryIds`** fields. However, these fields can still be retrieved if the **`rendered`** parameter in the request is set to `true`.\n",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "meta": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "accountId": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "ID of the account associated with this Entity"
                                  },
                                  "countryCode": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                                  },
                                  "entityType": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                                  },
                                  "folderId": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                                  },
                                  "id": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "ID of this Entity\n\nFiltering Type: `text`"
                                  },
                                  "labels": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "multipleOf": 1,
                                      "type": "number",
                                      "description": "Filtering Type: `integer`"
                                    },
                                    "description": "This Entity's labels\n\nFiltering Type: `list of integer`"
                                  },
                                  "language": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                                  },
                                  "timestamp": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                                  },
                                  "uid": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                                  }
                                },
                                "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "name": {
                                "minLength": 0,
                                "maxLength": 5000,
                                "type": "string",
                                "description": "\n\n\nCannot Include:\n* HTML markup\n* a phone number\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "address": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "city": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                                  },
                                  "countryCode": {
                                    "minLength": 0,
                                    "pattern": "^[a-zA-Z]{2}$",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "extraDescription": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                                  },
                                  "line1": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "line2": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "line3": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "postalCode": {
                                    "minLength": 0,
                                    "maxLength": 10,
                                    "type": "string",
                                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "region": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "sublocality": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "acceptingNewPatients": {
                                "type": "boolean",
                                "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                              },
                              "acceptsReservations": {
                                "type": "boolean",
                                "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "accessHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "additionalHoursText": {
                                "minLength": 0,
                                "maxLength": 255,
                                "type": "string",
                                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "additionalPromotingLocations": {
                                "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Filtering Type: `entityId`"
                                }
                              },
                              "addressHidden": {
                                "type": "boolean",
                                "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "admittingHospitals": {
                                "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "adultPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ageRange": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "maxValue": {
                                    "multipleOf": 1,
                                    "type": "number",
                                    "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                                  },
                                  "minValue": {
                                    "multipleOf": 1,
                                    "type": "number",
                                    "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                                  }
                                },
                                "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "airportShuttle": {
                                "enum": [
                                  "AIRPORT_SHUTTLE_AVAILABLE",
                                  "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "airportTransfer": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "allInclusive": {
                                "enum": [
                                  "ALL_INCLUSIVE_RATES_AVAILABLE",
                                  "ALL_INCLUSIVE_RATES_ONLY",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "alternateNames": {
                                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "alternatePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "alternateWebsites": {
                                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 255,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                }
                              },
                              "androidAppUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "answer": {
                                "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                                "type": "string",
                                "format": "rich-text"
                              },
                              "applicationUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "associations": {
                                "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "attendance": {
                                "required": [
                                  "attendanceMode"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "attendanceMode": {
                                    "enum": [
                                      "OFFLINE",
                                      "ONLINE",
                                      "MIXED"
                                    ],
                                    "type": "string",
                                    "description": "Filtering Type: `option`"
                                  },
                                  "virtualLocationUrl": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "attire": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "DRESSY",
                                  "CASUAL",
                                  "FORMAL"
                                ],
                                "type": "string",
                                "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "babysittingOffered": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "baggageStorage": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bar": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "beachAccess": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "beachFrontProperty": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bicycles": {
                                "enum": [
                                  "BICYCLE_RENTALS",
                                  "BICYCLE_RENTALS_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bios": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "boutiqueStores": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "brands": {
                                "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "breakfast": {
                                "enum": [
                                  "BREAKFAST_AVAILABLE",
                                  "BREAKFAST_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "brunchHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "businessCenter": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "calendars": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "carRental": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "casino": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "categoryIds": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "catsAllowed": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "certifications": {
                                "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "checkInTime": {
                                "format": "time",
                                "type": "string",
                                "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "checkOutTime": {
                                "format": "time",
                                "type": "string",
                                "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "classificationRating": {
                                "pattern": "^\\d*\\.?\\d*$",
                                "type": "string",
                                "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "closed": {
                                "type": "boolean",
                                "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "concierge": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "conditionsTreated": {
                                "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "convenienceStore": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "currencyExchange": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "customKeywords": {
                                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "datePosted": {
                                "format": "date",
                                "type": "string",
                                "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "degrees": {
                                "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "ANP",
                                    "APN",
                                    "APRN",
                                    "ARNP",
                                    "CNM",
                                    "CNP",
                                    "CNS",
                                    "CPNP",
                                    "CRNA",
                                    "CRNP",
                                    "DC",
                                    "DDS",
                                    "DMD",
                                    "DNP",
                                    "DO",
                                    "DPM",
                                    "DVM",
                                    "FNP",
                                    "GNP",
                                    "LAC",
                                    "LPN",
                                    "MBA",
                                    "MBBS",
                                    "MD",
                                    "MPH",
                                    "ND",
                                    "NP",
                                    "OD",
                                    "PA",
                                    "PAC",
                                    "PHARMD",
                                    "PHD",
                                    "PNP",
                                    "PSYD",
                                    "VMD",
                                    "WHNP"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                }
                              },
                              "deliveryHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "description": {
                                "minLength": 10,
                                "maxLength": 15000,
                                "type": "string",
                                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "displayCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "doctorOnCall": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "dogsAllowed": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "driveThroughHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                              },
                              "dropoffCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "educationList": {
                                "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "type",
                                    "institutionName",
                                    "yearCompleted"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "institutionName": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "type": {
                                      "enum": [
                                        "FELLOWSHIP",
                                        "RESIDENCY",
                                        "INTERNSHIP",
                                        "MEDICAL_SCHOOL"
                                      ],
                                      "type": "string",
                                      "description": "Filtering Type: `option`"
                                    },
                                    "yearCompleted": {
                                      "multipleOf": 1,
                                      "minimum": 1900,
                                      "maximum": 2100,
                                      "type": "number",
                                      "description": "Filtering Type: `integer`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "electricChargingStation": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "elevator": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ellipticalMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "emails": {
                                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "format": "email",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "employmentType": {
                                "enum": [
                                  "FULL_TIME",
                                  "PART_TIME",
                                  "CONTRACTOR",
                                  "TEMPORARY",
                                  "INTERN",
                                  "VOLUNTEER",
                                  "PER_DIEM",
                                  "OTHER"
                                ],
                                "type": "string",
                                "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "eventStatus": {
                                "enum": [
                                  "SCHEDULED",
                                  "RESCHEDULED",
                                  "POSTPONED",
                                  "CANCELED",
                                  "EVENT_MOVED_ONLINE"
                                ],
                                "type": "string",
                                "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "facebookCallToAction": {
                                "required": [
                                  "type"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "NONE",
                                      "BOOK_NOW",
                                      "CALL_NOW",
                                      "CONTACT_US",
                                      "SEND_MESSAGE",
                                      "USE_APP",
                                      "PLAY_GAME",
                                      "SHOP_NOW",
                                      "SIGN_UP",
                                      "WATCH_VIDEO",
                                      "SEND_EMAIL",
                                      "LEARN_MORE",
                                      "PURCHASE_GIFT_CARDS",
                                      "ORDER_NOW",
                                      "FOLLOW_PAGE"
                                    ],
                                    "type": "string",
                                    "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                                  },
                                  "value": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookCoverPhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "facebookDescriptor": {
                                "minLength": 3,
                                "maxLength": 75,
                                "type": "string",
                                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookOverrideCity": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookPageUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookProfilePhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "facebookVanityUrl": {
                                "minLength": 0,
                                "maxLength": 50,
                                "type": "string",
                                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "fax": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "featuredMessage": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "firstName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "firstPartyReviewPage": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "fitnessCenter": {
                                "enum": [
                                  "FITNESS_CENTER_AVAILABLE",
                                  "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "floorCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "freeWeights": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "frequentlyAskedQuestions": {
                                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "question"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "answer": {
                                      "minLength": 1,
                                      "maxLength": 4096,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "question": {
                                      "minLength": 1,
                                      "maxLength": 4096,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "frontDesk": {
                                "enum": [
                                  "FRONT_DESK_AVAILABLE",
                                  "FRONT_DESK_AVAILABLE_24_HOURS",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "gameRoom": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "gender": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "FEMALE",
                                  "MALE"
                                ],
                                "type": "string",
                                "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "geomodifier": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "giftShop": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "golf": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "googleAttributes": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {},
                                "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "googleCoverPhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "googleMyBusinessLabels": {
                                "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 50,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "googlePlaceId": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "googleProfilePhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "googleWebsiteOverride": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "happyHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "headshot": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "hiringOrganization": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "holidayHoursConversationEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "horsebackRiding": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "hotTub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "hours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "housekeeping": {
                                "enum": [
                                  "HOUSEKEEPING_AVAILABLE",
                                  "HOUSEKEEPING_AVAILABLE_DAILY",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "impressum": {
                                "minLength": 0,
                                "maxLength": 2000,
                                "type": "string",
                                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "indoorPoolCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "instagramHandle": {
                                "minLength": 0,
                                "maxLength": 30,
                                "type": "string",
                                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "insuranceAccepted": {
                                "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "iosAppUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "isClusterPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "isFreeEvent": {
                                "type": "boolean",
                                "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "isoRegionCode": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "keywords": {
                                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "kidFriendly": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kidsClub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kidsStayFree": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kitchenHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "labels": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "landingPageUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "languages": {
                                "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "lastName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "laundry": {
                                "enum": [
                                  "FULL_SERVICE",
                                  "SELF_SERVICE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "lazyRiver": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "lifeguard": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "linkedLocation": {
                                "type": "string",
                                "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                              },
                              "localPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "localShuttle": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "locatedIn": {
                                "type": "string",
                                "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                              },
                              "location": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "existingLocation": {
                                    "type": "string",
                                    "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                                  },
                                  "externalLocation": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "locationType": {
                                "enum": [
                                  "LOCATION",
                                  "HEALTHCARE_FACILITY",
                                  "HEALTHCARE_PROFESSIONAL",
                                  "ATM",
                                  "RESTAURANT",
                                  "HOTEL"
                                ],
                                "type": "string",
                                "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "logo": {
                                "required": [
                                  "image"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "clickthroughUrl": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "description": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "details": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "image": {
                                    "required": [
                                      "url"
                                    ],
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                    "properties": {
                                      "alternateText": {
                                        "minLength": 0,
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      },
                                      "url": {
                                        "minLength": 0,
                                        "format": "uri",
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      }
                                    }
                                  }
                                }
                              },
                              "mainPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "massage": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "maxAgeOfKidsStayFree": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "maxNumberOfKidsStayFree": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "mealsServed": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "BREAKFAST",
                                    "LUNCH",
                                    "BRUNCH",
                                    "DINNER",
                                    "HAPPY_HOUR",
                                    "LATE_NIGHT"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "meetingRoomCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "menuUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL where consumers can view the entity's menu\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "menus": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "middleName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "mobilePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "mobilityAccessible": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "nightclub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "npi": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                              },
                              "nudgeEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "officeName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "onlineServiceHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                              },
                              "orderUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL used to place an order at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "organizerEmail": {
                                "minLength": 0,
                                "format": "email",
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "organizerName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "organizerPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "outdoorPoolCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "parking": {
                                "enum": [
                                  "PARKING_AVAILABLE",
                                  "PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "paymentOptions": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "ALIPAY",
                                    "AMERICANEXPRESS",
                                    "ANDROIDPAY",
                                    "APPLEPAY",
                                    "ATM",
                                    "ATMQUICK",
                                    "BACS",
                                    "BANCONTACT",
                                    "BANKDEPOSIT",
                                    "BANKPAY",
                                    "BGO",
                                    "BITCOIN",
                                    "Bar",
                                    "CARTASI",
                                    "CASH",
                                    "CCS",
                                    "CHECK",
                                    "CONB",
                                    "CVVV",
                                    "DEBITNOTE",
                                    "DINERSCLUB",
                                    "DIRECTDEBIT",
                                    "DISCOVER",
                                    "ECKARTE",
                                    "ECOCHEQUE",
                                    "EKENA",
                                    "EMV",
                                    "FINANCING",
                                    "GOPAY",
                                    "HAYAKAKEN",
                                    "HEBAG",
                                    "IBOD",
                                    "ICCARDS",
                                    "ICOCA",
                                    "ID",
                                    "IDEAL",
                                    "INCA",
                                    "INVOICE",
                                    "JCB",
                                    "JCoinPay",
                                    "JKOPAY",
                                    "KITACA",
                                    "KLA",
                                    "KLARNA",
                                    "LINEPAY",
                                    "MAESTRO",
                                    "MANACA",
                                    "MASTERCARD",
                                    "MIPAY",
                                    "MONIZZE",
                                    "MPAY",
                                    "Manuelle Lastsch",
                                    "Merpay",
                                    "NANACO",
                                    "NEXI",
                                    "NIMOCA",
                                    "OREM",
                                    "PASMO",
                                    "PAYBACKPAY",
                                    "PAYBOX",
                                    "PAYCONIQ",
                                    "PAYPAL",
                                    "PAYPAY",
                                    "PAYSEC",
                                    "PIN",
                                    "POSTEPAY",
                                    "QRCODE",
                                    "QUICPAY",
                                    "RAKUTENEDY",
                                    "RAKUTENPAY",
                                    "SAMSUNGPAY",
                                    "SODEXO",
                                    "SUGOCA",
                                    "SUICA",
                                    "SWISH",
                                    "TICKETRESTAURANT",
                                    "TOICA",
                                    "TRAVELERSCHECK",
                                    "TSCUBIC",
                                    "TWINT",
                                    "UNIONPAY",
                                    "VEV",
                                    "VISA",
                                    "VISAELECTRON",
                                    "VOB",
                                    "VOUCHER",
                                    "VPAY",
                                    "WAON",
                                    "WECHATPAY",
                                    "WIRETRANSFER",
                                    "Yucho Pay",
                                    "ZELLE",
                                    "auPay",
                                    "dBarai",
                                    "Überweisung"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "performers": {
                                "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "petsAllowed": {
                                "enum": [
                                  "PETS_WELCOME",
                                  "PETS_WELCOME_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "photoGallery": {
                                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "image"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                  "properties": {
                                    "clickthroughUrl": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "description": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "details": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "image": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "pickupCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "pickupHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                              },
                              "priceRange": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "ONE",
                                  "TWO",
                                  "THREE",
                                  "FOUR"
                                ],
                                "type": "string",
                                "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                              },
                              "primaryConversationContact": {
                                "minLength": 0,
                                "type": "string",
                                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "privateBeach": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "privateCarService": {
                                "enum": [
                                  "PRIVATE_CAR_SERVICE",
                                  "PRIVATE_CAR_SERVICE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "productLists": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "products": {
                                "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "questionsAndAnswers": {
                                "type": "boolean",
                                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingCompetitors": {
                                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "name",
                                    "website"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                    },
                                    "website": {
                                      "minLength": 0,
                                      "maxLength": 255,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "rankTrackingEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingFrequency": {
                                "enum": [
                                  "WEEKLY",
                                  "MONTHLY",
                                  "QUARTERLY"
                                ],
                                "type": "string",
                                "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingQueryTemplates": {
                                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "KEYWORD",
                                    "KEYWORD_ZIP",
                                    "KEYWORD_CITY",
                                    "KEYWORD_IN_CITY",
                                    "KEYWORD_NEAR_ME",
                                    "KEYWORD_CITY_STATE"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                }
                              },
                              "rankTrackingSites": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "GOOGLE_DESKTOP",
                                    "GOOGLE_MOBILE",
                                    "BING_DESKTOP",
                                    "BING_MOBILE",
                                    "YAHOO_DESKTOP",
                                    "YAHOO_MOBILE"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "reservationUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL used to make reservations at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "restaurantCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "reviewGenerationUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "reviewResponseConversationEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "roomCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "roomService": {
                                "enum": [
                                  "ROOM_SERVICE_AVAILABLE",
                                  "ROOM_SERVICE_AVAILABLE_24_HOURS",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "routableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "salon": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "sauna": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "scuba": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "selfParking": {
                                "enum": [
                                  "SELF_PARKING_AVAILABLE",
                                  "SELF_PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "seniorHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "serviceArea": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "places": {
                                    "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  }
                                },
                                "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "serviceAreaPlaces": {
                                "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "type": {
                                      "enum": [
                                        "POSTAL_CODE",
                                        "REGION",
                                        "COUNTY",
                                        "CITY",
                                        "SUBLOCALITY"
                                      ],
                                      "type": "string",
                                      "description": "Filtering Type: `option`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "services": {
                                "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "smokeFreeProperty": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "snorkeling": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "socialHour": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "spa": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "specialities": {
                                "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "tableService": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "takeoutHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "tennis": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "thermalPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ticketAvailability": {
                                "enum": [
                                  "IN_STOCK",
                                  "SOLD_OUT",
                                  "PRE_ORDER",
                                  "UNSPECIFIED"
                                ],
                                "type": "string",
                                "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketPriceRange": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "currencyCode": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                                  },
                                  "maxValue": {
                                    "pattern": "^\\d*\\.?\\d*$",
                                    "type": "string",
                                    "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                                  },
                                  "minValue": {
                                    "pattern": "^\\d*\\.?\\d*$",
                                    "type": "string",
                                    "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                                  }
                                },
                                "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketSaleDateTime": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "time": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "end": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                  },
                                  "start": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                  }
                                },
                                "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "timeZoneUtcOffset": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "timezone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "tollFreePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "treadmill": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ttyPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "turndownService": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "twitterHandle": {
                                "minLength": 0,
                                "maxLength": 15,
                                "type": "string",
                                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "uberLink": {
                                "required": [
                                  "presentation"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "presentation": {
                                    "enum": [
                                      "BUTTON",
                                      "LINK"
                                    ],
                                    "type": "string",
                                    "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                                  },
                                  "text": {
                                    "minLength": 0,
                                    "maxLength": 100,
                                    "type": "string",
                                    "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "uberTripBranding": {
                                "required": [
                                  "text",
                                  "url",
                                  "description"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "minLength": 0,
                                    "maxLength": 150,
                                    "type": "string",
                                    "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "text": {
                                    "minLength": 0,
                                    "maxLength": 28,
                                    "type": "string",
                                    "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "valetParking": {
                                "enum": [
                                  "VALET_PARKING_AVAILABLE",
                                  "VALET_PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "validThrough": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "vendingMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "venueName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "videos": {
                                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "video"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "minLength": 0,
                                      "maxLength": 140,
                                      "type": "string",
                                      "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                    },
                                    "video": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "wadingPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wakeUpCalls": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "walkableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "waterPark": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "waterSkiing": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "watercraft": {
                                "enum": [
                                  "WATERCRAFT_RENTALS",
                                  "WATERCRAFT_RENTALS_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "waterslide": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wavePool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "websiteUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL for this entity's website\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "weightMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wheelchairAccessible": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wifiAvailable": {
                                "enum": [
                                  "WIFI_AVAILABLE",
                                  "WIFI_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "workRemote": {
                                "type": "boolean",
                                "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "yearEstablished": {
                                "multipleOf": 1,
                                "minimum": 1000,
                                "maximum": 2028,
                                "type": "number",
                                "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yearLastRenovated": {
                                "multipleOf": 1,
                                "minimum": 1000,
                                "maximum": 2028,
                                "type": "number",
                                "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "yextDisplayCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "yextDropoffCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextPickupCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextRoutableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextWalkableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/entityprofiles": {
      "get": {
        "operationId": "KnowledgeApiServer.listAllLanguageProfiles",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of Entity types to filter on. Example: `\"location,event\"`\n\nShould be from the following types:\n  * `atm`\n  * `event`\n  * `faq`\n  * `financialProfessional`\n  * `healthcareFacility`\n  * `healthcareProfessional`\n  * `hotel`\n  * `hotelRoomType`\n  * `job`\n  * `location`\n  * `organization`\n  * `product`\n  * `restaurant`\n\nOR the API name of a custom entity type.\n",
            "name": "entityTypes",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of field names. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"address.line1\"`). Custom fields are specified in the same way, albeit with their `c_*` name.",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "This parameter represents one or more filtering conditions that are applied to the set of entities that would otherwise be returned. This parameter should be provided as a URL-encoded string containing a JSON object.\n\nFor example, if the filter JSON is `{\"name\":{\"$eq\":\"John\"}}`, then the filter param after URL-encoding will be: `filter=%7B%22name%22%3A%7B%22%24eq%22%3A%22John%22%7D%7D`\n\n**Basic Filter Structure**\n\nThe filter object at its core consists of a *matcher*, a *field*, and an *argument*.\n\nFor example, in the following filter JSON:\n\n```\n{\n  \"name\":{\n    \"$eq\":\"John\"\n  }\n}\n```\n\n`$eq` is the *matcher*, or filtering operation (equals, in this example),\n\n`name` is the *field* being filtered by, and\n\n`John` is *value* to be matched against.\n\n**Combining Multiple Filters**\n\nMultiple filters can be combined into one object using *combinators*. For example, the following filter JSON combines multiple filters using the combinator `$and`. `$or` is also supported.\n```\n{\n  \"$and\":[\n    {\n      \"firstName\":{\n        \"$eq\":\"John\"\n      }\n    },\n    {\n      \"countryCode\":{\n        \"$in\":[\n          \"US\",\n          \"GB\"\n        ]\n      }\n    }\n  ]\n}\n```\n\n**Filter Negation**\n\nCertain filter types may be negated. For example:\n\n```\n{\n  \"$not\" {\n    \"name\":{\n      \"$eq\":\"John\"\n    }\n  }\n}\n```\n\nThis can also be written more simply with a `!` in the `$eq` parameter. The following filter would have the same effect:\n\n```\n{\n  \"name\":{\n    \"!$eq\":\"John\"\n  }\n}\n```\n\n**Filter Complement**\n\nYou can also search for the complement of a filter. This filter would match entities that do not contain \"hello\" in their descriptions, or do not have a description set. This is different from negation which can only match entities who have the negated field set to something.\n\n```\n{\n  \"$complement\":{\n    \"description\":{\n      \"$contains\":\"hello\"\n    }\n  }\n}\n```\n\n**Addressing Subfields**\n\nSubfields of fields can be addressed using the \"dot\" notation while filtering. For example, if you have a custom field called **`c_myCustomField`**:\n\n```\n{\n  \"c_myCustomField\":{\n    \"age\": 30,\n    \"name\": \"Jim\",\n  }\n}\n```\n\nWhile filtering, subfields may be addressed using the \"dot\" notation.\n\n```\n{\n  \"c_myCustomField.name\":{\n    \"!$eq\":\"John\"\n  }\n}\n```\n\nFields that are nested deeper may be addressed using dot notation, as well. For example, if **`name`** in the above example was a compound field with two subfields **`first`** and **`last`**, **`first`** may be addressed as **`c_myCustomField.name.first`**.\n\n**Field Support**\n\nEntity fields correspond to certain filter types, which support matchers. Going by the example above, the field **`name`** supports the `TEXT` filter type, which supports `$eq` (equals) and `$startsWith` (starts with).\n\n**TEXT**\n\nThe `TEXT` filter type is supported for text fields. (e.g., **`name`**, **`countryCode`**)\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq (equals)</th>\n    <th>\n\n    {\n      \"countryCode\":{\n        \"$eq\":\"US\"\n      }\n    },\n    {\n      \"countryCode\":{\n        \"!$eq\":\"US\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n  Matches if the field starts with the argument value.\n\n  e.g., \"Amazing\" starts with \"amaz\"\n\n    {\n       \"address.line1\":{\n          \"$startsWith\": \"Jo\"\n       }\n    }\n\n  Supports negation. Case insensitive.\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n  Matches if field value is a member of the argument list.\n\n    {\n      \"firstName\":{\n        \"$in\": [\"John\", \"Jimmy\"]\n      }\n    }\n\n  Does not support negation. Negation can be mimicked by using an \"OR\" matcher, for example:\n\n    {\n      \"$and\":[\n        {\n          \"firstName\":{\n            \"!$eq\": \"John\"\n          }\n        },\n        {\n          \"firstName\":{\n            \"!$eq\": \"Jimmy\"\n          }\n        }\n      ]\n    }\n\n  </tr>\n  <tr>\n    <th>$contains</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$contains\":\"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" is contained in any string within **`c_myString`**.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n  <tr>\n    <th>$containsAny</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$containsAny\":[\n          \"sample1\", \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if either \"sample1\" or \"sample2\" is contained in any string within **`c_myString`**. The argument list can contain more than two strings.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n  <tr>\n    <th>$containsAll</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$containsAll\":[\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"sample1\" and \"sample2\" are contained in any string within **`c_myString`**. The argument list can contain more than two strings.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n</table>\n\n</br>\n**BOOLEAN**\n\n\nThe BOOLEAN filter type is supported for boolean fields and Yes / No custom fields.\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"isFreeEvent\": {\n        \"$eq\": true\n      }\n    }\n\n  For booleans, the filter takes a boolean value, not a string.\n  Supports negation.\n  </tr>\n</table>\n\n</br>\n**STRUCT**\n\nThe STRUCT filter type is supported for compound fields with subfields.\n\n*e.g., **`address`**, **`featuredMessage`**, fields of custom types*\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$hasProperty</th>\n    <th>\n\n  Matches if argument is a key (subfield) of field being filtered by. This filter type is useful for filtering by compound fields or to check if certain fields have a value set.\n\n    {\n      \"address\": {\n        \"$hasProperty\": \"line1\"\n      }\n    }\n\n  Note that if a given property of a compound field is not set, the filter will not match. For example, if `line1` of **`address`** is not set for an entity, then the above matcher will not match the entity.\n\n  Supports negation.\n\n  </tr>\n</table>\n\n</br>\n**OPTION**\n\nThe OPTION filter type is supported for options custom fields and fields that have a predetermined list of valid values.\n\n *e.g., **`eventStatus`**, **`gender`**, `SINGLE_OPTION` and `MULTI_OPTION` types of custom fields.*\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n  Matching is case insensitive and insensitive to consecutive whitespace.\n\n  e.g., \"XYZ 123\" matches \"xyz       123\"\n\n    {\n      \"eventStatus\": {\n        \"$eq\": \"SCHEDULED\"\n      }\n    }\n\n  Supports negation. Negating `$eq` on the list will match any field that does not hold any of the provided values.\n\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n    {\n      \"eventStatus\": {\n        \"$in\": [\n          \"SCHEDULED\",\n          \"POSTPONED\"\n        ]\n      }\n    }\n\n  Does not support negation. However, negation can be mimicked by using an `$and` matcher to negate individually over the desired values. For example:\n\n    {\n      \"$and\": [\n        {\n          \"eventStatus\":{\n            \"!$eq\": \"SCHEDULED\"\n          }\n        },\n        {\n          \"firstName\":{\n            \"!$eq\": \"POSTPONED\"\n          }\n        }\n      ]\n    }\n\n  </tr>\n</table>\n\n</br>\n**PHONE**\n\nThe PHONE filter type is supported for phone number fields only. PHONE will support the same matchers as TEXT, except that for `$eq`, the same phone number with or without calling code will match.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"mainPhone\":{\n        \"$eq\":\"+18187076189\"\n      }\n    },\n    {\n      \"mainPhone\":{\n        \"$eq\":\"8187076189\"\n      }\n    },\n    {\n      \"mainPhone\":{\n        \"!$eq\":\"9177076189\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n  Matches if the field starts with the argument value.\n\n  e.g., \"8187076189\" starts with \"818\"\n\n    {\n      \"mainPhone\":{\n        \"$startsWith\": \"818\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n  Matches if field value is a member of the argument list.\n\n    {\n      \"mainPhone\":{\n        \"$in\": [\n          \"8185551616\",\n          \"9171112211\"\n        ]\n      }\n    }\n\n  Does not support negation. However, negation can be mimicked by using an `$and` matcher to negate individually over the desired values.\n\n  </tr>\n</table>\n\n</br>\n**INTEGER, FLOAT, DATE, DATETIME, and TIME**\n\nThese filter types are strictly ordered -- therefore, they support the following matchers:\n- Equals\n- Less Than / Less Than or Equal To\n- Greater Than / Greater Than or Equal To\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n  Equals\n\n    {\n      \"ageRange.maxValue\": {\n        \"$eq\": \"80\"\n      }\n    }\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$lt</th>\n    <th>\n\n  Less than\n\n    {\n      \"time.start\": {\n        \"$lt\": \"2018-08-28T05:56\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$gt</th>\n    <th>\n\n  Greater than\n\n    {\n      \"ageRange.maxValue\": {\n        \"$gt\": \"50\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$le</th>\n    <th>\n\n  Less than or equal to\n\n    {\n      \"ageRange.maxValue\": {\n        \"$le\": \"40\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$ge</th>\n    <th>\n\n  Greater than or equal to\n\n    {\n      \"time.end\": {\n        \"$ge\":  \"2018-08-28T05:56\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>Combinations</th>\n    <th>\n\n  While we do not support \"between\" in our filtering syntax, it is possible to combine multiple matchers for a result similar to an \"and\" operation:\n\n    {\n      \"ageRange.maxValue : {\n        \"$gt\" : 10,\n        \"$lt\": 20\n      }\n    }\n\n  </tr>\n</table>\n\n</br>\n**LIST OF TEXT**\n\nAny field that has a list of valid values and supports any of the previously mentioned filter types will also support the `$contains` matcher.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eq\": \"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" EXACTLY matches any string within **`c_myStringList`**.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAny</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAny\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if any one of \"sample1\" or \"sample2\" EXACTLY match a string within **`c_myStringList`** . The argument can have more than two strings.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"sample1\" AND \"sample2\" EXACTLY match a string within **`c_myStringList`**. The argument can have more than two strings.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$contains</th>\n    <th>\n\n    {\n      \"c_myStringList\":{\n        \"$contains\":\"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" is contained in any string within **`c_myStringList`**.\n\n  Note that this matching is \"left edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This is a sample\", \"Sample one\", \"Sample 2\" but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$containsAny</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$containsAny\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n\n  This filter will match if either \"sample1\" or \"sample2\" is contained in any string within **`c_myStringList`**. The argument list can have more than two strings.\n\n  Note that similar to `$contains`, the matching for `$containsAny` is \"left edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This is a sample\", \"Sample one\", \"Sample 2\" but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$containsAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$containsAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if BOTH \"sample1\" and \"sample2\" are contained in strings within **`c_myStringList`**. The argument list can have more than two strings.\n\n  Note that similar to `$contains`, the matching for `$containsAll` is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$startsWith\":\"sample\"\n      }\n    }\n\n  This filter will match if any string within **`c_myStringList`** starts with \"sample\".\n\n  Does not supports negation. Case Insensitive.\n\n  </tr>\n</table>\n\n</br>\n**LIST OF BOOLEAN, OPTION, PHONE, INTEGER, FLOAT, DATE, DATETIME, OR TIME**\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"c_myDateList\": {\n        \"$eq\": \"2019-01-01\"\n      }\n    }\n\n\n  This filter will match if \"2019-01-01\" EXACTLY matches any date within **`c_myDateList`**.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAny</th>\n    <th>\n\n    {\n      \"c_myIntegerList\": {\n        \"$eqAny\": [1, 2]\n      }\n    }\n\n  This filter will match if 1 or 2 EXACTLY match any integer within **`c_myIntegerList`**. The argument list can have more than two elements.\n\n  Supports negation.\n\n  </tr>\n\n  <tr>\n    <th>$eqAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"2019-01-01\" AND \"2019-01-02\" EXACTLY match a date within **`c_myDateList`**. The argument list can have more than two elements.\n\n  Supports negation.\n\n  </tr>\n</table>\n\n</br>\n**LIST OF STRUCT**\n\nFiltering on lists of struct types is a bit nuanced. Filtering can only be done on lists of structs of the SAME type.\nFor example, if **`c_myStructList`** is a list of compound fields with the subfields **`age`** and **`name`**, then one can address the **`age`** properties of each field in **`c_myStructList`** as a flattened list of integers and filtering upon them. For example, the following filter:\n\n```\n{\n  \"c_myStructList.age\":{\n    \"$eq\": 20\n  }\n}\n```\n\nwill match if any field in the list has an **`age`** property equal to 20. Similarly, any filter that can be applied to lists of integers could be applied to **`age`** in this case (`$eq`, `$eqAll`, `$eqAny`).\n\n</br>\n\n**HOURS**\n\nBy filtering on an hours field, you can find which entities are open or closed at a specified time or during a certain time range. All of these filters also take an entity’s holiday hours and reopen date into account.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$openAt</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openAt\":\n          \"2019-01-06T13:45\"\n      }\n    }\n\n\n  This filter would match entities open at the specified time.\n\n  </tr>\n  <tr>\n    <th>$closedAt</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedAt:\n          \"2019-01-06T13:45\"\n      }\n    }\n\n  </tr>\n\n  <tr>\n    <th>$openForAllOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openForAllOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n\n  This filter would match only those entities that are open for the entire range between 2019-01-06T13:45 and 2019-01-06T15:00.\n\n    {\n      \"hours\": {\n        \"$openForAllOf\":\n          \"2019-05-10\"\n      }\n    }\n\n  This filter would match entities open for the entire 24 hour period on 2019-05-10.\n\n  You can also supply a year, a month, or an hour to filter for entities open for the entire year, month, or hour, respectively.\n\n  </tr>\n  <tr>\n    <th>$openForAnyOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openForAnyOf\": {\n          \"start\": \"now\",\n          \"end\": \"now+2h\"\n        }\n      }\n    }\n\n  This filter will match any entities that are open for at least a portion of the time range between now and two hours from now.\n\n  </tr>\n  <tr>\n    <th>$closedForAllOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedForAllOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n  This filter will match only those entities that are closed for the entire given time range.\n  </tr>\n  <tr>\n    <th>$closedForAnyOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedForAnyOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n  This filter will match any entities that are closed for at least a portion of the given time range.\n  </tr>\n</table>\n\n</br>\n\n**Filtering by Dates and Times**\n\n**Time zones**\n\nThe filtering language supports searching both in local time and within a certain time zone. Searching in local time will simply ignore the time zone on the target entities, while providing one will convert the zone of your queried time to the zone of the target entities.\n\nTo search in local time, simply provide the date or time without any zone: `2019-06-07T15:30` or `2019-06-07`.\n\nTo conduct a zoned search, provide the name of the time zone in brackets after the time, as it is shown in the tz database: `2019-06-07T15:30[America/New_York]` or `2019-06-06[America/Phoenix]`.\n\n\n**Date and time types**\n\nIn addition to searching with dates and datetimes, you can also query with years, months, and hours. For example, the filter:\n\n```\n{\n  \"time.start\": {\n    \"$eq\": \"2018\"\n  }\n}\n```\n\nwould match all start times in the year 2018. The same logic would apply for a month (`2019-05`), a date (`2019-05-01`), or an hour (`2019-05-01T06`).\n\nThese types also work with ordered searches. For example:\n\n```\n{\n \"time.start\": {\n    \"$lt\": \"2018\"\n }\n}\n```\n\nwould match start times before 2018 (i.e., anything in 2017 or before). On the other hand, the same query with a `$le` matcher would include anything in or before 2018.\n\n**\"Now\" and Date Math**\n\nInstead of providing a static date or time, you can also use `now` in place of any date time. When you do so, the system will calculate the time when the query is made and conduct a zoned search.\n\nIn order to search for a future or past time relative to `now`, you can use date math. For example, you can enter `now+3h` or `now-1d`, which would mean 3 hours from now and 1 day ago, respectively. You can also add and subtract minutes (`m`), months (`M`), and years (`y`).\n\nIt is also possible to add or subtract time from a static date or datetime. Simply add `||` between the static value and any addition or subtraction. For example, `2019-02-03||+1d` would be the same as `2019-02-04`.\n\nYou can also convert date and time types to other types. For example, to convert the datetime `2019-05-06T22:15` to a date, use `2019-05-06T22:15||/d`. Doing so would yield the same result as using `2019-05-06`. This method also works with `now`: `now/d` will give you today’s date without the time.\n\n</br>\n**Filtering Across an Entity**\n\nIt is possible to search for a specific text string across all fields of an entity by using the `$anywhere` matcher.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$anywhere</th>\n    <th>\n\n  Matches if the argument text appears anywhere in the entity (including subfields, structs, and lists)\n\n    {\n      \"$anywhere\": \"hello\"\n    }\n\n  This filter will match all entities that contain the string \"hello\" or strings that begin with \"hello\".\n\n  </tr>\n</table>\n\n</br>\n**Examples**\n\nThe following filter will match against entities that:\n- Are of type `event` (note that entity types can also be filtered by the **`entityTypes`** query parameter)\n- Have a name that starts with the text \"Century\"\n- Have a maximum age between 10 and 20\n- Have a minimum age between 5 and 7\n- Start after 7 PM (19:00) on August 28, 2018\n\n```\n{\n  \"$and\":[\n    {\n      \"entityType\":{\n        \"$eq\":\"event\"\n      }\n    },\n    {\n      \"name\":{\n        \"$startsWith\":\"Century\"\n      }\n    },\n    {\n      \"ageRange.maxValue\":{\n        \"$gt\":10,\n        \"$lt\":20\n      }\n    },\n    {\n      \"ageRange.minValue\":{\n        \"$gt\":5,\n        \"$lt\":7\n      }\n    },\n    {\n      \"time.start\":{\n        \"$ge\":\"2018-08-28T19:00\"\n      }\n    }\n  ]\n}\n```\n",
            "name": "filter",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if at least one field is of type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "name": "format",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The comma-separated language codes corresponding to the languages of the profile that the user wishes to retrieve",
            "name": "languageCodes",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "multipleOf": 1,
              "maximum": 50,
              "type": "number",
              "default": "10"
            },
            "description": "Number of results to return.",
            "name": "limit",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "multipleOf": 1,
              "type": "number",
              "default": "0"
            },
            "description": "Number of results to skip. Used to page through results.\nCannot be used together with **`pageToken`**.\n\nFor Live API requests, the offset cannot be higher than 9,950. For Knowledge API the maximum limit is only enforced if a filter and/or sortBy parameter are given.\n",
            "name": "offset",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "If a response to a previous request contained the **`pageToken`** field, pass that field's value as the **`pageToken`** parameter to retrieve the next page of data.",
            "name": "pageToken",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "false"
            },
            "description": "- `false`: The response will only contain overridable or language-specific fields for the requested language.\n- `true`:  The response will contain the full location profile in the requested language, including data that remains the same across languages.\n",
            "name": "rendered",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A list of fields and sort directions to order results by. Each ordering in the list should be in the format `{\"field_name\", \"sort_direction\"}`, where `sort_direction` is either `ASCENDING` or `DESCENDING`.\n\nFor example, to order by `name` the sort order would be `[{\"name\":\"ASCENDING\"}]`. To order by `name` and then `description`, the sort order would be `[{\"name\":\"ASCENDING\"},{\"description\":\"ASCENDING\"}]`.\n",
            "name": "sortBy",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Entity Language Profiles: List All",
        "description": "Retrieve a list of Language Profiles for Entities within an account\n\n**NOTE:**\n\n* If the **`v`** parameter is before `20190103`: by default, returned alternate Language Profiles include **`googleAttributes`** and **`categoryIds`** fields\n* If the **`v`** parameter is `20190103` or later: by default, returned alternate Language Profiles do not include **`googleAttributes`** and **`categoryIds`** fields. However, these fields can still be retrieved if the **`rendered`** parameter in the request is set to `true`.\n",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "count": {
                          "multipleOf": 1,
                          "type": "number",
                          "description": "Total number of Entities that meet the filter criteria (ignores **``limit``** / **``offset``** parameters)"
                        },
                        "pageToken": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Pass this value into the next request as the **`pageToken`** parameter to retrieve the next page of data.\n\nIf the response of a request contains the last page of data, a **`pageToken`** value will not be returned. A **`pageToken`** will never appear in the response if the request contains the **`sortOrder`**, **`randomization`**, or **`randomizationToken`** parameters.\n"
                        },
                        "profileLists": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "profiles": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "meta": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "accountId": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "ID of the account associated with this Entity"
                                        },
                                        "countryCode": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                                        },
                                        "entityType": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                                        },
                                        "folderId": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                                        },
                                        "id": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "ID of this Entity\n\nFiltering Type: `text`"
                                        },
                                        "labels": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "multipleOf": 1,
                                            "type": "number",
                                            "description": "Filtering Type: `integer`"
                                          },
                                          "description": "This Entity's labels\n\nFiltering Type: `list of integer`"
                                        },
                                        "language": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                                        },
                                        "timestamp": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                                        },
                                        "uid": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                                        }
                                      },
                                      "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 5000,
                                      "type": "string",
                                      "description": "\n\n\nCannot Include:\n* HTML markup\n* a phone number\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "address": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "city": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                                        },
                                        "countryCode": {
                                          "minLength": 0,
                                          "pattern": "^[a-zA-Z]{2}$",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "extraDescription": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                                        },
                                        "line1": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        },
                                        "line2": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        },
                                        "line3": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        },
                                        "postalCode": {
                                          "minLength": 0,
                                          "maxLength": 10,
                                          "type": "string",
                                          "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        },
                                        "region": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        },
                                        "sublocality": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "acceptingNewPatients": {
                                      "type": "boolean",
                                      "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                                    },
                                    "acceptsReservations": {
                                      "type": "boolean",
                                      "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                                    },
                                    "accessHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "additionalHoursText": {
                                      "minLength": 0,
                                      "maxLength": 255,
                                      "type": "string",
                                      "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "additionalPromotingLocations": {
                                      "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Filtering Type: `entityId`"
                                      }
                                    },
                                    "addressHidden": {
                                      "type": "boolean",
                                      "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "admittingHospitals": {
                                      "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "adultPool": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "ageRange": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "maxValue": {
                                          "multipleOf": 1,
                                          "type": "number",
                                          "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                                        },
                                        "minValue": {
                                          "multipleOf": 1,
                                          "type": "number",
                                          "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                                        }
                                      },
                                      "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "airportShuttle": {
                                      "enum": [
                                        "AIRPORT_SHUTTLE_AVAILABLE",
                                        "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "airportTransfer": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "allInclusive": {
                                      "enum": [
                                        "ALL_INCLUSIVE_RATES_AVAILABLE",
                                        "ALL_INCLUSIVE_RATES_ONLY",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "alternateNames": {
                                      "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "alternatePhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "alternateWebsites": {
                                      "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 255,
                                        "format": "uri",
                                        "type": "string",
                                        "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "androidAppUrl": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "answer": {
                                      "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                                      "type": "string",
                                      "format": "rich-text"
                                    },
                                    "applicationUrl": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "associations": {
                                      "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "attendance": {
                                      "required": [
                                        "attendanceMode"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "attendanceMode": {
                                          "enum": [
                                            "OFFLINE",
                                            "ONLINE",
                                            "MIXED"
                                          ],
                                          "type": "string",
                                          "description": "Filtering Type: `option`"
                                        },
                                        "virtualLocationUrl": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      },
                                      "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "attire": {
                                      "enum": [
                                        "UNSPECIFIED",
                                        "DRESSY",
                                        "CASUAL",
                                        "FORMAL"
                                      ],
                                      "type": "string",
                                      "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                                    },
                                    "babysittingOffered": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "baggageStorage": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "bar": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "beachAccess": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "beachFrontProperty": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "bicycles": {
                                      "enum": [
                                        "BICYCLE_RENTALS",
                                        "BICYCLE_RENTALS_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "bios": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "ids": {
                                          "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        },
                                        "label": {
                                          "minLength": 0,
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "boutiqueStores": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "brands": {
                                      "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "breakfast": {
                                      "enum": [
                                        "BREAKFAST_AVAILABLE",
                                        "BREAKFAST_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "brunchHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "businessCenter": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "calendars": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "ids": {
                                          "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        },
                                        "label": {
                                          "minLength": 0,
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "carRental": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "casino": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "categoryIds": {
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      },
                                      "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "catsAllowed": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "certifications": {
                                      "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "checkInTime": {
                                      "format": "time",
                                      "type": "string",
                                      "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "checkOutTime": {
                                      "format": "time",
                                      "type": "string",
                                      "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "classificationRating": {
                                      "pattern": "^\\d*\\.?\\d*$",
                                      "type": "string",
                                      "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "closed": {
                                      "type": "boolean",
                                      "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "concierge": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "conditionsTreated": {
                                      "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "convenienceStore": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "currencyExchange": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "customKeywords": {
                                      "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      }
                                    },
                                    "datePosted": {
                                      "format": "date",
                                      "type": "string",
                                      "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "degrees": {
                                      "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "ANP",
                                          "APN",
                                          "APRN",
                                          "ARNP",
                                          "CNM",
                                          "CNP",
                                          "CNS",
                                          "CPNP",
                                          "CRNA",
                                          "CRNP",
                                          "DC",
                                          "DDS",
                                          "DMD",
                                          "DNP",
                                          "DO",
                                          "DPM",
                                          "DVM",
                                          "FNP",
                                          "GNP",
                                          "LAC",
                                          "LPN",
                                          "MBA",
                                          "MBBS",
                                          "MD",
                                          "MPH",
                                          "ND",
                                          "NP",
                                          "OD",
                                          "PA",
                                          "PAC",
                                          "PHARMD",
                                          "PHD",
                                          "PNP",
                                          "PSYD",
                                          "VMD",
                                          "WHNP"
                                        ],
                                        "type": "string",
                                        "description": "Filtering Type: `option`"
                                      }
                                    },
                                    "deliveryHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                                    },
                                    "description": {
                                      "minLength": 10,
                                      "maxLength": 15000,
                                      "type": "string",
                                      "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "displayCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "doctorOnCall": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "dogsAllowed": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "driveThroughHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                                    },
                                    "dropoffCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "educationList": {
                                      "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "required": [
                                          "type",
                                          "institutionName",
                                          "yearCompleted"
                                        ],
                                        "additionalProperties": false,
                                        "type": "object",
                                        "properties": {
                                          "institutionName": {
                                            "minLength": 0,
                                            "maxLength": 100,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "type": {
                                            "enum": [
                                              "FELLOWSHIP",
                                              "RESIDENCY",
                                              "INTERNSHIP",
                                              "MEDICAL_SCHOOL"
                                            ],
                                            "type": "string",
                                            "description": "Filtering Type: `option`"
                                          },
                                          "yearCompleted": {
                                            "multipleOf": 1,
                                            "minimum": 1900,
                                            "maximum": 2100,
                                            "type": "number",
                                            "description": "Filtering Type: `integer`"
                                          }
                                        },
                                        "description": "Filtering Type: `object`"
                                      }
                                    },
                                    "electricChargingStation": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "elevator": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "ellipticalMachine": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "emails": {
                                      "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "format": "email",
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      }
                                    },
                                    "employmentType": {
                                      "enum": [
                                        "FULL_TIME",
                                        "PART_TIME",
                                        "CONTRACTOR",
                                        "TEMPORARY",
                                        "INTERN",
                                        "VOLUNTEER",
                                        "PER_DIEM",
                                        "OTHER"
                                      ],
                                      "type": "string",
                                      "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "eventStatus": {
                                      "enum": [
                                        "SCHEDULED",
                                        "RESCHEDULED",
                                        "POSTPONED",
                                        "CANCELED",
                                        "EVENT_MOVED_ONLINE"
                                      ],
                                      "type": "string",
                                      "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "facebookCallToAction": {
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "NONE",
                                            "BOOK_NOW",
                                            "CALL_NOW",
                                            "CONTACT_US",
                                            "SEND_MESSAGE",
                                            "USE_APP",
                                            "PLAY_GAME",
                                            "SHOP_NOW",
                                            "SIGN_UP",
                                            "WATCH_VIDEO",
                                            "SEND_EMAIL",
                                            "LEARN_MORE",
                                            "PURCHASE_GIFT_CARDS",
                                            "ORDER_NOW",
                                            "FOLLOW_PAGE"
                                          ],
                                          "type": "string",
                                          "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                                        },
                                        "value": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "facebookCoverPhoto": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    },
                                    "facebookDescriptor": {
                                      "minLength": 3,
                                      "maxLength": 75,
                                      "type": "string",
                                      "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "facebookName": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "facebookOverrideCity": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "facebookPageUrl": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "facebookProfilePhoto": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    },
                                    "facebookVanityUrl": {
                                      "minLength": 0,
                                      "maxLength": 50,
                                      "type": "string",
                                      "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "fax": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "featuredMessage": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "minLength": 0,
                                          "maxLength": 50,
                                          "type": "string",
                                          "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "firstName": {
                                      "minLength": 0,
                                      "maxLength": 35,
                                      "type": "string",
                                      "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "firstPartyReviewPage": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "fitnessCenter": {
                                      "enum": [
                                        "FITNESS_CENTER_AVAILABLE",
                                        "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "floorCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "freeWeights": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "frequentlyAskedQuestions": {
                                      "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "required": [
                                          "question"
                                        ],
                                        "additionalProperties": false,
                                        "type": "object",
                                        "properties": {
                                          "answer": {
                                            "minLength": 1,
                                            "maxLength": 4096,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "question": {
                                            "minLength": 1,
                                            "maxLength": 4096,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        },
                                        "description": "Filtering Type: `object`"
                                      }
                                    },
                                    "frontDesk": {
                                      "enum": [
                                        "FRONT_DESK_AVAILABLE",
                                        "FRONT_DESK_AVAILABLE_24_HOURS",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "gameRoom": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "gender": {
                                      "enum": [
                                        "UNSPECIFIED",
                                        "FEMALE",
                                        "MALE"
                                      ],
                                      "type": "string",
                                      "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "geomodifier": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "giftShop": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "golf": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "googleAttributes": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {},
                                      "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "googleCoverPhoto": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    },
                                    "googleMyBusinessLabels": {
                                      "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 50,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "googlePlaceId": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "googleProfilePhoto": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    },
                                    "googleWebsiteOverride": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "happyHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "headshot": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    },
                                    "hiringOrganization": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "holidayHoursConversationEnabled": {
                                      "type": "boolean",
                                      "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "horsebackRiding": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "hotTub": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "hours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "housekeeping": {
                                      "enum": [
                                        "HOUSEKEEPING_AVAILABLE",
                                        "HOUSEKEEPING_AVAILABLE_DAILY",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "impressum": {
                                      "minLength": 0,
                                      "maxLength": 2000,
                                      "type": "string",
                                      "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "indoorPoolCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "instagramHandle": {
                                      "minLength": 0,
                                      "maxLength": 30,
                                      "type": "string",
                                      "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "insuranceAccepted": {
                                      "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "iosAppUrl": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "isClusterPrimary": {
                                      "type": "boolean",
                                      "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "isFreeEvent": {
                                      "type": "boolean",
                                      "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "isoRegionCode": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "keywords": {
                                      "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "kidFriendly": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "kidsClub": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "kidsStayFree": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "kitchenHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "labels": {
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "type": "string"
                                      },
                                      "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "landingPageUrl": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "languages": {
                                      "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "lastName": {
                                      "minLength": 0,
                                      "maxLength": 35,
                                      "type": "string",
                                      "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "laundry": {
                                      "enum": [
                                        "FULL_SERVICE",
                                        "SELF_SERVICE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "lazyRiver": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "lifeguard": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "linkedLocation": {
                                      "type": "string",
                                      "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                                    },
                                    "localPhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "localShuttle": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "locatedIn": {
                                      "type": "string",
                                      "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                                    },
                                    "location": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "existingLocation": {
                                          "type": "string",
                                          "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                                        },
                                        "externalLocation": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "locationType": {
                                      "enum": [
                                        "LOCATION",
                                        "HEALTHCARE_FACILITY",
                                        "HEALTHCARE_PROFESSIONAL",
                                        "ATM",
                                        "RESTAURANT",
                                        "HOTEL"
                                      ],
                                      "type": "string",
                                      "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "logo": {
                                      "required": [
                                        "image"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                                      "properties": {
                                        "clickthroughUrl": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "description": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "details": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "image": {
                                          "required": [
                                            "url"
                                          ],
                                          "additionalProperties": false,
                                          "type": "object",
                                          "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                          "properties": {
                                            "alternateText": {
                                              "minLength": 0,
                                              "type": "string",
                                              "description": "Filtering Type: `text`"
                                            },
                                            "url": {
                                              "minLength": 0,
                                              "format": "uri",
                                              "type": "string",
                                              "description": "Filtering Type: `text`"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "mainPhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "massage": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "maxAgeOfKidsStayFree": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "maxNumberOfKidsStayFree": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "mealsServed": {
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "BREAKFAST",
                                          "LUNCH",
                                          "BRUNCH",
                                          "DINNER",
                                          "HAPPY_HOUR",
                                          "LATE_NIGHT"
                                        ],
                                        "type": "string",
                                        "description": "Filtering Type: `option`"
                                      },
                                      "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                                    },
                                    "meetingRoomCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "menuUrl": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "displayUrl": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                        },
                                        "preferDisplayUrl": {
                                          "type": "boolean",
                                          "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "A valid URL where consumers can view the entity's menu\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "menus": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "ids": {
                                          "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        },
                                        "label": {
                                          "minLength": 0,
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "middleName": {
                                      "minLength": 0,
                                      "maxLength": 35,
                                      "type": "string",
                                      "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "mobilePhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "mobilityAccessible": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "nightclub": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "npi": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                                    },
                                    "nudgeEnabled": {
                                      "type": "boolean",
                                      "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "officeName": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "onlineServiceHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                                    },
                                    "orderUrl": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "displayUrl": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                        },
                                        "preferDisplayUrl": {
                                          "type": "boolean",
                                          "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "A valid URL used to place an order at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "organizerEmail": {
                                      "minLength": 0,
                                      "format": "email",
                                      "type": "string",
                                      "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "organizerName": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "organizerPhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "outdoorPoolCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "parking": {
                                      "enum": [
                                        "PARKING_AVAILABLE",
                                        "PARKING_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "paymentOptions": {
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "ALIPAY",
                                          "AMERICANEXPRESS",
                                          "ANDROIDPAY",
                                          "APPLEPAY",
                                          "ATM",
                                          "ATMQUICK",
                                          "BACS",
                                          "BANCONTACT",
                                          "BANKDEPOSIT",
                                          "BANKPAY",
                                          "BGO",
                                          "BITCOIN",
                                          "Bar",
                                          "CARTASI",
                                          "CASH",
                                          "CCS",
                                          "CHECK",
                                          "CONB",
                                          "CVVV",
                                          "DEBITNOTE",
                                          "DINERSCLUB",
                                          "DIRECTDEBIT",
                                          "DISCOVER",
                                          "ECKARTE",
                                          "ECOCHEQUE",
                                          "EKENA",
                                          "EMV",
                                          "FINANCING",
                                          "GOPAY",
                                          "HAYAKAKEN",
                                          "HEBAG",
                                          "IBOD",
                                          "ICCARDS",
                                          "ICOCA",
                                          "ID",
                                          "IDEAL",
                                          "INCA",
                                          "INVOICE",
                                          "JCB",
                                          "JCoinPay",
                                          "JKOPAY",
                                          "KITACA",
                                          "KLA",
                                          "KLARNA",
                                          "LINEPAY",
                                          "MAESTRO",
                                          "MANACA",
                                          "MASTERCARD",
                                          "MIPAY",
                                          "MONIZZE",
                                          "MPAY",
                                          "Manuelle Lastsch",
                                          "Merpay",
                                          "NANACO",
                                          "NEXI",
                                          "NIMOCA",
                                          "OREM",
                                          "PASMO",
                                          "PAYBACKPAY",
                                          "PAYBOX",
                                          "PAYCONIQ",
                                          "PAYPAL",
                                          "PAYPAY",
                                          "PAYSEC",
                                          "PIN",
                                          "POSTEPAY",
                                          "QRCODE",
                                          "QUICPAY",
                                          "RAKUTENEDY",
                                          "RAKUTENPAY",
                                          "SAMSUNGPAY",
                                          "SODEXO",
                                          "SUGOCA",
                                          "SUICA",
                                          "SWISH",
                                          "TICKETRESTAURANT",
                                          "TOICA",
                                          "TRAVELERSCHECK",
                                          "TSCUBIC",
                                          "TWINT",
                                          "UNIONPAY",
                                          "VEV",
                                          "VISA",
                                          "VISAELECTRON",
                                          "VOB",
                                          "VOUCHER",
                                          "VPAY",
                                          "WAON",
                                          "WECHATPAY",
                                          "WIRETRANSFER",
                                          "Yucho Pay",
                                          "ZELLE",
                                          "auPay",
                                          "dBarai",
                                          "Überweisung"
                                        ],
                                        "type": "string",
                                        "description": "Filtering Type: `option`"
                                      },
                                      "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "performers": {
                                      "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      }
                                    },
                                    "petsAllowed": {
                                      "enum": [
                                        "PETS_WELCOME",
                                        "PETS_WELCOME_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "photoGallery": {
                                      "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "required": [
                                          "image"
                                        ],
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                        "properties": {
                                          "clickthroughUrl": {
                                            "minLength": 0,
                                            "format": "uri",
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "description": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "details": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "image": {
                                            "required": [
                                              "url"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                            "properties": {
                                              "alternateText": {
                                                "minLength": 0,
                                                "type": "string",
                                                "description": "Filtering Type: `text`"
                                              },
                                              "url": {
                                                "minLength": 0,
                                                "format": "uri",
                                                "type": "string",
                                                "description": "Filtering Type: `text`"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "pickupCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "pickupHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                                    },
                                    "priceRange": {
                                      "enum": [
                                        "UNSPECIFIED",
                                        "ONE",
                                        "TWO",
                                        "THREE",
                                        "FOUR"
                                      ],
                                      "type": "string",
                                      "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                                    },
                                    "primaryConversationContact": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "privateBeach": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "privateCarService": {
                                      "enum": [
                                        "PRIVATE_CAR_SERVICE",
                                        "PRIVATE_CAR_SERVICE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "productLists": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "ids": {
                                          "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        },
                                        "label": {
                                          "minLength": 0,
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "products": {
                                      "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "questionsAndAnswers": {
                                      "type": "boolean",
                                      "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "rankTrackingCompetitors": {
                                      "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "required": [
                                          "name",
                                          "website"
                                        ],
                                        "additionalProperties": false,
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "minLength": 0,
                                            "maxLength": 100,
                                            "type": "string",
                                            "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                          },
                                          "website": {
                                            "minLength": 0,
                                            "maxLength": 255,
                                            "format": "uri",
                                            "type": "string",
                                            "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                          }
                                        },
                                        "description": "Filtering Type: `object`"
                                      }
                                    },
                                    "rankTrackingEnabled": {
                                      "type": "boolean",
                                      "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "rankTrackingFrequency": {
                                      "enum": [
                                        "WEEKLY",
                                        "MONTHLY",
                                        "QUARTERLY"
                                      ],
                                      "type": "string",
                                      "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "rankTrackingQueryTemplates": {
                                      "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "KEYWORD",
                                          "KEYWORD_ZIP",
                                          "KEYWORD_CITY",
                                          "KEYWORD_IN_CITY",
                                          "KEYWORD_NEAR_ME",
                                          "KEYWORD_CITY_STATE"
                                        ],
                                        "type": "string",
                                        "description": "Filtering Type: `option`"
                                      }
                                    },
                                    "rankTrackingSites": {
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "GOOGLE_DESKTOP",
                                          "GOOGLE_MOBILE",
                                          "BING_DESKTOP",
                                          "BING_MOBILE",
                                          "YAHOO_DESKTOP",
                                          "YAHOO_MOBILE"
                                        ],
                                        "type": "string",
                                        "description": "Filtering Type: `option`"
                                      },
                                      "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "reservationUrl": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "displayUrl": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                        },
                                        "preferDisplayUrl": {
                                          "type": "boolean",
                                          "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "A valid URL used to make reservations at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "restaurantCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "reviewGenerationUrl": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "reviewResponseConversationEnabled": {
                                      "type": "boolean",
                                      "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "roomCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "roomService": {
                                      "enum": [
                                        "ROOM_SERVICE_AVAILABLE",
                                        "ROOM_SERVICE_AVAILABLE_24_HOURS",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "routableCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "salon": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "sauna": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "scuba": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "selfParking": {
                                      "enum": [
                                        "SELF_PARKING_AVAILABLE",
                                        "SELF_PARKING_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "seniorHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                                    },
                                    "serviceArea": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "places": {
                                          "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "minLength": 0,
                                            "maxLength": 100,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        }
                                      },
                                      "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "serviceAreaPlaces": {
                                      "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "minLength": 0,
                                            "maxLength": 100,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "type": {
                                            "enum": [
                                              "POSTAL_CODE",
                                              "REGION",
                                              "COUNTY",
                                              "CITY",
                                              "SUBLOCALITY"
                                            ],
                                            "type": "string",
                                            "description": "Filtering Type: `option`"
                                          }
                                        },
                                        "description": "Filtering Type: `object`"
                                      }
                                    },
                                    "services": {
                                      "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "smokeFreeProperty": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "snorkeling": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "socialHour": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "spa": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "specialities": {
                                      "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "tableService": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "takeoutHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                                    },
                                    "tennis": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "thermalPool": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "ticketAvailability": {
                                      "enum": [
                                        "IN_STOCK",
                                        "SOLD_OUT",
                                        "PRE_ORDER",
                                        "UNSPECIFIED"
                                      ],
                                      "type": "string",
                                      "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "ticketPriceRange": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "currencyCode": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                                        },
                                        "maxValue": {
                                          "pattern": "^\\d*\\.?\\d*$",
                                          "type": "string",
                                          "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                                        },
                                        "minValue": {
                                          "pattern": "^\\d*\\.?\\d*$",
                                          "type": "string",
                                          "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                                        }
                                      },
                                      "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "ticketSaleDateTime": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "ticketUrl": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "time": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "date-time",
                                          "type": "string",
                                          "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                        },
                                        "start": {
                                          "format": "date-time",
                                          "type": "string",
                                          "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                        }
                                      },
                                      "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "timeZoneUtcOffset": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "timezone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "tollFreePhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "treadmill": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "ttyPhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "turndownService": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "twitterHandle": {
                                      "minLength": 0,
                                      "maxLength": 15,
                                      "type": "string",
                                      "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "uberLink": {
                                      "required": [
                                        "presentation"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "presentation": {
                                          "enum": [
                                            "BUTTON",
                                            "LINK"
                                          ],
                                          "type": "string",
                                          "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                                        },
                                        "text": {
                                          "minLength": 0,
                                          "maxLength": 100,
                                          "type": "string",
                                          "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "uberTripBranding": {
                                      "required": [
                                        "text",
                                        "url",
                                        "description"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "minLength": 0,
                                          "maxLength": 150,
                                          "type": "string",
                                          "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                                        },
                                        "text": {
                                          "minLength": 0,
                                          "maxLength": 28,
                                          "type": "string",
                                          "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "valetParking": {
                                      "enum": [
                                        "VALET_PARKING_AVAILABLE",
                                        "VALET_PARKING_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "validThrough": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "vendingMachine": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "venueName": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "videos": {
                                      "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "required": [
                                          "video"
                                        ],
                                        "additionalProperties": false,
                                        "type": "object",
                                        "properties": {
                                          "description": {
                                            "minLength": 0,
                                            "maxLength": 140,
                                            "type": "string",
                                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                          },
                                          "video": {
                                            "required": [
                                              "url"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "url": {
                                                "minLength": 0,
                                                "format": "uri",
                                                "type": "string",
                                                "description": "Filtering Type: `text`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "description": "Filtering Type: `object`"
                                      }
                                    },
                                    "wadingPool": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "wakeUpCalls": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "walkableCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "waterPark": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "waterSkiing": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "watercraft": {
                                      "enum": [
                                        "WATERCRAFT_RENTALS",
                                        "WATERCRAFT_RENTALS_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "waterslide": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "wavePool": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "websiteUrl": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "displayUrl": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                        },
                                        "preferDisplayUrl": {
                                          "type": "boolean",
                                          "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "A valid URL for this entity's website\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "weightMachine": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "wheelchairAccessible": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "wifiAvailable": {
                                      "enum": [
                                        "WIFI_AVAILABLE",
                                        "WIFI_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "workRemote": {
                                      "type": "boolean",
                                      "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "yearEstablished": {
                                      "multipleOf": 1,
                                      "minimum": 1000,
                                      "maximum": 2028,
                                      "type": "number",
                                      "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "yearLastRenovated": {
                                      "multipleOf": 1,
                                      "minimum": 1000,
                                      "maximum": 2028,
                                      "type": "number",
                                      "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "yextDisplayCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "yextDropoffCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "yextPickupCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "yextRoutableCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "yextWalkableCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/entityprofiles/{entityId}/{languageCode}": {
      "get": {
        "operationId": "KnowledgeApiServer.getLanguageProfile",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The external ID of the requested Entity",
            "name": "entityId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The language code corresponding to the language of the profiles that the user wishes to retrieve",
            "name": "languageCode",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of field names. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"address.line1\"`). Custom fields are specified in the same way, albeit with their `c_*` name.",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if at least one field is of type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "name": "format",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "type": "boolean",
              "default": "false"
            },
            "description": "- `false`: The response will only contain overridable or language-specific fields for the requested language.\n- `true`:  The response will contain the full location profile in the requested language, including data that remains the same across languages.\n",
            "name": "rendered",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Entity Language Profiles: Get",
        "description": "Retrieve a Language Profile for an Entity\n\n**NOTE**:\n\n* If the **`v`** parameter is before `20190103`: by default, returned alternate Language Profiles include **`googleAttributes`** and **`categoryIds`** fields\n* If the **`v`** parameter is `20190103` or later: by default, returned alternate Language Profiles do not include **`googleAttributes`** and **`categoryIds`** fields. However, these fields can still be retrieved if the **`rendered`** parameter in the request is set to `true`.\n",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "meta": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "accountId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of the account associated with this Entity"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                            },
                            "entityType": {
                              "minLength": 0,
                              "type": "string",
                              "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                            },
                            "folderId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                            },
                            "id": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of this Entity\n\nFiltering Type: `text`"
                            },
                            "labels": {
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              },
                              "description": "This Entity's labels\n\nFiltering Type: `list of integer`"
                            },
                            "language": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                            },
                            "timestamp": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                            },
                            "uid": {
                              "minLength": 0,
                              "type": "string",
                              "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                            }
                          },
                          "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "name": {
                          "minLength": 0,
                          "maxLength": 5000,
                          "type": "string",
                          "description": "\n\n\nCannot Include:\n* HTML markup\n* a phone number\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "address": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "city": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "pattern": "^[a-zA-Z]{2}$",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "extraDescription": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                            },
                            "line1": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line2": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line3": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "postalCode": {
                              "minLength": 0,
                              "maxLength": 10,
                              "type": "string",
                              "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "region": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "sublocality": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "acceptingNewPatients": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "acceptsReservations": {
                          "type": "boolean",
                          "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "accessHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalHoursText": {
                          "minLength": 0,
                          "maxLength": 255,
                          "type": "string",
                          "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalPromotingLocations": {
                          "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Filtering Type: `entityId`"
                          }
                        },
                        "addressHidden": {
                          "type": "boolean",
                          "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "admittingHospitals": {
                          "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "adultPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ageRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "maxValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                            },
                            "minValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                            }
                          },
                          "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "airportShuttle": {
                          "enum": [
                            "AIRPORT_SHUTTLE_AVAILABLE",
                            "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "airportTransfer": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "allInclusive": {
                          "enum": [
                            "ALL_INCLUSIVE_RATES_AVAILABLE",
                            "ALL_INCLUSIVE_RATES_ONLY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "alternateNames": {
                          "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "alternatePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "alternateWebsites": {
                          "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 255,
                            "format": "uri",
                            "type": "string",
                            "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                          }
                        },
                        "androidAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "answer": {
                          "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                          "type": "string",
                          "format": "rich-text"
                        },
                        "applicationUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "associations": {
                          "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "attendance": {
                          "required": [
                            "attendanceMode"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "attendanceMode": {
                              "enum": [
                                "OFFLINE",
                                "ONLINE",
                                "MIXED"
                              ],
                              "type": "string",
                              "description": "Filtering Type: `option`"
                            },
                            "virtualLocationUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          },
                          "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "attire": {
                          "enum": [
                            "UNSPECIFIED",
                            "DRESSY",
                            "CASUAL",
                            "FORMAL"
                          ],
                          "type": "string",
                          "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "babysittingOffered": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "baggageStorage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bar": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachAccess": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachFrontProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bicycles": {
                          "enum": [
                            "BICYCLE_RENTALS",
                            "BICYCLE_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bios": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "boutiqueStores": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brands": {
                          "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "breakfast": {
                          "enum": [
                            "BREAKFAST_AVAILABLE",
                            "BREAKFAST_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brunchHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "businessCenter": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "calendars": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "carRental": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "casino": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "categoryIds": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          },
                          "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "catsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "certifications": {
                          "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "checkInTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "checkOutTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "classificationRating": {
                          "pattern": "^\\d*\\.?\\d*$",
                          "type": "string",
                          "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "closed": {
                          "type": "boolean",
                          "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "concierge": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "conditionsTreated": {
                          "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "convenienceStore": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "currencyExchange": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "customKeywords": {
                          "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "datePosted": {
                          "format": "date",
                          "type": "string",
                          "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "degrees": {
                          "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ANP",
                              "APN",
                              "APRN",
                              "ARNP",
                              "CNM",
                              "CNP",
                              "CNS",
                              "CPNP",
                              "CRNA",
                              "CRNP",
                              "DC",
                              "DDS",
                              "DMD",
                              "DNP",
                              "DO",
                              "DPM",
                              "DVM",
                              "FNP",
                              "GNP",
                              "LAC",
                              "LPN",
                              "MBA",
                              "MBBS",
                              "MD",
                              "MPH",
                              "ND",
                              "NP",
                              "OD",
                              "PA",
                              "PAC",
                              "PHARMD",
                              "PHD",
                              "PNP",
                              "PSYD",
                              "VMD",
                              "WHNP"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "deliveryHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "description": {
                          "minLength": 10,
                          "maxLength": 15000,
                          "type": "string",
                          "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "displayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "doctorOnCall": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "dogsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "driveThroughHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                        },
                        "dropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "educationList": {
                          "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "type",
                              "institutionName",
                              "yearCompleted"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "institutionName": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "FELLOWSHIP",
                                  "RESIDENCY",
                                  "INTERNSHIP",
                                  "MEDICAL_SCHOOL"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              },
                              "yearCompleted": {
                                "multipleOf": 1,
                                "minimum": 1900,
                                "maximum": 2100,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "electricChargingStation": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "elevator": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ellipticalMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "emails": {
                          "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "format": "email",
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "employmentType": {
                          "enum": [
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "OTHER"
                          ],
                          "type": "string",
                          "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "eventStatus": {
                          "enum": [
                            "SCHEDULED",
                            "RESCHEDULED",
                            "POSTPONED",
                            "CANCELED",
                            "EVENT_MOVED_ONLINE"
                          ],
                          "type": "string",
                          "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "facebookCallToAction": {
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "type": {
                              "enum": [
                                "NONE",
                                "BOOK_NOW",
                                "CALL_NOW",
                                "CONTACT_US",
                                "SEND_MESSAGE",
                                "USE_APP",
                                "PLAY_GAME",
                                "SHOP_NOW",
                                "SIGN_UP",
                                "WATCH_VIDEO",
                                "SEND_EMAIL",
                                "LEARN_MORE",
                                "PURCHASE_GIFT_CARDS",
                                "ORDER_NOW",
                                "FOLLOW_PAGE"
                              ],
                              "type": "string",
                              "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                            },
                            "value": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookDescriptor": {
                          "minLength": 3,
                          "maxLength": 75,
                          "type": "string",
                          "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookOverrideCity": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookPageUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookVanityUrl": {
                          "minLength": 0,
                          "maxLength": 50,
                          "type": "string",
                          "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fax": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "featuredMessage": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 50,
                              "type": "string",
                              "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "firstName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "firstPartyReviewPage": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fitnessCenter": {
                          "enum": [
                            "FITNESS_CENTER_AVAILABLE",
                            "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "floorCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "freeWeights": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "frequentlyAskedQuestions": {
                          "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "question"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "answer": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "question": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "frontDesk": {
                          "enum": [
                            "FRONT_DESK_AVAILABLE",
                            "FRONT_DESK_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gameRoom": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gender": {
                          "enum": [
                            "UNSPECIFIED",
                            "FEMALE",
                            "MALE"
                          ],
                          "type": "string",
                          "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "geomodifier": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "giftShop": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "golf": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "googleAttributes": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {},
                          "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "googleCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleMyBusinessLabels": {
                          "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 50,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "googlePlaceId": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "googleProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleWebsiteOverride": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "happyHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "headshot": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "hiringOrganization": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "holidayHoursConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "horsebackRiding": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hotTub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "housekeeping": {
                          "enum": [
                            "HOUSEKEEPING_AVAILABLE",
                            "HOUSEKEEPING_AVAILABLE_DAILY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "impressum": {
                          "minLength": 0,
                          "maxLength": 2000,
                          "type": "string",
                          "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "indoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "instagramHandle": {
                          "minLength": 0,
                          "maxLength": 30,
                          "type": "string",
                          "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "insuranceAccepted": {
                          "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "iosAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "isClusterPrimary": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "isFreeEvent": {
                          "type": "boolean",
                          "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "isoRegionCode": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "keywords": {
                          "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "kidFriendly": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsClub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsStayFree": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kitchenHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "labels": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string"
                          },
                          "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "landingPageUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "languages": {
                          "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "lastName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "laundry": {
                          "enum": [
                            "FULL_SERVICE",
                            "SELF_SERVICE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lazyRiver": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lifeguard": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "linkedLocation": {
                          "type": "string",
                          "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                        },
                        "localPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "localShuttle": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "locatedIn": {
                          "type": "string",
                          "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                        },
                        "location": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "existingLocation": {
                              "type": "string",
                              "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                            },
                            "externalLocation": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "locationType": {
                          "enum": [
                            "LOCATION",
                            "HEALTHCARE_FACILITY",
                            "HEALTHCARE_PROFESSIONAL",
                            "ATM",
                            "RESTAURANT",
                            "HOTEL"
                          ],
                          "type": "string",
                          "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "logo": {
                          "required": [
                            "image"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                          "properties": {
                            "clickthroughUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "description": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "details": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "image": {
                              "required": [
                                "url"
                              ],
                              "additionalProperties": false,
                              "type": "object",
                              "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                              "properties": {
                                "alternateText": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "url": {
                                  "minLength": 0,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              }
                            }
                          }
                        },
                        "mainPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "massage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxAgeOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxNumberOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "mealsServed": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "BREAKFAST",
                              "LUNCH",
                              "BRUNCH",
                              "DINNER",
                              "HAPPY_HOUR",
                              "LATE_NIGHT"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "meetingRoomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "menuUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL where consumers can view the entity's menu\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "menus": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "middleName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "mobilePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "mobilityAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "nightclub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "npi": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "nudgeEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "officeName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "onlineServiceHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "orderUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to place an order at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "organizerEmail": {
                          "minLength": 0,
                          "format": "email",
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "outdoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "parking": {
                          "enum": [
                            "PARKING_AVAILABLE",
                            "PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "paymentOptions": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ALIPAY",
                              "AMERICANEXPRESS",
                              "ANDROIDPAY",
                              "APPLEPAY",
                              "ATM",
                              "ATMQUICK",
                              "BACS",
                              "BANCONTACT",
                              "BANKDEPOSIT",
                              "BANKPAY",
                              "BGO",
                              "BITCOIN",
                              "Bar",
                              "CARTASI",
                              "CASH",
                              "CCS",
                              "CHECK",
                              "CONB",
                              "CVVV",
                              "DEBITNOTE",
                              "DINERSCLUB",
                              "DIRECTDEBIT",
                              "DISCOVER",
                              "ECKARTE",
                              "ECOCHEQUE",
                              "EKENA",
                              "EMV",
                              "FINANCING",
                              "GOPAY",
                              "HAYAKAKEN",
                              "HEBAG",
                              "IBOD",
                              "ICCARDS",
                              "ICOCA",
                              "ID",
                              "IDEAL",
                              "INCA",
                              "INVOICE",
                              "JCB",
                              "JCoinPay",
                              "JKOPAY",
                              "KITACA",
                              "KLA",
                              "KLARNA",
                              "LINEPAY",
                              "MAESTRO",
                              "MANACA",
                              "MASTERCARD",
                              "MIPAY",
                              "MONIZZE",
                              "MPAY",
                              "Manuelle Lastsch",
                              "Merpay",
                              "NANACO",
                              "NEXI",
                              "NIMOCA",
                              "OREM",
                              "PASMO",
                              "PAYBACKPAY",
                              "PAYBOX",
                              "PAYCONIQ",
                              "PAYPAL",
                              "PAYPAY",
                              "PAYSEC",
                              "PIN",
                              "POSTEPAY",
                              "QRCODE",
                              "QUICPAY",
                              "RAKUTENEDY",
                              "RAKUTENPAY",
                              "SAMSUNGPAY",
                              "SODEXO",
                              "SUGOCA",
                              "SUICA",
                              "SWISH",
                              "TICKETRESTAURANT",
                              "TOICA",
                              "TRAVELERSCHECK",
                              "TSCUBIC",
                              "TWINT",
                              "UNIONPAY",
                              "VEV",
                              "VISA",
                              "VISAELECTRON",
                              "VOB",
                              "VOUCHER",
                              "VPAY",
                              "WAON",
                              "WECHATPAY",
                              "WIRETRANSFER",
                              "Yucho Pay",
                              "ZELLE",
                              "auPay",
                              "dBarai",
                              "Überweisung"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "performers": {
                          "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "petsAllowed": {
                          "enum": [
                            "PETS_WELCOME",
                            "PETS_WELCOME_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "photoGallery": {
                          "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "image"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                            "properties": {
                              "clickthroughUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "description": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "details": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "image": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "pickupHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                        },
                        "priceRange": {
                          "enum": [
                            "UNSPECIFIED",
                            "ONE",
                            "TWO",
                            "THREE",
                            "FOUR"
                          ],
                          "type": "string",
                          "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "primaryConversationContact": {
                          "minLength": 0,
                          "type": "string",
                          "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "privateBeach": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "privateCarService": {
                          "enum": [
                            "PRIVATE_CAR_SERVICE",
                            "PRIVATE_CAR_SERVICE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "productLists": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "products": {
                          "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "questionsAndAnswers": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingCompetitors": {
                          "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "name",
                              "website"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "website": {
                                "minLength": 0,
                                "maxLength": 255,
                                "format": "uri",
                                "type": "string",
                                "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "rankTrackingEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingFrequency": {
                          "enum": [
                            "WEEKLY",
                            "MONTHLY",
                            "QUARTERLY"
                          ],
                          "type": "string",
                          "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingQueryTemplates": {
                          "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "KEYWORD",
                              "KEYWORD_ZIP",
                              "KEYWORD_CITY",
                              "KEYWORD_IN_CITY",
                              "KEYWORD_NEAR_ME",
                              "KEYWORD_CITY_STATE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "rankTrackingSites": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "GOOGLE_DESKTOP",
                              "GOOGLE_MOBILE",
                              "BING_DESKTOP",
                              "BING_MOBILE",
                              "YAHOO_DESKTOP",
                              "YAHOO_MOBILE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reservationUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to make reservations at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "restaurantCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "reviewGenerationUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reviewResponseConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "roomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "roomService": {
                          "enum": [
                            "ROOM_SERVICE_AVAILABLE",
                            "ROOM_SERVICE_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "routableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "salon": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "sauna": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "scuba": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "selfParking": {
                          "enum": [
                            "SELF_PARKING_AVAILABLE",
                            "SELF_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "seniorHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "serviceArea": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "places": {
                              "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            }
                          },
                          "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "serviceAreaPlaces": {
                          "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "POSTAL_CODE",
                                  "REGION",
                                  "COUNTY",
                                  "CITY",
                                  "SUBLOCALITY"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "services": {
                          "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "smokeFreeProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "snorkeling": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "socialHour": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "spa": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "specialities": {
                          "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "tableService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "takeoutHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "tennis": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "thermalPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ticketAvailability": {
                          "enum": [
                            "IN_STOCK",
                            "SOLD_OUT",
                            "PRE_ORDER",
                            "UNSPECIFIED"
                          ],
                          "type": "string",
                          "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketPriceRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                            },
                            "maxValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                            },
                            "minValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                            }
                          },
                          "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketSaleDateTime": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "time": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "date-time",
                              "type": "string",
                              "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            },
                            "start": {
                              "format": "date-time",
                              "type": "string",
                              "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            }
                          },
                          "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "timeZoneUtcOffset": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "timezone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "tollFreePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "treadmill": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ttyPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "turndownService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "twitterHandle": {
                          "minLength": 0,
                          "maxLength": 15,
                          "type": "string",
                          "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberLink": {
                          "required": [
                            "presentation"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "presentation": {
                              "enum": [
                                "BUTTON",
                                "LINK"
                              ],
                              "type": "string",
                              "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 100,
                              "type": "string",
                              "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberTripBranding": {
                          "required": [
                            "text",
                            "url",
                            "description"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 150,
                              "type": "string",
                              "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 28,
                              "type": "string",
                              "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "valetParking": {
                          "enum": [
                            "VALET_PARKING_AVAILABLE",
                            "VALET_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "validThrough": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "vendingMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "venueName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "videos": {
                          "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "video"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "description": {
                                "minLength": 0,
                                "maxLength": 140,
                                "type": "string",
                                "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "video": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "wadingPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wakeUpCalls": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "walkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "waterPark": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterSkiing": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "watercraft": {
                          "enum": [
                            "WATERCRAFT_RENTALS",
                            "WATERCRAFT_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterslide": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wavePool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "websiteUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL for this entity's website\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "weightMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wheelchairAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wifiAvailable": {
                          "enum": [
                            "WIFI_AVAILABLE",
                            "WIFI_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "workRemote": {
                          "type": "boolean",
                          "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "yearEstablished": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yearLastRenovated": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "yextDisplayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "yextDropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextPickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextRoutableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextWalkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "KnowledgeApiServer.upsertLanguageProfile",
        "requestBody": {
          "description": "The entity profile to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityWrite"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The external ID of the requested Entity",
            "name": "entityId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The language code corresponding to the language of the profile that the user wishes to create or update",
            "name": "languageCode",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Entity Language Profiles: Upsert",
        "description": "Add a language profile",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "meta": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "accountId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of the account associated with this Entity"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                            },
                            "entityType": {
                              "minLength": 0,
                              "type": "string",
                              "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                            },
                            "folderId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                            },
                            "id": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of this Entity\n\nFiltering Type: `text`"
                            },
                            "labels": {
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              },
                              "description": "This Entity's labels\n\nFiltering Type: `list of integer`"
                            },
                            "language": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                            },
                            "timestamp": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                            },
                            "uid": {
                              "minLength": 0,
                              "type": "string",
                              "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                            }
                          },
                          "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "name": {
                          "minLength": 0,
                          "maxLength": 5000,
                          "type": "string",
                          "description": "\n\n\nCannot Include:\n* HTML markup\n* a phone number\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "address": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "city": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "pattern": "^[a-zA-Z]{2}$",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "extraDescription": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                            },
                            "line1": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line2": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line3": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "postalCode": {
                              "minLength": 0,
                              "maxLength": 10,
                              "type": "string",
                              "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "region": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "sublocality": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "acceptingNewPatients": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "acceptsReservations": {
                          "type": "boolean",
                          "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "accessHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalHoursText": {
                          "minLength": 0,
                          "maxLength": 255,
                          "type": "string",
                          "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalPromotingLocations": {
                          "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Filtering Type: `entityId`"
                          }
                        },
                        "addressHidden": {
                          "type": "boolean",
                          "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "admittingHospitals": {
                          "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "adultPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ageRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "maxValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                            },
                            "minValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                            }
                          },
                          "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "airportShuttle": {
                          "enum": [
                            "AIRPORT_SHUTTLE_AVAILABLE",
                            "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "airportTransfer": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "allInclusive": {
                          "enum": [
                            "ALL_INCLUSIVE_RATES_AVAILABLE",
                            "ALL_INCLUSIVE_RATES_ONLY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "alternateNames": {
                          "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "alternatePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "alternateWebsites": {
                          "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 255,
                            "format": "uri",
                            "type": "string",
                            "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                          }
                        },
                        "androidAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "answer": {
                          "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                          "type": "string",
                          "format": "rich-text"
                        },
                        "applicationUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "associations": {
                          "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "attendance": {
                          "required": [
                            "attendanceMode"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "attendanceMode": {
                              "enum": [
                                "OFFLINE",
                                "ONLINE",
                                "MIXED"
                              ],
                              "type": "string",
                              "description": "Filtering Type: `option`"
                            },
                            "virtualLocationUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          },
                          "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "attire": {
                          "enum": [
                            "UNSPECIFIED",
                            "DRESSY",
                            "CASUAL",
                            "FORMAL"
                          ],
                          "type": "string",
                          "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "babysittingOffered": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "baggageStorage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bar": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachAccess": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachFrontProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bicycles": {
                          "enum": [
                            "BICYCLE_RENTALS",
                            "BICYCLE_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bios": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "boutiqueStores": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brands": {
                          "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "breakfast": {
                          "enum": [
                            "BREAKFAST_AVAILABLE",
                            "BREAKFAST_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brunchHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "businessCenter": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "calendars": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "carRental": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "casino": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "categoryIds": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          },
                          "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "catsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "certifications": {
                          "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "checkInTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "checkOutTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "classificationRating": {
                          "pattern": "^\\d*\\.?\\d*$",
                          "type": "string",
                          "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "closed": {
                          "type": "boolean",
                          "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "concierge": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "conditionsTreated": {
                          "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "convenienceStore": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "currencyExchange": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "customKeywords": {
                          "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "datePosted": {
                          "format": "date",
                          "type": "string",
                          "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "degrees": {
                          "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ANP",
                              "APN",
                              "APRN",
                              "ARNP",
                              "CNM",
                              "CNP",
                              "CNS",
                              "CPNP",
                              "CRNA",
                              "CRNP",
                              "DC",
                              "DDS",
                              "DMD",
                              "DNP",
                              "DO",
                              "DPM",
                              "DVM",
                              "FNP",
                              "GNP",
                              "LAC",
                              "LPN",
                              "MBA",
                              "MBBS",
                              "MD",
                              "MPH",
                              "ND",
                              "NP",
                              "OD",
                              "PA",
                              "PAC",
                              "PHARMD",
                              "PHD",
                              "PNP",
                              "PSYD",
                              "VMD",
                              "WHNP"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "deliveryHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "description": {
                          "minLength": 10,
                          "maxLength": 15000,
                          "type": "string",
                          "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "displayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "doctorOnCall": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "dogsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "driveThroughHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                        },
                        "dropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "educationList": {
                          "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "type",
                              "institutionName",
                              "yearCompleted"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "institutionName": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "FELLOWSHIP",
                                  "RESIDENCY",
                                  "INTERNSHIP",
                                  "MEDICAL_SCHOOL"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              },
                              "yearCompleted": {
                                "multipleOf": 1,
                                "minimum": 1900,
                                "maximum": 2100,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "electricChargingStation": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "elevator": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ellipticalMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "emails": {
                          "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "format": "email",
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "employmentType": {
                          "enum": [
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "OTHER"
                          ],
                          "type": "string",
                          "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "eventStatus": {
                          "enum": [
                            "SCHEDULED",
                            "RESCHEDULED",
                            "POSTPONED",
                            "CANCELED",
                            "EVENT_MOVED_ONLINE"
                          ],
                          "type": "string",
                          "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "facebookCallToAction": {
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "type": {
                              "enum": [
                                "NONE",
                                "BOOK_NOW",
                                "CALL_NOW",
                                "CONTACT_US",
                                "SEND_MESSAGE",
                                "USE_APP",
                                "PLAY_GAME",
                                "SHOP_NOW",
                                "SIGN_UP",
                                "WATCH_VIDEO",
                                "SEND_EMAIL",
                                "LEARN_MORE",
                                "PURCHASE_GIFT_CARDS",
                                "ORDER_NOW",
                                "FOLLOW_PAGE"
                              ],
                              "type": "string",
                              "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                            },
                            "value": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookDescriptor": {
                          "minLength": 3,
                          "maxLength": 75,
                          "type": "string",
                          "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookOverrideCity": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookPageUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookVanityUrl": {
                          "minLength": 0,
                          "maxLength": 50,
                          "type": "string",
                          "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fax": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "featuredMessage": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 50,
                              "type": "string",
                              "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "firstName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "firstPartyReviewPage": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fitnessCenter": {
                          "enum": [
                            "FITNESS_CENTER_AVAILABLE",
                            "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "floorCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "freeWeights": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "frequentlyAskedQuestions": {
                          "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "question"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "answer": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "question": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "frontDesk": {
                          "enum": [
                            "FRONT_DESK_AVAILABLE",
                            "FRONT_DESK_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gameRoom": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gender": {
                          "enum": [
                            "UNSPECIFIED",
                            "FEMALE",
                            "MALE"
                          ],
                          "type": "string",
                          "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "geomodifier": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "giftShop": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "golf": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "googleAttributes": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {},
                          "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "googleCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleMyBusinessLabels": {
                          "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 50,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "googlePlaceId": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "googleProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleWebsiteOverride": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "happyHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "headshot": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "hiringOrganization": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "holidayHoursConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "horsebackRiding": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hotTub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "housekeeping": {
                          "enum": [
                            "HOUSEKEEPING_AVAILABLE",
                            "HOUSEKEEPING_AVAILABLE_DAILY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "impressum": {
                          "minLength": 0,
                          "maxLength": 2000,
                          "type": "string",
                          "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "indoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "instagramHandle": {
                          "minLength": 0,
                          "maxLength": 30,
                          "type": "string",
                          "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "insuranceAccepted": {
                          "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "iosAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "isClusterPrimary": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "isFreeEvent": {
                          "type": "boolean",
                          "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "isoRegionCode": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "keywords": {
                          "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "kidFriendly": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsClub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsStayFree": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kitchenHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "labels": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string"
                          },
                          "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "landingPageUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "languages": {
                          "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "lastName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "laundry": {
                          "enum": [
                            "FULL_SERVICE",
                            "SELF_SERVICE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lazyRiver": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lifeguard": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "linkedLocation": {
                          "type": "string",
                          "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                        },
                        "localPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "localShuttle": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "locatedIn": {
                          "type": "string",
                          "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                        },
                        "location": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "existingLocation": {
                              "type": "string",
                              "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                            },
                            "externalLocation": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "locationType": {
                          "enum": [
                            "LOCATION",
                            "HEALTHCARE_FACILITY",
                            "HEALTHCARE_PROFESSIONAL",
                            "ATM",
                            "RESTAURANT",
                            "HOTEL"
                          ],
                          "type": "string",
                          "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "logo": {
                          "required": [
                            "image"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                          "properties": {
                            "clickthroughUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "description": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "details": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "image": {
                              "required": [
                                "url"
                              ],
                              "additionalProperties": false,
                              "type": "object",
                              "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                              "properties": {
                                "alternateText": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "url": {
                                  "minLength": 0,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              }
                            }
                          }
                        },
                        "mainPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "massage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxAgeOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxNumberOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "mealsServed": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "BREAKFAST",
                              "LUNCH",
                              "BRUNCH",
                              "DINNER",
                              "HAPPY_HOUR",
                              "LATE_NIGHT"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "meetingRoomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "menuUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL where consumers can view the entity's menu\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "menus": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "middleName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "mobilePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "mobilityAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "nightclub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "npi": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "nudgeEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "officeName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "onlineServiceHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "orderUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to place an order at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "organizerEmail": {
                          "minLength": 0,
                          "format": "email",
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "outdoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "parking": {
                          "enum": [
                            "PARKING_AVAILABLE",
                            "PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "paymentOptions": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ALIPAY",
                              "AMERICANEXPRESS",
                              "ANDROIDPAY",
                              "APPLEPAY",
                              "ATM",
                              "ATMQUICK",
                              "BACS",
                              "BANCONTACT",
                              "BANKDEPOSIT",
                              "BANKPAY",
                              "BGO",
                              "BITCOIN",
                              "Bar",
                              "CARTASI",
                              "CASH",
                              "CCS",
                              "CHECK",
                              "CONB",
                              "CVVV",
                              "DEBITNOTE",
                              "DINERSCLUB",
                              "DIRECTDEBIT",
                              "DISCOVER",
                              "ECKARTE",
                              "ECOCHEQUE",
                              "EKENA",
                              "EMV",
                              "FINANCING",
                              "GOPAY",
                              "HAYAKAKEN",
                              "HEBAG",
                              "IBOD",
                              "ICCARDS",
                              "ICOCA",
                              "ID",
                              "IDEAL",
                              "INCA",
                              "INVOICE",
                              "JCB",
                              "JCoinPay",
                              "JKOPAY",
                              "KITACA",
                              "KLA",
                              "KLARNA",
                              "LINEPAY",
                              "MAESTRO",
                              "MANACA",
                              "MASTERCARD",
                              "MIPAY",
                              "MONIZZE",
                              "MPAY",
                              "Manuelle Lastsch",
                              "Merpay",
                              "NANACO",
                              "NEXI",
                              "NIMOCA",
                              "OREM",
                              "PASMO",
                              "PAYBACKPAY",
                              "PAYBOX",
                              "PAYCONIQ",
                              "PAYPAL",
                              "PAYPAY",
                              "PAYSEC",
                              "PIN",
                              "POSTEPAY",
                              "QRCODE",
                              "QUICPAY",
                              "RAKUTENEDY",
                              "RAKUTENPAY",
                              "SAMSUNGPAY",
                              "SODEXO",
                              "SUGOCA",
                              "SUICA",
                              "SWISH",
                              "TICKETRESTAURANT",
                              "TOICA",
                              "TRAVELERSCHECK",
                              "TSCUBIC",
                              "TWINT",
                              "UNIONPAY",
                              "VEV",
                              "VISA",
                              "VISAELECTRON",
                              "VOB",
                              "VOUCHER",
                              "VPAY",
                              "WAON",
                              "WECHATPAY",
                              "WIRETRANSFER",
                              "Yucho Pay",
                              "ZELLE",
                              "auPay",
                              "dBarai",
                              "Überweisung"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "performers": {
                          "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "petsAllowed": {
                          "enum": [
                            "PETS_WELCOME",
                            "PETS_WELCOME_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "photoGallery": {
                          "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "image"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                            "properties": {
                              "clickthroughUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "description": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "details": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "image": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "pickupHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                        },
                        "priceRange": {
                          "enum": [
                            "UNSPECIFIED",
                            "ONE",
                            "TWO",
                            "THREE",
                            "FOUR"
                          ],
                          "type": "string",
                          "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "primaryConversationContact": {
                          "minLength": 0,
                          "type": "string",
                          "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "privateBeach": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "privateCarService": {
                          "enum": [
                            "PRIVATE_CAR_SERVICE",
                            "PRIVATE_CAR_SERVICE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "productLists": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "products": {
                          "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "questionsAndAnswers": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingCompetitors": {
                          "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "name",
                              "website"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "website": {
                                "minLength": 0,
                                "maxLength": 255,
                                "format": "uri",
                                "type": "string",
                                "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "rankTrackingEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingFrequency": {
                          "enum": [
                            "WEEKLY",
                            "MONTHLY",
                            "QUARTERLY"
                          ],
                          "type": "string",
                          "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingQueryTemplates": {
                          "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "KEYWORD",
                              "KEYWORD_ZIP",
                              "KEYWORD_CITY",
                              "KEYWORD_IN_CITY",
                              "KEYWORD_NEAR_ME",
                              "KEYWORD_CITY_STATE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "rankTrackingSites": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "GOOGLE_DESKTOP",
                              "GOOGLE_MOBILE",
                              "BING_DESKTOP",
                              "BING_MOBILE",
                              "YAHOO_DESKTOP",
                              "YAHOO_MOBILE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reservationUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to make reservations at this entity\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "restaurantCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "reviewGenerationUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reviewResponseConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "roomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "roomService": {
                          "enum": [
                            "ROOM_SERVICE_AVAILABLE",
                            "ROOM_SERVICE_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "routableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "salon": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "sauna": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "scuba": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "selfParking": {
                          "enum": [
                            "SELF_PARKING_AVAILABLE",
                            "SELF_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "seniorHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "serviceArea": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "places": {
                              "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            }
                          },
                          "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "serviceAreaPlaces": {
                          "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "POSTAL_CODE",
                                  "REGION",
                                  "COUNTY",
                                  "CITY",
                                  "SUBLOCALITY"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "services": {
                          "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "smokeFreeProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "snorkeling": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "socialHour": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "spa": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "specialities": {
                          "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "tableService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "takeoutHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "tennis": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "thermalPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ticketAvailability": {
                          "enum": [
                            "IN_STOCK",
                            "SOLD_OUT",
                            "PRE_ORDER",
                            "UNSPECIFIED"
                          ],
                          "type": "string",
                          "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketPriceRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                            },
                            "maxValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                            },
                            "minValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                            }
                          },
                          "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketSaleDateTime": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "time": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "date-time",
                              "type": "string",
                              "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            },
                            "start": {
                              "format": "date-time",
                              "type": "string",
                              "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            }
                          },
                          "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "timeZoneUtcOffset": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "timezone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "tollFreePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "treadmill": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ttyPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "turndownService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "twitterHandle": {
                          "minLength": 0,
                          "maxLength": 15,
                          "type": "string",
                          "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberLink": {
                          "required": [
                            "presentation"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "presentation": {
                              "enum": [
                                "BUTTON",
                                "LINK"
                              ],
                              "type": "string",
                              "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 100,
                              "type": "string",
                              "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberTripBranding": {
                          "required": [
                            "text",
                            "url",
                            "description"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 150,
                              "type": "string",
                              "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 28,
                              "type": "string",
                              "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "valetParking": {
                          "enum": [
                            "VALET_PARKING_AVAILABLE",
                            "VALET_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "validThrough": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "vendingMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "venueName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "videos": {
                          "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "video"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "description": {
                                "minLength": 0,
                                "maxLength": 140,
                                "type": "string",
                                "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "video": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "wadingPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wakeUpCalls": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "walkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "waterPark": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterSkiing": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "watercraft": {
                          "enum": [
                            "WATERCRAFT_RENTALS",
                            "WATERCRAFT_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterslide": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wavePool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "websiteUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL for this entity's website\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "weightMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wheelchairAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wifiAvailable": {
                          "enum": [
                            "WIFI_AVAILABLE",
                            "WIFI_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "workRemote": {
                          "type": "boolean",
                          "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "yearEstablished": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yearLastRenovated": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "yextDisplayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "yextDropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextPickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextRoutableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextWalkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "KnowledgeApiServer.deleteLanguageProfile",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The external ID of the requested Entity",
            "name": "entityId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The language code corresponding to the language of the profile that the user wishes to delete",
            "name": "languageCode",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Entity Language Profiles: Delete",
        "description": "Delete a language profile",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      }
    },
    "/healthy": {
      "get": {
        "operationId": "healthCheck",
        "tags": [
          "Health Check"
        ],
        "summary": "Health Check",
        "description": "The Health Check endpoint allows you to monitor the status of Yext's systems.\n\nA response with a status code other than 200 OK indicates that our systems are not operational.\n\nThe body of the response may contain information about the status. However, no part of your Yext integration should depend on the content of the response.\n\n**NOTE:** This call does not require authentication.\n",
        "responses": {
          "200": {
            "description": "Health Check Response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/locations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/resolvePlaceholders"
          },
          {
            "$ref": "#/components/parameters/pageToken"
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Locations (Legacy): List",
        "description": "Get multiple Locations (primary profiles only).",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LocationsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createLocation",
        "tags": [
          "Knowledge Manager"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/locationRequest"
        },
        "summary": "Locations (Legacy): Create",
        "description": "Create a new Location.\n\n ## Required fields\n* **`locationName`**\n* **`address`**\n* **`city`**\n* **`state`**\n* **`zip`**\n\n ## Optional fields that trigger warnings\nSubmitting invalid values for certain optional fields will not trigger an error response. Instead, the success response will contain warning messages explaining why the invalid optional values were not stored in the system. The fields that generate warning messages are:\n<br><br>\n* **`logo`**\n* **`photos`**\n* **`twitterHandle`**\n* **`facebookPageUrl`**\n* **`languages`**\n",
        "responses": {
          "201": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/locationsearch": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "searchLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/searchoffset"
          },
          {
            "$ref": "#/components/parameters/filters"
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Locations (Legacy): Search",
        "description": "Get multiple Locations (primary profiles only) that match provided filters.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LocationsSearchResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/locations/{locationId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/locationId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/resolvePlaceholders"
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Locations (Legacy): Get",
        "description": "Gets the primary profile for a single Location.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LocationResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "requestBody": {
          "$ref": "#/components/requestBodies/locationRequest"
        },
        "operationId": "updateLocation",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Locations (Legacy): Update",
        "description": "Updates the primary profile for a Location.\n\n**NOTE:** Despite using the PUT method, Locations: Update only updates supplied fields. Omitted fields are not modified.\n\n**NOTE:** The Location's primary profile language can be changed by calling this endpoint with a different, but unused, language code.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/folders": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/offset"
        },
        {
          "name": "limit",
          "in": "query",
          "schema": {
            "type": "integer",
            "default": 100,
            "maximum": 1000
          },
          "description": "Number of results to return."
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getLocationFolders",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Folders: List",
        "description": "Returns a list of Location Folders in an Account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/FoldersResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/menus": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getMenus",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Menus: List",
        "description": "Retrieve all Menus for an account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/MenusResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createMenu",
        "tags": [
          "Knowledge Manager"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/menuRequest"
        },
        "summary": "Menus: Create",
        "responses": {
          "201": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/menus/{listId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/listId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getMenu",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Menus: Get",
        "description": "Retrieve a specific Menu.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/MenuResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "requestBody": {
          "$ref": "#/components/requestBodies/menuRequest"
        },
        "operationId": "updateMenu",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Menus: Update",
        "description": "Update an existing Menu.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/MenuResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteMenuList",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Menus: Delete",
        "description": "Delete an existing Menu.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/bios": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "operationId": "getBios",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Bios: List",
        "description": "Retrieve all Bio Lists for an account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/BiosResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createBio",
        "tags": [
          "Knowledge Manager"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/bioRequest"
        },
        "summary": "Bios: Create",
        "description": "Create new Bio List.",
        "responses": {
          "201": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/bios/{listId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/listId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getBio",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Bios: Get",
        "description": "Retrieve a specific Bios List.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/BioResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "requestBody": {
          "$ref": "#/components/requestBodies/bioRequest"
        },
        "operationId": "updateBio",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Bios: Update",
        "description": "Update an existing Bios List.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/BioResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteBioList",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Bios: Delete",
        "description": "Delete an existing Bios List.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/products": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "operationId": "getProducts",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Products: List",
        "description": "Retrieve all Product Lists for an account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createProduct",
        "tags": [
          "Knowledge Manager"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/productRequest"
        },
        "description": "Create a new Product List.",
        "summary": "Products: Create",
        "responses": {
          "201": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/products/{listId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/listId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getProduct",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Products: Get",
        "description": "Retrieve a specific Product List.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "requestBody": {
          "$ref": "#/components/requestBodies/productRequest"
        },
        "operationId": "updateProduct",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Products: Update",
        "description": "Update an existing Product List.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteProductList",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Products: Delete",
        "description": "Delete an existing Products List.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/events": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "operationId": "getEvents",
        "tags": [
          "Knowledge Manager"
        ],
        "description": "Retrieve all Event Lists for an account.",
        "summary": "Events (Legacy): List",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createEvent",
        "tags": [
          "Knowledge Manager"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/eventRequest"
        },
        "description": "Create a new Event List.",
        "summary": "Events (Legacy): Create",
        "responses": {
          "201": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/events/{listId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/listId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getEvent",
        "tags": [
          "Knowledge Manager"
        ],
        "description": "Retrieve a specific Event List.",
        "summary": "Events (Legacy): Get",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "requestBody": {
          "$ref": "#/components/requestBodies/eventRequest"
        },
        "operationId": "updateEvent",
        "tags": [
          "Knowledge Manager"
        ],
        "description": "Update an existing Event List.",
        "summary": "Events (Legacy): Update",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteEventList",
        "tags": [
          "Knowledge Manager"
        ],
        "description": "Delete an existing Event List.",
        "summary": "Events (Legacy): Delete",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/categories": {
      "parameters": [
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getBusinessCategories",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Only categories that apply to this language will be returned.\n\nValid values: ISO 639-1 language codes\n\n**Example:** en\n"
          },
          {
            "name": "country",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Only categories that apply in this country will be returned.\n\nValid values: ISO 3166-1 alpha-2 country codes\n\n**Example:** US\n"
          },
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "atm",
                "event",
                "healthcareFacility",
                "healthcareProfessional",
                "location",
                "restaurant"
              ]
            },
            "description": "Only categories that apply to the specified entity type will be returned.\n"
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Categories: List",
        "description": "Get available Categories.\n\nAll Locations are required to have an associated Category to assist with organization and search. Yext provides a hierarchy of business categories for this purpose, exposed by this API.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CategoriesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/googlefields": {
      "parameters": [
        {
          "$ref": "#/components/parameters/language"
        },
        {
          "$ref": "#/components/parameters/clientCategoryId"
        },
        {
          "$ref": "#/components/parameters/countryCode"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getGoogleKeywords",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Google Fields: List",
        "description": "\nUse the Google Fields endpoint to retrieve a complete list of Google's location attributes for each business category. This list includes attributes that may not apply to all Locations in an account. The set of attributes available to a Location depends on its primary business category. You can view and edit the attributes of Locations in the **`googleAttributes`** Location field.\n\n**NOTE:** Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GoogleFieldsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/customfields": {
      "parameters": [
        {
          "$ref": "#/components/parameters/v"
        },
        {
          "$ref": "#/components/parameters/accountId"
        }
      ],
      "get": {
        "operationId": "getCustomFields",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            },
            "description": "Number of results to return."
          },
          {
            "$ref": "#/components/parameters/entitiesPageToken"
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Custom Fields: List",
        "description": "Returns a list of Custom Fields in an Account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CustomFieldsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createCustomField",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Field"
              }
            }
          }
        },
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Custom Fields: Create",
        "description": "Creates a new Custom Field in an Account.\n",
        "responses": {
          "201": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/customfields/{customFieldId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/v"
        },
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "name": "customFieldId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "ID that should be used when referencing the field in API calls. This ID will also serve as the Custom Field's key in our upcoming Entities API endpoints.\nNote that the Custom Fields can still be accessed using their numeric **`id`** by invoking the endpoints with a **`v`** param before `20180809`. \n"
        }
      ],
      "get": {
        "operationId": "getCustomField",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Custom Fields: Get",
        "description": "Gets a specific Custom Field in an Account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CustomFieldResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldUpdate"
              }
            }
          }
        },
        "operationId": "updateCustomField",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Custom Fields: Update",
        "description": "Updates a single Custom Field in an Account.\n\nNote that the only updatable values in an existing Custom Field are its name, group, description, alternate language behavior, as well as available options if its `type` is `SINGLE_OPTION` or `MULTI_OPTION`. \n* If options are modified, every location with that option selected will have the new value. \n* If options are deleted, all locations with that option will no longer have that option selected. \n* If the deleted options are the only options selected for a location, the location will no longer have a value set for that Custom Field.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteCustomField",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Custom Fields: Delete",
        "description": "Deletes a Custom Field in an Account.\n\nThe Custom Field will be removed from all locations, and all content entered in the Custom Field will be deleted permanently.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/locations/{locationId}/profiles": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/locationId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resolvePlaceholders"
          }
        ],
        "operationId": "getLanguageProfiles",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Language Profiles (Legacy): List",
        "description": "Get Language Profiles for a Location.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LanguageProfilesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/locations/{locationId}/profiles/{language_code}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/locationId"
        },
        {
          "$ref": "#/components/parameters/language_code"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/resolvePlaceholders"
          }
        ],
        "operationId": "getLanguageProfile",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Language Profiles (Legacy): Get",
        "description": "Gets the the requested Language Profile for a given Location.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LanguageProfileResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "primary",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "When present and set to true, the specified profile will become the location’s primary Language Profile."
          }
        ],
        "operationId": "upsertLanguageProfile",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Language Profiles (Legacy): Upsert",
        "description": "Creates and / or sets the fields for a Language Profile\n\n**NOTE:** You can change a Language Profile’s language by supplying a different (but unused) language code.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "201": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteLanguageProfile",
        "tags": [
          "Knowledge Manager"
        ],
        "description": "Remove a Language Profile from a location.",
        "summary": "Language Profiles (Legacy): Delete",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/publishers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listPublishers",
        "parameters": [
          {
            "name": "subset",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "RELEVANT_ONLY"
            },
            "description": "One of the following:\n- ALL - return all publishers\n- RELEVANT_ONLY - only return publishers based on available subscriptions and supported countries\n"
          },
          {
            "name": "entityType",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LOCATION",
                  "HEALTHCARE_PROFESSIONAL",
                  "HEALTHCARE_FACILITY",
                  "RESTAURANT",
                  "ATM",
                  "EVENT"
                ]
              }
            },
            "description": "When specified, only publishers that support the specified entity types will be returned\n\n**Example:** `LOCATION,EVENT`\n"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Publishers: List",
        "description": "Retrieve a list of publishers included in an account's subscription\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListPublishersResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/listings": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listListings",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 100
            },
            "description": "Number of results to return"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/listingsLocationIds"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherIds"
          },
          {
            "name": "statuses",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "WAITING_ON_YEXT",
                  "WAITING_ON_CUSTOMER",
                  "WAITING_ON_PUBLISHER",
                  "LIVE",
                  "UNAVAILABLE",
                  "OPTED_OUT"
                ]
              }
            },
            "description": "When specified, only Listings with the provided statuses will be returned\n\n**Example:** `WAITING_ON_YEXT,WAITING_ON_CUSTOMER`\n"
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "en"
            },
            "description": "One of the language codes that we support:\n- cs - Czech\n- da - Danish\n- nl - Dutch\n- en - English\n- en_GB - English (UK)\n- fi - Finnish\n- fr - French (France)\n- de - German (Germany)\n- hu - Hungarian\n- it - Italian\n- ja - Japanese\n- no - Norwegian\n- pt - Portuguese (Portugal)\n- sk - Slovak\n- es - Spanish (Spain)\n- sv - Swedish\n- tr - Turkish\n- zh_Hans - Chinese (Simplified)\n- zh_Hant - Chinese (Traditional)\n"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Listings: List",
        "description": "Retrieve all Listings matching the given criteria including status and reasons why a Listing may be unavailable\n\nThe results will first be sorted by publisher and then by Location.\n\n**Support for `all` macro:** If you would like to use this endpoint to take action on your account and all of its sub-accounts, you can use the `all` macro in place of your account ID in your request URLs. For more information, see the \"Account ID\" section of \"Policies and Conventions\" at the top of this page.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListListingsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/listings/optin": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "put": {
        "operationId": "optInListings",
        "parameters": [
          {
            "$ref": "#/components/parameters/listingsLocationIds"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherIds"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Listings: Opt In",
        "description": "Opts designated locations into designated publishers\n\n**NOTE:** The number of Location IDs multiplied by the number of Publisher IDs is capped at 100. If you exceed this, you will receive a 400 error response.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/listings/optout": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "put": {
        "operationId": "optOutListings",
        "parameters": [
          {
            "$ref": "#/components/parameters/listingsLocationIds"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherIds"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Listings: Opt Out",
        "description": "Opts designated locations out of designated publishers\n\n**NOTE:** The number of Location IDs multiplied by the number of Publisher IDs is capped at 100. If you exceed this, you will receive a 400 error response.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/publishersuggestions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listPublisherSuggestions",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 50
            },
            "description": "Number of results to return"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/listingsLocationIds"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherIds"
          },
          {
            "name": "statuses",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "WAITING_ON_CUSTOMER",
                  "ACCEPTED",
                  "REJECTED",
                  "EXPIRED"
                ]
              }
            },
            "description": "When specified, only Publisher Suggestions with the provided statuses will be returned\n\n**Example:** WAITING_ON_CUSTOMER,EXPIRED\n",
            "style": "simple"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Publisher Suggestions: List",
        "description": "Retrieve suggestions publishers have submitted for the Locations in an account",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListPublisherSuggestionsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/publishersuggestions/{suggestionId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        },
        {
          "name": "suggestionId",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "operationId": "getPublisherSuggestion",
        "tags": [
          "Listings"
        ],
        "summary": "Publisher Suggestions: Get",
        "description": "Fetches details of a specific Publisher Suggestion",
        "responses": {
          "200": {
            "$ref": "#/components/responses/PublisherSuggestionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "operationId": "updatePublisherSuggestion",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ACCEPTED",
                "REJECTED"
              ]
            },
            "required": true,
            "description": "The status of the Publisher Suggestion"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Publisher Suggestions: Update",
        "description": "Accept or reject a Publisher Suggestion.\n\n**NOTE:** When sending requests to this endpoint, you must provide your Yext user ID in the **`Yext-User-Id`** header.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/duplicates": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listDuplicates",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 50
            },
            "description": "Number of results to return"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/listingsLocationIds"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherIds"
          },
          {
            "name": "statuses",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "POSSIBLE_DUPLICATE",
                  "SUPPRESSION_REQUESTED",
                  "SUPPRESSED",
                  "UNAVAILABLE"
                ]
              }
            },
            "description": "When specified, only Duplicates with the provided statuses will be returned\n\n**Example:** POSSIBLE_DUPLICATE,SUPPRESSION_REQUESTED\n",
            "style": "simple"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Duplicates: List",
        "description": "Retrieve Duplicates for an account\n\nIf the **`v`** parameter is `20180802` or later: only duplicates of live listings (**`status`**: `LIVE`) will be included\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListDuplicatesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createDuplicate",
        "parameters": [
          {
            "$ref": "#/components/parameters/listingsLocationId"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherIdQuery"
          },
          {
            "name": "url",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "URL of the Duplicate listing"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Duplicates: Create",
        "description": "Creates a new Duplicate with **`status`** `SUPPRESSION_REQUESTED`.\n\n**NOTE:** When sending requests to this endpoint, you must provide your Yext user ID in the **`Yext-User-Id`** header.\n",
        "responses": {
          "201": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/duplicates/{duplicateId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        },
        {
          "name": "duplicateId",
          "in": "path",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "delete": {
        "operationId": "deleteDuplicate",
        "tags": [
          "Listings"
        ],
        "summary": "Duplicates: Delete",
        "description": "Indicates that a Duplicate should be ignored.\n\n**NOTE:** When sending requests to this endpoint, you must provide your Yext user ID in the **`Yext-User-Id`** header.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "operationId": "suppressDuplicate",
        "tags": [
          "Listings"
        ],
        "summary": "Duplicates: Suppress",
        "description": "Request suppression of a Duplicate.\n\n**NOTE:** When sending requests to this endpoint, you must provide your Yext user ID in the **`Yext-User-Id`** header.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/verifications/{publisherId}/{locale}/methods": {
      "get": {
        "operationId": "listMethods",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherId"
          },
          {
            "$ref": "#/components/parameters/locale"
          },
          {
            "$ref": "#/components/parameters/listingsVerficationEntityIds"
          },
          {
            "$ref": "#/components/parameters/pageToken"
          },
          {
            "$ref": "#/components/parameters/verificationLimit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Verification Methods: List",
        "description": "Retrieve verification methods for entities in an account\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListMethodsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/verifications/{publisherId}/statuses": {
      "get": {
        "operationId": "listStatuses",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherId"
          },
          {
            "$ref": "#/components/parameters/listingsVerficationEntityIds"
          },
          {
            "$ref": "#/components/parameters/pageToken"
          },
          {
            "$ref": "#/components/parameters/verificationLimit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Verification Statuses: List",
        "description": "Retrieve verification statuses for entities in an account\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListStatusesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/verifications/{publisherId}/{locale}/initiate": {
      "post": {
        "operationId": "InitiateVerification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VerificationInitiation"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherId"
          },
          {
            "$ref": "#/components/parameters/locale"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Verification: Initiate",
        "description": "Initiate verification for entities in an account.\nThis request will trigger verification codes being sent to the specified addresses,\nphone numbers, or email addresses.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/InitiateVerificationResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/verifications/{publisherId}/complete": {
      "post": {
        "operationId": "CompleteVerification",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/VerificationCompletion"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherId"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Verification: Complete",
        "description": "Provides verification codes to complete the verification for entities in an account.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CompleteVerificationResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/admins/{publisherId}": {
      "get": {
        "operationId": "listAdmins",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherId"
          },
          {
            "$ref": "#/components/parameters/listingsVerficationEntityIds"
          },
          {
            "$ref": "#/components/parameters/pageToken"
          },
          {
            "$ref": "#/components/parameters/verificationLimit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Listing Admins: List",
        "description": "Retrieve listing admins for entities in an account.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListAdminsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/admins/{publisherId}/invite": {
      "post": {
        "operationId": "InviteAdmins",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AdminInvite"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/listingsPublisherId"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Listing Admin: Invite",
        "description": "Sends invitations to new listing admins for entities in an account.\nFor Google My Business listings, the admins will be given owner-level access.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/InviteAdminsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/entitylistings": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listEntityListings",
        "parameters": [
          {
            "$ref": "#/components/parameters/listingsEntityIds"
          },
          {
            "$ref": "#/components/parameters/listingsEventPublisherIds"
          },
          {
            "name": "statuses",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "NOT_SYNCED",
                  "SYNC_IN_PROGRESS",
                  "LIVE",
                  "UPDATE_IN_PROGRESS",
                  "CANCELING_SYNC",
                  "NOT_APPLICABLE",
                  "DELETE_PENDING",
                  "DELETE_FAILED",
                  "DELETED",
                  "SYNC_STOPPED"
                ]
              }
            },
            "description": "Defaults to all Listings whose **`status`** is not `DELETED` or `SYNC_STOPPED`.\n\nWhen specified, only Listings with the provided statuses will be returned.\n"
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "en"
            },
            "description": "One of the following language codes:\n- `cs` - Czech\n- `da` - Danish\n- `nl` - Dutch\n- `en` - English\n- `en_GB` - English (UK)\n- `fi` - Finnish\n- `fr` - French (France)\n- `de` - German (Germany)\n- `hu` - Hungarian\n- `it` - Italian\n- `ja` - Japanese\n- `no` - Norwegian\n- `pt` - Portuguese (Portugal)\n- `sk` - Slovak\n- `es` - Spanish (Spain)\n- `sv` - Swedish\n- `tr` - Turkish\n- `zh_Hans` - Chinese (Simplified)\n- `zh_Hant` - Chinese (Traditional)\n"
          },
          {
            "$ref": "#/components/parameters/pageToken"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 100
            },
            "description": "Number of results to return"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Entity Listings: List",
        "description": "Retrieve all Entity Listings matching the given criteria. Includes the status of each Listing and reasons why a Listing may not be live. This endpoint currently only supports Event Listings.\n\nThe results will first be sorted by publisher and then by Entity.\n\n**Support for `all` macro:** If you would like to use this endpoint to take action on your account and all of its sub-accounts, you can use the `all` macro in place of your account ID in your request URLs. For more information, see the \"Account ID\" section of \"Policies and Conventions\" at the top of this page.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListEntityListingsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/listings/delete": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "delete": {
        "operationId": "deleteListings",
        "parameters": [
          {
            "$ref": "#/components/parameters/listingsEntityIds"
          },
          {
            "$ref": "#/components/parameters/listingsEventPublisherIds"
          }
        ],
        "tags": [
          "Listings"
        ],
        "summary": "Entity Listings: Delete",
        "description": "Deletes event listings from publishers. If deletion is not supported by the publisher, then service is removed instead.\n\n**NOTE:** You can delete a maximum of 100 listings in a single request. If the number of Entity IDs multiplied by the number of Publisher IDs in your request exceeds 100, you will receive a 400 error response.\n\n**Support for `all` macro:** If you would like to use this endpoint to take action on your account and all of its sub-accounts, you can use the `all` macro in place of your account ID in your request URLs. For more information, see the \"Account ID\" section of \"Policies and Conventions\" at the top of this page.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/questions": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        }
      ],
      "get": {
        "operationId": "listQuestions",
        "tags": [
          "Listings"
        ],
        "summary": "Questions: List\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/QuestionAnswerFilter"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/pageToken"
          }
        ],
        "description": "Retrieve a list of Questions within an account.",
        "responses": {
          "201": {
            "$ref": "#/components/responses/ListQuestionsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/questions/{questionId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/questionId"
        }
      ],
      "get": {
        "operationId": "getQuestion",
        "summary": "Question: Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/questionId"
          }
        ],
        "tags": [
          "Listings"
        ],
        "description": "Retrieve information for a Question",
        "responses": {
          "201": {
            "$ref": "#/components/responses/QuestionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/questions/{questionId}/answers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/questionId"
        }
      ],
      "post": {
        "operationId": "createAnswer",
        "tags": [
          "Listings"
        ],
        "summary": "Answer: Create",
        "requestBody": {
          "$ref": "#/components/requestBodies/createAnswerRequest"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/questionId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "description": "Creates a new Answer on a Question.",
        "responses": {
          "201": {
            "$ref": "#/components/responses/CreateAnswerResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/questions/{questionId}/answers/{answerId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/questionId"
        },
        {
          "$ref": "#/components/parameters/answerId"
        }
      ],
      "put": {
        "operationId": "updateAnswer",
        "tags": [
          "Listings"
        ],
        "summary": "Answer: Update",
        "requestBody": {
          "$ref": "#/components/requestBodies/updateAnswerRequest"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/questionId"
          },
          {
            "$ref": "#/components/parameters/answerId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "description": "Updates an Answer for a Question",
        "responses": {
          "201": {
            "$ref": "#/components/responses/UpdateAnswerResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteAnswer",
        "tags": [
          "Listings"
        ],
        "summary": "Answer: Delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/questionId"
          },
          {
            "$ref": "#/components/parameters/answerId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "description": "Deletes an Answer for a Question",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/analytics/activity": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "activityLog",
        "tags": [
          "Analytics"
        ],
        "summary": "Activity Log",
        "description": "Fetches account activity information.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityLogRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/ActivityLogResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/analytics/catalog": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getCatalog",
        "tags": [
          "Analytics"
        ],
        "summary": "Catalog",
        "description": "List of all metrics for which reporting data is available, along with their completed dates.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/CatalogResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/analytics/maxdates": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getMaxDates",
        "tags": [
          "Analytics"
        ],
        "summary": "Max Dates",
        "description": "Fetch the completed date for Listings and Bing metrics. Fetching the completed date for individual metrics can be done using the catalog endpoint.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/MaxDatesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/analytics/reports": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        },
        {
          "name": "async",
          "in": "query",
          "schema": {
            "type": "boolean"
          },
          "description": "Defaults to false.  When true, the report’s ID will be returned immediately and the report results can be fetched later.  When false, the report results will be returned immediately, but an error may occur if the data requested is too large."
        },
        {
          "name": "callback",
          "in": "query",
          "schema": {
            "type": "string"
          },
          "description": "Optional.  When async=true and callback is specified, the provided URL will be called when the report is ready.\nThe URL must be of the form:\n\n    POST https://[your domain]/[your path]\n\nIt must accept the following parameters:\n\n    id:         (string)  - The ID of the report request which completed.\n\n    status:     (string)  - One of [DONE, FAILED] indicating the result of the request.\n\n    statusCode: (int)     - An HTTP status code indicating the result of the request.\n\n    message:    (string)  - When status=FAILED, contains an error message.\n\n    url:        (string)  - When status=DONE, contains the URL to download the report data as a text file.\n"
        }
      ],
      "post": {
        "operationId": "createReports",
        "tags": [
          "Analytics"
        ],
        "summary": "Reports",
        "description": "Create a report to retrieve analytics for each of your products using synchronous or asynchronous requests depending on the size of your data.",
        "requestBody": {
          "description": "JSON object containing any filters to be applied to the report",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReportRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/CreateReportsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/analytics/standardreports/{reportId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        },
        {
          "name": "reportId",
          "in": "path",
          "schema": {
            "type": "integer"
          },
          "required": true
        }
      ],
      "get": {
        "operationId": "reportStatus",
        "tags": [
          "Analytics"
        ],
        "summary": "Report Status",
        "description": "Checks the status of a Report created with async=true.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReportStatusResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/reviews": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        }
      ],
      "get": {
        "operationId": "listReviews",
        "summary": "Reviews: List",
        "tags": [
          "Reviews"
        ],
        "description": "Retrieve all Reviews matching the given criteria.\n\n**NOTE:** Not all publishers' reviews will be included in the response. For more details, please contact your Account Manager.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 100
            },
            "description": "Number of results to return."
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "name": "locationIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "When provided, only reviews for the requested locations will be returned.\n\nBy default, reviews will be returned for all locations subscribed to Review Monitoring.\n\n**Example:** loc123,loc456,loc789\n",
            "style": "simple"
          },
          {
            "$ref": "#/components/parameters/reviewExternalId"
          },
          {
            "name": "folderId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "When provided, only reviews for locations in the given folder and its subfolders will be included in the results."
          },
          {
            "name": "countries",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "When present, only reviews for locations in the given countries will be returned. Countries are denoted by ISO 3166 2-letter country codes."
          },
          {
            "name": "locationLabels",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "When present, only reviews for locations with the provided labels will be returned."
          },
          {
            "$ref": "#/components/parameters/listingsPublisherIds"
          },
          {
            "name": "reviewContent",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "When specified, only reviews that include the provided content will be returned."
          },
          {
            "name": "minRating",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "When specified, only reviews with the provided minimum rating or higher will be returned."
          },
          {
            "name": "maxRating",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            },
            "description": "When specified, only reviews with the provided maximum rating or lower will be returned."
          },
          {
            "name": "minPublisherDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DD` format) When specified, only reviews with a publisher date on or after the given date will be returned.\n\nIf the **`v`** parameter is before `20170617`: returns reviews with a publisher date on or after the given date in **EST**\n\nIf the **`v`** parameter is `20170617` or later: returns reviews with a publisher date on or after the given date in **UTC**\n"
          },
          {
            "name": "maxPublisherDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DD` format) When specified, only reviews with a publisher date on or before the given date will be returned.\n\nIf the **`v`** parameter is before `20170617`: returns reviews with a publisher date on or before the given date in **EST**\n\nIf the **`v`** parameter is `20170617` or later: returns reviews with a publisher date on or before the given date in **UTC**\n"
          },
          {
            "name": "minLastYextUpdateDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DD` format) When specified, only reviews with a last Yext update date on or after the given date will be returned.\n\nIf the **`v`** parameter is before `20170617`: returns revies with a last Yext update date on or after the given date in **EST**\n\nIf the **`v`** parameter is `20170617` or later: returns revies with a last Yext update date on or after the given date in **UTC**\n"
          },
          {
            "name": "maxLastYextUpdateDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "(`YYYY-MM-DD` format) When specified, only reviews with a last Yext update date on or before the given date will be returned.\n\nIf the **`v`** parameter is before `20170617`: returns reviews with a last Yext update date on or before the given date in **EST**\n\nIf the **`v`** parameter is `20170617` or later: returns reviews with a last Yext update date on or before the given date in **UTC**\n"
          },
          {
            "name": "awaitingResponse",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "REVIEW",
                "COMMENT",
                "REVIEW_OR_COMMENT"
              ]
            },
            "description": "When specified, only reviews that are awaiting an owner reply on the given objects will be returned.\n\nFor example, when `awaitingResponse=COMMENT`, reviews will only be returned if they have at least one comment that has not been responded to by the owner.\n"
          },
          {
            "name": "minNonOwnerComments",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "When specified, only reviews that have at least the provided number of non-owner comments will be returned."
          },
          {
            "name": "reviewerName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "When specified, only reviews whose authorName contains the provided string will be returned."
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "LIVE",
                "QUARANTINED",
                "REMOVED"
              ]
            },
            "description": "When specified, only reviews with the given **`status`** values will be returned.\n\nThe **`status`** parameter will only be respected with the inclusion of a **`v`** parameter of `20170830` or later.\n"
          },
          {
            "name": "pageToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "If a response to a previous request contained the **`nextPageToken`** field, pass that field's value as the **`pageToken`** parameter to retrieve the next page of data.\n\nThe **`pageToken`** parameter will only be respected with the inclusion of a **`v`** parameter of `20170901` or later.\n"
          },
          {
            "name": "reviewLanguage",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "When provided, only reviews in the given languages will be included in the results.\n\nLanguages must be specified by their ISO 639-1 codes. If specifying multiple languages, enter the language codes as a comma-separated list.\n\n**Example:** 'en,fr,zh'\n"
          },
          {
            "name": "labelIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "When present, only reviews with the provided review label IDs will be returned."
          },
          {
            "name": "reviewType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "Rating",
                "Recommendation"
              ]
            },
            "description": "When specified, only reviews that are of the given **`reviewType`** will be returned. Only applicable to Facebook reviews.\n\nThe **`reviewType`** parameter will only be respected with the inclusion of a **`v`** parameter of `20181002` or later.\n"
          },
          {
            "name": "recommendation",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "Recommended",
                "Not Recommended"
              ]
            },
            "description": "When specified, only reviews with the given **`recommendation`** value will be returned. Only applicable to Facebook reviews.\n\nThe **`recommendation`** parameter will only be respected with the inclusion of a **`v`** parameter of `20181002` or later.\n"
          },
          {
            "name": "flagStatus",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "FLAGGED",
                "NOT_FLAGGED"
              ]
            },
            "description": "When specified, only reviews with the given **`flagStatus`** value will be returned.\n\n**`flagStatus`** indicates whether the review has been flagged for inappropriate or\nirrelevant content. For review publishing, Yext recommends filtering to reviews with\n`flagStatus = NOT_FLAGGED`, as flagged reviews are being examined for inappropriate or\nirrelevant content. Note that only First Party and External First Party reviews can be\nflagged.\n"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReviewsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createReview",
        "tags": [
          "Reviews"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReview"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "summary": "Reviews: Create",
        "description": "Create a new External First Party Review.\n",
        "responses": {
          "201": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/reviews/{reviewId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/reviewId"
        }
      ],
      "get": {
        "operationId": "getReview",
        "summary": "Review: Get",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/reviewId"
          }
        ],
        "tags": [
          "Reviews"
        ],
        "description": "Retrieve a specific Review.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReviewResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReview"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/reviewId"
          }
        ],
        "operationId": "updateReview",
        "tags": [
          "Reviews"
        ],
        "summary": "Review: Update",
        "description": "Updates an External First Party Review or a First Party Review.\n<br><br>\n**NOTE:** Despite using the `PUT` method, Reviews: Update only updates supplied fields. Omitted fields are not modified.\n<br><br>\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/reviews/{reviewId}/comments": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/reviewId"
        }
      ],
      "post": {
        "operationId": "createComment",
        "summary": "Comment: Create",
        "tags": [
          "Reviews"
        ],
        "description": "Creates a new Comment on a Review.\n<br><br>\n ## Required fields\n* **`content`**\n<br><br>\n ## Optional fields\n* **`parentId`**\n* **`visibility`**\n<br><br>\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/commentRequest"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/reviewId"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/CreateReviewCommentResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/reviews/{reviewId}/comments/{commentId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/reviewId"
        },
        {
          "$ref": "#/components/parameters/commentId"
        }
      ],
      "put": {
        "operationId": "updateComment",
        "summary": "Comment: Update",
        "tags": [
          "Reviews"
        ],
        "description": "Updates a Comment on a Review.\n<br><br>\n ## Optional fields\n* **`content`**\n* **`visibility`**\n<br><br>\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/commentUpdateRequest"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/reviewId"
          },
          {
            "$ref": "#/components/parameters/commentId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteComment",
        "summary": "Comment: Delete",
        "tags": [
          "Reviews"
        ],
        "description": "Deletes a Comment on a Review.\n<br><br>\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/reviewId"
          },
          {
            "$ref": "#/components/parameters/commentId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/reviewinvites": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        }
      ],
      "get": {
        "operationId": "listReviewInvitations",
        "summary": "Review Invitations: List",
        "tags": [
          "Reviews"
        ],
        "description": "Retrieves all review invitations for an account",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 100
            },
            "description": "Number of results to return"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "name": "locationIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "When provided, only invitations for the requested locations will be returned.\n\n**Example:** loc123,loc456,loc789\n",
            "style": "simple"
          },
          {
            "name": "folderIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "When provided, only invitations for locations in the given folders and their subfolders\nwill be included in the results.\n"
          },
          {
            "name": "locationLabels",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "When present, only invitations for locations with the provided labels will be returned.\n"
          },
          {
            "name": "templateIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "When provided, only invitations using the provided templateIds will be returned."
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "ACCEPTED",
                "REJECTED",
                "PENDING"
              ]
            },
            "description": "When provided, only invitations of the chosen status will be returned."
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "EMAIL",
                "SMS"
              ]
            },
            "description": "When provided, only invitations of the selected type will be returned."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReviewInvitationsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createReviewInvites",
        "tags": [
          "Reviews"
        ],
        "summary": "Review Invitations: Create",
        "description": "Sends review invitations to one or more consumers.\n<br><br>\n ## Optional fields\n* **`templateId`**\n* **`transactionId`**\n<br><br>\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateReviewInvitationRequest"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/CreateReviewInvitationsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/reviewinvites/{invitationUid}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/invitationId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getReviewInvitation",
        "summary": "Review Invitation: Get",
        "tags": [
          "Reviews"
        ],
        "description": "Retrieve a specific review invitation.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReviewInvitationResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "requestBody": {
          "$ref": "#/components/requestBodies/updateReviewInvitationRequest"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/invitationId"
          }
        ],
        "operationId": "updateReviewInvitation",
        "summary": "Review Invitation: Update",
        "tags": [
          "Reviews"
        ],
        "description": "Supports updating an existing review invitation. This endpoint will not create a new review\ninvitation or trigger a new SMS/Email to be sent, it will only update the data and/or metadata\nfor an existing review invitation. Any optional parameters which are excluded from the request\nwill simply be ignored.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateReviewInvitationResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteInvitation",
        "summary": "Review Invitation: Delete",
        "tags": [
          "Reviews"
        ],
        "description": "Delete a specific review invitation.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/reviews/{reviewId}/labels": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/reviewId"
        }
      ],
      "put": {
        "operationId": "updateReviewLabels",
        "summary": "Review Labels: Update",
        "tags": [
          "Reviews"
        ],
        "description": "Adds the specified review labels to the specified review.",
        "requestBody": {
          "$ref": "#/components/requestBodies/updateReviewLabelsRequest"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/reviewId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateReviewLabelsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/reviews/settings/generation": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getReviewGenerationSettings",
        "tags": [
          "Reviews"
        ],
        "summary": "Review Generation Settings: Get",
        "description": "Returns all current generation settings for a specified account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReviewGenerationSettingsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "updateReviewGenerationSettings",
        "tags": [
          "Reviews"
        ],
        "summary": "Review Generation Settings: Update",
        "description": "Updates any generation settings specified in a specified account.\nCall may include any/all settings available to the account.\nSettings not included will remain unchanged.\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/reviewGenerationSettingsRequest"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UpdateReviewGenerationSettingsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/roles": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getRoles",
        "tags": [
          "Account Settings"
        ],
        "summary": "Roles: Get",
        "description": "Retrieves a list of the roles that users can have within a customer’s account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/RolesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/users": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getUsers",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "tags": [
          "Account Settings"
        ],
        "summary": "Users: List",
        "description": "Lists all Users in an account.\n\n**NOTE**:\n\nIf the **`v`** parameter is before `20190225`: **`displayLanguagePreference`** and **`emailLanguagePreference`** will not be included in the response.\n\nIf the **`v`** parameter is `20190225` or later: **`displayLanguagePreference`** and **`emailLanguagePreference`** will be included in the response.\n\nThis endpoint does not support the **`all`** macro.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/UsersResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createUser",
        "tags": [
          "Account Settings"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "summary": "Users: Create",
        "description": "Create a new User\n\n**NOTE**:\n\nIf the **`v`** parameter is before `20190225`: **`displayLanguagePreference`** and **`emailLanguagePreference`** will not be accepted in the request body.\n\nIf the **`v`** parameter is `20190225` or later: **`displayLanguagePreference`** and **`emailLanguagePreference`** will be accepted in the request body.\n",
        "responses": {
          "201": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/users/{userId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        },
        {
          "$ref": "#/components/parameters/userId"
        }
      ],
      "get": {
        "operationId": "getUser",
        "tags": [
          "Account Settings"
        ],
        "summary": "Users: Get",
        "description": "Retrieves details of a specific User.\n\n**NOTE**:\n\nIf the **`v`** parameter is before `20190225`: **`displayLanguagePreference`** and **`emailLanguagePreference`** will not be included in the response.\n\nIf the **`v`** parameter is `20190225` or later: **`displayLanguagePreference`** and **`emailLanguagePreference`** will be included in the response.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "operationId": "updateUser",
        "tags": [
          "Account Settings"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "summary": "Users: Update",
        "description": "Updates an existing User.\n\n**NOTE**:\n\nIf the **`v`** parameter is before `20190225`: **`displayLanguagePreference`** and **`emailLanguagePreference`** will not be accepted in the request body.\n\nIf the **`v`** parameter is `20190225` or later: **`displayLanguagePreference`** and **`emailLanguagePreference`** will be accepted in the request body. If not provided, existing values will be cleared.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteUser",
        "tags": [
          "Account Settings"
        ],
        "summary": "Users: Delete",
        "description": "Deletes an existing User.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/users/{userId}/password": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        },
        {
          "$ref": "#/components/parameters/userId"
        }
      ],
      "put": {
        "operationId": "updateUserPassword",
        "tags": [
          "Account Settings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordRequest"
              }
            }
          }
        },
        "summary": "Users: Update Password",
        "description": "Updates a User's password.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts": {
      "parameters": [
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listAccounts",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns only accounts whose name contains the provided string"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "default": 100
            }
          },
          {
            "$ref": "#/components/parameters/offset"
          }
        ],
        "tags": [
          "Account Settings"
        ],
        "summary": "Accounts: List",
        "description": "List all accounts that you have access to. Unless you are in Partner Portal mode, this will only be your own account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AccountsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getAccount",
        "tags": [
          "Account Settings"
        ],
        "summary": "Accounts: Get",
        "description": "Get details for an account",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AccountResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/approvalgroups": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getApprovalGroups",
        "tags": [
          "Account Settings"
        ],
        "summary": "ApprovalGroups: List",
        "description": "Lists all Approval Groups in the account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApprovalGroupsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createApprovalGroup",
        "tags": [
          "Account Settings"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApprovalGroupRequest"
              }
            }
          }
        },
        "summary": "Approval Groups: Create",
        "description": "Creates an Approval Group.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/approvalgroups/{approvalGroupId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        },
        {
          "$ref": "#/components/parameters/approvalGroupId"
        }
      ],
      "get": {
        "operationId": "getApprovalGroup",
        "tags": [
          "Account Settings"
        ],
        "summary": "ApprovalGroups: Get",
        "description": "Gets a single Approval Group.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ApprovalGroupResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "operationId": "updateApprovalGroup",
        "tags": [
          "Account Settings"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApprovalGroup"
              }
            }
          }
        },
        "summary": "ApprovalGroups: Update",
        "description": "Updates a single Approval Group.\n\n**NOTE:** Despite using the PUT method, Approval Groups: Update only updates supplied fields. Omitted fields are not modified. However, the users list will be overwritten with what the user provides.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteApprovalGroup",
        "tags": [
          "Account Settings"
        ],
        "summary": "ApprovalGroups: Delete",
        "description": "Deletes an Approval Group.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/linkedaccounts": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/linkedAccountsEntityIds"
        },
        {
          "$ref": "#/components/parameters/linkedAccountsPublisherIds"
        },
        {
          "$ref": "#/components/parameters/linkedAccountsStatuses"
        },
        {
          "$ref": "#/components/parameters/pageToken"
        },
        {
          "$ref": "#/components/parameters/limit"
        },
        {
          "$ref": "#/components/parameters/offset"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listLinkedAccounts",
        "tags": [
          "Account Settings"
        ],
        "summary": "LinkedAccounts: List",
        "description": "Lists all linked accounts in an account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LinkedAccountsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/linkedaccounts/{linkedAccountId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/linkedAccountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getLinkedAccount",
        "tags": [
          "Account Settings"
        ],
        "summary": "LinkedAccounts: Get",
        "description": "Get details for an linked account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LinkedAccountResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/linkedaccounts/{linkedAccountId}/assign": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/linkedAccountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "put": {
        "operationId": "assignLinkedAccount",
        "tags": [
          "Account Settings"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignLinkedAccountRequest"
              }
            }
          }
        },
        "summary": "LinkedAccounts: Assign",
        "description": "Copy an eligible Linked Account from the top-level parent account to a subaccount.\nOptionally assign the Linked Account to an entity in the subaccount.\n\nThis functionality is only available for certain Yext accounts. Please reach out to\nyour Yext representative for more information.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AssignLinkedAccountResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/optimizationtasks": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getOptimizationTasks",
        "parameters": [
          {
            "$ref": "#/components/parameters/taskIds"
          },
          {
            "$ref": "#/components/parameters/taskLocationIds"
          }
        ],
        "tags": [
          "Optimization Tasks"
        ],
        "summary": "Optimization Tasks: List",
        "description": "List Optimization Tasks for the account, optionally filtered by task and location.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/OptimizationTasksResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/optimizationlink": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getLinkOptimizationTask",
        "parameters": [
          {
            "$ref": "#/components/parameters/taskIds"
          },
          {
            "$ref": "#/components/parameters/taskLocationId"
          },
          {
            "$ref": "#/components/parameters/mode"
          }
        ],
        "tags": [
          "Optimization Tasks"
        ],
        "summary": "Optimization Tasks: Get Link",
        "description": "Retrieve a link to perform any pending Optimization Tasks given a set of Optimization Tasks and a location",
        "responses": {
          "200": {
            "$ref": "#/components/responses/OptimizationLinkResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/assets": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "listAssets",
        "tags": [
          "Knowledge Manager"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 1000
            },
            "description": "Number of results to return."
          },
          {
            "name": "pageToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "If a response to a previous request contained the **`pageToken`** field, pass that field's value as the **`pageToken`** parameter to retrieve the next page of data."
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if type of subfield is \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "required": true,
            "name": "format",
            "in": "query"
          }
        ],
        "summary": "Assets: List",
        "description": "List assets in an account.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AssetsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "post": {
        "operationId": "createAsset",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Assets: Create",
        "description": "Creates a new asset in an account.\n\n**NOTE:**\n* If the **`v`** parameter is on or before `20190624`: only the first folder the Asset is available for will be returned in the legacy **`folderId`** field.\n* If the **`v`** parameter is after `20190624`: the complete list of folders the Asset is available to will be returned in the new **`folderIds`** field. **`folderId`** will not be returned.\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/assetRequest"
        },
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "The formatting langauge used to parse rich text field values.\nPresent if and only if type of field is \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n",
            "required": true,
            "name": "format",
            "in": "query"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/assets/{assetId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/assetId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "get": {
        "operationId": "getAsset",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if type of subfield is \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "required": true,
            "name": "format",
            "in": "query"
          }
        ],
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Assets: Get",
        "description": "Get a specific asset.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/AssetResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "operationId": "updateAsset",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Assets: Update",
        "description": "Update a specific asset.\n\n**NOTE**: This endpoint is a true PUT. Fields that are not provided in an update will be cleared. The entire Asset object must be provided in the request, except for its **`id`**, which is given in the path.\n\n**NOTE:**\n* If the **`v`** parameter is on or before `20190624`: only the first folder the Asset is available for will be returned in the legacy **`folderId`** field.\n* If the **`v`** parameter is after `20190624`: the complete list of folders the Asset is available to will be returned in the new **`folderIds`** field. **`folderId`** will not be returned.\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/assetRequest"
        },
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "The formatting langauge used to parse rich text field values.\nPresent if and only if type of field is \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n",
            "required": true,
            "name": "format",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteAsset",
        "tags": [
          "Knowledge Manager"
        ],
        "summary": "Assets: Delete",
        "description": "Delete a specific asset.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/connectors": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "pushData",
        "requestBody": {
          "description": "The data to be processed by the connector.",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "connectorId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "ID of the connector."
          }
        ],
        "tags": [
          "Connectors"
        ],
        "summary": "Connectors: Push Data",
        "description": "Pushes data to be processed by a connector, then initiates a run for that connector.\n\n**NOTE**: If no connector is specified, all connectors with app-based source configurations will run.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/PushDataResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/connectors/{connectorId}/trigger": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/v"
        }
      ],
      "post": {
        "operationId": "triggerConnector",
        "parameters": [
          {
            "name": "connectorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the connector."
          },
          {
            "name": "runMode",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "DEFAULT",
              "enum": [
                "DEFAULT",
                "COMPREHENSIVE"
              ]
            },
            "description": "The run mode of the connector."
          }
        ],
        "tags": [
          "Connectors"
        ],
        "summary": "Connectors: Trigger",
        "description": "Triggers a run of the specified connector.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/IdResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "query"
      },
      "api-key": {
        "type": "apiKey",
        "name": "api-key",
        "in": "header"
      }
    },
    "schemas": {
      "EntityWrite": {
        "type": "object",
        "discriminator": {
          "propertyName": "EntityType"
        },
        "properties": {
          "EntityType": {
            "description": "**This is used only to filter the fields below and should NOT be included in any API calls.\nSpecify the entity type in the query parameter described above.**\n",
            "type": "string"
          }
        }
      },
      "ResponseMeta": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "example": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
            "description": "Unique ID for this request / response."
          }
        }
      },
      "ResponseError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Code that uniquely identifies the error or warning.\n"
          },
          "type": {
            "type": "string",
            "enum": [
              "FATAL_ERROR",
              "NON_FATAL_ERROR",
              "WARNING"
            ]
          },
          "message": {
            "type": "string",
            "description": "Message explaining the problem."
          }
        }
      },
      "ResponseMetaWithError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "description": "List of errors and warnings.",
                "items": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        ]
      },
      "NextPageToken": {
        "type": "string",
        "description": "This field is only included if there is an additional page of data to display. To retrieve the next page of data, pass this field's value as the **``pageToken``** parameter in a subsequent request. \n"
      },
      "LocationType": {
        "type": "string",
        "enum": [
          "LOCATION",
          "HEALTHCARE_PROFESSIONAL",
          "HEALTHCARE_FACILITY",
          "RESTAURANT",
          "ATM"
        ]
      },
      "Photo": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Valid URL to image. Accepted formats: .jpg, .gif, .png.\n\nWhile updating this field, if the image could not be downloaded, or if its URL is invalid, the image will be ignored. The success response will contain a warning message explaining why the image was not stored in the system.\n"
          },
          "sourceUrl": {
            "type": "string",
            "readOnly": true,
            "description": "The URL the image was uploaded from, if applicable. Note that this URL may not currently be valid.\n"
          },
          "description": {
            "type": "string",
            "description": "Image description."
          },
          "details": {
            "type": "string",
            "description": "Image details."
          },
          "alternateText": {
            "type": "string",
            "description": "The alternate text to be used for accessibility purposes."
          },
          "width": {
            "type": "integer",
            "readOnly": true,
            "description": "Original photo width."
          },
          "height": {
            "type": "integer",
            "readOnly": true,
            "description": "Original photo height."
          },
          "derivatives": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The URL to derivative image.\nDerivative images are alternate versions of the original image (e.g., smaller versions used to improve page-load times on your site). They are primarily used with our Pages product."
                },
                "width": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Derivative photo width."
                },
                "height": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Derivative photo height."
                }
              },
              "description": "If no derivative photos are available, this attribute is omitted rather than empty."
            }
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 50,
            "description": "Primary key. Unique alphanumeric (Latin-1) ID assigned by the Customer."
          },
          "uid": {
            "type": "string",
            "readOnly": true,
            "description": "A static globally unique id for the location. Note that this field cannot be used in place of the location id in API calls to get or update location information."
          },
          "accountId": {
            "type": "string",
            "maxLength": 50,
            "description": "Must refer to an **account.id** that already exists."
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "The timestamp of the most recent change to this location record.  Will be ignored when the client is saving location data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
          },
          "timezone": {
            "readOnly": true,
            "description": "The timezone of the location\n",
            "minLength": 0,
            "type": "string"
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationType"
          },
          "locationName": {
            "type": "string",
            "maxLength": 100,
            "description": "Cannot include:\n* inappropriate language\n* HTML markup or entities\n* a URL or domain name\n* a phone number\n* control characters ([\\x00-\\x1F\\x7F])\n\nShould be in appropriate letter case (e.g., not in all capital letters)\n"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "middleName": {
            "type": "string",
            "description": "The middle name of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "officeName": {
            "type": "string",
            "description": "The name of the office where the healthcare professional works, if different from **locationName**\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "gender": {
            "type": "string",
            "description": "The gender of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n",
            "enum": [
              "FEMALE",
              "F",
              "MALE",
              "M",
              "UNSPECIFIED"
            ]
          },
          "npi": {
            "type": "string",
            "description": "The National Provider Identifier (NPI) of the healthcare provider\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.\n"
          },
          "address": {
            "type": "string",
            "maxLength": 255,
            "description": "Must be a valid address\n\nCannot be a P.O. Box\n"
          },
          "address2": {
            "type": "string",
            "maxLength": 255,
            "description": "Cannot be a P.O. Box"
          },
          "suppressAddress": {
            "type": "boolean",
            "description": "If true, do not show street address on listings. Defaults to false."
          },
          "displayAddress": {
            "type": "string",
            "maxLength": 255,
            "description": "Provides additional information to help consumers get to the location. This string appears along with the location's address (e.g., In Menlo Mall, 3rd Floor).\n\nIt may also be used in conjunction with a hidden address (i.e., when **suppressAddress** is true) to give consumers information about where the location is found (e.g., Servicing the New York area).\n\nCannot be a P.O. Box\n"
          },
          "city": {
            "type": "string",
            "maxLength": 80
          },
          "state": {
            "type": "string",
            "maxLength": 80,
            "description": "For US locations, the two-character code of the location’s state, or DC for the District of Columbia\nFor non-US locations, the name of the location’s province / region / state\n"
          },
          "sublocality": {
            "type": "string",
            "maxLength": 255,
            "description": "The name of the location's sublocality."
          },
          "zip": {
            "type": "string",
            "maxLength": 10,
            "description": "The location's postal code. For US locations, this field contains the five- or nine-digit ZIP code (the hyphen is optional). Validations are only done on `zip` if `countryCode` is US."
          },
          "countryCode": {
            "type": "string",
            "maxLength": 2,
            "description": "The two-character ISO 3166-1 code of the location's country or region. If omitted, US is used."
          },
          "serviceArea": {
            "type": "object",
            "properties": {
              "radius": {
                "type": "number",
                "format": "double",
                "description": "The distance around the location that the business serves\n\n**NOTE:** This field is no longer supported by Google My Business and is deprecated. We no longer accept or store values for **`radius`**.\n"
              },
              "unit": {
                "type": "string",
                "description": "The unit in which radius is measured.\n\n**NOTE:** This field is no longer supported by Google My Business and is deprecated. We no longer accept or store values for **`units`**.\n"
              },
              "places": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of places served by the location, where each place is either:\n* a postal code, or\n* the name of a city.\n"
              }
            },
            "description": "Area that is served by this location. It may be specified as a radius from the location's address or as a list of cities and/or postal codes.\n\n**Only for Google My Business:** Currently, **serviceArea** is only supported by Google My Business and will not affect your listings on other sites.\n"
          },
          "phone": {
            "type": "string",
            "description": "Must be a valid phone number."
          },
          "isPhoneTracked": {
            "type": "boolean",
            "description": "Set to true if the number listed in **phone** is a tracked phone number.\n\n**NOTE:** When updating **isPhoneTracked**, you must provide a value for **phone** in the same request.\n"
          },
          "localPhone": {
            "type": "string",
            "description": "Must be a valid, non-toll-free phone number.\n\nRequired if:\n* **isPhoneTracked** is true and the non-tracked number is a toll-free number, **OR**\n* **isPhoneTracked** is false and **phone** is a toll-free number\n"
          },
          "alternatePhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "faxPhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "mobilePhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "tollFreePhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "ttyPhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Yext Category IDs. A Location must have at least one and at most 10 Categories.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\n**NOTE:** The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n"
          },
          "featuredMessage": {
            "type": "string",
            "maxLength": 50,
            "description": "The Featured Message. Default: Call today!\n\nCannot include:\n* inappropriate language\n* HTML markup\n* a URL or domain name\n* a phone number\n* control characters ([\\x00-\\x1F\\x7F])\n* insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n"
          },
          "featuredMessageUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "Valid URL to which the Featured Message is linked"
          },
          "websiteUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL of the location's website. This URL will be shown on your listings unless you specify a value for `displayWebsiteUrl`.\n\nMust be a valid URL and is required whenever `displayWebsiteUrl` is specified.\n"
          },
          "displayWebsiteUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `websiteUrl`. You can use `displayWebsiteUrl` to display a short, memorable web address that redirects consumers to the URL given in `websiteUrl`.\n\nMust be a valid URL and be specified along with `websiteUrl`.\n"
          },
          "reservationUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "A valid URL used for reservations at this location."
          },
          "displayReservationUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `reservationUrl`. You can use `displayReservationUrl` to display a short, memorable web address that redirects consumers to the URL given in `reservationUrl`.\n\nMust be a valid URL and be specified along with `reservationUrl`.\n"
          },
          "menuUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL of the location's menu."
          },
          "displayMenuUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `menuUrl`. You can use `displayMenuUrl` to display a short, memorable web address that redirects consumers to the URL given in `menuUrl`.\n\nMust be a valid URL and be specified along with `menuUrl`.\n"
          },
          "orderUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL used to place orders that will be fulfilled at the location."
          },
          "displayOrderUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `orderUrl`. You can use `displayOrderUrl` to display a short, memorable web address that redirects consumers to the URL given in `orderUrl`.\n\nMust be a valid URL and be specified along with `orderUrl`.\n"
          },
          "hours": {
            "type": "string",
            "maxLength": 255,
            "description": "Hours should be submitted as a comma-separated list of days, where each day's hours are specified as follows:\n\nd:oh:om:ch:cm\n* d = day of the week –\n  * 1 – Sunday\n  * 2 – Monday\n  * 3 – Tuesday\n  * 4 – Wednesday\n  * 5 – Thursday\n  * 6 – Friday\n  * 7 – Saturday\n* oh:om = opening time in 24-hour format\n* ch:cm = closing time in 24-hour format\n\nTimes with single-digit hours (e.g., 9 AM) can be submitted with or without a leading zero (9:00 or 09:00).\n\n**Example:** open 9 AM to 5 PM Monday and Tuesday, open 10 AM to 4 PM on Saturday – 2:9:00:17:00,3:9:00:17:00,7:10:00:16:00\n\nSPECIAL CASES:\n* To indicate that a location is open 24 hours on a specific day, set 00:00 as both the opening and closing time for that day.\n  * **Example:** open all day on Saturdays – 7:00:00:00:00\n* To indicate that a location is closed on a specific day, omit that day from the list or set it as closed (\"closed\" is not case sensitive).\n  * **Example:** closed on Sundays – 1:closed\n  * **NOTE:** If a location is closed seven days a week, set at least one day to closed. Otherwise, **hours** is an empty string, and we assume you are not submitting hours information for that location.\n* To indicate that a location has split hours on a specific day, submit a set of hours for each block of time the location is open.\n  * **Example:** open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM on Mondays – 2:9:00:12:00,2:13:00:17:00\n\n**NOTE:** To set hours for specific days of the year rather than days of the week, use **holidayHours**.\n"
          },
          "additionalHoursText": {
            "type": "string",
            "maxLength": 255,
            "description": "Additional information about business hours that does not fit in **hours** (e.g., Closed during the winter)"
          },
          "holidayHours": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "hours": {
                  "type": "string",
                  "description": "Special opening and closing times in 24-hour format (OH:OM:CH:CM, where OH:OM is the opening time and CH:CM is the closing time).\n\nTimes with single-digit hours (e.g., 9 AM) can be submitted with or without a leading zero (9:00 or 09:00).\n\nExamples:\n* 9:00:15:00 — Opening at 9:00 AM, closing at 3:00 PM\n* \"\" (empty string) — Closed all day\n* 0:00:0:00 or 0:00:23:59 — Open 24 hours\n* 9:00:15:00,17:00:19:00 — Split hours: open from 9:00 AM to 3:00 PM and again from 5:00 PM to 7:00 PM\n\n**NOTE:** If **isRegularHours** is set to true, we will ignore this field.\n"
                },
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "The date on which the holiday hours will be in effect"
                },
                "isRegularHours": {
                  "type": "boolean",
                  "default": false,
                  "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                }
              }
            },
            "description": "Holiday hours for this location.\n\n**NOTE:** hours must be set in order for holidayHours to appear on your listings)\n"
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "maxLength": 5000
          },
          "conditionsTreated": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the conditions treated by the healthcare provider\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.\n"
          },
          "certifications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the certifications held by the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "educationList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The kind of education or training completed",
                  "enum": [
                    "FELLOWSHIP",
                    "INTERNSHIP",
                    "MEDICAL_SCHOOL",
                    "RESIDENCY"
                  ]
                },
                "institutionName": {
                  "type": "string",
                  "description": "The name of the institution where the healthcare professional received the education or training"
                },
                "yearCompleted": {
                  "type": "string",
                  "description": "The year the healthcare professional completed the education or training"
                }
              }
            },
            "description": "A list of the types of education and training completed by the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "degrees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the degrees earned by the healthcare professional\n\n**NOTE:**  This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n\nValid values:\n\n* `ANP` (Adult Nurse Practitioner)\n* `APN` (Advanced Practice Nurse)\n* `APRN` (Advanced Practice Registered Nurse)\n* `ARNP` (Advanced Registered Nurse Practitioner)\n* `CNM` (Certified Nurse Midwife)\n* `CNP` (Certified Nurse Practitioner)\n* `CNS` (Clinical Nurse Specialist)\n* `CPNP` (Certified Pediatric Nurse Practitioner)\n* `CRNA` (Certified Registered Nurse Anesthetist)\n* `CRNP` (Certified Registered Nurse Practitioner)\n* `DC` (Doctor of Chiropractic)\n* `DDS` (Doctor of Dental Surgery)\n* `DMD` (Doctor of Dental Medicine)\n* `DO` (Doctor of Osteopathy)\n* `DPM` (Doctor of Podiatric Medicine)\n* `DVM` (Doctor of Veterinary Medicine)\n* `FNP` (Family Nurse Practitioner)\n* `GNP` (Geriatric Nurse Practitioner)\n* `LAC` (Licensed Acupuncturist)\n* `LPN` (Licensed Practical Nurse)\n* `MD` (Medical Doctor)\n* `ND` (Naturopathic Doctor)\n* `NP` (Nurse Practitioner)\n* `OD` (Doctor of Optometry)\n* `PA` (Physician Assistant)\n* `PAC` (Physician Assistant Certified)\n* `PHARMD` (Doctor of Pharmacy)\n* `PHD` (Doctor of Philosophy)\n* `PNP` (Pediatric Nurse Practitioner)\n* `VMD` (Veterinary Medical Doctor)\n* `WHNP` (Womens Health Nurse Practitioner)\n"
          },
          "admittingHospitals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of hospitals where the healthcare professional admits patients\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "acceptingNewPatients": {
            "type": "boolean",
            "description": "Indicates whether the healthcare provider is accepting new patients\n\nDefault is true\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.\n"
          },
          "closed": {
            "type": "object",
            "properties": {
              "isClosed": {
                "type": "boolean",
                "description": "Indicates whether the location is closed"
              }
            },
            "description": "A set of field-value pairs indicating whether the location is closed and, if it is closed, the date of its closing.\n\n**NOTE:** This field does not appear in the GET response unless it has been explicitly set in a PUT request.\n"
          },
          "paymentOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The payment methods accepted at this location\n\nValid elements depend on the location's country. For US locations, valid elements are:\n* AMERICANEXPRESS\n* CASH\n* CHECK\n* DINERSCLUB\n* DISCOVER\n* FINANCING\n* INVOICE\n* MASTERCARD\n* TRAVELERSCHECK\n* VISA\n* ANDROIDPAY\n* APPLEPAY\n* SAMSUNGPAY\n* BITCOIN\n* PAYPAL\n"
          },
          "insuranceAccepted": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of insurance policies accepted by the healthcare provider\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "logo": {
            "$ref": "#/components/schemas/Photo"
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Photo"
            },
            "description": "Up to 50 Photos.\n\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n"
          },
          "headshot": {
            "type": "object",
            "description": "A portrait of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo"
              }
            ]
          },
          "videoUrls": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 255
            },
            "description": "Valid YouTube URLs for embedding a video on some publisher sites.\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n"
          },
          "instagramHandle": {
            "type": "string",
            "description": "Valid Instagram username for the location (e.g., NewCityFiat (without the leading \"@\"))"
          },
          "twitterHandle": {
            "type": "string",
            "maxLength": 15,
            "description": "Valid Twitter handle for the location (e.g., JohnSmith (without the leading '@')).\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system."
          },
          "googleWebsiteOverride": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL you would like to submit to Google My Business in place of the one given in **websiteUrl** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n"
          },
          "googleCoverPhoto": {
            "type": "object",
            "description": "The cover photo for your business's Google profile\n\nNOTE: Your cover photo must meet all of the following requirements:\n* have a 16:9 aspect ratio\n* be at least 480 x 270 pixels\n* be no more than 2120 x 1192 pixels\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo"
              }
            ]
          },
          "googleProfilePhoto": {
            "type": "object",
            "description": "The profile photo for your business's Google profile\n\n**NOTE:** Your profile picture must meet all of the following requirements:\n* be a square\n* be at least 250 x 250 pixels\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo"
              }
            ]
          },
          "googleAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID Of the Google My Business keyword\n\nKeywords are determined by the location's primary category (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`).\n"
                },
                "optionIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The unique IDs of any options selected for the keyword.\n\nKeyword options provide more details on how the keyword applies to the location (e.g., if **`id`** is `has_drive_through`, **`optionIds`** may be `true` or `false`).\n"
                }
              }
            },
            "description": "The Google My Business attributes for this location.\n"
          },
          "facebookPageUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "URL for the location's Facebook Page.\n\nValid formats:\n* facebook.com/profile.php?id=[numId]\n* facebook.com/group.php?gid=[numId]\n* facebook.com/groups/[numId]\n* facebook.com/[Name]\n* facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\n**NOTE:** This value is automatically set to the location's Facebook Page URL. You can only manually set **facebookPageUrl** if the location meets one of the following criteria:\n* It is not subscribed to a Listings package that contains Facebook.\n* It is opted out of Facebook.\n"
          },
          "facebookCallToAction": {
            "description": "Designates the Facebook Call-to-Action button text and value      ",
            "type": "object",
            "properties": {
              "type": {
                "description": "The action the consumer is being prompted to take by the button's text",
                "enum": [
                  "NONE",
                  "BOOK_NOW",
                  "CALL_NOW",
                  "CONTACT_US",
                  "SEND_MESSAGE",
                  "USE_APP",
                  "PLAY_GAME",
                  "SHOP_NOW",
                  "SIGN_UP",
                  "WATCH_VIDEO",
                  "SEND_EMAIL",
                  "LEARN_MORE",
                  "PURCHASE_GIFT_CARDS",
                  "ORDER_NOW",
                  "FOLLOW_PAGE"
                ],
                "type": "string"
              },
              "value": {
                "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "facebookCoverPhoto": {
            "type": "object",
            "description": "The cover photo for your business's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou must have a cover photo in order for your listing to appear on Facebook.\n\n**NOTE:** Your cover photo must be at least 400 pixels wide.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo"
              }
            ]
          },
          "facebookProfilePicture": {
            "type": "object",
            "description": "The profile picture for your business's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n**NOTE:** Your profile picture must be larger than 180 x 180 pixels.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo"
              }
            ]
          },
          "uberLinkType": {
            "type": "string",
            "description": "Indicates whether the embedded Uber link for this location appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your location set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n",
            "enum": [
              "LINK",
              "BUTTON"
            ]
          },
          "uberLinkText": {
            "type": "string",
            "maxLength": 100,
            "description": "The text of the embedded Uber link\n\nDefault is \"Ride there with Uber\".\n\n**NOTE:** This field is only available if **uberLinkType** is LINK.\n"
          },
          "uberTripBrandingText": {
            "type": "string",
            "maxLength": 28,
            "description": "The text of the call-to-action that will appear in the Uber app during a trip to your location (e.g., Check out our menu!)\n\n**NOTE:** If a value for **uberTripBrandingText** is provided, values must also be provided for **uberTripBrandingUrl** and **uberTripBrandingDescription**.\n"
          },
          "uberTripBrandingUrl": {
            "type": "string",
            "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your location.\n\n**NOTE:** If a value for **uberTripBrandingUrl** is provided, values must also be provided for **uberTripBrandingText** and **uberTripBrandingDescription**.\n"
          },
          "uberTripBrandingDescription": {
            "type": "string",
            "maxLength": 150,
            "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your location.\n\n**NOTE:** If a value for **uberTripBrandingDescription** is provided, values must also be provided for **uberTripBrandingText** and **uberTripBrandingUrl**.\n"
          },
          "uberEmbedCode": {
            "type": "string",
            "readOnly": true,
            "description": "The Yext-powered code that can be copied and pasted into the markup of emails or web pages where the embedded Uber link should appear"
          },
          "uberLink": {
            "type": "string",
            "readOnly": true,
            "description": "The Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear"
          },
          "uberLinkRaw": {
            "type": "string",
            "readOnly": true,
            "description": "The Uber universal link for the location.\n\nFor more information on universal links, see Uber's developer documentation.\n\n**NOTE**: This field is only available in the LiveAPI and only for US locations. \n"
          },
          "yearEstablished": {
            "type": "string",
            "maxLength": 4,
            "description": "The year that this location was opened, not the number of years it was open\n\nMinimum of 1000, maximum of current year + 10.\n"
          },
          "displayLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude where the map pin should be displayed, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "displayLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude where the map pin should be displayed, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "routableLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for driving directions to the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "routableLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for driving directions to the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "walkableLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for walking directions to the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "walkableLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for walking directions to the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "pickupLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for pickup spot for the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "pickupLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for pickup spot for the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "dropoffLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for drop off spot for the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "dropoffLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for drop off spot for the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextDisplayLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude where the map pin should be displayed, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextDisplayLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude where the map pin should be displayed, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextRoutableLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for driving directions to the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextRoutableLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for driving directions to the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextWalkableLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for walking directions to the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextWalkableLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for walking directions to the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextPickupLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for pickup spot for the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextPickupLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for pickup spot for the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextDropoffLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for drop off spot for the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextDropoffLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for drop off spot for the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 255
            },
            "description": "Up to five emails addresses for reaching this location\n\nMust be valid email addresses\n"
          },
          "specialities": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 specialities (e.g., for food and dining: Chicago style)\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "associations": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 association memberships relevant to the location (e.g., New York Doctors Association)\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 products sold at this location\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 services offered at this location\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "brands": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 brands sold by this location\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "language": {
            "type": "string",
            "maxLength": 10,
            "description": "Language code of the language in which this location's information is provided. This language is considered the Location's primary language in our system.\n\n\nIf you would like to provide your Location data in more than one language, you can create a Language Profile for each of these additional (alternate) languages.\n"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 languages spoken at this location.\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 keywords may be provided\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "menusLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Menus. This label will appear on your location's listings."
          },
          "menuIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Menus associated with this location."
          },
          "bioListsLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Bio lists. This label will appear on your location's listings."
          },
          "bioListIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Bio lists associated with this location."
          },
          "productListsLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Product & Services lists. This label will appear on your location's listings."
          },
          "productListIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Product lists associated with this location."
          },
          "eventListsLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Event lists. This label will appear on your location's listings."
          },
          "eventListIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Event lists associated with this location."
          },
          "folderId": {
            "type": "string",
            "description": "The folder that this location is in. If the location is in the customer-level (root) folder, its folderId will be 0. Must be a valid, existing Yext Folder ID or 0"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the location labels that have been added to this location. Location labels help you identify locations that share a certain characteristic; they do not appear on your location's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nIn Locations: Update requests:\n* If the **`v`** parameter is before `20180223`: setting the value of **`labelIds`** to an empty array has no effect on the current value\n* If the **`v`** parameter is `20180223` or after: setting the value of **`labelIds`** to an empty array deletes the current value\n"
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "A set of key-value pairs indicating the location's custom fields and their values. The keys are the **`ids`** of the custom fields, and the values are the fields' contents for this location.\n\nTo retrieve a list of custom fields for your account, use the Custom Fields: List endpoint.\n\nIf a field's **`type`** is `SINGLE_OPTION` or `MULTI_OPTION`, the option or options that apply to this location must be represented by their **`key`**s.\n\nExamples of each type of custom field:\n\n* BOOLEAN:\n    * `{ \"9662\": \"true\" }`\n* DAILY_TIMES:\n    * `{ \"10012\": { \"dailyTimes\": \"2:7:00,3:7:00,4:7:00,5:7:00,6:7:00,7:7:00,1:7:00\" } }`\n* DATE:\n    * `{ \"7066\": \"2016-10-12\" }`\n* GALLERY:\n    * `{ \"7070\": [ { \"url\": \"http://a.mktgcdn.com/p/ounkg7aq6Oy029-sRf4CIH64/128x128.jpg\" }, { \"url\": \"http://a.mktgcdn.com/p/YkQGqxK8jFBqOlailQ9QIBsgs/1.0000/316x316.png\" } ] }`\n* HOURS:\n    * `{ \"10011\": { \"hours\": \"1:7:00:20:00,2:7:00:20:00,3:7:00:20:00,4:7:00:20:00,5:7:00:20:00,6:7:00:20:00,7:7:00:20:00\", \"additionalHoursText\": \"Also by appointment\" }`\n* LOCATION_LIST:\n    * `{ \"8098\" : [ \"locationId1\", \"locationId2\" ] }`\n* MULTILINE_TEXT (up to 4,000 characters):\n    * `{ \"1592\": \"Take Route 13 south. Pass Riverrun Reservoir. At the traffic light before the post office, turn right off of Route 13. Pass the library and community center on your right and then pass a diner on your left. Cross over the bridge and at the third intersection, turn left onto Jones Street. We are located on the right side in the middle of the block.\" }`\n* MULTI_OPTION:\n    * `{ \"7068\": [\"2614\", \"2615\"] }` (`\"2614\"` and `\"2615\"` are the options' **`key`**s)\n* NUMBER:\n    * `{ \"7078\": \"123\" }`\n* PHOTO:\n    * `{ \"7071\": { \"url\": \"http://a.mktgcdn.com/p/bRtQXQZP2kEzgy2C8/800x800.jpg\", \"description\": \"New storefront\", \"details\": \"A picture of the new storefront\" } }`\n    * `{ \"7071\": null }` (This setting will clear the existing value of the Photo custom field.)\n* SINGLE_OPTION:\n    * `{ \"7069\": \"2617\" }` (`\"2617\"` is the option's **`key`**)\n* TEXT (up to 255 characters):\n    * `{ \"6157\": \"Buy One, Get One 50% Off\" }`\n* TEXT_LIST:\n    * `{ \"7072\": [ \"Item 1\", \"Item 2\", \"Item 3\" ] }`\n* URL:\n    * `{ \"9381\": \"http://www.location.example.com\" }`\n* VIDEO:\n    * `{ \"7077\": { \"url\": \"http://www.youtube.com/watch?v=6KQPho\" } }`\n* VIDEO_GALLERY:\n    * `{ \"8452\": [ { \"url\": \"http://www.youtube.com/watch?v=B1EC1U\" }, { \"url\": \"http://www.youtube.com/watch?v=SkEtnN\" } ] }`\n"
          },
          "intelligentSearchTrackingEnabled": {
            "type": "boolean",
            "description": "Indicates whether Intelligent Search Tracker is enabled.\n\nThe Intelligent Search Tracker allows you to understand your performance in local search.\n"
          },
          "intelligentSearchTrackingFrequency": {
            "type": "string",
            "enum": [
              "WEEKLY",
              "MONTHLY",
              "QUARTERLY"
            ],
            "description": "How often we send search queries to track your search performance.\n"
          },
          "locationKeywords": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NAME",
                "PRIMARY_CATEGORY"
              ]
            },
            "description": "Keywords that we will use to track your search performance. These keywords are based on the location information you've stored in our system.\n"
          },
          "customKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional keywords you would like us to use when tracking your search performance\n"
          },
          "queryTemplates": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "KEYWORD",
                "KEYWORD_ZIP",
                "KEYWORD_CITY",
                "KEYWORD_IN_CITY",
                "KEYWORD_NEAR_ME",
                "KEYWORD_CITY_STATE"
              ]
            },
            "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n"
          },
          "alternateNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Other names for your business that you would like us to use when tracking your search performance\n"
          },
          "alternateWebsites": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Other websites for your business that we should look for when tracking your search performance\n"
          },
          "competitors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The competitor's name"
                },
                "website": {
                  "type": "string",
                  "description": "The competitor's website."
                }
              }
            },
            "description": "The names and websites of the competitors whose search performance you would like to compare to your own\n"
          },
          "trackingSites": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "GOOGLE_DESKTOP",
                "GOOGLE_MOBILE",
                "BING_DESKTOP",
                "BING_MOBILE",
                "YAHOO_DESKTOP",
                "YAHOO_MOBILE"
              ]
            },
            "description": "The search engines that we will use to track your performance\n"
          },
          "isoRegionCode": {
            "type": "string",
            "readOnly": true,
            "description": "The ISO 3166-2 region code for the location.\n\nYext will determine the location’s code and update isoRegionCode with that value. If Yext is unable to determine the code for the location, the location’s ISO 3166-1 alpha-2 country code will be used.\n"
          },
          "reviewBalancingURL": {
            "type": "string",
            "maxLength": 255,
            "readOnly": true,
            "description": "Link to the balancing URL that will auto-direct consumers to certain sites to leave reviews, based on review-generation settings\n"
          },
          "firstPartyReviewPage": {
            "type": "string",
            "maxLength": 255,
            "readOnly": true,
            "description": "Link to the review-collection page, where consumers can leave first-party reviews\n"
          },
          "isClusterPrimary": {
            "type": "boolean",
            "description": "Indicates whether the location is the primary location in its group\n"
          },
          "schemaTypes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            },
            "description": "List of Schema Types for this location, based on its categories\n"
          },
          "attire": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "DRESSY",
              "CASUAL",
              "FORMAL"
            ],
            "description": "The formality of clothing typically worn at this location\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.\n"
          },
          "priceRange": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "ONE",
              "TWO",
              "THREE",
              "FOUR"
            ],
            "description": "The typical price of products sold at this location, on a scale of 1 (low) to 4 (high)\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.\n"
          },
          "mealsServed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Types of meals served at this location\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.\n\nValid values:\n\n* `BREAKFAST`\n* `LUNCH`\n* `BRUNCH`\n* `HAPPY_HOUR`\n* `LATE_NIGHT`\n"
          },
          "locatedIn": {
            "type": "string",
            "description": "For ATMs, the external ID of the location that the ATM is installed in. The location must be in the same business account as the ATM.\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `ATM`.\n"
          },
          "primaryContact": {
            "type": "string",
            "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n"
          },
          "reviewResponseConversationEnabled": {
            "type": "boolean",
            "description": "Indicates whether or not review response conversations are enabled for the Yext Knowledge Assistant\n"
          },
          "holidayHoursConfirmationEnabled": {
            "type": "boolean",
            "description": "Indicates whether or not holiday hour confirmation alerts are enabled for the Yext Knowledge Assistant\n"
          }
        }
      },
      "Folders": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Yext Folder ID number. If the folder is the customer-level (root) folder, its `id` will be \"0\"."
          },
          "parentId": {
            "type": "string",
            "description": "The ID of the folder that contains the folder."
          },
          "name": {
            "type": "string",
            "description": "The folder's name."
          }
        }
      },
      "BaseEcl": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 32,
            "description": "List ID."
          },
          "accountId": {
            "type": "string",
            "readOnly": true,
            "description": "ID of account that owns this List."
          },
          "name": {
            "type": "string",
            "description": "List name."
          },
          "title": {
            "type": "string",
            "description": "List title that appears on listings."
          },
          "size": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of items in the List."
          },
          "publish": {
            "type": "boolean",
            "description": "Indicates whether the List should be shown on your listings."
          },
          "language": {
            "type": "string",
            "description": "List language in ISO 639-1 format. An ISO 3166-1 alpha-2 country code can optionally be appended to the language.\n\n**Examples:** en, en_GB, fr_CA\n"
          }
        }
      },
      "BaseEclSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Section ID."
          },
          "name": {
            "type": "string",
            "description": "Section name."
          },
          "description": {
            "type": "string",
            "description": "Section description."
          }
        }
      },
      "BaseEclItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Item ID."
          },
          "name": {
            "type": "string",
            "description": "Item name."
          },
          "description": {
            "type": "string",
            "description": "Item description."
          }
        }
      },
      "CommonEclDefinitions_Photo": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL of photo."
          },
          "height": {
            "type": "integer",
            "description": "Dimension in pixels."
          },
          "width": {
            "type": "integer",
            "description": "Dimension in pixels."
          },
          "alternateText": {
            "type": "string",
            "description": "The alternate text to be used for accessibility purposes."
          }
        }
      },
      "Calories": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "FIXED",
              "RANGE"
            ]
          },
          "calorie": {
            "type": "integer",
            "description": "Calorie count. Must be greater than or equal to 0 and less than or equal to 1000000."
          },
          "rangeTo": {
            "type": "integer",
            "description": "Specified only if `name` is `RANGE`. In that case, this Calories represents a calorie count range from `calorie` to `rangeTo`. Must be greater than `calorie` and less than or equal to 1000000."
          }
        }
      },
      "ContentListCostOption": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "e.g., Small, Medium, Large, Add Bacon."
          },
          "price": {
            "type": "string",
            "description": "A simple price in USD, e.g., 1.00."
          },
          "calorie": {
            "type": "integer",
            "description": "How many calories this option adds. This field is for Menu items only."
          }
        }
      },
      "ContentListCost": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRICE",
              "RANGE",
              "NONE",
              "OTHER"
            ]
          },
          "price": {
            "type": "string",
            "description": "Price in USD, e.g., 9.50. Must be greater than or equal to 0.0 and less than or equal to 1000000.00."
          },
          "unit": {
            "type": "string",
            "description": "e.g., Per Gallon, Each."
          },
          "rangeTo": {
            "type": "string",
            "description": "Specified only if `type` is `RANGE`. In that case, this Cost represents a `price` range from `price` to `rangeTo`. Must be greater than `price` and less than or equal to 1000000.00."
          },
          "other": {
            "type": "string",
            "description": "Specified only if `type` is `OTHER`. User-entered text, e.g., Market Price."
          },
          "options": {
            "type": "array",
            "description": "Add-ons or product variations that affect the price.",
            "items": {
              "$ref": "#/components/schemas/ContentListCostOption"
            }
          }
        }
      },
      "MenuItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclItem"
          },
          {
            "type": "object",
            "properties": {
              "photo": {
                "$ref": "#/components/schemas/CommonEclDefinitions_Photo"
              },
              "calories": {
                "$ref": "#/components/schemas/Calories"
              },
              "cost": {
                "$ref": "#/components/schemas/ContentListCost"
              },
              "url": {
                "type": "string",
                "description": "The URL of the item's webpage."
              },
              "allergens": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of allergens associated with the menu item. Valid elements are:\n* Peanuts\n* Wheat\n* Sesame\n* Tree Nuts\n* Gluten\n* Soy\n* Dairy\n* Eggs\n* Fish\n* Shellfish\n* Shrimp\n* Crab\n* Soba\n"
              },
              "featuredItem": {
                "type": "boolean",
                "description": "Indicates whether the item is a featured item on the menu."
              }
            }
          }
        ]
      },
      "Section": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclSection"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Section Items.",
                "items": {
                  "$ref": "#/components/schemas/MenuItem"
                }
              }
            }
          }
        ]
      },
      "Menu": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEcl"
          },
          {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "The three-letter ISO 4217 currency code. Defaults to USD."
              },
              "sourceUrl": {
                "type": "string",
                "description": "The URL of the source the menu's content is retrieved from."
              },
              "sections": {
                "type": "array",
                "description": "A list of sections.",
                "items": {
                  "$ref": "#/components/schemas/Section"
                }
              }
            }
          }
        ]
      },
      "BioItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclItem"
          },
          {
            "type": "object",
            "properties": {
              "photo": {
                "$ref": "#/components/schemas/CommonEclDefinitions_Photo"
              },
              "title": {
                "type": "string",
                "description": "Person's title."
              },
              "phone": {
                "type": "string",
                "description": "Item Phone."
              },
              "email": {
                "type": "string",
                "description": "Item Email."
              },
              "education": {
                "type": "array",
                "description": "List of up to 10 strings.",
                "items": {
                  "type": "string"
                }
              },
              "certifications": {
                "type": "array",
                "description": "List of up to 10 strings.",
                "items": {
                  "type": "string"
                }
              },
              "services": {
                "type": "array",
                "description": "List of up to 100 strings.",
                "items": {
                  "type": "string"
                }
              },
              "url": {
                "type": "string",
                "description": "Item URL."
              }
            }
          }
        ]
      },
      "BioEcl_Section": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclSection"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Section Items.",
                "items": {
                  "$ref": "#/components/schemas/BioItem"
                }
              }
            }
          }
        ]
      },
      "Bio": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEcl"
          },
          {
            "type": "object",
            "properties": {
              "sections": {
                "type": "array",
                "description": "A list of sections.",
                "items": {
                  "$ref": "#/components/schemas/BioEcl_Section"
                }
              }
            }
          }
        ]
      },
      "Photos": {
        "type": "array",
        "description": "List of up to 5 photos.",
        "items": {
          "$ref": "#/components/schemas/CommonEclDefinitions_Photo"
        }
      },
      "ProductItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclItem"
          },
          {
            "type": "object",
            "properties": {
              "photos": {
                "$ref": "#/components/schemas/Photos"
              },
              "cost": {
                "$ref": "#/components/schemas/ContentListCost"
              },
              "idcode": {
                "type": "string",
                "description": "Displayed item ID."
              },
              "url": {
                "type": "string",
                "description": "Product home page"
              },
              "video": {
                "type": "string",
                "description": "Youtube URL."
              }
            }
          }
        ]
      },
      "ProductEcl_Section": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclSection"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Section Items.",
                "items": {
                  "$ref": "#/components/schemas/ProductItem"
                }
              }
            }
          }
        ]
      },
      "Product": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEcl"
          },
          {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "The three-letter ISO 4217 currency code. Defaults to USD."
              },
              "sections": {
                "type": "array",
                "description": "A list of sections.",
                "items": {
                  "$ref": "#/components/schemas/ProductEcl_Section"
                }
              }
            }
          }
        ]
      },
      "EventItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclItem"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "User-provided event type."
              },
              "starts": {
                "type": "string",
                "format": "date",
                "description": "Start time in ISO 8601 format (yyyy-mm-ddThh:mm) (e.g., 2012-01-09T04:00)."
              },
              "ends": {
                "type": "string",
                "format": "date",
                "description": "End time in ISO 8601 format (yyyy-mm-ddThh:mm) (e.g., 2012-01-09T05:00)."
              },
              "photos": {
                "$ref": "#/components/schemas/Photos"
              },
              "url": {
                "type": "string",
                "description": "Item URL."
              },
              "video": {
                "type": "string",
                "description": "Youtube URL."
              }
            }
          }
        ]
      },
      "EventEcl_Section": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclSection"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Section Items.",
                "items": {
                  "$ref": "#/components/schemas/EventItem"
                }
              }
            }
          }
        ]
      },
      "Event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEcl"
          },
          {
            "type": "object",
            "properties": {
              "sections": {
                "type": "array",
                "description": "A list of sections. However, Calendars cannot have more than one section.",
                "items": {
                  "$ref": "#/components/schemas/EventEcl_Section"
                }
              }
            }
          }
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of the category."
          },
          "fullName": {
            "type": "string",
            "description": "The name of the Category, including parent Categories. (\"Grandparent > Parent > Category\")"
          },
          "selectable": {
            "type": "boolean",
            "description": "Set to true if the Category is allowed to be selected by a Location. (Some Categories are too broad to apply to one Location.)"
          },
          "parentId": {
            "type": "string",
            "description": "The ID of the parent category, if any."
          },
          "entityTypeAvailability": {
            "type": "object",
            "description": "The entity types the category is available to.\n",
            "properties": {
              "mode": {
                "type": "string",
                "description": "\nPossible values:\n* `OPT_IN` Entity types can only be opted in to this category.\n* `OPT_OUT` Entity types must be specifically opted out of this category.\n"
              },
              "entityTypes": {
                "type": "array",
                "description": "\nList of entity types that are either opted in or opted out of the category, based on the value of **`mode`**.\n\n**Example**:\n\nIf **`mode`** is `OPT_IN` and **`entityTypes`** is `“location”` then only Entities whose **`entityType`** is `location` can have the category assigned to it.\n\nIf **`mode`** is `OPT_OUT` and **`entityTypes`** is `[“location”, “atm”]` then the category can be assigned to Entities of any **`entityType`** except `location` or `atm`.\n",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "countryAvailability": {
            "type": "object",
            "description": "\nThe ISO 3166-1 alpha-2 codes of the countries the category is available to.\n\nIn order for the category to be applied to an Entity, the Entity's **`countryCode`** (found in its **`meta`** data) must be included in this list.\n",
            "properties": {
              "mode": {
                "type": "string",
                "description": "\nPossible values:\n* `OPT_IN` Countries can only be opted in to this category.\n* `OPT_OUT` Countries must be specifically opted out of this category.\n"
              },
              "countryCodes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "\nList of ISO 3166-1 alpha-2 codes for the countries that are either opted in or opted out of the category, based on the value of **`mode`**.\n\n**Example**:\n\nIf **`mode`** is `OPT_IN` and **`countryCodes`** is `[“US”, “GB”]`, then only Entities whose **`countryCode`** is `US` or `GB` can have this category assigned to it.\n\nIf **`mode`** is `OPT_OUT` and **`countryCodes`** is `[“GB”, “FR”]`, then the category can be assigned to Entities with any **`countryCode`** value except `GB` or `FR`.\n"
              }
            }
          }
        }
      },
      "GoogleOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Google's ID for the option."
          },
          "label": {
            "type": "string",
            "description": "Google's display name for the option."
          }
        }
      },
      "GoogleField": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Google's display name for the field."
          },
          "id": {
            "type": "string",
            "description": "Google's ID for this field."
          },
          "group": {
            "type": "string",
            "description": "The name of the group that contains this attribute."
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GoogleOption"
            }
          }
        }
      },
      "GoogleCategory": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "string",
            "description": "Google's ID for the category."
          },
          "clientCategoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "All category IDs taken from either the business' partner category list, if defined, or otherwise from Yext, that map to this Google category."
          },
          "fields": {
            "type": "array",
            "description": "List of fields for this category.",
            "items": {
              "$ref": "#/components/schemas/GoogleField"
            }
          }
        }
      },
      "Translation": {
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string",
            "description": "Language code of the translation."
          },
          "value": {
            "type": "string",
            "description": "Localized value of the string."
          }
        }
      },
      "Option": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "ID that should be used when referencing the option in API calls.\nNote that in Locations endpoints, Custom Field options are still referenced by their numeric **`id`**, which can be obtained by calling the Custom Fields: List endpoint with a **`v`** param before `20180809`.\n"
          },
          "value": {
            "type": "string",
            "description": "The option's text."
          },
          "translations": {
            "type": "array",
            "description": "Localized variations of **`value`**.",
            "items": {
              "$ref": "#/components/schemas/Translation"
            }
          }
        }
      },
      "EntityTypes": {
        "type": "string",
        "enum": [
          "location",
          "event",
          "healthcareProfessional",
          "healthcareFacility",
          "atm",
          "restaurant"
        ]
      },
      "Validation": {
        "type": "object",
        "properties": {
          "minCharLength": {
            "type": "integer",
            "description": "Minimum character length."
          },
          "maxCharLength": {
            "type": "integer",
            "description": "Maximum character length."
          },
          "minItemCount": {
            "type": "integer",
            "description": "Minimum item count."
          },
          "maxItemCount": {
            "type": "integer",
            "description": "Maximum item count."
          },
          "minValue": {
            "type": "number",
            "description": "Minimum value."
          },
          "maxValue": {
            "type": "number",
            "description": "Maximum value."
          },
          "minDate": {
            "type": "string",
            "description": "Minimum date, accepted as 'YYYY-MM-DD'."
          },
          "maxDate": {
            "type": "string",
            "description": "Maximum date, accepted as 'YYYY-MM-DD'."
          },
          "aspectRatio": {
            "type": "string",
            "description": "Aspect ratio of a photo.",
            "enum": [
              "UNCONSTRAINED",
              "1:1",
              "4:3",
              "3:2",
              "5:3",
              "16:9",
              "3:1",
              "2:3",
              "5:7",
              "4:5",
              "4:1"
            ]
          },
          "minWidth": {
            "type": "integer",
            "description": "Minimum photo width, in pixels."
          },
          "minHeight": {
            "type": "integer",
            "description": "Minimum photo height, in pixels."
          },
          "entityTypes": {
            "type": "array",
            "description": "if **`type`** is `ENTITY_LIST`, the types of entities that the field can contain.",
            "items": {
              "$ref": "#/components/schemas/EntityTypes"
            }
          },
          "richTextFormats": {
            "type": "array",
            "uniqueItems": true,
            "description": "if **`type`** is `RICH_TEXT`, the types of text formats that the field can contain.",
            "items": {
              "type": "string",
              "enum": [
                "bold",
                "italics",
                "underline",
                "bulletedList",
                "numberedList",
                "hyperlink"
              ]
            }
          }
        },
        "description": "A Custom Field validation object, describing validation rules when a Custom Field value is set or updated.\n"
      },
      "FieldUpdate": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "object",
            "description": "The Custom Field's name (including default value and translations).\n\n After March 19th 2020, if users **Update** Custom Field's name using older versions of the API without explicitly specifiying translations, any existing translations will be cleared.\n\n**Example:**\n\"name\": {\n  \"value\": \"The promotions\",\n  \"translations\": [\n    {\n      \"languageCode\": \"fr\",\n      \"value\": \"Les promotions\"\n    }\n  ]\n}\n",
            "properties": {
              "value": {
                "type": "string",
                "description": "The field's default name."
              },
              "translations": {
                "type": "array",
                "description": "Localized variations of **`value`**.",
                "items": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          },
          "options": {
            "type": "array",
            "description": "Present if and only if `type` is `SINGLE_OPTION` or `MULTI_OPTION`.\n\nList of options (key, value, and translations) for the Custom Field.\n\n**Example:**\n{\n  {\n    \"key\": \"TEMPORARILY_CLOSED\",\n    \"value\": \"Temporarily Closed\"\n  },\n  {\n    \"key\": \"COMING_SOON\",\n    \"value\": \"Coming Soon\"\n  },\n  {\n    \"key\": \"CLOSED\",\n    \"value\": \"Closed\"\n    \"translations\": [\n      {\n        \"languageCode\": \"fr\",\n        \"value\": \"Fermé\"\n      }\n    ]\n  },\n  {\n    \"key\": \"OPEN\",\n    \"value\": \"Open\"\n  }\n}\n\nThe behavior of the options' keys depends on which Custom Fields endpoint you are using:\n* Get and List: The options' keys will be included in the response.\n* Create: Do not specify option keys. They will be automatically assigned when the field is created.\n* Update: If you include an option with an existing key, the option with that key will be updated with the value you specify. If you would like to add an option, specify its value but not its key, as the key will be automatically assigned when the option is added.\n    * **NOTE:** If you do not include an existing option in your Update request, it will be deleted.\n",
            "items": {
              "$ref": "#/components/schemas/Option"
            }
          },
          "group": {
            "type": "string",
            "description": "The Custom Field's group.\n",
            "enum": [
              "NONE",
              "GROUP_1",
              "GROUP_2",
              "GROUP_3",
              "GROUP_4",
              "GROUP_5",
              "GROUP_6",
              "GROUP_7",
              "GROUP_8",
              "GROUP_9",
              "GROUP_10",
              "GROUP_11",
              "GROUP_12",
              "GROUP_13",
              "GROUP_14",
              "GROUP_15",
              "GROUP_16",
              "GROUP_17",
              "GROUP_18",
              "GROUP_19",
              "GROUP_20",
              "GROUP_21",
              "GROUP_22",
              "GROUP_23",
              "GROUP_24",
              "GROUP_25",
              "GROUP_26",
              "GROUP_27",
              "GROUP_28",
              "GROUP_29",
              "GROUP_30"
            ],
            "default": "NONE"
          },
          "description": {
            "type": "object",
            "description": "The Custom Field's description (including value and translations) which, if provided, will be shown as a tooltip next to the Custom Field in the Knowledge Manager. Providing a description is highly recommended when creating apps for the App Directory.\n\n After March 19th 2020, if users **Update** Custom Field's description using older versions of the API without explicitly specifiying translations, any existing translations will be cleared.\n\n**Example:**\n\"description\": {\n  \"value\": \"This is the list of promotions\",\n  \"translations\": [\n    {\n      \"languageCode\": \"fr\",\n      \"value\": \"Ceci est la liste des promotions\"\n    }\n  ]\n}\n",
            "properties": {
              "value": {
                "type": "string",
                "description": "The field's default description value."
              },
              "translations": {
                "type": "array",
                "description": "Localized variations of **`value`**.",
                "items": {
                  "$ref": "#/components/schemas/Translation"
                }
              }
            }
          },
          "alternateLanguageBehavior": {
            "type": "string",
            "description": "Custom Field multi-language profile behavior, which is one of:\n\n`PRIMARY_ONLY`: The Custom Field can only have a value set on its primary language profile.\n\n`OVERRIDABLE`: The Custom Field can have a value set on any alternate language profiles, which will override the primary language profile value when the alternate language profile is requested. When requested, if a value is not set for an alternate language profile, the primary language profile value will be returned.\n\n`LANGUAGE_SPECIFIC`: The Custom Field can have a value set on any alternate language profiles. When requested, if a value is not set for an alternate language profile, no value will be returned.\n",
            "default": "PRIMARY_ONLY"
          },
          "validation": {
            "$ref": "#/components/schemas/Validation"
          },
          "entityAvailability": {
            "type": "array",
            "description": "A list of entity types that the Custom Field is available to.\n",
            "items": {
              "$ref": "#/components/schemas/EntityTypes"
            }
          }
        }
      },
      "Field": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FieldUpdate"
          },
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "\nID that should be used when referencing the field in API calls. This ID will also serve as the Custom Field's key in our upcoming Entities API endpoints.\nNote that in Locations endpoints, Custom Fields are still referenced by their numeric **`id`**, which can be obtained by calling the Custom Fields: List endpoint with a **`v`** param before `20180809`.\n(For Create requests) Must have a prefix of `c_` and contain only alphanumeric characters or underscores.\n"
              },
              "type": {
                "type": "string",
                "description": "\nThe data type of the Custom Field's contents.\nNote that the `LOCATION_LIST` type has been renamed to `ENTITY_LIST`. The former can still be obtained by calling Custom Fields endpoints with a **`v`** param before `20180809`.\n",
                "enum": [
                  "BOOLEAN",
                  "CTA",
                  "DAILY_TIMES",
                  "DATE",
                  "GALLERY",
                  "HOURS",
                  "ENTITY_LIST",
                  "MULTILINE_TEXT",
                  "MULTI_OPTION",
                  "NUMBER",
                  "PHOTO",
                  "RICH_TEXT",
                  "SINGLE_OPTION",
                  "TEXT",
                  "TEXT_LIST",
                  "URL",
                  "VIDEO",
                  "VIDEO_GALLERY"
                ]
              }
            }
          }
        ]
      },
      "PageToken": {
        "type": "string",
        "description": "\nPass this value into the next request as the **`pageToken`** parameter to retrieve the next page of data.\n\nIf the response of a request contains the last page of data, a **`pageToken`** value will not be returned. A **`pageToken`** will never appear in the response if the request contains the **`sortOrder`**, **`randomization`**, or **`randomizationToken`** parameters.\n"
      },
      "EntityType": {
        "type": "string",
        "enum": [
          "LOCATION",
          "HEALTHCARE_PROFESSIONAL",
          "HEALTHCARE_FACILITY",
          "EVENT",
          "RESTAURANT",
          "ATM"
        ]
      },
      "Publisher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Publisher ID"
          },
          "name": {
            "type": "string",
            "description": "Publisher name"
          },
          "url": {
            "type": "string",
            "description": "Publisher home page. Will link to Apple App Store for mobile-only apps"
          },
          "alternateBrands": {
            "type": "array",
            "description": "List of Publisher's alternate brands where listings are syndicated",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Alternate brand name"
                },
                "url": {
                  "type": "string",
                  "description": "Alternate brand's home page"
                }
              }
            }
          },
          "supportedCountries": {
            "type": "array",
            "description": "List of countries where this Publisher publishes listings. Countries are denoted by ISO 3166 2-letter country codes",
            "items": {
              "type": "string"
            }
          },
          "supportedLocationTypes": {
            "type": "array",
            "description": "List of Location types that are supported by this Publisher\n\nOnly present if the **`v`** parameter is before `20190111`\n",
            "items": {
              "$ref": "#/components/schemas/LocationType"
            }
          },
          "supportedEntityTypes": {
            "type": "array",
            "description": "List of Entity types that are supported by this Publisher\n\nOnly present if the **`v`** parameter is `20190111` or later\n",
            "items": {
              "$ref": "#/components/schemas/EntityType"
            }
          },
          "features": {
            "type": "array",
            "description": "List of features supported by this Publisher",
            "items": {
              "type": "string",
              "enum": [
                "DUAL_SYNC",
                "SUBMISSION",
                "SUPPRESSION",
                "SUPPRESSION_BY_URL",
                "REVIEW_MONITORING",
                "PUBLISHER_SUGGESTIONS",
                "ANALYTICS",
                "SOCIAL",
                "MENU_SYNC"
              ]
            }
          },
          "typicalUpdateSpeed": {
            "type": "string",
            "description": "Typical speed for updates to go live, in seconds"
          }
        }
      },
      "ListingStatusDetail": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Unique code for the warning/unavailable reason"
          },
          "type": {
            "type": "string",
            "enum": [
              "UNAVAILABLE_REASON",
              "WARNING"
            ]
          },
          "message": {
            "type": "string",
            "description": "Explanation of the warning, or why the listing is unavailable"
          },
          "actionable": {
            "type": "boolean",
            "description": "Indicates whether the customer can take action to resolve the issue"
          }
        }
      },
      "Listing": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of this listing"
          },
          "locationId": {
            "type": "string",
            "description": "ID of the location associated with this listing"
          },
          "accountId": {
            "type": "string",
            "description": "ID of the account associated with this listing"
          },
          "publisherId": {
            "type": "string",
            "description": "ID of publisher associated with this listing\n"
          },
          "status": {
            "type": "string",
            "enum": [
              "WAITING_ON_YEXT",
              "WAITING_ON_CUSTOMER",
              "WAITING_ON_PUBLISHER",
              "LIVE",
              "UNAVAILABLE",
              "OPTED_OUT"
            ]
          },
          "additionalStatus": {
            "type": "string",
            "enum": [
              "CONNECTED",
              "NOT_CONNECTED"
            ]
          },
          "listingUrl": {
            "type": "string",
            "description": "Listing URL"
          },
          "loginUrl": {
            "type": "string",
            "description": "URL where the user can log in to the publisher to manage this listing at that publisher (only returned for Google My Business)"
          },
          "screenshotUrl": {
            "type": "string",
            "description": "URL of a screenshot of the profile page that includes the Featured Message"
          },
          "statusDetails": {
            "type": "array",
            "description": "List of warnings, or reasons why the listing is unavailable",
            "items": {
              "$ref": "#/components/schemas/ListingStatusDetail"
            }
          },
          "alternateBrands": {
            "type": "array",
            "description": "*(only present if the **v** parameter is `20170420` or later)* \n\nList of Publisher's alternate brands where the listing is syndicated\n",
            "items": {
              "type": "object",
              "properties": {
                "brandName": {
                  "type": "string",
                  "description": "Alternate brand name"
                },
                "listingUrl": {
                  "type": "string",
                  "description": "The listing's URL on the alternate brand's site"
                }
              }
            }
          }
        }
      },
      "PublisherSuggestion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of this Publisher Suggestion"
          },
          "publisherId": {
            "type": "string",
            "description": "ID of the publisher who submitted the suggestion"
          },
          "locationId": {
            "type": "string",
            "description": "ID of the location the suggestion is for"
          },
          "dateCreated": {
            "type": "string",
            "format": "date",
            "description": "The date Yext received the suggestion"
          },
          "dateResolved": {
            "type": "string",
            "format": "date",
            "description": "The date the suggestion expired or was accepted or rejected"
          },
          "fieldName": {
            "type": "string",
            "description": "The location field the suggestion is for"
          },
          "status": {
            "type": "string",
            "description": "The status of the suggestion",
            "enum": [
              "WAITING_ON_CUSTOMER",
              "ACCEPTED",
              "REJECTED",
              "EXPIRED"
            ]
          },
          "resolvedBy": {
            "type": "string",
            "description": "Resolver of the Publisher Suggestion"
          },
          "originalContent": {
            "type": "string",
            "description": "The content that the publisher suggested to change\n"
          },
          "suggestedContent": {
            "type": "string",
            "description": "The content suggested as a replacement of the `originalContent`\n"
          }
        }
      },
      "DuplicateUnavailableReason": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Unique code for the unavailable reason"
          },
          "reason": {
            "type": "string",
            "description": "Explanation for why the listing is unavailable"
          }
        }
      },
      "Duplicate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of this duplicate listing"
          },
          "publisherId": {
            "type": "string",
            "description": "ID of the publisher site where the duplicate listing appears"
          },
          "locationId": {
            "type": "string",
            "description": "ID of the location the duplicate listing is for"
          },
          "url": {
            "type": "string",
            "description": "URL of the duplicate listing"
          },
          "name": {
            "type": "string",
            "description": "The business name that appears on the duplicate listing"
          },
          "address": {
            "type": "string",
            "description": "The address that appears on the duplicate listing"
          },
          "phone": {
            "type": "string",
            "description": "The phone number that appears on the duplicate listing"
          },
          "latitude": {
            "type": "string",
            "description": "The latitude of the location, as shown on the duplicate listing (e.g., in a map view)"
          },
          "longitude": {
            "type": "string",
            "description": "The longitude of the location, as shown on the duplicate listing (e.g., in a map view)"
          },
          "status": {
            "type": "string",
            "description": "The status of the duplicate. Note: the `DELETED` status is only available in webhook responses.",
            "enum": [
              "POSSIBLE_DUPLICATE",
              "SUPPRESSION_REQUESTED",
              "SUPPRESSED",
              "UNAVAILABLE",
              "DELETED"
            ]
          },
          "suppressionType": {
            "type": "string",
            "description": "The publisher's suppression type",
            "enum": [
              "REDIRECT",
              "ERROR",
              "MERGE",
              "REMOVE_FROM_SEARCH",
              "MOBILE",
              "SEARCH_PAGE"
            ]
          },
          "unavailableReasons": {
            "type": "array",
            "description": "List of reasons why suppression is unavailable for this duplicate listing (will be empty unless **`status`** is `UNAVAILABLE`)",
            "items": {
              "$ref": "#/components/schemas/DuplicateUnavailableReason"
            }
          }
        }
      },
      "VerificationMethod": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "description": "ID of the entity being verified."
          },
          "addressData": {
            "type": "object",
            "properties": {
              "businessName": {
                "type": "string",
                "description": "The business name that appears on the requested postcard that contains the verification code."
              },
              "address": {
                "type": "string",
                "description": "The address where the postcard containing the verification code will be sent."
              }
            }
          },
          "phoneData": {
            "type": "object",
            "properties": {
              "phoneNumber": {
                "type": "string",
                "description": "The phone number that will receive the call or text message containing the verification code."
              }
            }
          },
          "emailData": {
            "type": "object",
            "properties": {
              "domainName": {
                "type": "string",
                "description": "The domain name of the email address where the verification code will be sent.\n\nEx: “@yext.com” in “test@yext.com”\n"
              },
              "userName": {
                "type": "string",
                "description": "The username portion of the email address where the verification code will be sent.\n\nEx: “test” in “test@yext.com”\n"
              },
              "userNameEditable": {
                "type": "boolean",
                "description": "If true, a verification may be initiated using a different username on the same email domain."
              }
            }
          }
        }
      },
      "VerificationStatus": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "description": "ID of the entity being verified."
          },
          "state": {
            "type": "string",
            "enum": [
              "VERIFICATION_STATE_UNSPECIFIED",
              "PENDING",
              "COMPLETED",
              "FAILED"
            ]
          },
          "createTime": {
            "type": "string",
            "description": "The time that the verification was created."
          }
        }
      },
      "VerificationInitiation": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "description": "ID of the entity being verified."
          },
          "method": {
            "type": "string",
            "enum": [
              "POSTCARD",
              "EMAIL",
              "PHONE",
              "SMS"
            ]
          },
          "alternateEmail": {
            "type": "string",
            "description": "Provides a user-specified email address that the verification code should be sent to\nwhen **`userNameEditable`** is `true` in the VerificationMethod response.\n"
          },
          "recipientName": {
            "type": "string",
            "description": "Contact name the mail should be addressed to.\nOnly applies if the verification **`method`** is `POSTCARD`.\n"
          }
        }
      },
      "VerificationCompletion": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "description": "ID of the entity being verified."
          },
          "verificationCode": {
            "type": "string",
            "description": "The verification code received from the publisher."
          }
        }
      },
      "Admin": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "description": "ID of the entity that the admin belongs to."
          },
          "publisherId": {
            "type": "string",
            "description": "ID of the publisher for which the verification is happening."
          },
          "adminName": {
            "type": "string",
            "description": "If the invitation to this admin is still pending, the email of the admin.\nIf the admin has accepted the invitation and been successfully added, the name of the admin.\n"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN_ROLE_UNSPECIFIED",
              "OWNER",
              "CO_OWNER",
              "MANAGER",
              "COMMUNITY_MANAGER"
            ]
          },
          "pendingInvitation": {
            "type": "boolean",
            "description": "Indicates whether there is a pending invitation for this admin."
          }
        }
      },
      "AdminInvite": {
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "description": "ID of the entity that the admin will be associated with."
          },
          "adminEmail": {
            "type": "string",
            "description": "Email of the admin to be invited."
          }
        }
      },
      "EntityListing": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of this listing"
          },
          "entityId": {
            "type": "string",
            "description": "ID of the entity associated with this listing"
          },
          "accountId": {
            "type": "string",
            "description": "ID of the account associated with this listing"
          },
          "publisherId": {
            "type": "string",
            "description": "ID of publisher associated with this listing"
          },
          "status": {
            "type": "string",
            "enum": [
              "NOT_SYNCED",
              "SYNC_IN_PROGRESS",
              "LIVE",
              "UPDATE_IN_PROGRESS",
              "CANCELING_SYNC",
              "NOT_APPLICABLE",
              "DELETE_PENDING",
              "DELETE_FAILED",
              "DELETED",
              "SYNC_STOPPED"
            ],
            "description": "The status of this listing"
          },
          "listingUrl": {
            "type": "string",
            "description": "The URL of this listing"
          },
          "statusDetails": {
            "type": "array",
            "description": "List of warning messages or reasons why the listing is unavailable. Only included if the listing has a warning message or is unavailable.",
            "items": {
              "$ref": "#/components/schemas/ListingStatusDetail"
            }
          }
        }
      },
      "Answer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of this answer."
          },
          "authorName": {
            "type": "string",
            "description": "The name of the person that created this answer."
          },
          "authorPhotoUrl": {
            "type": "string",
            "description": "The photo URL of the person that created this answer."
          },
          "authorType": {
            "type": "string",
            "enum": [
              "REGULAR_USER",
              "LOCAL_GUIDE",
              "MERCHANT",
              "AUTHOR_TYPE_UNSPECIFIED"
            ]
          },
          "upvoteCount": {
            "type": "integer",
            "description": "Number of upvotes the answer has."
          },
          "content": {
            "type": "string",
            "description": "The answer text."
          },
          "createTime": {
            "type": "integer",
            "description": "Timestamp the answer was created on the publisher."
          },
          "updateTime": {
            "type": "integer",
            "description": "Timestamp the answer was last updated on the publisher."
          }
        }
      },
      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of this question."
          },
          "entityIds": {
            "type": "array",
            "description": "IDs of the entities associated to this question.",
            "items": {
              "type": "string"
            }
          },
          "accountId": {
            "type": "string",
            "description": "ID of the account associated with this question."
          },
          "publisherId": {
            "type": "string",
            "description": "ID of the publisher associated with this question. For first-party Q&A, this will be FIRSTPARTY.\n"
          },
          "authorName": {
            "type": "string",
            "description": "The name of the person that asked the question."
          },
          "authorEmail": {
            "type": "string",
            "description": "The email of the person that asked the question. Only supported for FIRSTPARTY Q&A.\n"
          },
          "authorPhotoUrl": {
            "type": "string",
            "description": "The photo URL of the person that asked the question."
          },
          "authorType": {
            "type": "string",
            "enum": [
              "REGULAR_USER",
              "LOCAL_GUIDE",
              "MERCHANT",
              "AUTHOR_TYPE_UNSPECIFIED"
            ]
          },
          "language": {
            "type": "string",
            "description": "The language of the question. Only supported for FIRSTPARTY Q&A."
          },
          "upvoteCount": {
            "type": "integer",
            "description": "Number of upvotes the question has."
          },
          "content": {
            "type": "string",
            "description": "The question text."
          },
          "description": {
            "type": "string",
            "description": "Additional description text. Only supported for FIRSTPARTY Q&A."
          },
          "createTime": {
            "type": "integer",
            "description": "Timestamp the question was created on the publisher."
          },
          "updateTime": {
            "type": "integer",
            "description": "Timestamp the question was last updated on the publisher."
          },
          "answerCount": {
            "type": "integer",
            "description": "Number of answers the question has."
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Answer"
            }
          }
        }
      },
      "AnswerRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "The answer text."
          }
        }
      },
      "ActivityFilter": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "The inclusive start date for the activity data."
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "The inclusive end date for the activity data."
          },
          "locationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locationIds"
          },
          "activityTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "LOCATION_UPDATED",
                "PUBLISHER_SUGGESTION_CREATED",
                "PUBLISHER_SUGGESTION_APPROVED",
                "PUBLISHER_SUGGESTION_REJECTED",
                "REVIEW_CREATED",
                "SOCIAL_POST_CREATED",
                "LISTING_LIVE",
                "DUPLICATE_SUPPRESSED"
              ]
            },
            "description": "Activity types to include in an Activity list."
          },
          "actors": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "YEXT_SYSTEM",
                "SCHEDULED_CONTENT",
                "API",
                "PUBLISHER"
              ]
            },
            "description": "List of actors whose activities should be included in an Activity list."
          }
        }
      },
      "ActivityLogRequest": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Optional.  Number of results to return, up to 200. Default 50."
          },
          "offset": {
            "type": "integer",
            "description": "Optional.  Number of results to skip.  Used to page through results. Default 0."
          },
          "filters": {
            "$ref": "#/components/schemas/ActivityFilter"
          }
        }
      },
      "Activity": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of the activity. See possible values above."
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp when the activity occurred (milliseconds since epoch)."
          },
          "locationId": {
            "type": "string",
            "description": "The ID of the location affected by the activity, if applicable."
          },
          "actor": {
            "type": "string",
            "description": "The performer of the activity. See possible values above."
          },
          "actorDetails": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the actor if the activity was performed by a user. Otherwise an empty string (\"\")."
              },
              "email": {
                "type": "string",
                "description": "Email address of the actor if the activity was performed by a user. Otherwise an empty string (\"\")."
              }
            }
          },
          "content": {
            "type": "string",
            "description": "A description of the activity (e.g., Listing Live on Facebook) or the text that was saved as a result of the activity (e.g., Call Today!, MAIN : 9085550506) May be an empty string (\"\") for certain activities (e.g., updates to Enhanced Content Lists)."
          },
          "details": {
            "type": "string",
            "description": "A description of the activity (e.g., Featured Message field updated, New Social post on Facebook)."
          }
        }
      },
      "Metric": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of an Analytics metric for which reporting data can be retrieved."
          },
          "completedDate": {
            "format": "date",
            "type": "string",
            "description": "The date until which complete data for the metric is available, in `YYYY-MM-DD` format."
          }
        }
      },
      "AnalyticsFilter": {
        "type": "object",
        "properties": {
          "ANSWERS_BACKEND": {
            "type": "array",
            "description": "Backend(s) used to return results.",
            "items": {
              "type": "string",
              "enum": [
                "ALGOLIA",
                "BING_CSE",
                "CUSTOM_SEARCHER",
                "GOOGLE_CSE",
                "KNOWLEDGE_MANAGER",
                "ZENDESK",
                "UNKNOWN"
              ]
            }
          },
          "ANSWERS_BLANK_SEARCH_TERM": {
            "type": "boolean",
            "description": "Indicates whether no Search Term was entered for Search."
          },
          "ANSWERS_CLICK_LABEL": {
            "type": "string",
            "description": "Label assigned to CTA_CLICK types."
          },
          "ANSWERS_CLICK_TYPE": {
            "type": "string",
            "description": "Type of click performed by user."
          },
          "ANSWERS_CLICK_URL": {
            "type": "string",
            "description": "URL user was sent to on click, e.g. Google Maps on Driving Directions click."
          },
          "ANSWERS_CLUSTER": {
            "type": "string",
            "description": "Name of the Cluster a Search Term belongs to. Search Term Clusters are named by using the most popular Search Term (based on Sessions) within the Cluster."
          },
          "ANSWERS_CONFIGURATION_VERSION": {
            "type": "array",
            "description": "Version Number of Configuration Search was run on.",
            "items": {
              "type": "string"
            }
          },
          "ANSWERS_CONFIGURATION_VERSION_LABEL": {
            "type": "array",
            "description": "Version Label of Configuration Search was run on.",
            "items": {
              "type": "string"
            }
          },
          "ANSWERS_DIRECT_ANSWER_CLICK": {
            "type": "boolean",
            "description": "Indicates whether click was a from Direct Answer."
          },
          "ANSWERS_DIRECT_ANSWER_FIELD": {
            "type": "string",
            "description": "Field returned in Direct Answer."
          },
          "ANSWERS_DIRECT_ANSWER_FIELD_VALUE": {
            "type": "string",
            "description": "Value returned in Direct Answer."
          },
          "ANSWERS_EXPERIENCE": {
            "type": "array",
            "description": "Name of Answers Experience.",
            "items": {
              "type": "string"
            }
          },
          "ANSWERS_HAS_KG_RESULTS": {
            "type": "boolean",
            "description": "Include only searches with results from the Knowledge Graph."
          },
          "ANSWERS_HAS_SEARCH_TERM_CLUSTER": {
            "type": "boolean",
            "description": "Indicates whether a Search Term belongs to a Search Term Cluster. Search Terms may not belong to a cluster if they do not pertain to any other terms searched on your experience or if it is a new term that has been searched for the first time since clustering was last run."
          },
          "ANSWERS_QUERY_SOURCE": {
            "type": "array",
            "description": "The integration source from which this search originated. This includes the following options: STANDARD (standard search bar) and OVERLAY (within an search overlay).",
            "items": {
              "type": "string",
              "enum": [
                "STANDARD",
                "OVERLAY"
              ]
            }
          },
          "ANSWERS_RAW_SEARCH_TERM": {
            "type": "string",
            "description": "Raw Search Term entered by user for Search."
          },
          "ANSWERS_REFERRER_DOMAIN": {
            "type": "string",
            "description": "Domain of page where user was sent from, e.g. jobs.mysite.com."
          },
          "ANSWERS_REFERRER_PAGE_URL": {
            "type": "string",
            "description": "URL of page where user was sent from e.g. https://jobs.mysite.com/careers/open-positions/."
          },
          "ANSWERS_RESULT_ENTITY_POSITION": {
            "type": "integer",
            "description": "Position Entity was returned within Vertical."
          },
          "ANSWERS_RESULT_TITLE": {
            "type": "string",
            "description": "Title of Result from Third Party Backends. For results that come from Knowledge Graph backends this will be blank."
          },
          "ANSWERS_RESULT_VERTICAL_POSITION": {
            "type": "integer",
            "description": "Position of Verticals in Result."
          },
          "ANSWERS_SEARCH_ID": {
            "type": "string",
            "description": "ID of Search."
          },
          "ANSWERS_SEARCH_TERM": {
            "type": "string",
            "description": "Normalized Search Term of Search. Normalization removes: Capitalization, Punctuation, White Space."
          },
          "ANSWERS_SEARCH_TERM_CLUSTER_PERFORMANCE": {
            "type": "array",
            "description": "Identify how well a cluster is performing based on % of Total Searches and Click Through Rate.\nCluster Performance breaks down into four groups with ids between 0-3.\n0: Needs Attention - Large Cluster\n1: Needs Attention - Small Cluster\n2: Performing Well - Small Cluster\n3: Performing Well - Large Cluster\n",
            "items": {
              "type": "integer"
            }
          },
          "ANSWERS_SEARCH_TERM_INTENT": {
            "type": "string",
            "description": "Whether Search Term should be boosted or blacklisted based on your experience config. Options include BOOSTED and BLACKLISTED."
          },
          "ANSWERS_SEARCH_VERTICAL": {
            "type": "array",
            "description": "Vertical Search was ran on.",
            "items": {
              "type": "string"
            }
          },
          "ANSWERS_SESSION_ID": {
            "type": "string",
            "description": "ID of Session Search was run in."
          },
          "ANSWERS_TRAFFIC_TYPE": {
            "type": "array",
            "description": "Type of Traffic.",
            "items": {
              "type": "string",
              "enum": [
                "EXTERNAL",
                "INTERNAL"
              ]
            }
          },
          "ANSWERS_USER_CITY": {
            "type": "string",
            "description": "City of user running Search."
          },
          "ANSWERS_USER_COUNTRY": {
            "type": "string",
            "description": "Country of user running Search."
          },
          "ANSWERS_USER_DEVICE_CLASS": {
            "type": "string",
            "description": "Device of user running Search."
          },
          "ANSWERS_USER_LAT_LONG": {
            "type": "string",
            "description": "Lat, Long of user running Search."
          },
          "ANSWERS_USER_LOCATION_ACCURACY": {
            "type": "string",
            "description": "Method for identifying user location. Options include Unknown, Device, and IP."
          },
          "CLICK_TYPE": {
            "type": "array",
            "description": "Conversion Tracking click type.",
            "items": {
              "type": "string",
              "enum": [
                "ADD_TO_CART",
                "APPLY_NOW",
                "BOOK_APPOINTMENT",
                "CALL",
                "CALL_TO_ACTION",
                "DETAIL",
                "DRIVING_DIRECTIONS",
                "EMAIL",
                "FEATURED_MESSAGE",
                "ORDER_NOW",
                "ROW_EXPAND",
                "RSVP",
                "THUMBS_UP",
                "TITLE",
                "UBER_LINK",
                "WEB",
                "OTHER",
                "UNKNOWN"
              ]
            }
          },
          "CONFIGURATION_VERSION_LABEL": {
            "type": "array",
            "description": "Configuration Version Label.",
            "items": {
              "type": "string",
              "enum": [
                "PRODUCTION",
                "STAGING"
              ]
            }
          },
          "CONVERSION_TYPE": {
            "type": "array",
            "description": "Conversion Type.",
            "items": {
              "type": "string",
              "enum": [
                "COST_SAVING_CUSTOMER_SUPPORT",
                "COST_SAVING_OTHER",
                "LEAD",
                "NO_TYPE",
                "PAGE_VIEW",
                "PURCHASE",
                "SIGN_UP",
                "OTHER_CONVERSION_TYPE",
                "UNKNOWN_CONVERSION_TYPE"
              ]
            }
          },
          "MEDIUM": {
            "type": "string",
            "description": "Conversion tracking medium."
          },
          "PRODUCT": {
            "type": "array",
            "description": "Identify conversion analytics by the product in which they occurred.",
            "items": {
              "type": "string",
              "enum": [
                "ANSWERS",
                "LISTINGS",
                "PAGES",
                "UNKNOWN"
              ]
            }
          },
          "TRAFFIC_SOURCE": {
            "type": "array",
            "description": "Identify conversion analytics by the source of the traffic.",
            "items": {
              "type": "string",
              "enum": [
                "EXTERNAL",
                "INTERNAL",
                "UNKNOWN_TRAFFIC_SOURCE"
              ]
            }
          },
          "VALUE_PROPOSITION": {
            "type": "array",
            "description": "Identify conversion analytics by their value proposition.",
            "items": {
              "type": "string",
              "enum": [
                "COST_SAVINGS",
                "REVENUE_GENERATING"
              ]
            }
          },
          "VERTICAL_CONFIG_ID": {
            "type": "string",
            "description": "Vertical Config ID."
          },
          "age": {
            "type": "array",
            "description": "Array of age groups. Can only be used with Facebook metrics.",
            "items": {
              "type": "string",
              "enum": [
                "AGE13_17",
                "AGE18_24",
                "AGE25_34",
                "AGE35_44",
                "AGE45_54",
                "AGE55",
                "UNKNOWN"
              ]
            }
          },
          "competitor": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Competitors monitored by the Intelligent Search Tracker. Can only be used with Intelligent Search Tracker metrics."
          },
          "countries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of 3166 Alpha-2 country codes."
          },
          "customerActionType": {
            "type": "array",
            "description": "Specifies the type of customer actions to be included in the report. Can only be used with the `GOOGLE_CUSTOMER_ACTIONS` and `YELP_CUSTOMER_ACTIONS` metrics.\n",
            "items": {
              "type": "string",
              "enum": [
                "ACTION_DRIVING_DIRECTIONS",
                "ACTION_PHONE",
                "ACTION_WEBSITE"
              ]
            }
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "The exclusive end date for the report data. Defaults to the earliest of the relevant maximum reporting dates. Must be after the date given in **`startDate`**.\nNOTES:\n- If **`dimensions`** contains `WEEKS`, `MONTHS`, or `MONTHS_RETAIL`, the end date must coincide with the end of a week or month, depending on the dimension chosen.\n- If the **`v`** parameter is before `20180314`, the end date is inclusive, and the end date must be on or after the date given in **`startDate`**.\n",
            "example": "2017-01-31"
          },
          "entityGroup": {
            "type": "array",
            "description": "Array of entity groups.",
            "items": {
              "type": "string",
              "enum": [
                "CATEGORIES",
                "EVENTS",
                "LOCATIONS",
                "ORGANIZATIONS",
                "PEOPLE",
                "UNKNOWN"
              ]
            }
          },
          "entityIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of entity IDs."
          },
          "entityType": {
            "type": "array",
            "description": "Array of entity types.",
            "items": {
              "type": "string",
              "enum": [
                "ATM",
                "CATEGORY_PAGE",
                "EVENT",
                "HEALTHCARE_PROFESSIONAL",
                "HEALTHCARE_FACILITY",
                "LOCATION",
                "ORGANIZATION",
                "RESTAURANT"
              ]
            }
          },
          "eventSearchCondition": {
            "type": "array",
            "description": "Array of event search conditions.",
            "items": {
              "type": "string",
              "enum": [
                "INITIAL_SCAN",
                "DAYS28_PRIOR",
                "DAYS7_PRIOR",
                "DAY_OF",
                "DAYS7_AFTER"
              ]
            }
          },
          "facebookImpressionType": {
            "type": "array",
            "description": "Array of Facebook impression types.",
            "items": {
              "type": "string",
              "enum": [
                "ORGANIC",
                "PAID",
                "VIRAL"
              ]
            }
          },
          "facebookRsvpType": {
            "type": "array",
            "description": "Array of Facebook RSVP types.",
            "items": {
              "type": "string",
              "enum": [
                "ATTENDING",
                "DECLINED",
                "INTERESTED",
                "MAYBE"
              ]
            }
          },
          "facebookStoryType": {
            "type": "array",
            "description": "Array of Facebook RSVP types.",
            "items": {
              "type": "string",
              "enum": [
                "CHECKIN",
                "COUPON",
                "EVENT",
                "FAN",
                "MENTION",
                "OTHER",
                "PAGE_POST",
                "QUESTION",
                "USER_POST"
              ]
            }
          },
          "folderIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Specifies a list of folders whose locations and subfolders should be included in the results. Defaults to all folders.\nCannot be used when `ACCOUNT_ID` is in **`dimensions`**.\n"
          },
          "foursquareCheckinAge": {
            "type": "array",
            "description": "Array of Foursquare check-in age groups.",
            "items": {
              "type": "string",
              "enum": [
                "AGE13_17",
                "AGE18_24",
                "AGE25_34",
                "AGE35_44",
                "AGE45_54"
              ]
            }
          },
          "foursquareCheckinGender": {
            "type": "string",
            "description": "Foursquare check-in gender.",
            "enum": [
              "FEMALE",
              "MALE"
            ]
          },
          "foursquareCheckinTimeOfDay": {
            "type": "array",
            "description": "Array of Foursquare check-in times.",
            "items": {
              "type": "string",
              "enum": [
                "MORNING",
                "NOON",
                "AFTERNOON",
                "EVENING",
                "NIGHT"
              ]
            }
          },
          "foursquareCheckinType": {
            "type": "string",
            "description": "Foursquare check-in type.",
            "enum": [
              "NEW",
              "REPEAT"
            ]
          },
          "frequentWords": {
            "type": "array",
            "description": "Specifies the words that should be included in the report. Can only be used with Reviews metrics.",
            "items": {
              "type": "string"
            }
          },
          "gender": {
            "type": "string",
            "enum": [
              "FEMALE",
              "MALE",
              "UNIDENTIFIED"
            ]
          },
          "googleActionType": {
            "type": "array",
            "description": "Specifies the type of customer actions to be included in the report. Can only be used with the `GOOGLE_CUSTOMER_ACTIONS` metric.\n",
            "items": {
              "type": "string",
              "enum": [
                "ACTION_DRIVING_DIRECTIONS",
                "ACTION_PHONE",
                "ACTION_WEBSITE"
              ]
            }
          },
          "googleQueryType": {
            "type": "array",
            "description": "Specifies the type of queries to be included in the report. Can only be used with the `GOOGLE_SEARCH_QUERIES` metric.",
            "items": {
              "type": "string",
              "enum": [
                "QUERIES_CHAIN",
                "QUERIES_DIRECT",
                "QUERIES_INDIRECT"
              ]
            }
          },
          "hours": {
            "type": "array",
            "description": "Specifies the hour(s) of day that should be included in the report. Can only, and must be used with the `GOOGLE_PHONE_CALLS` metric.",
            "items": {
              "type": "number",
              "format": "integer",
              "minimum": 0,
              "maximum": 23
            }
          },
          "instagramContentType": {
            "type": "string",
            "description": "Instagram content type.",
            "enum": [
              "PHOTO",
              "VIDEO"
            ]
          },
          "keyword": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The keyword used to create search requests. Can only be used with Intelligent Search Tracker metrics."
          },
          "listingsLiveType": {
            "type": "string",
            "description": "Specifies the type of listings live that should be included in the report. Can only be used with `LISTINGS_LIVE` metric.",
            "enum": [
              "CLAIMED",
              "CREATED"
            ]
          },
          "locationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of location IDs"
          },
          "locationLabels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of location labels. Cannot be used with `NEW_REVIEWS` or `AVERAGE_RATING` metrics."
          },
          "matchPosition": {
            "type": "array",
            "description": "The local pack or organic position of the search result. Can only be used with Intelligent Search Tracker metrics.",
            "items": {
              "type": "string",
              "enum": [
                "ONE",
                "TWO",
                "THREE",
                "FOUR",
                "FIVE",
                "SIX_TO_TEN"
              ]
            }
          },
          "matchType": {
            "type": "array",
            "description": "One of Local Map Pack, Listings, Pages and Corporate Website. Can only be used with Intelligent Search Tracker metrics.",
            "items": {
              "type": "string",
              "enum": [
                "COMPETITOR",
                "COMPETITOR_PAID_AD",
                "CORPORATE_WEBSITE",
                "LISTINGS",
                "LOCAL_PACK",
                "LOCATION_PAGES",
                "NO_MATCH",
                "PAID_AD"
              ]
            }
          },
          "maxSearchFrequency": {
            "type": "number",
            "format": "double",
            "description": "Maximum number of times a search term may have been used."
          },
          "minSearchFrequency": {
            "type": "number",
            "format": "double",
            "description": "Minimum number of times a search term may have been used."
          },
          "pageTypes": {
            "type": "array",
            "description": "Specifies the Pages page types that should be included in the report. Can only be used with Store Pages metrics",
            "items": {
              "type": "string",
              "enum": [
                "DIRECTORY",
                "SEARCH",
                "STORE"
              ]
            }
          },
          "partners": {
            "type": "array",
            "description": "Specifies the partners that should be included in the report. Can only be used with Reviews metrics.",
            "items": {
              "type": "number",
              "format": "long"
            }
          },
          "platformType": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "BOT",
                "DESKTOP",
                "MOBILE",
                "TABLET",
                "UNKNOWN"
              ]
            },
            "description": "Array of platform types."
          },
          "publisherSuggestionType": {
            "type": "array",
            "description": "Specifies the types of publisher suggestions that should be included in the report. Can only be used with `PUBLISHER_SUGGESTIONS` metric.",
            "items": {
              "type": "string",
              "enum": [
                "ACCEPTED",
                "CANCELED",
                "NEW",
                "REJECTED"
              ]
            }
          },
          "queryTemplate": {
            "type": "array",
            "description": "The query template used to create search requests. Can only be used with Intelligent Search Tracker metrics.",
            "items": {
              "type": "string",
              "enum": [
                "KEYWORD",
                "KEYWORD_CITY",
                "KEYWORD_CITY_STATE",
                "KEYWORD_IN_CITY",
                "KEYWORD_NEAR_ME",
                "KEYWORD_ZIP"
              ]
            }
          },
          "ratings": {
            "type": "array",
            "description": "Specifies the ratings to be included in the report. Can only be used with Reviews metrics.",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 5
            }
          },
          "reviewLabels": {
            "type": "array",
            "description": "Specifies the review labels that should be included in the report. Can only be used with Reviews metrics.",
            "items": {
              "type": "number",
              "format": "long"
            }
          },
          "searchEngine": {
            "type": "array",
            "description": "The search engine used for the Intelligent Search Tracker. Can only be used with Intelligent Search Tracker metrics.",
            "items": {
              "type": "string",
              "enum": [
                "BING_DESKTOP",
                "GOOGLE_DESKTOP",
                "GOOGLE_MOBILE",
                "YAHOO_DESKTOP"
              ]
            }
          },
          "searchResultType": {
            "type": "array",
            "description": "One of Organic, Local Pack or Knowledge Card. Can only be used with Intelligent Search Tracker metrics.",
            "items": {
              "type": "string",
              "enum": [
                "KNOWLEDGE_CARD_RESULT",
                "LOCAL_PACK_RESULT",
                "ORGANIC_RESULT"
              ]
            }
          },
          "searchTerms": {
            "type": "string"
          },
          "sentimentCollection": {
            "type": "array",
            "description": "Specifies the sentiment collection that should be included in the report. Can only be used with Reviews metrics.",
            "items": {
              "type": "number",
              "format": "integer"
            }
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "The inclusive start date for the report data. Defaults to 90 days before the end date. Must be before the date given in **`endDate`**.\nE.g. ‘2016-08-22’\nNOTE: If `WEEKS`, `MONTHS`, or `MONTHS_RETAIL` is in **`dimensions`**, **`startDate`** must coincide with the beginning and end of a week or month, depending on the dimension chosen.\n",
            "example": "2017-01-01"
          }
        }
      },
      "CreateReportRequestBody": {
        "type": "object",
        "required": [
          "metrics",
          "dimensions"
        ],
        "properties": {
          "metrics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The kinds of data the report should include. Specify up to 10 values.\n\n* **`ANSWERS_CASE_DEFLECTIONS`**: The number of times a user started their journey but did not create a case.\n* **`ANSWERS_CASE_DEFLECTION_RATE`**: Percentage of cases that were deflected by Support Search.\n* **`ANSWERS_CASE_STARTS`**: The number of times a user started their journey with search.\n* **`ANSWERS_CASE_SUBMITS`**: The number of times a user started their journey with search and submitted a case.\n* **`ANSWERS_CLICKS`**: Number of times content has been clicked.\n* **`ANSWERS_CLICK_THROUGH_RATE`**: Percentage of Searches with a click, rounded to the 1’s place, e.g. `67.96% → 68%`. CTR = Searches with Click / Searches.\n* **`ANSWERS_CLUSTERS`**: Distinct count of Clusters.\n* **`ANSWERS_KG_RESULT_RATE`**: Percentage of Searches where a Knowledge Graph Result was returned.\n* **`ANSWERS_PERCENTAGE_OF_TOTAL_SEARCHES`**: Percentage of Answers Searches a given dimension(s) represents based on the dimension(s) and filter(s) selected e.g. Percentage of Searches by Search Term where Version Label = PRODUCTION.\n* **`ANSWERS_SEARCHES`**: Number of times a user ran a Search.\n* **`ANSWERS_SEARCHES_WITH_CLICKS`**: Number of times a user ran a Search and clicked a link.\n* **`ANSWERS_SEARCHES_WITH_KG_RESULTS`**: Number of times a user ran a Search that returned Knowledge Graph Results.\n* **`ANSWERS_SEARCH_TERMS`**: Distinct count of Search Terms.\n* **`ANSWERS_SESSIONS`**: Number of times a Session was started. A Session begins on user’s first search and ends when user closes the browser.\n* **`AVERAGE_RATING`**: The cumulative average of the ratings your business has received.\n* **`BING_SEARCHES`**: The number of times your listings were included in Bing search results. Because Bing sends data for full weeks rather than individual days, **`dimensions`** cannot contain `DAYS`, `MONTHS`, or `MONTHS_RETAIL` if `BING_SEARCHES` is in **`metrics`**. Also, reports with `BING_SEARCHES` have different reporting maximum dates than reports with other metrics.\n* **`CLICKS`**: The number of times consumers clicked on your online properties.\n* **`CONVERSIONS`**: The number of conversions based on the methodology you selected.\n* **`CONVERSION_RATE`**: Conversions divided by clicks.\n* **`CONVERSION_SEARCHES`**: Number of Answers Searches with a Click.\n* **`CONVERSION_VALUE`**: The monetary impact of your conversions.\n* **`CUMULATIVE_RATING`**: Average review rating of Competitors.\n* **`DUPLICATES_DETECTED`**: Count of all duplicates detected.\n* **`DUPLICATES_SUPPRESSED`**: Count of all duplicates suppressed.\n* **`EVENT_PROFILEVIEWS`**: The number of times a consumer has seen your full event listing profile on a publisher site, either by clicking on your event listing from a search on the publisher site or from another search engine.\n* **`EVENT_SEARCHES`**: The number of times a consumer has run a search and seen your event listing in the search result on a Yext Listings Publisher site.\n* **`FACEBOOK_CHECKINS`**: The total number of consumers who have checked into your business, along with the people tagged as being with them when checking in.\n* **`FACEBOOK_CTA_CLICKS`**: The total number of clicks on your Page CTA button by people who are logged in to Facebook.\n* **`FACEBOOK_EVENT_NEW_RSVPS`**: The number of new RSVPs to your Facebook event.\n* **`FACEBOOK_IMPRESSIONS`**: The total number of impressions seen of any content associated with your Page.\n* **`FACEBOOK_LIKES`**: The number of consumers who have \"liked\" your Page.\n* **`FACEBOOK_PAGE_VIEWS`**: The total number of times your Page has been viewed.\n* **`FACEBOOK_POST_IMPRESSIONS`**: The number of impressions for your Page post.\n* **`FACEBOOK_TALKING_ABOUT`**: The number of unique consumers who had an interaction with your Page. For an interaction to be included in this total, it must result in a story being posted to the newsfeeds of those consumers' friends. Examples of these interactions include, but are not limited to, sharing a post on your Page, liking your Page, or tagging your location in a photo.\n* **`FACEBOOK_WERE_HERE`**: The total number of consumers who have checked into your business on Facebook, along with the people tagged as being with them when checking in.\n* **`FEATURED_MESSAGE_CLICKS`**: The number of times consumers clicked on your Featured Messsage. Does not include Featured Messages on Yelp, Facebook, Bing, or Google.\n* **`FOURSQUARE_DAILY_CHECKINS`**: The number of consumers who checked into your business on Foursquare on a given date.\n* **`GOOGLE_CUSTOMER_ACTIONS`**: The number of times consumers called your business, got driving directions to your business, or visited your website via the links in your Google listings.\n* **`GOOGLE_MAP_VIEWS`**: The number of times your listings were viewed on Google Maps.\n* **`GOOGLE_PHONE_CALLS`**: The number of times consumers called your business by clicking your phone number in your Google listings during the past 90 days. You must use the `GOOGLE_PHONE_CALL_HOURS` dimension with this metric.\n* **`GOOGLE_SEARCH_QUERIES`**: The number of times your listings appeared in search results on either Google Search or Google Maps.\n* **`GOOGLE_SEARCH_VIEWS`**: The number of times your listings were viewed on Google Search.\n* **`GOOGLE_USER_PHOTOS`**: The number of photos uploaded by Google users (consumers) to your Google listing.\n* **`INSTAGRAM_POSTS`**: *NOTE: This metric is deprecated.* The number of times consumers posted Instagram content geotagged at your business.\n* **`IST_AD_MATCHES`**: The total number of ads matched to the location or one of its competitors.\n* **`IST_AD_PRESENCE`**: The percentage of searches in which at least one ad appeared for the location or one of its competitors.\n* **`IST_AVERAGE_FIRST_LOCAL_PACK_MATCH_POSITION`**: The average position of the first match in the local pack in the search engine results page if one exists.\n* **`IST_AVERAGE_FIRST_MATCH_POSITION`**: The average position of the first match in either the local pack or organic results in the search engine results page if one exists.\n* **`IST_AVERAGE_FIRST_ORGANIC_MATCH_POSITION`**: The average position of the first match in the organic results in the search engine results page if one exists.\n* **`IST_AVERAGE_LOCAL_PACK_NUMBER_OF_RESULTS`**: The average number of results in the local pack when it appears in a search engine results page.\n* **`IST_AVERAGE_LOCAL_PACK_POSITION`**: The average position of the local pack when it appears in a search engine results page.\n* **`IST_KNOWLEDGE_CARD_EXISTED`**: The percentage of times a knowledge card showed up in search results.\n* **`IST_LOCAL_PACK_EXISTED`**: The percentage of times a local pack showed up in search results.\n* **`IST_LOCAL_PACK_PRESENCE`**: The percentage of times your business appears in a local pack when one was shown.\n* **`IST_LOCAL_PACK_SHARE_OF_SEARCH`**: The share of search for all local pack matches in the search engine results page.\n* **`IST_MATCHES_PER_SEARCH`**: The total number of matches on the first page of the search engine results.\n* **`IST_ORGANIC_SHARE_OF_SEARCH`**: The share of search for all organic matches in the search engine results page.\n* **`IST_SEARCH_REQUESTS`**: The number of search requests that were successfully analyzed.\n* **`IST_SHARE_OF_INTELLIGENT_SEARCH`**: The share of search for all matches in the search engine results page.\n* **`IST_TOTAL_MATCHES`**: The total number of matches on the first page of the search engine results.\n* **`KEYWORD_MENTIONS`**: The number of times a review keyword is mentioned.\n* **`KEYWORD_SENTIMENT`**: The sentiment score of review keywords.\n* **`LISTINGS_LIVE`**: Count of new listings live.\n* **`NEW_REVIEWS`**: The number of new reviews your business has received.\n* **`POWERLISTINGS_LIVE`**: The total number of your listings that were live.\n* **`PROFILE_UPDATES`**: Count of updates to your Yext profile.\n* **`PROFILE_VIEWS`**: The number of times your listings were viewed. Does not include listings on Yelp, Bing, or Google.\n* **`PUBLISHER_SUGGESTIONS`**: Count of all publisher suggestions.\n* **`RESPONSE_COUNT`**: The number of reviews with responses on publishers that support in-platform response.\n* **`RESPONSE_RATE`**: The percentage of reviews with responses on publishers that support in-platform response.\n* **`RESPONSE_TIME`**: The average time in hours between the review date and the response date of all reviews with responses that can be responded to in the platform.\n* **`SEARCHES`**: The number of times your listings were included in search results. Does not include search results on Yelp, Facebook, Bing, or Google.\n* **`SESSIONS`**: Number of Answers Sessions with a Click.\n* **`SOCIAL_ACTIVITIES`**: Count of all new social posts.\n* **`ST_EVENT_MATCHES_PER_SEARCH`**: Matches per Search for Events.\n* **`ST_EVENT_RICH_RESULT_PRESENCE`**: The percentage of time your event appeared in an event rich result when one was shown.\n* **`ST_EVENT_SHARE_OF_INTELLIGENT_SEARCH`**: Share of Intelligent Search for your Events.\n* **`STOREPAGES_CALLTOACTIONCLICKS`**: The number of times someone clicked a call to action on your Store Pages.\n* **`STOREPAGES_CLICKSTOWEBSITE`**: The number of times someone clicked to go to your website from your Store Pages.\n* **`STOREPAGES_DRIVINGDIRECTIONS`**: The number of times someone clicked for directions on your Store Pages.\n* **`STOREPAGES_EVENT_eventtype`**: The number of times the Store Pages custom event occurred. Replace \"eventtype\" with the custom event name.\n* **`STOREPAGES_PAGEVIEWS`**: The number of page views on your Store Pages.\n* **`STOREPAGES_PHONECALLS`**: The number of times someone clicked to make a phone call from your Store Pages.\n* **`STOREPAGES_SESSIONS`**: The number of unique visitors (sessions) to your Store Pages.\n* **`TICKET_CLICKS`**: Clicks to a button that allows users to get tickets.\n* **`VALUE_PER_CONVERSION`**: Total conversion value divided by the number of conversions.\n* **`WIDGETS_REVIEWS_VIEWS`**: The number of views of embedded 'widgets' containing reviews.\n* **`YELP_CUSTOMER_ACTIONS`**: The number of times consumers called your business, got driving directions to your business, or visited your website via the links in your Yelp listings.\n* **`YELP_PAGE_VIEWS`**: Number of times your listings on Yelp (\"pages\") were viewed.\n"
          },
          "dimensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Determines how the data will be grouped. Specify up to 3 values.\n<br><br>\n**NOTES:**\n<br>\nYou can only use one time-based dimension (e.g., `DAYS`, `WEEKS`) per report.\n<br>\nYou can only use one location-based dimenion (e.g., `FOLDER_IDS`, `LOCATION_NAMES`) per report.\n<br><br>\n* **`ACCOUNT_IDS`**: Identify events by sub-account.\n* **`AGE`**: The age range of a Facebook user. Can be used with `FACEBOOK_LIKES`, `FACEBOOK_TALKING_ABOUT`, `FACEBOOK_CHECKINS`, `FACEBOOK_IMPRESSIONS`, and `FACEBOOK_PAGE_VIEWS`.\n* **`ANSWERS_BACKEND`**: Backend(s) used to return results. Currently includes: <ul><li>`Algolia`<li>`Bing CSE`<li>`Custom Covid Backend`<li>`Knowledge Manager`<li>`Google CSE`<li>`Zendesk`</ul> Can only be used with Answers metrics.\n* **`ANSWERS_BLANK_SEARCH_TERM`**: Indicates whether no Search Term was entered for Search.\n* **`ANSWERS_CLICK_LABEL`**: Label assigned to CTA_CLICK types.\n* **`ANSWERS_CLICK_TYPE`**: Type of Click. Can only be used with Answers metrics.\n* **`ANSWERS_CLICK_URL`**: URL user was sent to on click, e.g. Google Maps on Driving Directions click.\n* **`ANSWERS_CLUSTER`**: Name of the Cluster a Search Term belongs to. Search Term Clusters are named by using the most popular Search Term (based on Sessions) within the Cluster.\n* **`ANSWERS_CONFIGURATION_VERSION`**: Version Number of Configuration used to run the Search. Can only be used with Answers metrics.\n* **`ANSWERS_CONFIGURATION_VERSION_LABEL`**: Version Label of Configuration used to run the Search. Can only be used with Answers metrics.\n* **`ANSWERS_DIRECT_ANSWER_CLICK`**: Indicates whether a click was from Direct Answer.\n* **`ANSWERS_DIRECT_ANSWER_FIELD`**: Field returned in Direct Answer.\n* **`ANSWERS_DIRECT_ANSWER_FIELD_VALUE`**: Value returned in Direct Answer.\n* **`ANSWERS_EXPERIENCE`**: Name of Answers Experience. Can only be used with Answers metrics.\n* **`ANSWERS_EXPERIENCE_KEY`**: Key of Answers Experience. Can only be used with Answers metrics.\n* **`ANSWERS_HAS_KG_RESULTS`**: Include only searches with results from the Knowledge Graph.\n* **`ANSWERS_HAS_SEARCH_TERM_CLUSTER`**: Indicates whether a Search Term belongs to a Search Term Cluster. Search Terms may not belong to a cluster if they do not pertain to any other terms searched on your experience or if it is a new term that has been searched for the first time since clustering was last run.\n* **`ANSWERS_LOCALE`**: Locale Search was run in. Can only be used with Answers metrics.\n* **`ANSWERS_QUERY_SOURCE`**: The integration source from which this search originated. This includes the following options: STANDARD (standard search bar) and OVERLAY (within an search overlay).\n* **`ANSWERS_RAW_SEARCH_TERM`**: Raw Search Term entered by user for Search.\n* **`ANSWERS_REFERRER_DOMAIN`**: Domain of page where user was sent from, e.g. jobs.mysite.com.\n* **`ANSWERS_REFERRER_PAGE_URL`**: URL of page where user was sent from, e.g. https://jobs.mysite.com/careers/open-positions/.\n* **`ANSWERS_RESULT_ENTITY_POSITION`**: Position Entity was returned within Vertical.\n* **`ANSWERS_RESULT_TITLE`**: Title of Result from Third Party Backends. For results that come from Knowledge Graph backends this will be blank.\n* **`ANSWERS_RESULT_VERTICAL_POSITION`**: Position of Verticals in Result.\n* **`ANSWERS_SEARCH_ID`**: ID of Search. Can only be used with Answers metrics.\n* **`ANSWERS_SEARCH_TERM`**: Normalized Search Term of Search. Normalization removes: <ul><li>`Capitalization`<li>`Punctuation`<li>`White Space`</ul> Can only be used with Answers metrics.\n* **`ANSWERS_SEARCH_TERM_CLUSTER_PERFORMANCE`**: Identify how well a cluster is performing based on % of Total Searches and Click Through Rate. Cluster Performance breaks down into four groups: Needs Attention - Large Cluster, Needs Attention - Small Cluster, Performing Well - Small Cluster and Performing Well - Large Cluster.\n* **`ANSWERS_SEARCH_TERM_INTENT`**: Whether Search Term should be boosted or blacklisted based on your experience config. Options include BOOSTED and BLACKLISTED.\n* **`ANSWERS_SEARCH_VERTICAL`**: Vertical Search was ran on. Can only be used with Answers metrics.\n* **`ANSWERS_SESSION_ID`**: ID of Session Search was run in. Can only be used with Answers metrics.\n* **`ANSWERS_TRAFFIC_TYPE`**: `External` or `Internal`. Can only be used with Answers metrics.\n* **`ANSWERS_USER_CITY`**: City of user running Search.\n* **`ANSWERS_USER_COUNTRY`**: Country of user running Search.\n* **`ANSWERS_USER_DEVICE_CLASS`**: Device of user running Search.\n* **`ANSWERS_USER_LAT_LONG`**: Lat, Long of user running Search.\n* **`ANSWERS_USER_LOCATION_ACCURACY`**: Method for identifying user location. Options include Unknown, Device, and IP.\n* **`ANSWERS_VERSION_LABEL`**: The Configuration Version Label of the Answers clicks or conversions.\n* **`CLICK_TYPE`**: Identify the type of click that a conversion is attributed to. Can only be used with Conversion Tracking metrics.\n* **`CONVERSION_ACTION_ID`**: Can only be used with Conversion Tracking metrics.\n* **`CONVERSION_TYPE`**: Type of conversion action (Customer Support, Lead, Page View, Purchase, etc).\n* **`CUSTOMER_ACTION_TYPE`**: The type of action consumers took through your Google or Yelp listings (Phone Calls, Get Directions, or Website Clicks). Can only be used with the `GOOGLE_CUSTOMER_ACTIONS` and `YELP_CUSTOMER_ACTIONS` metrics. Replaces `GOOGLE_ACTION_TYPE` for **`v`** parameters `20170914` and later.\n* **`DAYS`**: Identify events by day.\n* **`DAY_OF_WEEK`** Identify events by day of the week (Monday, Tuesday, etc.).\n* **`ENTITY_GROUPS`** Identify events by the type group of the corresponding entity.\n* **`ENTITY_IDS`** Identify events by the corresponding entity.\n* **`ENTITY_TYPES`** Identify events by the type of the corresponding entity.\n* **`EVENTS`** Identify events by the corresponding event.\n* **`EVENT_SEARCH_CONDITION`**: Identify Search Tracker for Events metrics by the event search schedule condition. Can be used with Search Tracker Event metrics.\n* **`FACEBOOK_IMPRESSION_TYPE`**: Indicates whether your Facebook Impressions came from Organic, Paid, or Viral content. Can only be used with the `FACEBOOK_IMPRESSIONS` and `FACEBOOK_POST_IMPRESSIONS` metrics.\n* **`FACEBOOK_RSVP_TYPE`**: Identify Facebook Events by RSVP type. Can be used with `FACEBOOK_EVENT_NEW_RSVPS`.\n* **`FACEBOOK_STORY_TYPE`**: How people are talking about your Page (e.g., posts, likes, comments). Can only be used with the `FACEBOOK_TALKING_ABOUT` metric.\n* **`FIELD_NAME`**: The name of the field being updated in your profile (can only be used with the `PROFILE_UPDATES` metric).\n* **`FOLDER_IDS`**: Identify events by folder ID of the corresponding entity.\n* **`FOLDER_NAMES`**: Identify events by folder name of the corresponding entity.\n* **`FOURSQUARE_AGE`**: Groups checkins by the users' ages (`13-17`, `18-24`, `25-34`, `35-44`, `45-54`, `55+`). Can only be used with the `FOURSQUARE_DAILY_CHECKINS` metric.\n* **`FOURSQUARE_GENDER`**: Groups checkins by users' sexes (`male` or `female`). Can only be used with the `FOURSQUARE_DAILY_CHECKINS` metric.\n* **`FOURSQUARE_TIME`**: Groups checkins by their times (`morning`: 7 AM - 10:59 AM, `noon`: 11 AM - 1:59 PM, `afternoon`: 2 PM - 5:59 PM, `evening`: 6 PM - 8:59 PM, `night`: 9 PM - 6:59 AM). Can only be used with the `FOURSQUARE_DAILY_CHECKINS` metric.\n* **`FREQUENT_WORDS`**: The words that most frequently appear in your reviews.\n* **`GENDER`**: The gender of a Facebook user. Can be used with `FACEBOOK_LIKES`, `FACEBOOK_TALKING_ABOUT`, `FACEBOOK_CHECKINS`, `FACEBOOK_IMPRESSIONS`, and `FACEBOOK_PAGE_VIEWS`.\n* **`GOOGLE_ACTION_TYPE`**: The type of action consumers took through your Google listings (Phone Calls, Get Directions, or Website Clicks). Can only be used with the `GOOGLE_CUSTOMER_ACTIONS` metric. Only works with **`v`** parameters before `20170914`.\n* **`GOOGLE_PHONE_CALL_HOURS`**: Can only be used with the `GOOGLE_PHONE_CALLS` metric.\n* **`GOOGLE_QUERY_TYPE`**: Groups search criteria based on whether they contained your brand name (branded) or not (unbranded). Can only be used with the `GOOGLE_SEARCH_QUERIES` metric. If the **`v`** parameter is before `20171020`: groupings are `BRANDED QUERIES` and `UNBRANDED QUERIES`, otherwise groupings are `DIRECT` and `DISCOVERY`. If the **`v`** parameter is `20190425` or later: a new query type `BRANDED` is added.\n* **`IST_COMPETITOR`**: Competitors monitored by the Intelligent Search Tracker. Can be used with Intelligent Search Tracker metrics and the Cumulative Rating metric.\n* **`IST_KEYWORD`**: The keyword used to create search requests. Can only be used with Intelligent Search Tracker metrics.\n* **`IST_LOCAL_PACK_COMPETITOR`**: Local pack competitors monitored by the Intelligent Search Tracker. Can be used with `IST_MATCHES_PER_SEARCH` and `IST_TOTAL_MATCHES`.\n* **`IST_MATCH_POSITION`**: The local pack or organic position of the search result. Can only be used with Intelligent Search Tracker metrics.\n* **`IST_MATCH_TYPE`**: One of Local Map Pack, Listings, Pages and Corporate Website. Can only be used with Intelligent Search Tracker metrics.\n* **`IST_QUERY_TEMPLATE`**: The query template used to create search requests. Can only be used with Intelligent Search Tracker metrics.\n* **`IST_SEARCH_ENGINE`**: The search engine used for the Intelligent Search Tracker. Can only be used with Intelligent Search Tracker metrics.\n* **`IST_SEARCH_RESULT_TYPE`**: One of Organic, Local Pack or Knowledge Card. Can only be used with Intelligent Search Tracker metrics.\n* **`LISTINGS_LIVE_TYPE`**: The type of of listings live, either be `Claimed` or `Created` (can only be used with `LISTINGS_LIVE` metric).\n* **`LOCATION_IDS`**: Identify events by store ID of the corresponding location.\n* **`LOCATION_NAMES`**: Identify events by name of the corresponding location.\n* **`MEDIUM_ID`**: Identify the source of click this conversion is attributed to. Can only be used with Conversion Tracking metrics.\n* **`MEDIUM_TYPE`**: Identify the type of source of click this conversion is attributed to. Can only be used with Conversion Tracking metrics.\n* **`MONTHS`**: Identify events by months of the Gregorian calendar (January, February, etc.).\n* **`MONTHS_RETAIL`**: Identify events by retail month. Refers to the 4-5-4 merchandising calendar.\n* **`PARTNERS`**: The sites your reviews appear on. Can only be used with Reviews metrics.\n* **`PLATFORM`**: Groups data by the platform on which the action measured in **`metrics`** was conducted (e.g., Desktop, Mobile).\n* **`QUARTERS`**: Identify events by quarter. Only supported for Review metrics.\n* **`PRODUCT`**: Identify conversion analytics by the product in which they occurred. Can only be used with Conversion Tracking metrics.\n* **`PUBLISHERS`**: Groups data about the site-interaction events listed in **`metrics`** by the sites on which they occurred.\n* **`PUBLISHER_SUGGESTION_TYPE`**: The type of the publisher suggestion (can only be used with the `PUBLISHER_SUGGESTIONS` metric).\n* **`RATINGS`**: Can only be used with Reviews metrics except CUMULATIVE_RATING.\n* **`REVIEW_KEYWORDS`**: The keywords used in your reviews.\n* **`REVIEW_LABELS`**: Identify reviews by their label.\n* **`SEARCH_QUERY`**: Groups searches according to the search criteria used. Can only be used with the `SEARCHES` metric.\n* **`SEARCH_TERM`**: Raw Search Term entered by user for Search.\n* **`SENTIMENT_COLLECTION`**: Identify reviews by their sentiment collection of keywords.\n* **`STOREPAGES_DIRECTORY`**: The directories of your Store Pages. Can only be used with Store Pages metrics.\n* **`STOREPAGES_PAGE_TYPE`**: The page types for your Store Pages. Can only be used with Store Pages metrics.\n* **`STOREPAGES_PAGE_URL`**: The urls people visited on your Store Pages. Can only be used with Store Pages metrics.\n* **`TRAFFIC_SOURCE`**: Identify conversion analytics by the source of the traffic.\n* **`VALUE_PROPOSITION`**: Value Proposition.\n* **`VERTICAL_CONFIG_ID`**: Vertical Config ID.\n* **`WEEKS`**: Identify events by week. A weeks is always Monday to Sunday, and is labeled with the date corresponding to the first day of that week.\n* **`WEEK_NUMBER`** A given week labeled with the number of weeks into a year and its corresponding year. A week is always Monday to Sunday, “Week 1” will always contain January 1st, and the year is the year of the last day (Sunday) of that week (Week 1 (2017), Week 2 (2017), etc.).\n"
          },
          "filters": {
            "$ref": "#/components/schemas/AnalyticsFilter"
          }
        }
      },
      "ReviewComment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of this comment (assigned by Yext).",
            "readOnly": true
          },
          "parentId": {
            "type": "integer",
            "description": "If this comment is in response to another comment, this is the ID of the parent comment."
          },
          "publisherDate": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp of the comment as reported by the publisher.  If edits impact the comment timestamp on the publisher, then this timestamp may change.  This timestamp always comes from the publisher and we respect whatever they have.",
            "readOnly": true
          },
          "authorName": {
            "type": "string",
            "description": "The name of the person who wrote the comment (if we have it).",
            "readOnly": true
          },
          "authorEmail": {
            "type": "string",
            "description": "The email address of the person who wrote the comment (if we have it).",
            "readOnly": true
          },
          "authorRole": {
            "type": "string",
            "enum": [
              "BUSINESS_OWNER",
              "CONSUMER"
            ],
            "readOnly": true
          },
          "content": {
            "type": "string",
            "description": "Content of the comment."
          },
          "visibility": {
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ],
            "description": "Defaults to `PUBLIC` when creating a comment"
          }
        }
      },
      "ReviewLabel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of this review label.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The name of this review label.",
            "readOnly": true
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of this review",
            "readOnly": true
          },
          "locationId": {
            "type": "string",
            "description": "ID of the location associated with this review"
          },
          "accountId": {
            "type": "string",
            "description": "ID of the account associated with this review"
          },
          "publisherId": {
            "type": "string",
            "description": "For third-party reviews, the ID of publisher associated with this listing.\nFor first-party reviews, this will be FIRSTPARTY.\n",
            "readOnly": true
          },
          "rating": {
            "type": "number",
            "format": "double",
            "description": "Normalized rating out of 5.\nThis value is omitted if the review does not include a rating.\n"
          },
          "title": {
            "type": "string",
            "description": "Title of the review.\nThis value is omitted if reviews on the publisher's site do not have titles.\n",
            "readOnly": true
          },
          "content": {
            "type": "string",
            "description": "Content of the review.\n"
          },
          "authorName": {
            "type": "string",
            "description": "The name of the person who wrote the review (if we have it)."
          },
          "authorEmail": {
            "type": "string",
            "description": "The email address of the person who wrote the review (if we have it)."
          },
          "url": {
            "type": "string",
            "description": "The URL of the review, or the URL of the listing where the review can be found if there is no specific URL for the review.",
            "readOnly": true
          },
          "publisherDate": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp of the review as reported by the publisher. If edits impact the review date on the publisher, then this date may change. This date always comes from the publisher and we respect whatever they have.",
            "readOnly": true
          },
          "lastYextUpdateTime": {
            "type": "integer",
            "format": "int64",
            "description": "If the **`v`** parameter is before `20170512`: the timestamp of the review (including listing updates).\n\nIf the **`v`** parameter is `20170512` or later: the timestamp of the review (excluding listing updates), or the timestamp of the latest comment on the review.\n",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "enum": [
              "LIVE",
              "QUARANTINED",
              "REMOVED"
            ],
            "description": "The current status of the review; only returned for First Party and External First Party reviews. Defaults to `QUARANTINED` when creating."
          },
          "flagStatus": {
            "type": "string",
            "enum": [
              "FLAGGED",
              "NOT_FLAGGED"
            ],
            "description": "Indicates whether the review has been flagged for inappropriate or irrelevant content. Note that only First Party and External First Party reviews can be flagged."
          },
          "reviewLanguage": {
            "type": "string",
            "description": "The language of the review, if identified."
          },
          "comments": {
            "type": "array",
            "description": "An ordered array of Comments on the review.\n\n**NOTE:** The order is a flattened tree with depth ties broken by publisher date.\n",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ReviewComment"
            }
          },
          "labelIds": {
            "type": "array",
            "description": "If the **`v`** parameter is before `20180710`: The IDs of the review labels added to the review.\n\nIf the **`v`** parameter is `20180710` or later: Not present.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n",
            "readOnly": true,
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "reviewLabels": {
            "type": "array",
            "description": "If the **`v`** parameter is before `20180710`: Not present.\n\nIf the **`v`** parameter is `20180710` or later: The names and IDs of the review labels added to the review.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/ReviewLabel"
            }
          },
          "reviewType": {
            "type": "string",
            "enum": [
              "Rating",
              "Recommendation"
            ],
            "description": "If the **`v`** parameter is before `20181002`: Not present.\n\nIf the **`v`** parameter is `20181002` or later: Indicates whether the review is a rating or a recommendation.\n\n**NOTE:** Only applicable to Facebook reviews.\n",
            "readOnly": true
          },
          "recommendation": {
            "type": "string",
            "enum": [
              "Recommended",
              "Not Recommended"
            ],
            "description": "If the **`v`** parameter is before `20181002`: Not present.\n\nIf the **`v`** parameter is `20181002` or later: Indicates whether the consumer recommends the entity being reviewed.\n\n**NOTE:** Only applicable to Facebook reviews.\n",
            "readOnly": true
          },
          "transactionId": {
            "type": "string",
            "description": "If present, the transaction ID associated with the invitation that resulted in this review.\n"
          },
          "invitationId": {
            "type": "string",
            "description": "If present, the ID associated with the invitation that resulted in this review.\n"
          }
        }
      },
      "CreateReview": {
        "type": "object",
        "required": [
          "locationId",
          "authorName",
          "rating",
          "content"
        ],
        "properties": {
          "locationId": {
            "type": "string",
            "description": "ID of the location associated with this review"
          },
          "authorName": {
            "type": "string",
            "description": "The name of the person who wrote the review."
          },
          "rating": {
            "type": "number",
            "format": "double",
            "description": "Normalized rating out of 5.\n"
          },
          "content": {
            "type": "string",
            "description": "Content of the review.\n"
          },
          "authorEmail": {
            "type": "string",
            "description": "The email address of the person who wrote the review."
          },
          "status": {
            "type": "string",
            "enum": [
              "LIVE",
              "QUARANTINED",
              "REMOVED"
            ],
            "description": "The current status of the review; only returned for First Party and External First Party reviews. Defaults to `QUARANTINED` when creating.\n"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "(`YYYY-MM-DD` format)\nIf provided, the date you received the review from the customer. Defaults to the date the review was uploaded to Yext.\n"
          }
        }
      },
      "UpdateReview": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "format": "double",
            "description": "Normalized rating out of 5. Can only be specified for External First Party Reviews.\n"
          },
          "content": {
            "type": "string",
            "description": "Content of the review. Can only be specified for External First Party Reviews.\n"
          },
          "authorName": {
            "type": "string",
            "description": "The name of the person who wrote the review. Can only be specified for External First Party\nReviews.\n"
          },
          "authorEmail": {
            "type": "string",
            "description": "The email address of the person who wrote the review. Can only be specified for External\nFirst Party Reviews.\n"
          },
          "status": {
            "type": "string",
            "enum": [
              "LIVE",
              "QUARANTINED",
              "REMOVED"
            ],
            "description": "The current status of the review.\n"
          },
          "flagStatus": {
            "type": "string",
            "enum": [
              "INAPPROPRIATE",
              "SPAM",
              "IRRELEVANT",
              "SENSITIVE",
              "NOT_FLAGGED"
            ],
            "description": "Indicates whether the review has been flagged for inappropriate or irrelevant\ncontent.\n"
          }
        }
      },
      "ReviewCommentUpdate": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Content of the comment."
          },
          "visibility": {
            "type": "string",
            "enum": [
              "PUBLIC",
              "PRIVATE"
            ]
          }
        }
      },
      "ReviewInvitation": {
        "type": "object",
        "required": [
          "locationId",
          "entity",
          "firstName",
          "lastName",
          "title",
          "contact"
        ],
        "properties": {
          "invitationUid": {
            "type": "string",
            "readOnly": true,
            "description": "The UID of this Review Invitation. This UID can be included as part of Review Creation\nrequests for attribution.\n\nIf the **`v`** parameter is before `20210728`, please refer to **`id`** as the parameter\nname instead of **`invitationUid`**.\n"
          },
          "entity": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ID of the entity associated with this review.\n\nIf the **`v`** parameter is before `20210728`, please refer to **`locationId`** as the\nparameter name instead of **`entity`**.\n"
              }
            }
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the person from whom a review is being requested."
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the person from whom a review is being requested."
          },
          "title": {
            "type": "string",
            "description": "The title of the person from whom a review is being requested\n(e.g., Mr., Mrs., Miss, etc.).\n"
          },
          "contact": {
            "type": "string",
            "description": "The email address or phone number of the person from whom a review is being requested.\n\nPhone numbers should be formatted in one of the following ways:\n* E.164 standard international format, with a leading \"+\"\n* National format, according to the country of the corresponding location\n"
          },
          "includeImage": {
            "type": "boolean",
            "description": "Only valid for SMS invitations.\n\nIf set to true, include the image provided in the relevant template in the SMS invitation.\nPlease note that an image counts as an SMS message towards your SMS capacity.\n\nOtherwise, the SMS message will not include an image.\n\nIf the **`v`** parameter is before `20210728`, please refer to **`image`** as the parameter\nname instead of **`includeImage`**.\n"
          },
          "templateId": {
            "type": "string",
            "description": "If specified, the ID of the template used to format the email.\n\nIf not specified, the entity’s default email template is used. If the entity has no default\ntemplate, the account’s default template is used.\n"
          },
          "transactionId": {
            "type": "string",
            "description": "The ID of the transaction being reviewed in response to this invitation.\n"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACCEPTED",
              "REJECTED",
              "PENDING"
            ],
            "readOnly": true
          },
          "details": {
            "type": "string",
            "description": "If status is REJECTED, describes why the invitation could not be processed.",
            "readOnly": true
          },
          "language": {
            "type": "string",
            "description": "The ISO 639-1 code of the review invitation's language. Only valid for invitations created\nfrom built-in templates. Defaults to `en`.\n\nSupported languages:\n  * `en`\n  * `de`\n  * `fr`\n  * `es`\n  * `it`\n  * `nl`\n  * `ja`\n"
          },
          "additionalUrlParameters": {
            "type": "string",
            "description": "A JSON object containing the key, value pairs for any additional URL parameters. These URL\nparameters will be appended to the First-Party Review Collection URL.\n\nThe **`additionalUrlParameters`** parameter will only be respected with the inclusion of\na **`v`** parameter of `20210728` or later.\n"
          },
          "sendInvitationFromYext": {
            "type": "boolean",
            "description": "Defaults to true. If set to false, Yext will not fulfill the invitation and will simply\nreturn the created invitation object.\n\nThe **`sendInvitationFromYext`** parameter will only be respected with the inclusion of a\n**`v`** parameter of `20210728` or later.\n"
          },
          "feedbackURL": {
            "type": "string",
            "readOnly": true,
            "description": "The created Feedback URL unique to this invitation.\n\nThe **`feedbackURL`** parameter will only be respected with the inclusion of a **`v`**\nparameter of `20210728` or later.\n"
          },
          "reviewLabels": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "object"
            },
            "description": "Review Labels associated with the review.\n\nThe **`reviewLabels`** parameter will only be respected with the inclusion of a **`v`**\nparameter of `20210728` or later.\n"
          }
        }
      },
      "ReviewInvitationDates": {
        "type": "object",
        "properties": {
          "sent": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp the invitation was sent, if the invitation was sent."
          },
          "opened": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp the invitation was opened, if the invitation was opened. This value will\nalways be null for SMS type invitations.\n"
          },
          "clicked": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp the invitation was clicked."
          },
          "reviewed": {
            "type": "integer",
            "format": "int64",
            "description": "The timestamp the review was generated as a result of this invitation.\n\nIf the **`v`** parameter is before `20210728`, please refer to **`responded`** as the\nparameter name instead of **`reviewed`**.\n"
          }
        }
      },
      "GetReviewInvitation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewInvitation"
          },
          {
            "type": "object",
            "properties": {
              "partnerId": {
                "type": "string",
                "description": "The determined sender of the invitation.\n\nFor invitations directed towards App Directory Partners, the ID of partner, otherwise this\nwill be FIRSTPARTY.\n"
              },
              "type": {
                "type": "string",
                "enum": [
                  "EMAIL",
                  "SMS"
                ]
              },
              "requested": {
                "type": "integer",
                "format": "int64",
                "description": "The timestamp the invitation was requested."
              }
            }
          },
          {
            "$ref": "#/components/schemas/ReviewInvitationDates"
          },
          {
            "type": "object",
            "properties": {
              "reviewId": {
                "type": "string",
                "description": "ID of the review if this invitation resulted in a review"
              }
            }
          }
        ]
      },
      "CreateReviewInvitationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewInvitation"
          },
          {
            "type": "object",
            "properties": {
              "reviewLabelNames": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The names of the Review Labels which will be attached to the resulting review.\n\nThis is an upsert operation, meaning the system will determine if a Review Label exists\nalready in your account, and create and append a new label if not.\n\nThe **`reviewLabelNames`** parameter will only be respected with the inclusion of a\n**`v`** parameter of `20210728` or later.\n"
              }
            }
          }
        ]
      },
      "UpdateReviewInvitationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReviewInvitationDates"
          },
          {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "description": "The first name of the person from whom a review is being requested.\n\nThe **`firstName`** parameter will only be respected for **`v`** parameters of `20210728`\nor later.\n"
              },
              "lastName": {
                "type": "string",
                "description": "The last name of the person from whom a review is being requested\n\nThe **`lastName`** parameter will only be respected for **`v`** parameters of `20210728`\nor later.\n"
              },
              "title": {
                "type": "string",
                "description": "The title of the person from whom a review is being requested (e.g., Mr., Mrs., Miss, etc.)\n\nThe **`title`** parameter will only be respected for **`v`** parameters of `20210728`\nor later.\n"
              },
              "contact": {
                "type": "string",
                "description": "The email address or phone number of the person from whom a review is being requested.\n\nPhone numbers should be formatted in one of the following ways:\n* E.164 standard international format, with a leading \"+\"\n* National format, according to the country of the corresponding location\n\nThe **`contact`** parameter will only be respected for **`v`** parameters of `20210728`\nor later.\n"
              },
              "transactionId": {
                "type": "string",
                "description": "The ID of the transaction being reviewed in response to this invitation.\n\nThe **`transactionId`** parameter will only be respected for **`v`** parameters of\n`20210728` or later.\n"
              },
              "additionalURLParameters": {
                "type": "string",
                "description": "A JSON object containing the key, value pairs for any additional URL parameters. These URL\nparameters will be appended to the First-Party Review Collection URL.\n\nThe **`additionalURLParameters`** parameter will only be respected for **`v`** parameters\nof `20210728` or later.\n"
              },
              "status": {
                "type": "string",
                "enum": [
                  "CANCELED"
                ],
                "description": "Cancel an existing review invitation with `PENDING` status by updating status to `CANCELED`\nPlease note that if the invitation status is not `PENDING`, attempting to set the status\nto `CANCELED` will fail.\n"
              },
              "errorCode": {
                "type": "string",
                "description": "The error code of the invitation if applicable. Required if `errorReason` is specified.\n\nThe **`errorCode`** parameter will only be respected for **`v`** parameters of `20210727`\nor earlier.\n"
              },
              "errorReason": {
                "type": "string",
                "description": "The error reason text of the invitation if applicable. Required if `errorCode` is specified.\n\nThe **`errorReason`** parameter will only be respected for **`v`** parameters of\n`20210727` or earlier.\n"
              }
            }
          }
        ]
      },
      "UpdatedReviewInvitation": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "invitationUid": {
                "type": "string",
                "readOnly": true,
                "description": "The UID of this Review Invitation. This UID can be included as part of Review Creation\nrequests for attribution.\n\nIf the **`v`** parameter is before `20210728`, please refer to **`id`** as the parameter\nname instead of **`invitationUid`**.\n"
              },
              "entity": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "ID of the entity associated with this review.\n\nIf the **`v`** parameter is before `20210728`, please refer to **`locationId`** as the\nparameter name instead of **`entity`**.\n"
                  }
                }
              },
              "firstName": {
                "type": "string",
                "description": "The first name of the person from whom a review is being requested.\n\nThe **`firstName`** parameter will only be respected for **`v`** parameters of `20210728`\nor later.\n"
              },
              "lastName": {
                "type": "string",
                "description": "The last name of the person from whom a review is being requested.\n\nThe **`lastName`** parameter will only be respected for **`v`** parameters of `20210728`\nor later.\n"
              },
              "title": {
                "type": "string",
                "description": "The title of the person from whom a review is being requested\n(e.g., Mr., Mrs., Miss, etc.).\n\nThe **`title`** parameter will only be respected for **`v`** parameters of `20210728`\nor later.\n"
              },
              "contact": {
                "type": "string",
                "description": "The email address or phone number of the person from whom a review is being requested.\n\nPhone numbers will be formatted in the E.164 standard international format, with a\nleading \"+\".\n\nThe **`contact`** parameter will only be respected for **`v`** parameters of `20210728`\nor later.\n"
              },
              "transactionId": {
                "type": "string",
                "description": "The ID of the transaction being reviewed in response to this invitation.\n\nThe **`transactionId`** parameter will only be respected for **`v`** parameters of\n`20210728` or later.\n"
              },
              "additionalURLParameters": {
                "type": "string",
                "description": "A JSON object containing the key, value pairs for any additional URL parameters. These URL\nparameters will be appended to the First-Party Review Collection URL.\n\nThe **`additionalURLParameters`** parameter will only be respected for **`v`** parameters\nof `20210728` or later.\n"
              },
              "status": {
                "type": "string",
                "enum": [
                  "SENT",
                  "PENDING",
                  "CANCELED",
                  "ATTEMPTED",
                  "NOT_DELIVERED",
                  "FAILED",
                  "DISABLED"
                ]
              },
              "errorCode": {
                "type": "string",
                "description": "The error code of the invitation if applicable.\n\nThe **`errorCode`** parameter will only be respected for **`v`** parameters of `20210727`\nor earlier.\n"
              },
              "errorReason": {
                "type": "string",
                "description": "The error reason text of the invitation if applicable.\n\nThe **`errorReason`** parameter will only be respected for **`v`** parameters of\n`20210727` or earlier.\n"
              }
            }
          },
          {
            "$ref": "#/components/schemas/ReviewInvitationDates"
          }
        ]
      },
      "UpdateReviewLabelsRequest": {
        "type": "object",
        "properties": {
          "labelIds": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The IDs of the review labels added to the review."
          }
        }
      },
      "ReviewGenerationSettings": {
        "type": "object",
        "properties": {
          "maxEmailsPerDay": {
            "type": "integer",
            "minimum": 0,
            "maximum": 200,
            "description": "Enables review invitations by email and indicates the maximum number of email invites our system will send on a per-location, per-day basis.\n\nMust contain an integer value between 0 and 200. If 0 or null, review invitations by email will be disabled.\n"
          },
          "maxTextsPerMonth": {
            "type": "integer",
            "minimum": 1,
            "description": "Indicates the maximum number of text invites our system will send on a per-location, per-month basis.\n"
          },
          "maxTextsPerDay": {
            "type": "integer",
            "minimum": 1,
            "maximum": 20,
            "description": "Enables review invitations by text and indicates the maximum number of text invites our system will send on a per-location, per-day basis.\nWe will send a maximum of 20 text invites per location per day.\n\nIf null, review invitations by text will be disabled.\n"
          },
          "maxContactFrequency": {
            "type": "integer",
            "enum": [
              7,
              30,
              60,
              90
            ],
            "description": "Indicates the minimum number of days that must pass before a given contact can be sent another review invitation.\nThis setting will prevent you from contacting the same person repeatedly in a short time period.\n\nIf null, no maximum contact frequency will be enforced.\n"
          },
          "reviewQuarantineDays": {
            "type": "integer",
            "minimum": 0,
            "maximum": 7,
            "description": "Prevents first-party reviews from immediately showing up on your website or wherever else you show your reviews.\nDuring this quarantine period, you may respond to reviews, increasing the likelihood that your customers will revise or remove their negative reviews.\n"
          },
          "privacyPolicy": {
            "type": "string",
            "description": "Review-collection pages contain a link to the Yext privacy policy by default.\nThis field lets you replace that link with a link to your own privacy policy.\n\nUpdate request must contain a URL or null. If null, the Yext privacy policy link will be used.\n\nIf the **`v`** parameter is before `20200910`, please refer to **`privacyPolicyOverride`** as\nthe parameter name instead of **`privacyPolicy`**.\n"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Yext Role ID"
          },
          "name": {
            "type": "string",
            "description": "The Role's Name"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "firstName",
          "lastName",
          "emailAddress"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of this User.\n\nIgnored when sent in update requests.\n"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name."
          },
          "lastName": {
            "type": "string",
            "description": "User's last name."
          },
          "emailAddress": {
            "type": "string",
            "description": "User's email address."
          },
          "phoneNumber": {
            "type": "string",
            "description": "User's phone number."
          },
          "emailLanguagePreference": {
            "type": "string",
            "description": "User's preferred email language. Must be a valid locale code (e.g., `en`, `en_UK`, `fr_FR`, `it`, etc.).\n\nIf omitted or set to `null`, the default language of the user's country will be used.\n"
          },
          "displayLanguagePreference": {
            "type": "string",
            "description": "User's preferred display language in the Yext platform. Must be a valid locale code (e.g., `en`, `en_UK`, `fr_FR`, `it`, etc.).\n\nIf omitted or set to `null`, the browser's default language will be used.\n"
          },
          "lastLoginDate": {
            "type": "string",
            "description": "User's last login time in UNIX timestamp"
          },
          "sso": {
            "type": "boolean",
            "description": "Indicates whether SAML SSO has been enabled for this user. Omit this field if you are using Signed Link SSO. More information can be found in our [Implementing Single Sign-On](http://developer.yext.com/docs/guides/implementing-single-sign-on/) guide.\n\nDefaults to false.\n"
          },
          "acl": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "roleId": {
                  "type": "string",
                  "description": "The Yext Role ID."
                },
                "roleName": {
                  "type": "string",
                  "description": "The Role's Name.\n"
                },
                "on": {
                  "type": "string",
                  "description": "The ID of the account, folder, or location that this role gives the user access to."
                },
                "accountId": {
                  "type": "string",
                  "description": "The ID of the account that contains the folder or location that this role applies to.\n\nIf ``onType`` is ``ACCOUNT``, the value of ``accountId`` is the same as the value of ``on``.\n"
                },
                "onType": {
                  "type": "string",
                  "description": "The type of object that this role gives the user access to.",
                  "enum": [
                    "ACCOUNT",
                    "FOLDER",
                    "LOCATION"
                  ]
                }
              }
            }
          }
        }
      },
      "CreateUserRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "properties": {
              "password": {
                "type": "string",
                "description": "User's password."
              },
              "username": {
                "type": "string",
                "description": "User's username."
              }
            }
          }
        ]
      },
      "UpdateUserRequest": {
        "required": [
          "username"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "description": "User's username."
              }
            }
          }
        ]
      },
      "UpdatePasswordRequest": {
        "type": "object",
        "required": [
          "newPassword"
        ],
        "properties": {
          "newPassword": {
            "type": "string",
            "description": "User's new password"
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "example": "CUST-439843"
          },
          "locationCount": {
            "type": "integer",
            "readOnly": true,
            "description": "The number of locations in this account."
          },
          "subAccountCount": {
            "type": "integer",
            "readOnly": true,
            "description": "The number of sub-accounts directly under this account, if any."
          },
          "parentAccountId": {
            "type": "string",
            "description": "Customer-provided ID of the account that this is a sub-account of, if any. Not provided if this is a top-level account."
          },
          "accountName": {
            "type": "string",
            "description": "The name of this account."
          },
          "contactFirstName": {
            "type": "string",
            "description": "First name of the contact user for this account."
          },
          "contactLastName": {
            "type": "string",
            "description": "Last name of the contact user for this account."
          },
          "contactPhone": {
            "type": "string",
            "description": "Phone number of the contact user for this account."
          },
          "contactEmail": {
            "type": "string",
            "description": "Email address of the contact user for this account."
          }
        }
      },
      "ApprovalGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Approval Group ID"
          },
          "name": {
            "type": "string",
            "description": "Approval Group Name"
          },
          "users": {
            "type": "array",
            "description": "Array of user IDs associated with the Approval Group",
            "items": {
              "type": "string"
            }
          },
          "isDefault": {
            "type": "boolean",
            "description": "true if Approval Group is default for assignment of new tasks. Defaults to false."
          }
        }
      },
      "CreateApprovalGroupRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Approval Group Name"
          },
          "users": {
            "type": "array",
            "description": "Array of user ids associated with the Approval Group",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "isDefault": {
            "type": "boolean",
            "description": "True if Approval Group is default for assignment of new tasks. Defaults to false."
          }
        }
      },
      "LinkedAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the linked account."
          },
          "publisherId": {
            "type": "string",
            "description": "ID of the publisher associated with the linked account."
          },
          "entityIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The entityId values for the entities the linked account is assigned to."
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the linked account owner."
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the linked account owner."
          },
          "email": {
            "type": "string",
            "description": "The email address associated with the linked account."
          },
          "status": {
            "type": "string",
            "description": "The last known status of the account.\n\n* `VALID`\n* `INVALID`\n\n`VALID`\nThe account's token is valid.\n\n`INVALID`\nThe account’s token has expired and will not be successful when syncing to/from publishers.\n"
          },
          "canAssign": {
            "type": "boolean",
            "description": "Indicates whether a linked account can be assigned to subaccounts and/or entities within subaccounts.\n\nThis field is only available for certain Yext accounts.\n"
          }
        }
      },
      "AssignLinkedAccountRequest": {
        "type": "object",
        "required": [
          "destinationAccountId"
        ],
        "properties": {
          "destinationAccountId": {
            "type": "string",
            "description": "The destination account ID that the linked account will be copied to."
          },
          "entityIds": {
            "type": "array",
            "description": "The IDs of the entities that the linked account will be assigned to. The entity IDs must belong to the destination account ID.\n\nentityIds is required in order to copy and assign the Linked Account to the destination account ID.\n",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OptimizationTask": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Optimization Task’s ID"
          },
          "name": {
            "type": "string",
            "description": "The name of the Optimization Task"
          },
          "description": {
            "type": "string",
            "description": "Description of the Optimization Task"
          },
          "locationsEligible": {
            "type": "number",
            "description": "The number of locations specified in the request that are eligible to have the task completed."
          },
          "locationsCompleted": {
            "type": "number",
            "description": "The number of locations specified in the request for which the task has been completed."
          }
        }
      },
      "AssetForEntities": {
        "type": "object",
        "required": [
          "mappingType"
        ],
        "properties": {
          "mappingType": {
            "type": "string",
            "description": "The type of asset-to-entity mapping:\n\n* `NO_ENTITIES`: Not available to any entity.\n* `ALL_ENTITIES`: Available to all entities.\n* `FOLDER`: Available to all entities in a specified folder.\n* `ENTITIES`: Available to entities with the IDs you specify.\n"
          },
          "folderId": {
            "type": "string",
            "description": "The *external* ID of the folder containing the entities this asset can be used for.\n\nOptional - can only be set if **`mappingType`** = `FOLDER`.\n"
          },
          "entityIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The *external* IDs of the entities this asset can be used for.\n\nOptional - can only be set if **`mappingType`** = `ENTITIES`.\n"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The *external* IDs of the labels given to the entities this asset can be used for.\n\nNote that these labels are NOT asset labels. They are entity labels associated with particular entities in the Knowledge Manager.\n\nOptional - can only be set if **`mappingType`** = `FOLDER` or `ALL_ENTITIES`.\n"
          },
          "labelOperator": {
            "type": "string",
            "enum": [
              "AND",
              "OR"
            ],
            "description": "The operator on the labels in **`labelIds`** (i.e., whether the asset can be used on entities with all (`AND`) or any (`OR`) of the labels specified).\n\nOptional - can only be set if **`mappingType`** = `FOLDER` or `ALL_ENTITIES`.\n"
          }
        }
      },
      "AssetUsage": {
        "type": "object",
        "required": [
          "usageType"
        ],
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of asset usage that is being defined. Can have one of the following values:\n\n* `ALL`\n* `PROFILE_FIELDS`\n* `REVIEW_RESPONSE`\n* `SOCIAL_POSTING`\n* `ALL_PROFILE_FIELDS`\n* `REVIEW_RESPONSE_GREETING`\n* `REVIEW_RESPONSE_VALUE_STATEMENT`\n* `REVIEW_RESPONSE_POSITIVE_SENTIMENT`\n* `REVIEW_RESPONSE_NEGATIVE_SENTIMENT`\n* `REVIEW_RESPONSE_CLOSING`\n\n`ALL`\nIndicates that the asset is available to services that use assets, including any that may be added in the future.\n\n`PROFILE_FIELDS`\nIndicates that the asset is available to the fields specified in the **`fieldNames`** subfield.\n\n`REVIEW_RESPONSE`\nIndicates that the asset can be used in responses to reviews.\n\n`SOCIAL_POSTING`\nIndicates that the asset can be used in social posts.\n\n`ALL_PROFILE_FIELDS`\nIndicates that the asset is available to all profile fields and any fields that may be added to the account in the future (e.g., custom fields).\n\n`REVIEW_RESPONSE_GREETING`\nIndicates that the asset can be used as a greeting in Intelligent Review Responses.\n\n`REVIEW_RESPONSE_VALUE_STATEMENT`\nIndicates that the asset can be used as a value statement in Intelligent Review Responses.\n\n`REVIEW_RESPONSE_POSITIVE_SENTIMENT`\nIndicates that the asset can be used as a positive sentiment keyword in Intelligent Review Responses.\n\n`REVIEW_RESPONSE_NEGATIVE_SENTIMENT`\nIndicates that the asset can be used as a negative sentiment keyword in Intelligent Review Responses.\n\n`REVIEW_RESPONSE_CLOSING`\nIndicates that the asset can be used as closing remarks in Intelligent Review Responses.\n"
          },
          "fieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The names of the fields the asset is available to.\n\nOnly applicable if **`usageType`** is `PROFILE_FIELDS`.\n\nA field's name in **`fieldNames`** matches its name in the API. For example, if an asset can be used for Business Name and Description, the **`fieldNames`** array will be:\n`[“name”, “description”]`\n\nThe **`fieldNames`** value for a custom field matches its **`name`**.\n"
          }
        }
      },
      "Asset": {
        "type": "object",
        "discriminator": {
          "propertyName": "type"
        },
        "required": [
          "name",
          "type",
          "forEntities",
          "usage",
          "value"
        ],
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 16,
            "description": "Primary key. Unique alphanumeric (Latin-1) ID assigned by the Yext.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 100,
            "description": "Asset name."
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "description": "Asset description."
          },
          "type": {
            "type": "string",
            "description": "Asset Type. In addition to the choices below, names of custom field types may also be used.\n\nOne of:\n"
          },
          "forEntities": {
            "$ref": "#/components/schemas/AssetForEntities"
          },
          "usage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetUsage"
            }
          },
          "locale": {
            "type": "string",
            "description": "Language of the asset."
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 30
            },
            "description": "List of text labels for this asset."
          },
          "owner": {
            "type": "string",
            "description": "ID of the user who owns the asset."
          }
        }
      }
    },
    "parameters": {
      "accountId": {
        "name": "accountId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "v": {
        "name": "v",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "A date in `YYYYMMDD` format."
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 10,
          "maximum": 50
        },
        "description": "Number of results to return."
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 0
        },
        "description": "\nNumber of results to skip. Used to page through results.\nCannot be used together with **`pageToken`**.\n"
      },
      "resolvePlaceholders": {
        "name": "resolvePlaceholders",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": false
        },
        "description": "Optional parameter to resolve all embedded fields in a Location object response.\n- `false`: Location object returns placeholder labels, e.g., \"Your [[CITY]] store\"\n- `true`: Location object returns placeholder values, e.g., \"Your Fairfax store\"\n"
      },
      "pageToken": {
        "name": "pageToken",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "required": false,
        "description": "If a response to a previous request contained the **`nextPageToken`** field, pass that field's value as the **`pageToken`** parameter to retrieve the next page of data.\n"
      },
      "searchoffset": {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 0,
          "maximum": 9950
        },
        "description": "Number of results to skip. Used to page through results."
      },
      "filters": {
        "name": "filters",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "A set of filters that is applied to the set of locations that would otherwise be returned. Should be provided as a URL-encoded string containing a JSON array. The array should have one or more filter objects defined. All filter objects will apply as an intersection (i.e., AND). Field names reference Location fields, as well as custom fields using the format `custom###`, where \"###\" is the custom field’s **`id`**.\n\nFor example, to provide a filter that would match location names containing the word \"gourmet\", the filter parameter would be `[{\"name\":{\"contains\":[\"gourmet\"]}}]`, which URL-encoded would be `%5B%7B%22name%22%3A%7B%22contains%22%3A%5B%22gourmet%22%5D%7D%7D%5D`.\n\nNOTE: \"x\", \"xx\", and \"xxx\" are reserved keywords that, when passed in a `contains` matcher for a Full or Text filter, will cause that filter to match on all locations.\n\nThe filter types are the following. Note there may be multiple available specifications for a given filter type:\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Filter Type</th>\n    <th>Syntax</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>Full</td>\n    <td>fieldName: {contains: $search}</td>\n    <td>$search is the search string</td>\n  </tr>\n  <tr>\n    <td>Text</td>\n    <td>fieldName: {$type: [$search,...]}</td>\n    <td>$type is one of [contains,doesNotContain,startsWith,equalTo], $search is an array of search strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>Text</td>\n    <td>fieldName: $type</td>\n    <td>$type is one of [empty,notEmpty]</td>\n  </tr>\n  <tr>\n    <td>Number</td>\n    <td>fieldName: {$type: $value}</td>\n    <td>$type is one of [eq,lt,gt,le,ge], $value is the numeric value</td>\n  </tr>\n  <tr>\n    <td>Number</td>\n    <td>fieldName: {$type: [$value1, $value2]}</td>\n    <td>$type is one of [between], $value1 and $value2 are numeric values</td>\n  </tr>\n  <tr>\n    <td>Date</td>\n    <td>fieldName: {$type: $value}</td>\n    <td>$type is one of [eq,lt,gt,le,ge], $value is a string of \"YYYY-MM-DD\" formatted date</td>\n  </tr>\n  <tr>\n    <td>Date</td>\n    <td>fieldName: $type</td>\n    <td>$type is one of [empty,notEmpty]</td>\n  </tr>\n  <tr>\n    <td>Date</td>\n    <td>fieldName: {$type: [$value1, $value2]}</td>\n    <td>$type is one of [between], $value1 and $value2 are strings of \"YYYY-MM-DD\" formatted date</td>\n  </tr>\n  <tr>\n    <td>Categories</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$type is one of [includes,notIncludes], $id is an array of numeric category IDs, combined with OR</td>\n  </tr>\n  <tr>\n    <td>Categories</td>\n    <td>fieldName: $type</td>\n    <td>$type is one of [none]</td>\n  </tr>\n  <tr>\n    <td>Assets</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$type is one of [includes,notIncludes], $id is an array of numeric category IDs, combined with OR</td>\n  </tr>\n  <tr>\n    <td>Assets</td>\n    <td>fieldName: $type</td>\n    <td>$type is one of [none]</td>\n  </tr>\n  <tr>\n    <td>Country</td>\n    <td>fieldName: {$type: [$country,...]}</td>\n    <td>$type is one of [includes,notIncludes], $country is an array of country code strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>PrimaryLanguage</td>\n    <td>fieldName: {$type: [$language,...]}</td>\n    <td>$type is one of [is,isNot], $language is an array of language code strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>AlternateLanguage</td>\n    <td>fieldName: {$type: [$language,...]}</td>\n    <td>$type is one of [includes, notIncludes], $language is an array of language code strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>StringSingle</td>\n    <td>fieldName: {$type: [$string,...]}</td>\n    <td>$type is one of [is,isNot], $string is an array of strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>StringList</td>\n    <td>fieldName: {$type: [$string,...]}</td>\n    <td>$type is one of [includes,notIncludes], $string is an array of strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>LocationType</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$type is one of [is,isNot], $id is an array of location type IDs, combined with OR</td>\n  </tr>\n  <tr>\n    <td>Bool</td>\n    <td>fieldName: $type</td>\n    <td>$type is one of [true,false]</td>\n  </tr>\n  <tr>\n    <td>Option</td>\n    <td>fieldName: {$type: $id}</td>\n    <td>$type is one of [is,isNot], $id is an option ID (For single option custom fields)</td>\n  </tr>\n  <tr>\n    <td>Option</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$type is one of [includes,notIncludes], $id is an array of option IDs, combined with OR (For multi option custom fields)</td>\n  </tr>\n  <tr>\n    <td>Folder</td>\n    <td>fieldName: [$id,...]</td>\n    <td>$id is a numeric folder ID</td>\n  </tr>\n  <tr>\n    <td>Folder</td>\n    <td>fieldName: $id</td>\n    <td>$id is a numeric folder ID</td>\n  </tr>\n  <tr>\n    <td>Folder</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$id is a numeric folder ID, $type is one of ['isIn', 'isNotIn']</td>\n  </tr>\n  <tr>\n    <td>Labels</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$type is one of [includes,notIncludes], $id is an array of label IDs, combined with OR</td>\n  </tr>\n</table>\n\nThe following fields can be specified in the request (Field name/Filter Type/Example(s)):\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Field Name</th>\n    <th>Filter Type</th>\n    <th>Example(s)</th>\n  </tr>\n  <tr>\n    <td>location</td>\n    <td>Full</td>\n    <td>\"location\": {\"contains\": \"Atlanta\"}</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Text</td>\n    <td>\"name\": {\"startsWith\": [\"Guitar\"]}, \"name\": {\"contains\": [\"A\",\"B\"]}</td>\n  </tr>\n  <tr>\n    <td>address</td>\n    <td>Text</td>\n    <td>\"address\": {\"startsWith\": [\"South\"]}</td>\n  </tr>\n  <tr>\n    <td>address2</td>\n    <td>Text</td>\n    <td>\"address2\": {\"contains\": [\"Suite\"]}</td>\n  </tr>\n  <tr>\n    <td>city</td>\n    <td>Text</td>\n    <td>\"city\": {\"contains\": [\"Atlanta\"]}</td>\n  </tr>\n  <tr>\n    <td>state</td>\n    <td>Text</td>\n    <td>\"state\": {\"contains\": [\"AK\",\"VA\"]}</td>\n  </tr>\n  <tr>\n    <td>zip</td>\n    <td>Text</td>\n    <td>\"zip\": {\"contains\": [\"M5K 7QB\"]}</td>\n  </tr>\n  <tr>\n    <td>phones</td>\n    <td>Text</td>\n    <td>\"phones\": {\"startsWith\": [\"703\",\"571\"]}</td>\n  </tr>\n  <tr>\n    <td>specialOffer</td>\n    <td>Text</td>\n    <td>\"specialOffer\": \"notEmpty\"</td>\n  </tr>\n  <tr>\n    <td>emails</td>\n    <td>Text</td>\n    <td>\"emails\": {\"doesNotContain\": [\"@yext.com\"]}</td>\n  </tr>\n  <tr>\n    <td>website</td>\n    <td>Text</td>\n    <td>\"website\": {\"equalTo\": [\"https://www.yext.com/\"]}</td>\n  </tr>\n  <tr>\n    <td>categories</td>\n    <td>Categories</td>\n    <td>\"categories\": {\"includes\": [23,755,34]}</td>\n  </tr>\n  <tr>\n    <td>closed</td>\n    <td>Bool</td>\n    <td>\"closed\": true</td>\n  </tr>\n  <tr>\n    <td>storeId</td>\n    <td>Text</td>\n    <td>\"storeId\": {\"equalTo\": [\"MCD0001\"]}</td>\n  </tr>\n  <tr>\n    <td>countryCode</td>\n    <td>Country</td>\n    <td>\"countryCode\": {\"notIncludes\": [\"US\"]}</td>\n  </tr>\n  <tr>\n    <td>products</td>\n    <td>Text</td>\n    <td>\"products\": {\"startsWith\": [\"Burger\",\"Fries\"]}</td>\n  </tr>\n  <tr>\n    <td>services</td>\n    <td>Text</td>\n    <td>\"services\": {\"contains\": [\"Manicures\"]}</td>\n  </tr>\n  <tr>\n    <td>specialities</td>\n    <td>Text</td>\n    <td>\"services\": \"notEmpty\"</td>\n  </tr>\n  <tr>\n    <td>associations</td>\n    <td>Text</td>\n    <td>\"associations\": \"empty\"</td>\n  </tr>\n  <tr>\n    <td>brands</td>\n    <td>Text</td>\n    <td>\"brands\": {\"equalTo\": [\"North Face\"]}</td>\n  </tr>\n  <tr>\n    <td>languages</td>\n    <td>Text</td>\n    <td>\"languages\": {\"equalTo\": [\"English\",\"Spanish\"]}</td>\n  </tr>\n  <tr>\n    <td>keywords</td>\n    <td>Text</td>\n    <td>\"keywords\": {\"startsWith\": [\"Franchise\"]}</td>\n  </tr>\n  <tr>\n    <td>menuIds</td>\n    <td>IdList</td>\n    <td>\"menuIds\": {\"includes\": [\"m-23\",\"755\",\"menu34\"]}</td>\n  </tr>\n  <tr>\n    <td>productListIds</td>\n    <td>IdList</td>\n    <td>\"productListIds\": {\"notIncludes\": [\"pl-2\"]}</td>\n  </tr>\n  <tr>\n    <td>calendarIds</td>\n    <td>IdList</td>\n    <td>\"calendarIds\": {\"notIncludes\": [\"cal34\"]}</td>\n  </tr>\n  <tr>\n    <td>bioIds</td>\n    <td>IdList</td>\n    <td>\"bioIds\": {\"includes\": [\"b23\",\"34\"]}</td>\n  </tr>\n  <tr>\n    <td>custom###</td>\n    <td>Text (for Multiline Text, URL, Text List, and Text Custom Fields), Number, Date, Bool, or Option</td>\n    <td>\"custom123\": {\"equalTo\": [\"asdf\"]}</td>\n  </tr>\n  <tr>\n    <td>folder</td>\n    <td>Folder</td>\n    <td>\"folder\": 123, \"folder\": [123,456]</td>\n  </tr>\n  <tr>\n    <td>primary_language</td>\n    <td>PrimaryLanguage</td>\n    <td>\"primary_language\": {\"is\": \"fr_CA\"}</td>\n  </tr>\n  <tr>\n    <td>alternateProfileLanguage</td>\n    <td>AlternateLanguage</td>\n    <td>\"alternateProfileLanguage\": {\"includes\": [\"en\", \"fr\"]}</td>\n  </tr>\n  <tr>\n    <td>npi</td>\n    <td>StringSingle</td>\n    <td>\"npi\": {\"is\": [\"1234567890\", \"1111111111\"]}</td>\n  </tr>\n  <tr>\n    <td>conditionsTreated</td>\n    <td>Text</td>\n    <td>\"conditionsTreated\": {\"startsWith\": [\"Influenza\"]}, \"conditionsTreated\": {\"contains\": [\"A\",\"B\"]}</td>\n  </tr>\n  <tr>\n    <td>lastUpdated</td>\n    <td>Date</td>\n    <td>\"lastUpdated\": {\"eq\": \"2018-01-01\"}, \"lastUpdated\": {\"between\": [\"2017-01-01\", \"2018-01-01\"]}</td>\n  </tr>\n  <tr>\n    <td>fieldsWithData</td>\n    <td>Fields</td>\n    <td>\"fieldsWithData\": [\"email\", \"hours\"]</td>\n  </tr>\n  <tr>\n    <td>fieldsWithoutData</td>\n    <td>Fields</td>\n    <td>\"fieldsWithoutData\": [\"logo\", \"video\"]</td>\n  </tr>\n  <tr>\n    <td>reviewCount</td>\n    <td>Number</td>\n    <td>\"review_count\": {\"gt\": 1}, \"review_count \": {\"lt\": 10}</td>\n  </tr>\n  <tr>\n    <td>averageRating</td>\n    <td>Number</td>\n    <td>\"averageRating\": {\"lt\": 3}</td>\n  </tr>\n  <tr>\n    <td>locationType</td>\n    <td>LocationType</td>\n    <td>\"locationType\": {\"is\": [1]}, \"locationType\": {\"isNot\": [123]}</td>\n  </tr>\n  <tr>\n    <td>gender</td>\n    <td>StringSingle</td>\n    <td>\"gender\": {\"is\": [\"FEMALE\"]}, \"gender\": {\"isNot\": [\"MALE\"]}</td>\n  </tr>\n  <tr>\n    <td>degrees</td>\n    <td>StringList</td>\n    <td>\"degrees\": {\"includes\": [\"MD\"]}, \"degrees\": {\"notIncludes\": [\"PHD\"]}</td>\n  </tr>\n  <tr>\n    <td>experiences</td>\n    <td>StringList</td>\n    <td>\"experiences\": {\"includes\": [\"FELLOWSHIP\"]}, \"experiences\": {\"notIncludes\":[\"INTERNSHIP\"]}</td>\n  </tr>\n  <tr>\n    <td>yearCompleted</td>\n    <td>Number</td>\n    <td>\"yearCompleted\": {\"gt\": 2000}, \"yearCompleted\": {\"lt\": 2015}</td>\n  </tr>\n  <tr>\n    <td>acceptingNewPatients</td>\n    <td>Bool</td>\n    <td>\"acceptingNewPatients\": true</td>\n  </tr>\n  <tr>\n    <td>firstName</td>\n    <td>Text</td>\n    <td>\"firstName\": {\"startsWith\": [\"David\"]}, \"firstName\": {\"contains\": [\"A\",\"B\"]}</td>\n  </tr>\n  <tr>\n    <td>middleName</td>\n    <td>Text</td>\n    <td>\"middleName\": {\"startsWith\": [\"P\"]}, \"middleName\": {\"contains\": [\"N\",\"E\"]}</td>\n  </tr>\n  <tr>\n    <td>lastName</td>\n    <td>Text</td>\n    <td>\"lastName\": {\"startsWith\": [\"Sm\"]}, \"lastName\": {\"contains\": [\"Y\",\"Z\"]}</td>\n  </tr>\n  <tr>\n    <td>officeName</td>\n    <td>Text</td>\n    <td>\"officeName\": {\"startsWith\": [\"Chiropractic\"]}, \"officeName\": {\"contains\":[\"Center\",\"P\"]}</td>\n  </tr>\n  <tr>\n    <td>certifications</td>\n    <td>Text</td>\n    <td>\"certifications\": {\"contains\": [\"Radiation Oncology\"]}</td>\n  </tr>\n  <tr>\n    <td>institutionName</td>\n    <td>Text</td>\n    <td>\"institutionName\": {\"startsWith\": [\"New York\"]}</td>\n  </tr>\n  <tr>\n    <td>insuranceAccepted</td>\n    <td>Text</td>\n    <td>\"insuranceAccepted\": {\"startsWith\": [\"United\"]}, \"insuranceAccepted\":{\"contains\": [\"C\",\"Health\"]}</td>\n  </tr>\n  <tr>\n    <td>admittingHospitals</td>\n    <td>Text</td>\n    <td>\"admittingHospitals\": {\"startsWith\": [\"Children's\"]}, \"admittingHospitals\":{\"contains\": [\"Medical\",\"University\"]}</td>\n  </tr>\n  <tr>\n    <td>subscriptions</td>\n    <td>IdList</td>\n    <td>\"subscriptions\": {\"notIncludes\": [\"123\"]}</td>\n  </tr>\n  <tr>\n    <td>facebookAccounts</td>\n    <td>IdList</td>\n    <td>\"facebookAccounts\": {\"notIncludes\": [\"1111\"]}</td>\n  </tr>\n  <tr>\n    <td>foursquareAccounts</td>\n    <td>IdList</td>\n    <td>\"foursquareAccounts\": {\"notIncludes\": [\"1111\"]}</td>\n  </tr>\n  <tr>\n    <td>googleplusAccounts</td>\n    <td>IdList</td>\n    <td>\"googleplusAccounts\": {\"notIncludes\": [\"1111\"]}</td>\n  </tr>\n  <tr>\n    <td>labels</td>\n    <td>Labels</td>\n    <td>\"labels\": {\"includes\": [1, 100]}</td>\n  </tr>\n</table>\n"
      },
      "locationId": {
        "name": "locationId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "listId": {
        "name": "listId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "ID of this List."
      },
      "language": {
        "name": "language",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The language code corresponding to the language in which the user would like to retrieve the Google Fields. Only categories that apply to this language will be returned.\n"
      },
      "clientCategoryId": {
        "name": "clientCategoryId",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "A category id for the business that, if specified, will filter the result to only include any Google Fields that the provided id maps to.\n"
      },
      "countryCode": {
        "name": "countryCode",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The two-character ISO 3166-1 country code, if specified, will filter the result to only include any Google Fields that are eligible for that country.\n"
      },
      "entitiesPageToken": {
        "name": "pageToken",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "required": false,
        "description": "If a response to a previous request contained the **`pageToken`** field, pass that field's value as the **`pageToken`** parameter to retrieve the next page of data.\n"
      },
      "language_code": {
        "name": "language_code",
        "in": "path",
        "schema": {
          "type": "string"
        },
        "required": true,
        "description": "Locale code."
      },
      "listingsLocationIds": {
        "name": "locationIds",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": "Defaults to all account locations with a Listings subscription.\n\n**Example:** loc123,loc456,loc789\n",
        "style": "simple"
      },
      "listingsPublisherIds": {
        "name": "publisherIds",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": "List of publisher IDs. If no IDs are specified, defaults to all publishers subscribed by the account.\n\n**Example:** MAPQUEST,FACEBOOK\n",
        "style": "simple"
      },
      "listingsLocationId": {
        "name": "locationId",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "An account location ID with a Listings subscription."
      },
      "listingsPublisherIdQuery": {
        "name": "publisherId",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "listingsPublisherId": {
        "name": "publisherId",
        "in": "path",
        "schema": {
          "type": "string"
        },
        "required": true
      },
      "locale": {
        "name": "locale",
        "in": "path",
        "schema": {
          "type": "string"
        },
        "required": true,
        "description": "Locale code."
      },
      "listingsVerficationEntityIds": {
        "name": "entityIds",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "required": false,
        "description": "\nA comma-separated list of Entity IDs.\nIf no IDs are specified, defaults to all entities with a listings subscription.\n"
      },
      "verificationLimit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 100
        },
        "description": "Number of results to return."
      },
      "listingsEntityIds": {
        "name": "entityIds",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": "Defaults to all account events with a subscription.\n\n**Example:** entity123,entity456,entity789\n",
        "style": "simple"
      },
      "listingsEventPublisherIds": {
        "name": "publisherIds",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": "List of publisher IDs. If no IDs are specified, defaults to all publishers subscribed by the account.\n\n**Example:** FACEBOOKEVENTS,EVENTBRITE\n",
        "style": "simple"
      },
      "QuestionAnswerFilter": {
        "name": "filter",
        "required": false,
        "schema": {
          "type": "string"
        },
        "in": "query",
        "description": "This parameter represents one or more filtering conditions that are applied to the set of entities that would otherwise be returned. This parameter should be provided as a URL-encoded string containing a JSON object.\n\nFor example, if the filter JSON is `{\"entityId\":{\"$eq\":\"location123\"}}`, then the filter param after URL-encoding will be: `filter=%7B%22entityId%22%3A%7B%22%24eq%22%3A%22location123%22%7D%7D`\n\n**Supported filters**\n* **`id`**\n* **`entityId`**\n* **`publisherId`**\n* **`authorType`**\n* **`language`**\n* **`createTime`**\n* **`updateTime`**\n* **`answerCount`**\n* **`ownerAnswer`**\n\n**Basic Filter Structure**\n\nThe filter object at its core consists of a *matcher*, a *field*, and an *argument*.\n\nFor example, in the following filter JSON:\n\n```\n{\n  \"entityId\":{\n    \"$eq\":\"location123\"\n  }\n}\n```\n\n`$eq` is the *matcher*, or filtering operation (equals, in this example),\n\n`entityId` is the *field* being filtered by, and\n\n`location123` is *value* to be matched against.\n\n**Combining Multiple Filters**\n\nMultiple filters can be combined into one object using *combinators*. For example, the following filter JSON combines multiple filters using the combinator `$and`. `$or` is also supported.\n```\n{\n  \"$and\":[\n    {\n      \"entityId\":{\n        \"$eq\":\"location123\"\n      }\n    },\n    {\n      \"authorType\":{\n        \"$in\":[\n          \"LOCAL_GUIDE\",\n          \"MERCHANT\"\n        ]\n      }\n    }\n  ]\n}\n```\n\n**Filter Negation**\n\nCertain filter types may be negated. For example:\n\n```\n{\n  \"$not\" {\n    \"entityId\":{\n      \"$eq\":\"location123\"\n    }\n  }\n}\n```\n\nThis can also be written more simply with a `!` in the `$eq` parameter. The following filter would have the same effect:\n\n```\n{\n  \"entityId\":{\n    \"!$eq\":\"location123\"\n  }\n}\n```\n\n**TEXT**\n\nThe `TEXT` filter type is supported for text fields. (e.g., **`entityId`**, **`authorType`**)\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq (equals)</th>\n    <th>\n\n    {\n      \"entityId\":{\n        \"$eq\":\"location123\"\n      }\n    },\n    {\n      \"authorType\":{\n        \"!$eq\":\"REGULAR_USER\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n  </tr>\n</table>\n\n**BOOLEAN**\n\nThe BOOLEAN filter type is supported for boolean fields and Yes / No fields.\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"ownerAnswer\": {\n        \"$eq\": true\n      }\n    }\n\n  For booleans, the filter takes a boolean value, not a string.\n  Supports negation.\n  </tr>\n</table>\n\n**INTEGER, FLOAT, DATE, DATETIME, and TIME**\n\nThese filter types are strictly ordered -- therefore, they support the following matchers:\n- Equals\n- Less Than / Less Than or Equal To\n- Greater Than / Greater Than or Equal To\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n  Equals\n\n    {\n      \"answerCount\": {\n        \"$eq\": 3\n      }\n    }\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$lt</th>\n    <th>\n\n  Less than\n\n    {\n      \"updateTime\": {\n        \"$lt\": 1579711121392\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$gt</th>\n    <th>\n\n  Greater than\n\n    {\n      \"answerCount\": {\n        \"$gt\": 3\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$le</th>\n    <th>\n\n  Less than or equal to\n\n    {\n      \"answerCount\": {\n        \"$le\": 3\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$ge</th>\n    <th>\n\n  Greater than or equal to\n\n    {\n      \"answerCount\": {\n        \"$ge\": 3\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>Combinations</th>\n    <th>\n\n  While we do not support \"between\" in our filtering syntax, it is possible to combine multiple matchers for a result similar to an \"and\" operation:\n\n    {\n      \"answerCount : {\n        \"$gt\" : 1,\n        \"$lt\": 3\n      }\n    }\n\n  </tr>\n</table>\n"
      },
      "questionId": {
        "name": "questionId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "ID of this Question."
      },
      "answerId": {
        "name": "answerId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "ID of this Answer."
      },
      "reviewExternalId": {
        "name": "reviewExternalId",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "The review's ID, as assigned by the publisher."
      },
      "reviewId": {
        "name": "reviewId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "description": "ID of this Review."
      },
      "commentId": {
        "name": "commentId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "invitationId": {
        "name": "invitationUid",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The UID of this Review Invitation. This UID can be included as part of Review Creation\nrequests for attribution.\n"
      },
      "userId": {
        "name": "userId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "approvalGroupId": {
        "name": "approvalGroupId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "linkedAccountsEntityIds": {
        "name": "entityIds",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "required": false,
        "description": "When provided, only linked accounts assigned to the specified entities will be returned."
      },
      "linkedAccountsPublisherIds": {
        "name": "publisherIds",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "required": false,
        "description": "When provided, only linked accounts for the specified sites will be returned."
      },
      "linkedAccountsStatuses": {
        "name": "statuses",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "VALID",
              "INVALID"
            ]
          }
        },
        "required": false,
        "description": "Defaults to all statuses. When specified, only linked accounts with the provided statuses will be returned."
      },
      "linkedAccountId": {
        "name": "linkedAccountId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "taskIds": {
        "name": "taskIds",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Comma-separated list of Optimization Task IDs corresponding to Optimization Tasks that should be included in the response.\n\nIf no IDs are provided, defaults to all available Optimization Tasks in the account.\n"
      },
      "taskLocationIds": {
        "name": "locationIds",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Comma-separated list of Location IDs to be used as a filter.\n\nIf no IDs are provided, defaults to all Locations in the account.\n"
      },
      "taskLocationId": {
        "name": "locationId",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Location ID to be used as a filter.\n\nIf no ID is provided, defaults to all Locations in the account.\n"
      },
      "mode": {
        "name": "mode",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "PENDING_ONLY",
            "ALL_TASKS",
            "RESET"
          ],
          "default": "PENDING_ONLY"
        },
        "description": "When mode is `PENDING_ONLY`, the resulting link will only ask the user to complete tasks that are pending or in progress (that have not been completed before).\n\nWhen mode is `ALL_TASKS`, the resulting link will show the user all specified tasks for all specified locations, regardless of their status. If a task has been completed, the user is given the option to update the content they entered when completing the task.\n"
      },
      "assetId": {
        "name": "assetId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "Error Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ErrorResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMetaWithError"
                },
                "response": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "LocationsResponse": {
        "description": "Locations Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "LocationsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Locations that meet filter criteria (ignores limit / offset)."
                    },
                    "nextPageToken": {
                      "$ref": "#/components/schemas/NextPageToken"
                    },
                    "locations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "IdResponse": {
        "description": "ID Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "IdResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "LocationsSearchResponse": {
        "description": "Locations Search Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "LocationsSearchResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Locations that meet filter criteria (ignores limit / offset)."
                    },
                    "locations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "LocationResponse": {
        "description": "Location Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "LocationResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          }
        }
      },
      "FoldersResponse": {
        "description": "Folders Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "FoldersResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Location Folders in the Account."
                    },
                    "folders": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Folders"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "MenusResponse": {
        "description": "Menus Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "MenuListsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Menus that meet filter criteria (ignores limit / offset)."
                    },
                    "menus": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Menu"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "MenuResponse": {
        "description": "Menu Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "MenuListResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Menu"
                }
              }
            }
          }
        }
      },
      "EmptyResponse": {
        "description": "Empty Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "EmptyResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "BiosResponse": {
        "description": "Bio Lists Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "BioListsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Bio Lists that meet filter criteria (ignores limit / offset)."
                    },
                    "bios": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Bio"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BioResponse": {
        "description": "Bio List Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "BioListResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Bio"
                }
              }
            }
          }
        }
      },
      "ProductsResponse": {
        "description": "Product Lists Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "ProductListsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Product Lists that meet filter criteria (ignores limit / offset)."
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ProductResponse": {
        "description": "Product List Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "ProductListResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "EventsResponse": {
        "description": "Event Lists Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "EventListsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Event Lists that meet filter criteria (ignores limit / offset)."
                    },
                    "events": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Event"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "EventResponse": {
        "description": "Event List Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "EventListResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      },
      "CategoriesResponse": {
        "description": "Business Categories Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "BusinessCategoriesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      },
      "GoogleFieldsResponse": {
        "description": "Google Fields Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "GoogleFieldsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "List of Google Fields.",
                      "items": {
                        "$ref": "#/components/schemas/GoogleCategory"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CustomFieldsResponse": {
        "description": "Custom Fields Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "CustomFieldsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Custom Fields in the account."
                    },
                    "customFields": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Field"
                      }
                    },
                    "pageToken": {
                      "$ref": "#/components/schemas/PageToken"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CustomFieldResponse": {
        "description": "Custom Field Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "CustomFieldResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Field"
                }
              }
            }
          }
        }
      },
      "LanguageProfilesResponse": {
        "description": "Language Profiles Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "LanguageProfilesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "languageProfiles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "LanguageProfileResponse": {
        "description": "Language Profile Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "LanguageProfileResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          }
        }
      },
      "ListPublishersResponse": {
        "description": "Publishers Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "PublishersResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "publishers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Publisher"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ListListingsResponse": {
        "description": "Listings Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ListingsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "If the **`v`** parameter is before `20170420`: the Listings count, including alternate brands\n\nIf the **`v`** parameter is `20170420` or later: the Listings count, excluding alternate brands\n\nTotal number of Listings that meet the filter criteria (ignores **`limit`** and **`offset`**)\n"
                    },
                    "listings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Listing"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ListPublisherSuggestionsResponse": {
        "description": "Publisher Suggestions Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "PublisherSuggestionsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Publisher Suggestions that meet filter criteria (ignores limit/offset)"
                    },
                    "suggestions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublisherSuggestion"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "PublisherSuggestionResponse": {
        "description": "Publisher Suggestion Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "PublisherSuggestionResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/PublisherSuggestion"
                }
              }
            }
          }
        }
      },
      "ListDuplicatesResponse": {
        "description": "Duplicates Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "DuplicatesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of locations that meet filter criteria (ignores limit/offset)"
                    },
                    "duplicates": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Duplicate"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ListMethodsResponse": {
        "description": "Methods Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ListMethodsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of verification methods that meet the filter criteria."
                    },
                    "verificationMethods": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VerificationMethod"
                      }
                    },
                    "nextPageToken": {
                      "$ref": "#/components/schemas/NextPageToken"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ListStatusesResponse": {
        "description": "Statuses Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ListStatusesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of verification statuses that meet the filter criteria."
                    },
                    "verifications": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VerificationStatus"
                      }
                    },
                    "nextPageToken": {
                      "$ref": "#/components/schemas/NextPageToken"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "InitiateVerificationResponse": {
        "description": "Initiate Verification Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "InitiateVerificationResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of successful requests."
                    },
                    "entityIds": {
                      "type": "array",
                      "description": "IDs of entities that were successfully verified.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CompleteVerificationResponse": {
        "description": "Complete Verification Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "CompleteVerificationResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of successful requests."
                    },
                    "entityIds": {
                      "type": "array",
                      "description": "IDs of entities that were successfully verified.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ListAdminsResponse": {
        "description": "List Admins Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ListAdminsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of admins that meet the filter criteria."
                    },
                    "admins": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin"
                      }
                    },
                    "nextPageToken": {
                      "$ref": "#/components/schemas/NextPageToken"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "InviteAdminsResponse": {
        "description": "Invite Admins Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "InviteAdminsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "\nTotal number of Admins created.\n"
                    },
                    "admins": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Admin"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ListEntityListingsResponse": {
        "description": "Entity Listings Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "EntityListingsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Listings that meet the filter criteria (ignores **`limit`** and **`offset`**)\n"
                    },
                    "nextPageToken": {
                      "type": "string",
                      "description": "This field is only included if there is an additional page of data to display. To retrieve the next page of data, pass this field's value as the **`pageToken`** parameter in a subsequent request.\n"
                    },
                    "listings": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EntityListing"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ListQuestionsResponse": {
        "description": "List Questions Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ListQuestionsReponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of questions that meet the filter criteria (ignores **`limit`** and **`offset`**)\n"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "This field is only included if there is an additional page of data to display. To retrieve the next page of data, pass this field's value as the **`pageToken`** parameter in a subsequent request.\n"
                    },
                    "questions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Question"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "QuestionResponse": {
        "description": "Question Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "QuestionResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Question"
                }
              }
            }
          }
        }
      },
      "CreateAnswerResponse": {
        "description": "Create Answer Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "CreateAnswerResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the answer created."
                    },
                    "content": {
                      "type": "string",
                      "description": "The answer text."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UpdateAnswerResponse": {
        "description": "Update Answer Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "UpdateAnswerResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of the answer updated"
                    },
                    "content": {
                      "type": "string",
                      "description": "The answer text"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ActivityLogResponse": {
        "description": "Activities Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ActivitiesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of activities that meet the filter criteria (ignores limit / offset)"
                    },
                    "activities": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Activity"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogResponse": {
        "description": "Completed dates of all metrics available",
        "content": {
          "application/json": {
            "schema": {
              "title": "CatalogResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "metrics": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Metric"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "MaxDatesResponse": {
        "description": "Maximum date through which reporting data is available",
        "content": {
          "application/json": {
            "schema": {
              "title": "MaximumDatesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "standardMaxDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The date through which reporting data is available from Listings publishers other than Bing."
                    },
                    "bingMaxDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The date through which Bing data is available."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateReportsResponse": {
        "description": "Returns report data if synchronous or report id if asynchronous",
        "content": {
          "application/json": {
            "schema": {
              "title": "CreateReportsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "description": "Array with the contents of the report (encoded UTF-8), as specified in the request. This is returned for a synchronous request"
                    },
                    "id": {
                      "type": "string",
                      "description": "the ID of the report. This is returned for an asynchronous request"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReportStatusResponse": {
        "description": "Status of a report created with async=true",
        "content": {
          "application/json": {
            "schema": {
              "title": "ReportStatusResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "PROCESSING",
                        "DONE",
                        "FAILED"
                      ]
                    },
                    "url": {
                      "type": "string",
                      "description": "When status=DONE, contains the URL to download the report data as a text file."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReviewsResponse": {
        "description": "Reviews Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ReviewsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Reviews that meet filter criteria (ignores limit/offset)"
                    },
                    "averageRating": {
                      "type": "number",
                      "format": "double",
                      "description": "Average rating of Reviews that matched the query parameters."
                    },
                    "reviews": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Review"
                      }
                    },
                    "nextPageToken": {
                      "type": "string",
                      "description": "This field is only included if there is an additional page of data to display. To retrieve the next page of data, pass this field's value as the **`pageToken`** parameter in a subsequent request\n\nnextPageToken is only returned with the inclusion of a **`v`** parameter of `20170901` or later.\n",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReviewResponse": {
        "description": "Review Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ReviewResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          }
        }
      },
      "CreateReviewCommentResponse": {
        "description": "Create Review Comment Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "CreateReviewCommentResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "If the **`v`** parameter is before `20210616`, **`id`** will be returned as a\ntype string instead of an integer.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReviewInvitationsResponse": {
        "description": "Review Invitations Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ReviewInvitationsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "countEmail": {
                      "type": "integer",
                      "description": "Total number of Email Invitations that meet filter criteria (ignores limit/offset)"
                    },
                    "countSMS": {
                      "type": "integer",
                      "description": "Total number of SMS Invitations that meet filter criteria (ignores limit/offset)"
                    },
                    "sent": {
                      "type": "integer",
                      "description": "Total number of Invitations that had a sent time"
                    },
                    "opened": {
                      "type": "integer",
                      "description": "Total number of Invitations that had an open time"
                    },
                    "clicked": {
                      "type": "integer",
                      "description": "Total number of Invitations that had a clicked time"
                    },
                    "responded": {
                      "type": "integer",
                      "description": "Total number of Invitations that had a responded time"
                    },
                    "invitations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetReviewInvitation"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateReviewInvitationsResponse": {
        "description": "Create Review Invitations Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "CreateReviewInvitationsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ReviewInvitation"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "ReviewInvitationResponse": {
        "description": "Review Invitation Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ReviewInvitationResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/GetReviewInvitation"
                }
              }
            }
          }
        }
      },
      "UpdateReviewInvitationResponse": {
        "description": "Update Review Invitation Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "UpdateReviewInvitationResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/UpdatedReviewInvitation"
                }
              }
            }
          }
        }
      },
      "UpdateReviewLabelsResponse": {
        "description": "Review Labels Update Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "UpdateReviewLabelsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The review id."
                    },
                    "labelIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "The label ids assigned to the review."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReviewGenerationSettingsResponse": {
        "description": "Review Generation Settings Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ReviewGenerationSettingsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/ReviewGenerationSettings"
                }
              }
            }
          }
        }
      },
      "UpdateReviewGenerationSettingsResponse": {
        "description": "Update Review Generation Settings Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "UpdateReviewGenerationSettingsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/ReviewGenerationSettings"
                }
              }
            }
          }
        }
      },
      "RolesResponse": {
        "description": "Roles Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "RolesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Roles that meet filter criteria (ignores limit / offset)"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Role"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UsersResponse": {
        "description": "Users Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "UsersResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Users that meet the filter criteria (ignores limit / offset)"
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "UserResponse": {
        "description": "User Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "UserResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "AccountsResponse": {
        "description": "Accounts Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "AccountsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "accounts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Account"
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "count": 1,
                "accounts": [
                  {
                    "accountId": "1264805",
                    "locationCount": 11,
                    "subAccountCount": 0,
                    "accountName": "Yext Demo Account",
                    "contactFirstName": "John",
                    "contactLastName": "Doe",
                    "contactPhone": "1234567890",
                    "contactEmail": "johndoe@email.com"
                  }
                ]
              }
            }
          }
        }
      },
      "AccountResponse": {
        "description": "Account Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "AccountResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "accountId": 1264805,
                "locationCount": 11,
                "subAccountCount": 0,
                "accountName": "Yext Demo Account",
                "contactFirstName": "John",
                "contactLastName": "Doe",
                "contactPhone": "1234567890",
                "contactEmail": "johndoe@email.com"
              }
            }
          }
        }
      },
      "ApprovalGroupsResponse": {
        "description": "Approval Groups Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ApprovalGroupsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Approval Groups (ignores limit / offset)"
                    },
                    "nextPageToken": {
                      "$ref": "#/components/schemas/NextPageToken"
                    },
                    "approvalGroups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApprovalGroup"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ApprovalGroupResponse": {
        "description": "Approval Group Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ApprovalGroupResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/ApprovalGroup"
                }
              }
            }
          }
        }
      },
      "LinkedAccountsResponse": {
        "description": "Linked Accounts Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "LinkedAccountsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "nextPageToken": {
                      "type": "string",
                      "description": "This field is only included if there is an additional page of data to display. To retrieve the next page of data, pass this field's value as the **`pageToken`** parameter in a subsequent request\n\nnextPageToken is only returned with the inclusion of a **`v`** parameter of `20170901` or later.\n"
                    },
                    "linkedAccounts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinkedAccount"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "LinkedAccountResponse": {
        "description": "Linked Account Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "LinkedAccountResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/LinkedAccount"
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "id": 3955191,
                "publisherId": "GOOGLEMYBUSINESS",
                "entityIds": [
                  "3492378"
                ],
                "firstName": "John",
                "lastName": "Doe",
                "email": "johndoe@email.com",
                "status": "VALID",
                "canAssign": true
              }
            }
          }
        }
      },
      "AssignLinkedAccountResponse": {
        "description": "Assign Linked Account Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "AssignLinkedAccountResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "linkedAccountId": {
                      "type": "string",
                      "description": "The ID of the copied linked account. This ID will differ from the original linked account ID."
                    }
                  }
                }
              }
            },
            "example": {
              "meta": {
                "uuid": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
                "errors": []
              },
              "response": {
                "linkedAccountId": 512353
              }
            }
          }
        }
      },
      "OptimizationTasksResponse": {
        "description": "Optimization Tasks Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "OptimizationTasksResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "optimizationTasks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OptimizationTask"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "OptimizationLinkResponse": {
        "description": "Optimization Task Links Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "OptimizationTaskLinksResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "link": {
                      "type": "string",
                      "description": "The URL where all requested task(s) for the requested location(s) can be completed.\n\nWill be null if none of the requested tasks on the requested locations are pending and mode is PENDING_ONLY.\n\n**Redirecting after the task:** You can automatically redirect users to a specific URL after they've completed the task. To do so, append a `continueUrl` parameter, whose value is the URL users should be redirected to, to the returned URL.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AssetsResponse": {
        "description": "Assets Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "AssetsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of assets in the account (ignores **`limit`** and **`offset`** parameters)."
                    },
                    "assets": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Asset"
                      }
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Pass this value into the next request as the **`pageToken`** parameter to retrieve the next page of data.\n\nIf the response of a request contains the last page of data, a **`pageToken`** value will not be returned. A **`pageToken`** will never appear in the response if the request contains the **`offset`** parameter.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AssetResponse": {
        "description": "Asset Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "AssetResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            }
          }
        }
      },
      "PushDataResponse": {
        "description": "Push Data Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "PushDataResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "string",
                      "description": "A comma-seperated list of IDs of all connectors for which a run attempt was initiated."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "requestBodies": {
      "locationRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Location"
            }
          }
        }
      },
      "menuRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Menu"
            }
          }
        }
      },
      "bioRequest": {
        "required": true,
        "content": {
          "application/kjson": {
            "schema": {
              "$ref": "#/components/schemas/Bio"
            }
          }
        }
      },
      "productRequest": {
        "required": true,
        "content": {
          "application/kjson": {
            "schema": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "eventRequest": {
        "required": true,
        "content": {
          "application/kjson": {
            "schema": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "createAnswerRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AnswerRequest"
            }
          }
        }
      },
      "updateAnswerRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AnswerRequest"
            }
          }
        }
      },
      "commentRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReviewComment"
            }
          }
        }
      },
      "commentUpdateRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReviewCommentUpdate"
            }
          }
        }
      },
      "updateReviewInvitationRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateReviewInvitationRequest"
            }
          }
        }
      },
      "updateReviewLabelsRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UpdateReviewLabelsRequest"
            }
          }
        }
      },
      "reviewGenerationSettingsRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ReviewGenerationSettings"
            }
          }
        }
      },
      "assetRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Asset"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "api_key": []
    },
    {
      "api-key": []
    }
  ],
  "tags": [
    {
      "name": "Health Check"
    },
    {
      "name": "Knowledge Manager"
    },
    {
      "name": "Listings"
    },
    {
      "name": "Analytics"
    },
    {
      "name": "Reviews"
    },
    {
      "name": "Account Settings"
    },
    {
      "name": "Optimization Tasks"
    }
  ]
}