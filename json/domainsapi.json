{
  "openapi": "3.0.0",
  "info": {
    "title": "Domains API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.yextapis.com/v2"
    },
    {
      "url": "https://api.eu.yextapis.com/v2"
    }
  ],
  "paths": {
    "/accounts/{accountId}/domains": {
      "post": {
        "operationId": "createDomain",
        "tags": [
          "Domains"
        ],
        "summary": "Create Domain",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "requestBody": {
          "description": "Configuration for the domain to be created.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Identifier for the resource.",
                    "type": "string",
                    "readOnly": true,
                    "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                  },
                  "hostname": {
                    "description": "Fully qualified domain name that will be delegated to Yext.",
                    "type": "string",
                    "example": "www.example.com"
                  },
                  "wildcard": {
                    "description": "If set to true, [Domain Associations](#tag/Domain-Associations) can be created for single-level subdomains of the given hostname.\n",
                    "type": "boolean",
                    "default": false
                  },
                  "destination": {
                    "description": "The Yext product the domain will be used for. Currently, only `PAGES` is supported.\n",
                    "type": "string",
                    "enum": [
                      "PAGES"
                    ],
                    "example": "PAGES"
                  },
                  "integration_type": {
                    "description": "How the domain will be integrated with Yext. Only `USER_OWNED` is supported for domains created via the API.\n",
                    "type": "string",
                    "enum": [
                      "USER_OWNED",
                      "CUSTOM",
                      "LEGACY_YEXT_MANAGED"
                    ],
                    "example": "USER_OWNED"
                  },
                  "state": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "PENDING_VERIFICATION",
                      "VERIFICATION_FAILED",
                      "PENDING_CREATION",
                      "CREATING",
                      "CREATION_FAILED",
                      "ACTIVE",
                      "PENDING_DELETION",
                      "DELETED",
                      "BLOCKED",
                      "DELETION_FAILED",
                      "MOVE_REQUIRED"
                    ],
                    "example": "ACTIVE"
                  },
                  "ownership_verification": {
                    "description": "One of CNAME, TXT, or HTTP verification must be used to complete Yext ownership verification for the domain.\nThe tokens to use for each of these methods are provided in this object.\n",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "cname_target": {
                        "type": "string",
                        "example": "idzm5s34j5.yext.pgscdncf.com."
                      },
                      "txt_domain": {
                        "type": "string",
                        "example": "_yext-domain.www.example.com"
                      },
                      "txt_value": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "http_uri": {
                        "type": "string",
                        "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                      },
                      "http_body": {
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  },
                  "managed_ssl": {
                    "description": "SSL certificate will be automatically managed by Yext.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                    "type": "object",
                    "required": [
                      "certificate_authority",
                      "validation_method"
                    ],
                    "properties": {
                      "certificate_authority": {
                        "type": "string",
                        "enum": [
                          "GOOGLE_TRUST",
                          "LETS_ENCRYPT"
                        ],
                        "default": "GOOGLE_TRUST"
                      },
                      "validation_method": {
                        "type": "string",
                        "enum": [
                          "HTTP",
                          "TXT"
                        ],
                        "example": "HTTP"
                      },
                      "hostname_validation": {
                        "description": "Proof of ownership for the SSL provider.\n",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "cname_target": {
                            "type": "string",
                            "example": "idzm5s34j5.yext.pgscdncf.com."
                          },
                          "txt_domain": {
                            "type": "string",
                            "example": "_yext-domain.www.example.com"
                          },
                          "txt_value": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "http_uri": {
                            "type": "string",
                            "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                          },
                          "http_body": {
                            "type": "string",
                            "format": "uuid"
                          }
                        }
                      },
                      "http_validation": {
                        "description": "This will only be set if `HTTP` is selected via the `validation_method` field.\n",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "uri": {
                            "type": "string",
                            "example": "http://www.example.com/.well-known/acme-challenge/0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr"
                          },
                          "body": {
                            "type": "string",
                            "example": "0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr.r54qAqCZSs4xyyeamMffaxyR1FWYVb5OvwUh8EcrhpI"
                          }
                        }
                      },
                      "txt_validation": {
                        "description": "This will only be set if `TXT` is selected via the `validation_method` field.\nThe delegated DCV CNAME is recommended over the individual TXT records,since delegated DCV would only need to be\ndone one time, whereas the individual TXT records would have to be set everytime the certificate is renewed.\n",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "delegated_dcv_domain": {
                            "type": "string"
                          },
                          "delegated_dcv_cname_target": {
                            "type": "string"
                          },
                          "txt_records": {
                            "description": "Will have multiple required tokens if the domain is a wildcard domain.\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "domain": {
                                  "type": "string",
                                  "example": "_acme-challenge.www.example.com"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "-sXIiCspHlmE7GU-vV-6oBR-M6BU-4d1A4Ak3O1cGos"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "managed_csr": {
                    "description": "SSL certificate will be issued using the given [Managed CSR](#tag/Managed-CSRs).\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                    "type": "object",
                    "required": [
                      "custom_public_certificate"
                    ],
                    "properties": {
                      "managed_csr_id": {
                        "description": "The name of the [Managed CSR](#tag/Managed-CSRs) resource.\n",
                        "type": "string",
                        "example": "accounts/123456/csrs/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                      },
                      "custom_public_certificate": {
                        "description": "Public CA signed certificate.\n",
                        "type": "string",
                        "format": "pem",
                        "writeOnly": true,
                        "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                      },
                      "hostname_validation": {
                        "description": "Proof of ownership for the SSL provider.\n",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "cname_target": {
                            "type": "string",
                            "example": "idzm5s34j5.yext.pgscdncf.com."
                          },
                          "txt_domain": {
                            "type": "string",
                            "example": "_yext-domain.www.example.com"
                          },
                          "txt_value": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "http_uri": {
                            "type": "string",
                            "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                          },
                          "http_body": {
                            "type": "string",
                            "format": "uuid"
                          }
                        }
                      }
                    }
                  },
                  "custom_ssl_certificate": {
                    "description": "The provided custom SSL certificate will be used for serving requests to the domain.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                    "type": "object",
                    "required": [
                      "public_certificate",
                      "private_key"
                    ],
                    "properties": {
                      "public_certificate": {
                        "type": "string",
                        "format": "pem",
                        "writeOnly": true,
                        "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                      },
                      "private_key": {
                        "type": "string",
                        "format": "pem",
                        "writeOnly": true,
                        "example": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBj08sp5++4anG\n...\n-----END PRIVATE KEY-----\n"
                      },
                      "hostname_validation": {
                        "description": "Proof of ownership for the SSL provider.\n",
                        "type": "object",
                        "readOnly": true,
                        "properties": {
                          "cname_target": {
                            "type": "string",
                            "example": "idzm5s34j5.yext.pgscdncf.com."
                          },
                          "txt_domain": {
                            "type": "string",
                            "example": "_yext-domain.www.example.com"
                          },
                          "txt_value": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "http_uri": {
                            "type": "string",
                            "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                          },
                          "http_body": {
                            "type": "string",
                            "format": "uuid"
                          }
                        }
                      }
                    }
                  },
                  "errors": {
                    "description": "Errors and/or warnings regarding the Domain setup.",
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "$ref": "#/components/schemas/ResponseError"
                    }
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "delete_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                },
                "required": [
                  "hostname",
                  "destination",
                  "integration_type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Domain created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "title": "Domain",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Identifier for the resource.",
                          "type": "string",
                          "readOnly": true,
                          "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                        },
                        "hostname": {
                          "description": "Fully qualified domain name that will be delegated to Yext.",
                          "type": "string",
                          "example": "www.example.com"
                        },
                        "wildcard": {
                          "description": "If set to true, [Domain Associations](#tag/Domain-Associations) can be created for single-level subdomains of the given hostname.\n",
                          "type": "boolean",
                          "default": false
                        },
                        "destination": {
                          "description": "The Yext product the domain will be used for. Currently, only `PAGES` is supported.\n",
                          "type": "string",
                          "enum": [
                            "PAGES"
                          ],
                          "example": "PAGES"
                        },
                        "integration_type": {
                          "description": "How the domain will be integrated with Yext. Only `USER_OWNED` is supported for domains created via the API.\n",
                          "type": "string",
                          "enum": [
                            "USER_OWNED",
                            "CUSTOM",
                            "LEGACY_YEXT_MANAGED"
                          ],
                          "example": "USER_OWNED"
                        },
                        "state": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "PENDING_VERIFICATION",
                            "VERIFICATION_FAILED",
                            "PENDING_CREATION",
                            "CREATING",
                            "CREATION_FAILED",
                            "ACTIVE",
                            "PENDING_DELETION",
                            "DELETED",
                            "BLOCKED",
                            "DELETION_FAILED",
                            "MOVE_REQUIRED"
                          ],
                          "example": "ACTIVE"
                        },
                        "ownership_verification": {
                          "description": "One of CNAME, TXT, or HTTP verification must be used to complete Yext ownership verification for the domain.\nThe tokens to use for each of these methods are provided in this object.\n",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "cname_target": {
                              "type": "string",
                              "example": "idzm5s34j5.yext.pgscdncf.com."
                            },
                            "txt_domain": {
                              "type": "string",
                              "example": "_yext-domain.www.example.com"
                            },
                            "txt_value": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "http_uri": {
                              "type": "string",
                              "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                            },
                            "http_body": {
                              "type": "string",
                              "format": "uuid"
                            }
                          }
                        },
                        "managed_ssl": {
                          "description": "SSL certificate will be automatically managed by Yext.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                          "type": "object",
                          "required": [
                            "certificate_authority",
                            "validation_method"
                          ],
                          "properties": {
                            "certificate_authority": {
                              "type": "string",
                              "enum": [
                                "GOOGLE_TRUST",
                                "LETS_ENCRYPT"
                              ],
                              "default": "GOOGLE_TRUST"
                            },
                            "validation_method": {
                              "type": "string",
                              "enum": [
                                "HTTP",
                                "TXT"
                              ],
                              "example": "HTTP"
                            },
                            "hostname_validation": {
                              "description": "Proof of ownership for the SSL provider.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "cname_target": {
                                  "type": "string",
                                  "example": "idzm5s34j5.yext.pgscdncf.com."
                                },
                                "txt_domain": {
                                  "type": "string",
                                  "example": "_yext-domain.www.example.com"
                                },
                                "txt_value": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "http_uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                },
                                "http_body": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              }
                            },
                            "http_validation": {
                              "description": "This will only be set if `HTTP` is selected via the `validation_method` field.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/acme-challenge/0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr"
                                },
                                "body": {
                                  "type": "string",
                                  "example": "0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr.r54qAqCZSs4xyyeamMffaxyR1FWYVb5OvwUh8EcrhpI"
                                }
                              }
                            },
                            "txt_validation": {
                              "description": "This will only be set if `TXT` is selected via the `validation_method` field.\nThe delegated DCV CNAME is recommended over the individual TXT records,since delegated DCV would only need to be\ndone one time, whereas the individual TXT records would have to be set everytime the certificate is renewed.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "delegated_dcv_domain": {
                                  "type": "string"
                                },
                                "delegated_dcv_cname_target": {
                                  "type": "string"
                                },
                                "txt_records": {
                                  "description": "Will have multiple required tokens if the domain is a wildcard domain.\n",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "domain": {
                                        "type": "string",
                                        "example": "_acme-challenge.www.example.com"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "-sXIiCspHlmE7GU-vV-6oBR-M6BU-4d1A4Ak3O1cGos"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "managed_csr": {
                          "description": "SSL certificate will be issued using the given [Managed CSR](#tag/Managed-CSRs).\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                          "type": "object",
                          "required": [
                            "custom_public_certificate"
                          ],
                          "properties": {
                            "managed_csr_id": {
                              "description": "The name of the [Managed CSR](#tag/Managed-CSRs) resource.\n",
                              "type": "string",
                              "example": "accounts/123456/csrs/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                            },
                            "custom_public_certificate": {
                              "description": "Public CA signed certificate.\n",
                              "type": "string",
                              "format": "pem",
                              "writeOnly": true,
                              "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                            },
                            "hostname_validation": {
                              "description": "Proof of ownership for the SSL provider.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "cname_target": {
                                  "type": "string",
                                  "example": "idzm5s34j5.yext.pgscdncf.com."
                                },
                                "txt_domain": {
                                  "type": "string",
                                  "example": "_yext-domain.www.example.com"
                                },
                                "txt_value": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "http_uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                },
                                "http_body": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              }
                            }
                          }
                        },
                        "custom_ssl_certificate": {
                          "description": "The provided custom SSL certificate will be used for serving requests to the domain.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                          "type": "object",
                          "required": [
                            "public_certificate",
                            "private_key"
                          ],
                          "properties": {
                            "public_certificate": {
                              "type": "string",
                              "format": "pem",
                              "writeOnly": true,
                              "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                            },
                            "private_key": {
                              "type": "string",
                              "format": "pem",
                              "writeOnly": true,
                              "example": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBj08sp5++4anG\n...\n-----END PRIVATE KEY-----\n"
                            },
                            "hostname_validation": {
                              "description": "Proof of ownership for the SSL provider.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "cname_target": {
                                  "type": "string",
                                  "example": "idzm5s34j5.yext.pgscdncf.com."
                                },
                                "txt_domain": {
                                  "type": "string",
                                  "example": "_yext-domain.www.example.com"
                                },
                                "txt_value": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "http_uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                },
                                "http_body": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "description": "Errors and/or warnings regarding the Domain setup.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "$ref": "#/components/schemas/ResponseError"
                          }
                        },
                        "create_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "update_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "delete_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "get": {
        "operationId": "listDomains",
        "tags": [
          "Domains"
        ],
        "summary": "List Domains",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/hostnameFilters"
          },
          {
            "$ref": "#/components/parameters/showDeleted"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageToken"
          },
          {
            "$ref": "#/components/parameters/viewDefaultBasic"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of Domains matching request filters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "domains": {
                          "type": "array",
                          "items": {
                            "title": "Domain",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Identifier for the resource.",
                                "type": "string",
                                "readOnly": true,
                                "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                              },
                              "hostname": {
                                "description": "Fully qualified domain name that will be delegated to Yext.",
                                "type": "string",
                                "example": "www.example.com"
                              },
                              "wildcard": {
                                "description": "If set to true, [Domain Associations](#tag/Domain-Associations) can be created for single-level subdomains of the given hostname.\n",
                                "type": "boolean",
                                "default": false
                              },
                              "destination": {
                                "description": "The Yext product the domain will be used for. Currently, only `PAGES` is supported.\n",
                                "type": "string",
                                "enum": [
                                  "PAGES"
                                ],
                                "example": "PAGES"
                              },
                              "integration_type": {
                                "description": "How the domain will be integrated with Yext. Only `USER_OWNED` is supported for domains created via the API.\n",
                                "type": "string",
                                "enum": [
                                  "USER_OWNED",
                                  "CUSTOM",
                                  "LEGACY_YEXT_MANAGED"
                                ],
                                "example": "USER_OWNED"
                              },
                              "state": {
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "PENDING_VERIFICATION",
                                  "VERIFICATION_FAILED",
                                  "PENDING_CREATION",
                                  "CREATING",
                                  "CREATION_FAILED",
                                  "ACTIVE",
                                  "PENDING_DELETION",
                                  "DELETED",
                                  "BLOCKED",
                                  "DELETION_FAILED",
                                  "MOVE_REQUIRED"
                                ],
                                "example": "ACTIVE"
                              },
                              "ownership_verification": {
                                "description": "One of CNAME, TXT, or HTTP verification must be used to complete Yext ownership verification for the domain.\nThe tokens to use for each of these methods are provided in this object.\n",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "cname_target": {
                                    "type": "string",
                                    "example": "idzm5s34j5.yext.pgscdncf.com."
                                  },
                                  "txt_domain": {
                                    "type": "string",
                                    "example": "_yext-domain.www.example.com"
                                  },
                                  "txt_value": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "http_uri": {
                                    "type": "string",
                                    "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                  },
                                  "http_body": {
                                    "type": "string",
                                    "format": "uuid"
                                  }
                                }
                              },
                              "managed_ssl": {
                                "description": "SSL certificate will be automatically managed by Yext.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                                "type": "object",
                                "required": [
                                  "certificate_authority",
                                  "validation_method"
                                ],
                                "properties": {
                                  "certificate_authority": {
                                    "type": "string",
                                    "enum": [
                                      "GOOGLE_TRUST",
                                      "LETS_ENCRYPT"
                                    ],
                                    "default": "GOOGLE_TRUST"
                                  },
                                  "validation_method": {
                                    "type": "string",
                                    "enum": [
                                      "HTTP",
                                      "TXT"
                                    ],
                                    "example": "HTTP"
                                  },
                                  "hostname_validation": {
                                    "description": "Proof of ownership for the SSL provider.\n",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "cname_target": {
                                        "type": "string",
                                        "example": "idzm5s34j5.yext.pgscdncf.com."
                                      },
                                      "txt_domain": {
                                        "type": "string",
                                        "example": "_yext-domain.www.example.com"
                                      },
                                      "txt_value": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "http_uri": {
                                        "type": "string",
                                        "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                      },
                                      "http_body": {
                                        "type": "string",
                                        "format": "uuid"
                                      }
                                    }
                                  },
                                  "http_validation": {
                                    "description": "This will only be set if `HTTP` is selected via the `validation_method` field.\n",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "uri": {
                                        "type": "string",
                                        "example": "http://www.example.com/.well-known/acme-challenge/0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr"
                                      },
                                      "body": {
                                        "type": "string",
                                        "example": "0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr.r54qAqCZSs4xyyeamMffaxyR1FWYVb5OvwUh8EcrhpI"
                                      }
                                    }
                                  },
                                  "txt_validation": {
                                    "description": "This will only be set if `TXT` is selected via the `validation_method` field.\nThe delegated DCV CNAME is recommended over the individual TXT records,since delegated DCV would only need to be\ndone one time, whereas the individual TXT records would have to be set everytime the certificate is renewed.\n",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "delegated_dcv_domain": {
                                        "type": "string"
                                      },
                                      "delegated_dcv_cname_target": {
                                        "type": "string"
                                      },
                                      "txt_records": {
                                        "description": "Will have multiple required tokens if the domain is a wildcard domain.\n",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "domain": {
                                              "type": "string",
                                              "example": "_acme-challenge.www.example.com"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": "-sXIiCspHlmE7GU-vV-6oBR-M6BU-4d1A4Ak3O1cGos"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "managed_csr": {
                                "description": "SSL certificate will be issued using the given [Managed CSR](#tag/Managed-CSRs).\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                                "type": "object",
                                "required": [
                                  "custom_public_certificate"
                                ],
                                "properties": {
                                  "managed_csr_id": {
                                    "description": "The name of the [Managed CSR](#tag/Managed-CSRs) resource.\n",
                                    "type": "string",
                                    "example": "accounts/123456/csrs/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                                  },
                                  "custom_public_certificate": {
                                    "description": "Public CA signed certificate.\n",
                                    "type": "string",
                                    "format": "pem",
                                    "writeOnly": true,
                                    "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                                  },
                                  "hostname_validation": {
                                    "description": "Proof of ownership for the SSL provider.\n",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "cname_target": {
                                        "type": "string",
                                        "example": "idzm5s34j5.yext.pgscdncf.com."
                                      },
                                      "txt_domain": {
                                        "type": "string",
                                        "example": "_yext-domain.www.example.com"
                                      },
                                      "txt_value": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "http_uri": {
                                        "type": "string",
                                        "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                      },
                                      "http_body": {
                                        "type": "string",
                                        "format": "uuid"
                                      }
                                    }
                                  }
                                }
                              },
                              "custom_ssl_certificate": {
                                "description": "The provided custom SSL certificate will be used for serving requests to the domain.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                                "type": "object",
                                "required": [
                                  "public_certificate",
                                  "private_key"
                                ],
                                "properties": {
                                  "public_certificate": {
                                    "type": "string",
                                    "format": "pem",
                                    "writeOnly": true,
                                    "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                                  },
                                  "private_key": {
                                    "type": "string",
                                    "format": "pem",
                                    "writeOnly": true,
                                    "example": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBj08sp5++4anG\n...\n-----END PRIVATE KEY-----\n"
                                  },
                                  "hostname_validation": {
                                    "description": "Proof of ownership for the SSL provider.\n",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "cname_target": {
                                        "type": "string",
                                        "example": "idzm5s34j5.yext.pgscdncf.com."
                                      },
                                      "txt_domain": {
                                        "type": "string",
                                        "example": "_yext-domain.www.example.com"
                                      },
                                      "txt_value": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "http_uri": {
                                        "type": "string",
                                        "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                      },
                                      "http_body": {
                                        "type": "string",
                                        "format": "uuid"
                                      }
                                    }
                                  }
                                }
                              },
                              "errors": {
                                "description": "Errors and/or warnings regarding the Domain setup.",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "$ref": "#/components/schemas/ResponseError"
                                }
                              },
                              "create_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "update_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "delete_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "next_page_token": {
                          "$ref": "#/components/schemas/nextPageToken"
                        },
                        "total_size": {
                          "$ref": "#/components/schemas/totalSize"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/domains/{domainId}": {
      "get": {
        "operationId": "getDomain",
        "tags": [
          "Domains"
        ],
        "summary": "Get Domain",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/domainId"
          },
          {
            "$ref": "#/components/parameters/viewDefaultFull"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "title": "Domain",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Identifier for the resource.",
                          "type": "string",
                          "readOnly": true,
                          "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                        },
                        "hostname": {
                          "description": "Fully qualified domain name that will be delegated to Yext.",
                          "type": "string",
                          "example": "www.example.com"
                        },
                        "wildcard": {
                          "description": "If set to true, [Domain Associations](#tag/Domain-Associations) can be created for single-level subdomains of the given hostname.\n",
                          "type": "boolean",
                          "default": false
                        },
                        "destination": {
                          "description": "The Yext product the domain will be used for. Currently, only `PAGES` is supported.\n",
                          "type": "string",
                          "enum": [
                            "PAGES"
                          ],
                          "example": "PAGES"
                        },
                        "integration_type": {
                          "description": "How the domain will be integrated with Yext. Only `USER_OWNED` is supported for domains created via the API.\n",
                          "type": "string",
                          "enum": [
                            "USER_OWNED",
                            "CUSTOM",
                            "LEGACY_YEXT_MANAGED"
                          ],
                          "example": "USER_OWNED"
                        },
                        "state": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "PENDING_VERIFICATION",
                            "VERIFICATION_FAILED",
                            "PENDING_CREATION",
                            "CREATING",
                            "CREATION_FAILED",
                            "ACTIVE",
                            "PENDING_DELETION",
                            "DELETED",
                            "BLOCKED",
                            "DELETION_FAILED",
                            "MOVE_REQUIRED"
                          ],
                          "example": "ACTIVE"
                        },
                        "ownership_verification": {
                          "description": "One of CNAME, TXT, or HTTP verification must be used to complete Yext ownership verification for the domain.\nThe tokens to use for each of these methods are provided in this object.\n",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "cname_target": {
                              "type": "string",
                              "example": "idzm5s34j5.yext.pgscdncf.com."
                            },
                            "txt_domain": {
                              "type": "string",
                              "example": "_yext-domain.www.example.com"
                            },
                            "txt_value": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "http_uri": {
                              "type": "string",
                              "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                            },
                            "http_body": {
                              "type": "string",
                              "format": "uuid"
                            }
                          }
                        },
                        "managed_ssl": {
                          "description": "SSL certificate will be automatically managed by Yext.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                          "type": "object",
                          "required": [
                            "certificate_authority",
                            "validation_method"
                          ],
                          "properties": {
                            "certificate_authority": {
                              "type": "string",
                              "enum": [
                                "GOOGLE_TRUST",
                                "LETS_ENCRYPT"
                              ],
                              "default": "GOOGLE_TRUST"
                            },
                            "validation_method": {
                              "type": "string",
                              "enum": [
                                "HTTP",
                                "TXT"
                              ],
                              "example": "HTTP"
                            },
                            "hostname_validation": {
                              "description": "Proof of ownership for the SSL provider.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "cname_target": {
                                  "type": "string",
                                  "example": "idzm5s34j5.yext.pgscdncf.com."
                                },
                                "txt_domain": {
                                  "type": "string",
                                  "example": "_yext-domain.www.example.com"
                                },
                                "txt_value": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "http_uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                },
                                "http_body": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              }
                            },
                            "http_validation": {
                              "description": "This will only be set if `HTTP` is selected via the `validation_method` field.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/acme-challenge/0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr"
                                },
                                "body": {
                                  "type": "string",
                                  "example": "0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr.r54qAqCZSs4xyyeamMffaxyR1FWYVb5OvwUh8EcrhpI"
                                }
                              }
                            },
                            "txt_validation": {
                              "description": "This will only be set if `TXT` is selected via the `validation_method` field.\nThe delegated DCV CNAME is recommended over the individual TXT records,since delegated DCV would only need to be\ndone one time, whereas the individual TXT records would have to be set everytime the certificate is renewed.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "delegated_dcv_domain": {
                                  "type": "string"
                                },
                                "delegated_dcv_cname_target": {
                                  "type": "string"
                                },
                                "txt_records": {
                                  "description": "Will have multiple required tokens if the domain is a wildcard domain.\n",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "domain": {
                                        "type": "string",
                                        "example": "_acme-challenge.www.example.com"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "-sXIiCspHlmE7GU-vV-6oBR-M6BU-4d1A4Ak3O1cGos"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "managed_csr": {
                          "description": "SSL certificate will be issued using the given [Managed CSR](#tag/Managed-CSRs).\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                          "type": "object",
                          "required": [
                            "custom_public_certificate"
                          ],
                          "properties": {
                            "managed_csr_id": {
                              "description": "The name of the [Managed CSR](#tag/Managed-CSRs) resource.\n",
                              "type": "string",
                              "example": "accounts/123456/csrs/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                            },
                            "custom_public_certificate": {
                              "description": "Public CA signed certificate.\n",
                              "type": "string",
                              "format": "pem",
                              "writeOnly": true,
                              "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                            },
                            "hostname_validation": {
                              "description": "Proof of ownership for the SSL provider.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "cname_target": {
                                  "type": "string",
                                  "example": "idzm5s34j5.yext.pgscdncf.com."
                                },
                                "txt_domain": {
                                  "type": "string",
                                  "example": "_yext-domain.www.example.com"
                                },
                                "txt_value": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "http_uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                },
                                "http_body": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              }
                            }
                          }
                        },
                        "custom_ssl_certificate": {
                          "description": "The provided custom SSL certificate will be used for serving requests to the domain.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                          "type": "object",
                          "required": [
                            "public_certificate",
                            "private_key"
                          ],
                          "properties": {
                            "public_certificate": {
                              "type": "string",
                              "format": "pem",
                              "writeOnly": true,
                              "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                            },
                            "private_key": {
                              "type": "string",
                              "format": "pem",
                              "writeOnly": true,
                              "example": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBj08sp5++4anG\n...\n-----END PRIVATE KEY-----\n"
                            },
                            "hostname_validation": {
                              "description": "Proof of ownership for the SSL provider.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "cname_target": {
                                  "type": "string",
                                  "example": "idzm5s34j5.yext.pgscdncf.com."
                                },
                                "txt_domain": {
                                  "type": "string",
                                  "example": "_yext-domain.www.example.com"
                                },
                                "txt_value": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "http_uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                },
                                "http_body": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "description": "Errors and/or warnings regarding the Domain setup.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "$ref": "#/components/schemas/ResponseError"
                          }
                        },
                        "create_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "update_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "delete_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "patch": {
        "operationId": "updateDomain",
        "tags": [
          "Domains"
        ],
        "summary": "Update Domain",
        "description": "Update the configurations for the specified domain. Also triggers a check for Yext or SSL verification, if the Domain is not yet ACTIVE.\nSee the `update_mask` parameter for fields that can be updated, any other provided fields will be ignored.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/domainId"
          },
          {
            "$ref": "#/components/parameters/forceMove"
          },
          {
            "name": "update_mask",
            "in": "query",
            "schema": {
              "type": "array",
              "default": "*",
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "managed_ssl.certificate_authority",
                  "custom_ssl_certificate",
                  "managed_csr.custom_public_certificate"
                ]
              }
            },
            "description": "A comma-separated list of fields to update."
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "managed_ssl": {
                    "description": "SSL certificate will be automatically managed by Yext.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                    "type": "object",
                    "required": [
                      "certificate_authority"
                    ],
                    "properties": {
                      "certificate_authority": {
                        "$ref": "#/components/schemas/certificate_authority"
                      }
                    }
                  },
                  "managed_csr": {
                    "$ref": "#/components/schemas/managed_csr"
                  },
                  "custom_ssl_certificate": {
                    "$ref": "#/components/schemas/custom_ssl_certificate"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Domain updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "title": "Domain",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Identifier for the resource.",
                          "type": "string",
                          "readOnly": true,
                          "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                        },
                        "hostname": {
                          "description": "Fully qualified domain name that will be delegated to Yext.",
                          "type": "string",
                          "example": "www.example.com"
                        },
                        "wildcard": {
                          "description": "If set to true, [Domain Associations](#tag/Domain-Associations) can be created for single-level subdomains of the given hostname.\n",
                          "type": "boolean",
                          "default": false
                        },
                        "destination": {
                          "description": "The Yext product the domain will be used for. Currently, only `PAGES` is supported.\n",
                          "type": "string",
                          "enum": [
                            "PAGES"
                          ],
                          "example": "PAGES"
                        },
                        "integration_type": {
                          "description": "How the domain will be integrated with Yext. Only `USER_OWNED` is supported for domains created via the API.\n",
                          "type": "string",
                          "enum": [
                            "USER_OWNED",
                            "CUSTOM",
                            "LEGACY_YEXT_MANAGED"
                          ],
                          "example": "USER_OWNED"
                        },
                        "state": {
                          "type": "string",
                          "readOnly": true,
                          "enum": [
                            "PENDING_VERIFICATION",
                            "VERIFICATION_FAILED",
                            "PENDING_CREATION",
                            "CREATING",
                            "CREATION_FAILED",
                            "ACTIVE",
                            "PENDING_DELETION",
                            "DELETED",
                            "BLOCKED",
                            "DELETION_FAILED",
                            "MOVE_REQUIRED"
                          ],
                          "example": "ACTIVE"
                        },
                        "ownership_verification": {
                          "description": "One of CNAME, TXT, or HTTP verification must be used to complete Yext ownership verification for the domain.\nThe tokens to use for each of these methods are provided in this object.\n",
                          "type": "object",
                          "readOnly": true,
                          "properties": {
                            "cname_target": {
                              "type": "string",
                              "example": "idzm5s34j5.yext.pgscdncf.com."
                            },
                            "txt_domain": {
                              "type": "string",
                              "example": "_yext-domain.www.example.com"
                            },
                            "txt_value": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "http_uri": {
                              "type": "string",
                              "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                            },
                            "http_body": {
                              "type": "string",
                              "format": "uuid"
                            }
                          }
                        },
                        "managed_ssl": {
                          "description": "SSL certificate will be automatically managed by Yext.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                          "type": "object",
                          "required": [
                            "certificate_authority",
                            "validation_method"
                          ],
                          "properties": {
                            "certificate_authority": {
                              "type": "string",
                              "enum": [
                                "GOOGLE_TRUST",
                                "LETS_ENCRYPT"
                              ],
                              "default": "GOOGLE_TRUST"
                            },
                            "validation_method": {
                              "type": "string",
                              "enum": [
                                "HTTP",
                                "TXT"
                              ],
                              "example": "HTTP"
                            },
                            "hostname_validation": {
                              "description": "Proof of ownership for the SSL provider.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "cname_target": {
                                  "type": "string",
                                  "example": "idzm5s34j5.yext.pgscdncf.com."
                                },
                                "txt_domain": {
                                  "type": "string",
                                  "example": "_yext-domain.www.example.com"
                                },
                                "txt_value": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "http_uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                },
                                "http_body": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              }
                            },
                            "http_validation": {
                              "description": "This will only be set if `HTTP` is selected via the `validation_method` field.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/acme-challenge/0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr"
                                },
                                "body": {
                                  "type": "string",
                                  "example": "0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr.r54qAqCZSs4xyyeamMffaxyR1FWYVb5OvwUh8EcrhpI"
                                }
                              }
                            },
                            "txt_validation": {
                              "description": "This will only be set if `TXT` is selected via the `validation_method` field.\nThe delegated DCV CNAME is recommended over the individual TXT records,since delegated DCV would only need to be\ndone one time, whereas the individual TXT records would have to be set everytime the certificate is renewed.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "delegated_dcv_domain": {
                                  "type": "string"
                                },
                                "delegated_dcv_cname_target": {
                                  "type": "string"
                                },
                                "txt_records": {
                                  "description": "Will have multiple required tokens if the domain is a wildcard domain.\n",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "domain": {
                                        "type": "string",
                                        "example": "_acme-challenge.www.example.com"
                                      },
                                      "value": {
                                        "type": "string",
                                        "example": "-sXIiCspHlmE7GU-vV-6oBR-M6BU-4d1A4Ak3O1cGos"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "managed_csr": {
                          "description": "SSL certificate will be issued using the given [Managed CSR](#tag/Managed-CSRs).\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                          "type": "object",
                          "required": [
                            "custom_public_certificate"
                          ],
                          "properties": {
                            "managed_csr_id": {
                              "description": "The name of the [Managed CSR](#tag/Managed-CSRs) resource.\n",
                              "type": "string",
                              "example": "accounts/123456/csrs/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                            },
                            "custom_public_certificate": {
                              "description": "Public CA signed certificate.\n",
                              "type": "string",
                              "format": "pem",
                              "writeOnly": true,
                              "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                            },
                            "hostname_validation": {
                              "description": "Proof of ownership for the SSL provider.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "cname_target": {
                                  "type": "string",
                                  "example": "idzm5s34j5.yext.pgscdncf.com."
                                },
                                "txt_domain": {
                                  "type": "string",
                                  "example": "_yext-domain.www.example.com"
                                },
                                "txt_value": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "http_uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                },
                                "http_body": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              }
                            }
                          }
                        },
                        "custom_ssl_certificate": {
                          "description": "The provided custom SSL certificate will be used for serving requests to the domain.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                          "type": "object",
                          "required": [
                            "public_certificate",
                            "private_key"
                          ],
                          "properties": {
                            "public_certificate": {
                              "type": "string",
                              "format": "pem",
                              "writeOnly": true,
                              "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                            },
                            "private_key": {
                              "type": "string",
                              "format": "pem",
                              "writeOnly": true,
                              "example": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBj08sp5++4anG\n...\n-----END PRIVATE KEY-----\n"
                            },
                            "hostname_validation": {
                              "description": "Proof of ownership for the SSL provider.\n",
                              "type": "object",
                              "readOnly": true,
                              "properties": {
                                "cname_target": {
                                  "type": "string",
                                  "example": "idzm5s34j5.yext.pgscdncf.com."
                                },
                                "txt_domain": {
                                  "type": "string",
                                  "example": "_yext-domain.www.example.com"
                                },
                                "txt_value": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "http_uri": {
                                  "type": "string",
                                  "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                },
                                "http_body": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              }
                            }
                          }
                        },
                        "errors": {
                          "description": "Errors and/or warnings regarding the Domain setup.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "$ref": "#/components/schemas/ResponseError"
                          }
                        },
                        "create_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "update_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "delete_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteDomain",
        "tags": [
          "Domains"
        ],
        "summary": "Delete Domain",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/domainId"
          },
          {
            "name": "force",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "If true, Domain Associations using this domain will also be deleted.\nIf not set or false, and if Domain Associations exist using this domain, an error will be returned.\n"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "202": {
            "description": "Domain deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/domains/migratepagesdomain/{hostname}": {
      "post": {
        "operationId": "migratePagesDomain",
        "tags": [
          "Domains"
        ],
        "summary": "Migrate Legacy Pages Domain",
        "description": "Migrates a legacy Pages domain to a Domains API domain resource.",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "name": "hostname",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The hostname of the legacy domain to migrate."
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "201": {
            "description": "Legacy domain migrated to Domains API successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "domains": {
                          "description": "[Domain](#tag/Domains) resources created as a result of the migration.\n",
                          "type": "array",
                          "items": {
                            "title": "Domain",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Identifier for the resource.",
                                "type": "string",
                                "readOnly": true,
                                "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                              },
                              "hostname": {
                                "description": "Fully qualified domain name that will be delegated to Yext.",
                                "type": "string",
                                "example": "www.example.com"
                              },
                              "wildcard": {
                                "description": "If set to true, [Domain Associations](#tag/Domain-Associations) can be created for single-level subdomains of the given hostname.\n",
                                "type": "boolean",
                                "default": false
                              },
                              "destination": {
                                "description": "The Yext product the domain will be used for. Currently, only `PAGES` is supported.\n",
                                "type": "string",
                                "enum": [
                                  "PAGES"
                                ],
                                "example": "PAGES"
                              },
                              "integration_type": {
                                "description": "How the domain will be integrated with Yext. Only `USER_OWNED` is supported for domains created via the API.\n",
                                "type": "string",
                                "enum": [
                                  "USER_OWNED",
                                  "CUSTOM",
                                  "LEGACY_YEXT_MANAGED"
                                ],
                                "example": "USER_OWNED"
                              },
                              "state": {
                                "type": "string",
                                "readOnly": true,
                                "enum": [
                                  "PENDING_VERIFICATION",
                                  "VERIFICATION_FAILED",
                                  "PENDING_CREATION",
                                  "CREATING",
                                  "CREATION_FAILED",
                                  "ACTIVE",
                                  "PENDING_DELETION",
                                  "DELETED",
                                  "BLOCKED",
                                  "DELETION_FAILED",
                                  "MOVE_REQUIRED"
                                ],
                                "example": "ACTIVE"
                              },
                              "ownership_verification": {
                                "description": "One of CNAME, TXT, or HTTP verification must be used to complete Yext ownership verification for the domain.\nThe tokens to use for each of these methods are provided in this object.\n",
                                "type": "object",
                                "readOnly": true,
                                "properties": {
                                  "cname_target": {
                                    "type": "string",
                                    "example": "idzm5s34j5.yext.pgscdncf.com."
                                  },
                                  "txt_domain": {
                                    "type": "string",
                                    "example": "_yext-domain.www.example.com"
                                  },
                                  "txt_value": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "http_uri": {
                                    "type": "string",
                                    "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                  },
                                  "http_body": {
                                    "type": "string",
                                    "format": "uuid"
                                  }
                                }
                              },
                              "managed_ssl": {
                                "description": "SSL certificate will be automatically managed by Yext.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                                "type": "object",
                                "required": [
                                  "certificate_authority",
                                  "validation_method"
                                ],
                                "properties": {
                                  "certificate_authority": {
                                    "type": "string",
                                    "enum": [
                                      "GOOGLE_TRUST",
                                      "LETS_ENCRYPT"
                                    ],
                                    "default": "GOOGLE_TRUST"
                                  },
                                  "validation_method": {
                                    "type": "string",
                                    "enum": [
                                      "HTTP",
                                      "TXT"
                                    ],
                                    "example": "HTTP"
                                  },
                                  "hostname_validation": {
                                    "description": "Proof of ownership for the SSL provider.\n",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "cname_target": {
                                        "type": "string",
                                        "example": "idzm5s34j5.yext.pgscdncf.com."
                                      },
                                      "txt_domain": {
                                        "type": "string",
                                        "example": "_yext-domain.www.example.com"
                                      },
                                      "txt_value": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "http_uri": {
                                        "type": "string",
                                        "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                      },
                                      "http_body": {
                                        "type": "string",
                                        "format": "uuid"
                                      }
                                    }
                                  },
                                  "http_validation": {
                                    "description": "This will only be set if `HTTP` is selected via the `validation_method` field.\n",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "uri": {
                                        "type": "string",
                                        "example": "http://www.example.com/.well-known/acme-challenge/0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr"
                                      },
                                      "body": {
                                        "type": "string",
                                        "example": "0NW3MkWCrnT_5dwos0fKtwrPAqMygpcUqLqDNibb0xLXH3Zjag6wSqPfcvWTGkRr.r54qAqCZSs4xyyeamMffaxyR1FWYVb5OvwUh8EcrhpI"
                                      }
                                    }
                                  },
                                  "txt_validation": {
                                    "description": "This will only be set if `TXT` is selected via the `validation_method` field.\nThe delegated DCV CNAME is recommended over the individual TXT records,since delegated DCV would only need to be\ndone one time, whereas the individual TXT records would have to be set everytime the certificate is renewed.\n",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "delegated_dcv_domain": {
                                        "type": "string"
                                      },
                                      "delegated_dcv_cname_target": {
                                        "type": "string"
                                      },
                                      "txt_records": {
                                        "description": "Will have multiple required tokens if the domain is a wildcard domain.\n",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "domain": {
                                              "type": "string",
                                              "example": "_acme-challenge.www.example.com"
                                            },
                                            "value": {
                                              "type": "string",
                                              "example": "-sXIiCspHlmE7GU-vV-6oBR-M6BU-4d1A4Ak3O1cGos"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "managed_csr": {
                                "description": "SSL certificate will be issued using the given [Managed CSR](#tag/Managed-CSRs).\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                                "type": "object",
                                "required": [
                                  "custom_public_certificate"
                                ],
                                "properties": {
                                  "managed_csr_id": {
                                    "description": "The name of the [Managed CSR](#tag/Managed-CSRs) resource.\n",
                                    "type": "string",
                                    "example": "accounts/123456/csrs/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                                  },
                                  "custom_public_certificate": {
                                    "description": "Public CA signed certificate.\n",
                                    "type": "string",
                                    "format": "pem",
                                    "writeOnly": true,
                                    "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                                  },
                                  "hostname_validation": {
                                    "description": "Proof of ownership for the SSL provider.\n",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "cname_target": {
                                        "type": "string",
                                        "example": "idzm5s34j5.yext.pgscdncf.com."
                                      },
                                      "txt_domain": {
                                        "type": "string",
                                        "example": "_yext-domain.www.example.com"
                                      },
                                      "txt_value": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "http_uri": {
                                        "type": "string",
                                        "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                      },
                                      "http_body": {
                                        "type": "string",
                                        "format": "uuid"
                                      }
                                    }
                                  }
                                }
                              },
                              "custom_ssl_certificate": {
                                "description": "The provided custom SSL certificate will be used for serving requests to the domain.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
                                "type": "object",
                                "required": [
                                  "public_certificate",
                                  "private_key"
                                ],
                                "properties": {
                                  "public_certificate": {
                                    "type": "string",
                                    "format": "pem",
                                    "writeOnly": true,
                                    "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
                                  },
                                  "private_key": {
                                    "type": "string",
                                    "format": "pem",
                                    "writeOnly": true,
                                    "example": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBj08sp5++4anG\n...\n-----END PRIVATE KEY-----\n"
                                  },
                                  "hostname_validation": {
                                    "description": "Proof of ownership for the SSL provider.\n",
                                    "type": "object",
                                    "readOnly": true,
                                    "properties": {
                                      "cname_target": {
                                        "type": "string",
                                        "example": "idzm5s34j5.yext.pgscdncf.com."
                                      },
                                      "txt_domain": {
                                        "type": "string",
                                        "example": "_yext-domain.www.example.com"
                                      },
                                      "txt_value": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "http_uri": {
                                        "type": "string",
                                        "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
                                      },
                                      "http_body": {
                                        "type": "string",
                                        "format": "uuid"
                                      }
                                    }
                                  }
                                }
                              },
                              "errors": {
                                "description": "Errors and/or warnings regarding the Domain setup.",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "$ref": "#/components/schemas/ResponseError"
                                }
                              },
                              "create_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "update_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "delete_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "domain_associations": {
                          "description": "[Domain Associations](#tag/Domain-Associations) resources created as a result of the migration.\n",
                          "type": "array",
                          "items": {
                            "title": "Domain Association",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Identifier for the resource.",
                                "type": "string",
                                "readOnly": true,
                                "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0/associations/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                              },
                              "hostname": {
                                "description": "For parent Domain's with `wildcard=false`, this will equal parent Domain's hostname.\nFor parent Domain's with `wildcard=true`, this can be a single-level subdomain of the parent Domain's hostname.\n",
                                "type": "string",
                                "example": "www.example.com"
                              },
                              "site": {
                                "description": "The Pages site to associate with the parent [Domain](#tag/Domains) resource.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Pages site resource name.",
                                    "type": "string",
                                    "example": "accounts/123456/sites/6789"
                                  },
                                  "primary": {
                                    "description": "If true, this will be the primary Domain for the Pages site, otherwise it will be an alias Domain.\nA Pages site can have at most one primary Domain.\n",
                                    "type": "boolean",
                                    "default": false
                                  }
                                }
                              },
                              "errors": {
                                "description": "Errors and/or warnings regarding the Domain setup.",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "$ref": "#/components/schemas/ResponseError"
                                }
                              },
                              "create_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "update_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/domains/{domainId}/associations": {
      "post": {
        "operationId": "createDomainAssociation",
        "tags": [
          "Domain Associations"
        ],
        "summary": "Create Domain Association",
        "description": "Creating a Domain Association will begin serving the contents of the associated resource at the Domain Association's `hostname` (given DNS for the hostname is already set up).\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/domainId"
          },
          {
            "$ref": "#/components/parameters/forceMove"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Identifier for the resource.",
                    "type": "string",
                    "readOnly": true,
                    "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0/associations/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                  },
                  "hostname": {
                    "description": "For parent Domain's with `wildcard=false`, this will equal parent Domain's hostname.\nFor parent Domain's with `wildcard=true`, this can be a single-level subdomain of the parent Domain's hostname.\n",
                    "type": "string",
                    "example": "www.example.com"
                  },
                  "site": {
                    "description": "The Pages site to associate with the parent [Domain](#tag/Domains) resource.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Pages site resource name.",
                        "type": "string",
                        "example": "accounts/123456/sites/6789"
                      },
                      "primary": {
                        "description": "If true, this will be the primary Domain for the Pages site, otherwise it will be an alias Domain.\nA Pages site can have at most one primary Domain.\n",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  },
                  "errors": {
                    "description": "Errors and/or warnings regarding the Domain setup.",
                    "type": "array",
                    "readOnly": true,
                    "items": {
                      "$ref": "#/components/schemas/ResponseError"
                    }
                  },
                  "create_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "update_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Domain Association created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "title": "Domain Association",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Identifier for the resource.",
                          "type": "string",
                          "readOnly": true,
                          "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0/associations/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                        },
                        "hostname": {
                          "description": "For parent Domain's with `wildcard=false`, this will equal parent Domain's hostname.\nFor parent Domain's with `wildcard=true`, this can be a single-level subdomain of the parent Domain's hostname.\n",
                          "type": "string",
                          "example": "www.example.com"
                        },
                        "site": {
                          "description": "The Pages site to associate with the parent [Domain](#tag/Domains) resource.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Pages site resource name.",
                              "type": "string",
                              "example": "accounts/123456/sites/6789"
                            },
                            "primary": {
                              "description": "If true, this will be the primary Domain for the Pages site, otherwise it will be an alias Domain.\nA Pages site can have at most one primary Domain.\n",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        "errors": {
                          "description": "Errors and/or warnings regarding the Domain setup.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "$ref": "#/components/schemas/ResponseError"
                          }
                        },
                        "create_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "update_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "get": {
        "operationId": "listDomainAssociations",
        "tags": [
          "Domain Associations"
        ],
        "summary": "List Domain Associations",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/domainIdAllowAll"
          },
          {
            "name": "referenced_resources",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "Comma-separated list of associated resources to filter by.",
            "example": "accounts/123456/sites/6789,accounts/98765/sites/5678"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageToken"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of Domains Associations matching request filters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "domain_associations": {
                          "type": "array",
                          "items": {
                            "title": "Domain Association",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Identifier for the resource.",
                                "type": "string",
                                "readOnly": true,
                                "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0/associations/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                              },
                              "hostname": {
                                "description": "For parent Domain's with `wildcard=false`, this will equal parent Domain's hostname.\nFor parent Domain's with `wildcard=true`, this can be a single-level subdomain of the parent Domain's hostname.\n",
                                "type": "string",
                                "example": "www.example.com"
                              },
                              "site": {
                                "description": "The Pages site to associate with the parent [Domain](#tag/Domains) resource.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Pages site resource name.",
                                    "type": "string",
                                    "example": "accounts/123456/sites/6789"
                                  },
                                  "primary": {
                                    "description": "If true, this will be the primary Domain for the Pages site, otherwise it will be an alias Domain.\nA Pages site can have at most one primary Domain.\n",
                                    "type": "boolean",
                                    "default": false
                                  }
                                }
                              },
                              "errors": {
                                "description": "Errors and/or warnings regarding the Domain setup.",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "$ref": "#/components/schemas/ResponseError"
                                }
                              },
                              "create_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "update_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "next_page_token": {
                          "$ref": "#/components/schemas/nextPageToken"
                        },
                        "total_size": {
                          "$ref": "#/components/schemas/totalSize"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/domains/{domainId}/associations/{domainAssociationId}": {
      "get": {
        "operationId": "getDomainAssociation",
        "tags": [
          "Domain Associations"
        ],
        "summary": "Get Domain Association",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/domainId"
          },
          {
            "$ref": "#/components/parameters/domainAssociationId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "200": {
            "description": "Domain Association found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "title": "Domain Association",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Identifier for the resource.",
                          "type": "string",
                          "readOnly": true,
                          "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0/associations/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                        },
                        "hostname": {
                          "description": "For parent Domain's with `wildcard=false`, this will equal parent Domain's hostname.\nFor parent Domain's with `wildcard=true`, this can be a single-level subdomain of the parent Domain's hostname.\n",
                          "type": "string",
                          "example": "www.example.com"
                        },
                        "site": {
                          "description": "The Pages site to associate with the parent [Domain](#tag/Domains) resource.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Pages site resource name.",
                              "type": "string",
                              "example": "accounts/123456/sites/6789"
                            },
                            "primary": {
                              "description": "If true, this will be the primary Domain for the Pages site, otherwise it will be an alias Domain.\nA Pages site can have at most one primary Domain.\n",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        "errors": {
                          "description": "Errors and/or warnings regarding the Domain setup.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "$ref": "#/components/schemas/ResponseError"
                          }
                        },
                        "create_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "update_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "patch": {
        "operationId": "updateDomainAssociation",
        "tags": [
          "Domain Associations"
        ],
        "summary": "Update Domain Association",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/domainId"
          },
          {
            "$ref": "#/components/parameters/domainAssociationId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site": {
                    "$ref": "#/components/schemas/site"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Domain Association updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "title": "Domain Association",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Identifier for the resource.",
                          "type": "string",
                          "readOnly": true,
                          "example": "accounts/123456/domains/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0/associations/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                        },
                        "hostname": {
                          "description": "For parent Domain's with `wildcard=false`, this will equal parent Domain's hostname.\nFor parent Domain's with `wildcard=true`, this can be a single-level subdomain of the parent Domain's hostname.\n",
                          "type": "string",
                          "example": "www.example.com"
                        },
                        "site": {
                          "description": "The Pages site to associate with the parent [Domain](#tag/Domains) resource.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Pages site resource name.",
                              "type": "string",
                              "example": "accounts/123456/sites/6789"
                            },
                            "primary": {
                              "description": "If true, this will be the primary Domain for the Pages site, otherwise it will be an alias Domain.\nA Pages site can have at most one primary Domain.\n",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        "errors": {
                          "description": "Errors and/or warnings regarding the Domain setup.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "$ref": "#/components/schemas/ResponseError"
                          }
                        },
                        "create_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "update_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteDomainAssociation",
        "tags": [
          "Domain Associations"
        ],
        "summary": "Delete Domain Association",
        "description": "Deleting a Domain Association will stop serving the contents of the associated resource from the Domain Association's `hostname`.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/domainId"
          },
          {
            "$ref": "#/components/parameters/domainAssociationId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "202": {
            "description": "Domain Association deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/csrs": {
      "post": {
        "operationId": "createManagedCsr",
        "tags": [
          "Managed CSRs"
        ],
        "summary": "Create Managed CSR",
        "description": "Creates a Certificate Signing Request (CSR) resource that can be used to provision SSL certificates.\nOnce created, this resource can be referenced by [Domains](#tag/Domains) with the `managed_csr` SSL integration to provision\ncertificates using this CSR and a public certificate.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Identifier for the resource.",
                    "type": "string",
                    "readOnly": true,
                    "example": "accounts/123456/csrs/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                  },
                  "csr_payload": {
                    "type": "object",
                    "properties": {
                      "common_name": {
                        "description": "Fully qualified domain name.",
                        "type": "string",
                        "example": "www.example.com"
                      },
                      "sans": {
                        "description": "Subject Alternative Names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "test.example.com",
                          "other.example.net"
                        ]
                      },
                      "organization": {
                        "type": "string",
                        "example": "Example Inc."
                      },
                      "organizational_unit": {
                        "type": "string",
                        "example": "IT Department"
                      },
                      "key_type": {
                        "type": "string",
                        "enum": [
                          "rsa2048",
                          "p256v1"
                        ]
                      },
                      "locality": {
                        "type": "string",
                        "example": "San Francisco"
                      },
                      "state": {
                        "type": "string",
                        "example": "California"
                      },
                      "country": {
                        "type": "string",
                        "example": "US"
                      }
                    }
                  },
                  "csr": {
                    "description": "The generated Certificate Signing Request.",
                    "type": "string",
                    "readOnly": true,
                    "example": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE REQUEST-----\n"
                  },
                  "created_time": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                },
                "required": [
                  "csr_payload",
                  "csr"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Managed CSR created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "title": "Managed CSR",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Identifier for the resource.",
                          "type": "string",
                          "readOnly": true,
                          "example": "accounts/123456/csrs/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                        },
                        "csr_payload": {
                          "type": "object",
                          "properties": {
                            "common_name": {
                              "description": "Fully qualified domain name.",
                              "type": "string",
                              "example": "www.example.com"
                            },
                            "sans": {
                              "description": "Subject Alternative Names.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "test.example.com",
                                "other.example.net"
                              ]
                            },
                            "organization": {
                              "type": "string",
                              "example": "Example Inc."
                            },
                            "organizational_unit": {
                              "type": "string",
                              "example": "IT Department"
                            },
                            "key_type": {
                              "type": "string",
                              "enum": [
                                "rsa2048",
                                "p256v1"
                              ]
                            },
                            "locality": {
                              "type": "string",
                              "example": "San Francisco"
                            },
                            "state": {
                              "type": "string",
                              "example": "California"
                            },
                            "country": {
                              "type": "string",
                              "example": "US"
                            }
                          }
                        },
                        "csr": {
                          "description": "The generated Certificate Signing Request.",
                          "type": "string",
                          "readOnly": true,
                          "example": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE REQUEST-----\n"
                        },
                        "created_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "get": {
        "operationId": "listManagedCsrs",
        "tags": [
          "Managed CSRs"
        ],
        "summary": "List Managed CSRs",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/pageToken"
          },
          {
            "$ref": "#/components/parameters/viewDefaultBasic"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of Managed CSRs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "type": "object",
                      "properties": {
                        "managed_csrs": {
                          "type": "array",
                          "items": {
                            "title": "Managed CSR",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Identifier for the resource.",
                                "type": "string",
                                "readOnly": true,
                                "example": "accounts/123456/csrs/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                              },
                              "csr_payload": {
                                "type": "object",
                                "properties": {
                                  "common_name": {
                                    "description": "Fully qualified domain name.",
                                    "type": "string",
                                    "example": "www.example.com"
                                  },
                                  "sans": {
                                    "description": "Subject Alternative Names.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "test.example.com",
                                      "other.example.net"
                                    ]
                                  },
                                  "organization": {
                                    "type": "string",
                                    "example": "Example Inc."
                                  },
                                  "organizational_unit": {
                                    "type": "string",
                                    "example": "IT Department"
                                  },
                                  "key_type": {
                                    "type": "string",
                                    "enum": [
                                      "rsa2048",
                                      "p256v1"
                                    ]
                                  },
                                  "locality": {
                                    "type": "string",
                                    "example": "San Francisco"
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "California"
                                  },
                                  "country": {
                                    "type": "string",
                                    "example": "US"
                                  }
                                }
                              },
                              "csr": {
                                "description": "The generated Certificate Signing Request.",
                                "type": "string",
                                "readOnly": true,
                                "example": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE REQUEST-----\n"
                              },
                              "created_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            }
                          }
                        },
                        "next_page_token": {
                          "$ref": "#/components/schemas/nextPageToken"
                        },
                        "total_size": {
                          "$ref": "#/components/schemas/totalSize"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/csrs/{managedCsrId}": {
      "get": {
        "operationId": "getManagedCsr",
        "tags": [
          "Managed CSRs"
        ],
        "summary": "Get Managed CSR",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/managedCsrId"
          },
          {
            "$ref": "#/components/parameters/viewDefaultFull"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "200": {
            "description": "Managed CSR found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    },
                    "response": {
                      "title": "Managed CSR",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Identifier for the resource.",
                          "type": "string",
                          "readOnly": true,
                          "example": "accounts/123456/csrs/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
                        },
                        "csr_payload": {
                          "type": "object",
                          "properties": {
                            "common_name": {
                              "description": "Fully qualified domain name.",
                              "type": "string",
                              "example": "www.example.com"
                            },
                            "sans": {
                              "description": "Subject Alternative Names.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "test.example.com",
                                "other.example.net"
                              ]
                            },
                            "organization": {
                              "type": "string",
                              "example": "Example Inc."
                            },
                            "organizational_unit": {
                              "type": "string",
                              "example": "IT Department"
                            },
                            "key_type": {
                              "type": "string",
                              "enum": [
                                "rsa2048",
                                "p256v1"
                              ]
                            },
                            "locality": {
                              "type": "string",
                              "example": "San Francisco"
                            },
                            "state": {
                              "type": "string",
                              "example": "California"
                            },
                            "country": {
                              "type": "string",
                              "example": "US"
                            }
                          }
                        },
                        "csr": {
                          "description": "The generated Certificate Signing Request.",
                          "type": "string",
                          "readOnly": true,
                          "example": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE REQUEST-----\n"
                        },
                        "created_time": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteManagedCsr",
        "tags": [
          "Managed CSRs"
        ],
        "summary": "Delete Managed CSR",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/managedCsrId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "responses": {
          "202": {
            "description": "Managed CSR deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMeta"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "query"
      },
      "api-key": {
        "type": "apiKey",
        "name": "api-key",
        "in": "header"
      }
    },
    "parameters": {
      "accountId": {
        "name": "accountId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "hostnameFilters": {
        "name": "hostname",
        "in": "query",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": "The hostname to filter results by. If not provided, results for all hostnames will be returned.",
        "example": "www.example.com,test.example.com"
      },
      "showDeleted": {
        "name": "show_deleted",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "pageSize": {
        "name": "page_size",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 10,
          "minimum": 0,
          "maximum": 50
        },
        "description": "Number of results to return per page. Sizes above the maximum will be clamped at the maximum value."
      },
      "pageToken": {
        "name": "page_token",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Token to retrieve the next page of results. If not provided, the first page of results will be returned."
      },
      "viewDefaultBasic": {
        "name": "view",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "FULL",
            "BASIC"
          ],
          "default": "BASIC"
        },
        "description": "`FULL` returns all details, while `BASIC` omits certain SSL information.\nUsing `BASIC` will also usually result in a lower response latency relative to using `FULL`.\n"
      },
      "v": {
        "name": "v",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "A date in `YYYYMMDD` format."
      },
      "domainId": {
        "name": "domainId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "viewDefaultFull": {
        "name": "view",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": [
            "FULL",
            "BASIC"
          ],
          "default": "FULL"
        },
        "description": "`FULL` returns all details, while `BASIC` omits certain SSL information.\nUsing `BASIC` will also usually result in a lower response latency relative to using `FULL`.\n"
      },
      "forceMove": {
        "name": "force_move",
        "in": "query",
        "schema": {
          "type": "boolean",
          "default": false
        },
        "description": "If true, and the domain is in a MOVE_REQUIRED state, will move ownership of the domain to this account."
      },
      "domainIdAllowAll": {
        "name": "domainId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "Set to \"-\" to allow Domain Associations from all domains in this account."
      },
      "domainAssociationId": {
        "name": "domainAssociationId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      },
      "managedCsrId": {
        "name": "managedCsrId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "format": "uuid"
        }
      }
    },
    "schemas": {
      "ResponseMeta": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "example": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
            "description": "Unique ID for this request / response."
          }
        }
      },
      "ResponseError": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "description": "Code that uniquely identifies the error or warning.\n"
          },
          "type": {
            "type": "string",
            "enum": [
              "FATAL_ERROR",
              "NON_FATAL_ERROR",
              "WARNING"
            ]
          },
          "message": {
            "type": "string",
            "description": "Message explaining the problem."
          }
        }
      },
      "ResponseMetaWithError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "description": "List of errors and warnings.",
                "items": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        ]
      },
      "nextPageToken": {
        "type": "string",
        "description": "The token to use to retrieve the next page of results. If empty, this is the last page.",
        "example": "eyJ0b2tlbiI6InB4Zl9wYWdlX3Rva2VuIn0="
      },
      "totalSize": {
        "type": "integer",
        "description": "The total number of items that match the filter criteria, ignoring pagination.",
        "example": 100
      },
      "certificate_authority": {
        "type": "string",
        "enum": [
          "GOOGLE_TRUST",
          "LETS_ENCRYPT"
        ],
        "default": "GOOGLE_TRUST"
      },
      "managed_csr": {
        "description": "SSL certificate will be issued using the given [Managed CSR](#tag/Managed-CSRs).\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
        "type": "object",
        "required": [
          "custom_public_certificate"
        ],
        "properties": {
          "managed_csr_id": {
            "description": "The name of the [Managed CSR](#tag/Managed-CSRs) resource.\n",
            "type": "string",
            "example": "accounts/123456/csrs/4f72b877-e2d0-4de4-9324-b9cf2c03e1a0"
          },
          "custom_public_certificate": {
            "description": "Public CA signed certificate.\n",
            "type": "string",
            "format": "pem",
            "writeOnly": true,
            "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
          },
          "hostname_validation": {
            "description": "Proof of ownership for the SSL provider.\n",
            "type": "object",
            "readOnly": true,
            "properties": {
              "cname_target": {
                "type": "string",
                "example": "idzm5s34j5.yext.pgscdncf.com."
              },
              "txt_domain": {
                "type": "string",
                "example": "_yext-domain.www.example.com"
              },
              "txt_value": {
                "type": "string",
                "format": "uuid"
              },
              "http_uri": {
                "type": "string",
                "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
              },
              "http_body": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      },
      "custom_ssl_certificate": {
        "description": "The provided custom SSL certificate will be used for serving requests to the domain.\nExactly one of `managed_ssl`, `managed_csr`, or `custom_ssl_certificate` must be set for a domain.\n",
        "type": "object",
        "required": [
          "public_certificate",
          "private_key"
        ],
        "properties": {
          "public_certificate": {
            "type": "string",
            "format": "pem",
            "writeOnly": true,
            "example": "-----BEGIN CERTIFICATE-----\nMIIC2DCCAcCAQAwgY4xCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlh\n...\n-----END CERTIFICATE-----\n"
          },
          "private_key": {
            "type": "string",
            "format": "pem",
            "writeOnly": true,
            "example": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBj08sp5++4anG\n...\n-----END PRIVATE KEY-----\n"
          },
          "hostname_validation": {
            "description": "Proof of ownership for the SSL provider.\n",
            "type": "object",
            "readOnly": true,
            "properties": {
              "cname_target": {
                "type": "string",
                "example": "idzm5s34j5.yext.pgscdncf.com."
              },
              "txt_domain": {
                "type": "string",
                "example": "_yext-domain.www.example.com"
              },
              "txt_value": {
                "type": "string",
                "format": "uuid"
              },
              "http_uri": {
                "type": "string",
                "example": "http://www.example.com/.well-known/yext-domain-challenge/35f00e6a-61c2-4857-b2cc-4c736f86b5ac"
              },
              "http_body": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      },
      "site": {
        "description": "The Pages site to associate with the parent [Domain](#tag/Domains) resource.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Pages site resource name.",
            "type": "string",
            "example": "accounts/123456/sites/6789"
          },
          "primary": {
            "description": "If true, this will be the primary Domain for the Pages site, otherwise it will be an alias Domain.\nA Pages site can have at most one primary Domain.\n",
            "type": "boolean",
            "default": false
          }
        }
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "Error Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ErrorResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMetaWithError"
                },
                "response": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "api_key": []
    },
    {
      "api-key": []
    }
  ],
  "tags": [
    {
      "name": "Domains"
    },
    {
      "name": "Domain Associations"
    },
    {
      "name": "Managed CSRs"
    }
  ]
}