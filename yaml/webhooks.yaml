openapi: 3.1.0
info:
  title: Webhooks
  version: '2.0'
servers:
  - url: https://api.yextapis.com/v2
webhooks:
  entitiesWebhook:
    post:
      operationId: entitiesWebhook
      tags:
        - Knowledge Manager
      summary: 'Entities: Webhook'
      description: Sends an updated Entity to your server.
      requestBody:
        description: The updated Entity
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - ENTITY_CREATED
                        - ENTITY_UPDATED
                        - ENTITY_DELETED
                    actor:
                      type: string
                      enum:
                        - API
                        - USER
                        - YEXT_SYSTEM
                entityId:
                  type: string
                  description: The Entity's ID
                primaryProfile:
                  $ref: '#/components/schemas/Entity'
                languageProfiles:
                  type: array
                  items:
                    $ref: '#/components/schemas/Entity'
                changedFields:
                  $ref: '#/components/schemas/ChangedFields'
  locationsWebhook:
    post:
      operationId: locationsWebhook
      tags:
        - Knowledge Manager
      summary: 'Locations: Webhook'
      description: Sends an updated Location to your server.
      requestBody:
        description: The updated Location
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - LOCATION_CREATED
                        - LOCATION_UPDATED
                location:
                  $ref: '#/components/schemas/Location'
                languageProfiles:
                  type: array
                  items:
                    $ref: '#/components/schemas/Location'
  menusWebhook:
    post:
      operationId: menusWebhook
      tags:
        - Knowledge Manager
      summary: 'Menus: Webhook'
      description: Sends an updated Menu object to your server.
      requestBody:
        description: The updated Menu
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - MENU_CREATED
                        - MENU_UPDATED
                        - MENU_DELETED
                menu:
                  $ref: '#/components/schemas/Menu'
  biosWebhook:
    post:
      operationId: biosWebhook
      tags:
        - Knowledge Manager
      summary: 'Bios: Webhook'
      description: Sends an updated Bios object to your server.
      requestBody:
        description: The updated Bios
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - BIOS_CREATED
                        - BIOS_UPDATED
                        - BIOS_DELETED
                bios:
                  $ref: '#/components/schemas/Bio'
  productsWebhook:
    post:
      operationId: productsWebhook
      tags:
        - Knowledge Manager
      summary: 'Products: Webhook'
      description: Sends an updated Product List object to your server.
      requestBody:
        description: The updated Product list
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - PRODUCTS_CREATED
                        - PRODUCTS_UPDATED
                        - PRODUCTS_DELETED
                products:
                  $ref: '#/components/schemas/Product'
  eventsWebhook:
    post:
      operationId: eventsWebhook
      tags:
        - Knowledge Manager
      summary: 'Events: Webhook'
      description: Sends an updated Events List (Calendar) object to your server.
      requestBody:
        description: The updated Event list
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - EVENTS_CREATED
                        - EVENTS_UPDATED
                        - EVENTS_DELETED
                events:
                  $ref: '#/components/schemas/Event'
  listingsWebhook:
    post:
      operationId: listingsWebhook
      tags:
        - Listings
      summary: 'Listings: Webhook'
      description: Sends an updated Listing object to your server.
      requestBody:
        description: The updated Listing
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - LISTING_UPDATED
                listing:
                  $ref: '#/components/schemas/Listing'
  entityListingsWebhook:
    post:
      operationId: entityListingsWebhook
      tags:
        - Listings
      summary: 'Entity Listings: Webhook'
      description: Sends an updated Entity Listing object to your server. This endpoint currently only supports Event Listings.
      requestBody:
        description: The updated Listing
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - LISTING_UPDATED
                listing:
                  $ref: '#/components/schemas/EntityListing'
  duplicatesWebhook:
    post:
      operationId: duplicatesWebhook
      tags:
        - Listings
      summary: 'Duplicates: Webhook'
      description: Sends an updated Duplicate object to your server.
      requestBody:
        description: The updated Duplicate
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - DUPLICATE_FOUND
                        - DUPLICATE_UPDATED
                        - DUPLICATE_DELETED
                duplicate:
                  $ref: '#/components/schemas/Duplicate'
  publisherSuggestionsWebhook:
    post:
      operationId: publisherSuggestionsWebhook
      tags:
        - Listings
      summary: 'Publisher Suggestions: Webhook'
      description: Sends an updated Publisher Suggestion object to your server.
      requestBody:
        description: The updated Publisher Suggestion
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - PUBLISHER_SUGGESTION_UPDATED
                publisherSuggestion:
                  $ref: '#/components/schemas/PublisherSuggestion'
  questionAnswerWebhook:
    post:
      operationId: questionAnswersWebhook
      tags:
        - Listings
      summary: 'Q&A: Webhook'
      description: |
        Sends an updated Question object to your server whenever a Question or one of its Answers are created or modified.
      requestBody:
        description: The updated Question
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - QUESTION_CREATED
                        - QUESTION_UPDATED
                        - ANSWER_UPDATED
                question:
                  $ref: '#/components/schemas/Question'
  reviewsWebhook:
    post:
      operationId: reviewsWebhook
      tags:
        - Reviews
      summary: 'Reviews: Webhook'
      description: |
        Sends an updated Review object to your server whenever a Review or one of its Comments are created or modified
        on the publisher's site.

        **NOTE:** Not all publishers' reviews will be sent. For more details, please contact your Account Manager.
      requestBody:
        description: The updated Review
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - REVIEW_CREATED
                        - REVIEW_UPDATED
                        - REVIEW_COMMENT_UPDATED
                        - REVIEW_DELETED
                review:
                  $ref: '#/components/schemas/WebhookReview'
  reviewInvitesWebhook:
    post:
      operationId: reviewInvitationsWebhook
      tags:
        - Reviews
      summary: 'Reviews Invitations: Webhook'
      description: |
        Sends an updated invitation object to your server whenever a new invitation is added to our system.
      requestBody:
        description: The new Review Invitation
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - INVITATION_ADDED
                invitation:
                  $ref: '#/components/schemas/CreatedReviewInvitation'
  unlinkAccountWebhook:
    post:
      operationId: unlinkWebhook
      tags:
        - App Directory
      summary: 'Account Unlink: Webhook'
      description: Fired when an account uninstalls your App.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - ACCOUNT_UNLINKED
  addRequestWebhook:
    post:
      operationId: addRequestWebhook
      tags:
        - Agreements
      summary: 'Add Request Update: Webhook'
      description: Fired when an Add Request is updated.
      requestBody:
        description: The updated Add Request
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - AGREEMENTS_ADD_REQUEST_UPDATED
                addRequest:
                  $ref: '#/components/schemas/AddRequest'
  contentWebhook:
    post:
      operationId: contentWebhook
      tags:
        - Content
      summary: 'Content: Webhook'
      description: |
        Sends an updated record to your server whenever the data in the selected Content Endpoint is updated, or the record is no longer included in the Content Endpoint.

        **NOTE:** Content Webhook Events are slightly different than other Yext Webhooks. Each message will contain one of the following meta.eventType values:

        - *RECORD* - This eventType indicates that a record has been added or updated which is included in the Content Endpoint configuration.
        - *TOMBSTONE* - This eventType indicates that a record no longer is part of the data included in the Content Endpoint. Tombstones will be sent when a record no longer matches the filter criteria for the configured Content Endpoint, or the record has been deleted.
      requestBody:
        description: The updated record.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - RECORD
                        - TOMBSTONE
                    actor:
                      type: string
                      enum:
                        - API
                        - USER
                        - YEXT_SYSTEM
                docs:
                  type: array
                  items:
                    type: object
                    description: Document containing the data configured for your Content Endpoint. This will be empty if the eventType is TOMBSTONE.
                    additionalProperties: true
                    example:
                      uid: '10000000'
                      name: Yext
  suggestionsWebhook:
    post:
      operationId: suggestionsWebhook
      tags:
        - Knowledge Manager
      summary: 'Suggestions: Webhook'
      description: |
        Sends an updated Suggestion object to your server.

        **NOTE:**
          * App must have **Manage Suggestions: Read/Write** permission to set up webhook.
      requestBody:
        description: The updated Suggestion
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  allOf:
                    - $ref: '#/components/schemas/RequestMeta'
                  properties:
                    eventType:
                      type: string
                      enum:
                        - SUGGESTION_CREATED
                        - SUGGESTION_APPROVED
                        - SUGGESTION_REJECTED
                        - SUGGESTION_CONTENT_UPDATED
                        - SUGGESTION_CANCELED
                        - SUGGESTION_ASSIGNED
                        - SUGGESTION_COMMENT_CREATED
                        - SUGGESTION_LOCKED
                        - SUGGESTION_UNLOCKED
                        - SUGGESTION_INVALIDATED
                suggestion:
                  $ref: '#/components/schemas/SuggestionRead'
tags:
  - name: Webhooks
components:
  schemas:
    RequestMeta:
      type: object
      properties:
        uuid:
          type: string
          description: Unique ID for this request.
        timestamp:
          type: string
          description: Official time the change occurred (milliseconds since epoch).
        accountId:
          type: string
          description: Account ID this request pertains to.
        appSpecificAccountId:
          type: string
          description: |
            An app-specific ID that links your app to a Yext account. Yext will automatically assign this ID upon app installation.

            **NOTE:** Your app's **`appSpecificAccountId`** is not the same as an **`accountId`** for a Yext account. It cannot be used in place of an **`accountId`** in request URLs.
    Entity:
      additionalProperties: false
      type: object
      properties:
        meta:
          additionalProperties: false
          type: object
          properties:
            accountId:
              minLength: 0
              type: string
              description: ID of the account associated with this Entity
            countryCode:
              minLength: 0
              type: string
              description: |-
                Country code of this Entity's Language Profile (defaults to the country of the account)

                Filtering Type: `text`
            entityType:
              minLength: 0
              type: string
              description: |-
                This Entity's type (e.g., location, event)

                Filtering Type: `text`
            folderId:
              minLength: 0
              type: string
              description: |-
                The ID of the folder containing this Entity

                Filtering Type: `text`
            id:
              minLength: 0
              type: string
              description: |-
                ID of this Entity

                Filtering Type: `text`
            labels:
              uniqueItems: false
              type: array
              items:
                minLength: 0
                type: string
                description: 'Filtering Type: `text`'
              description: |-
                This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer.

                Filtering Type: `list of text`
            language:
              minLength: 0
              type: string
              description: |-
                Language code of this Entity's Language Profile (defaults to the language code of the account)

                Filtering Type: `text`
            timestamp:
              minLength: 0
              type: string
              description: |
                The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.

                **NOTE:** The timestamp may change even if observable fields stay the same.
            uid:
              minLength: 0
              type: string
              description: |
                The internal ID of the entity. This UID is a static, globally unique ID. Note that this value cannot be used in place of id in API calls to retrieve or edit Entity information.

                If the v param is before `20221206`, the returned value will be a hashed version of the entity UID (aka internal ID of the entity).
          description: |-
            Contains the metadata about the entity.

            ```
            Eligible For: 
               * atm
               * event
               * faq
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * job
               * location
               * restaurant
            ```
        name:
          minLength: 0
          maxLength: 5000
          type: string
          description: |-



            Cannot Include:
            * HTML markup

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * board
               * card
               * contactCard
               * event
               * faq
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * helpArticle
               * hotel
               * hotelRoomType
               * job
               * location
               * organization
               * product
               * restaurant
            ```
        address:
          additionalProperties: false
          type: object
          properties:
            city:
              minLength: 0
              maxLength: 255
              type: string
              description: |-
                The city the entity (or the entity's location) is in


                Cannot Include:
                * a URL or domain name
                * a digit

                Filtering Type: `text`
            countryCode:
              minLength: 0
              pattern: ^[a-zA-Z]{2}$
              type: string
              description: 'Filtering Type: `text`'
            extraDescription:
              minLength: 0
              maxLength: 255
              type: string
              description: |-
                Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).
                It may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).

                Filtering Type: `text`
            line1:
              minLength: 0
              maxLength: 255
              type: string
              description: |-

                Cannot Include:
                * a URL or domain name

                Filtering Type: `text`
            line2:
              minLength: 0
              maxLength: 255
              type: string
              description: |-

                Cannot Include:
                * a URL or domain name

                Filtering Type: `text`
            postalCode:
              minLength: 0
              maxLength: 10
              type: string
              description: |-
                The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.


                Cannot Include:
                * a URL or domain name

                Filtering Type: `text`
            region:
              minLength: 0
              maxLength: 255
              type: string
              description: |-
                The name of the entity's region or state.


                Cannot Include:
                * a URL or domain name

                Filtering Type: `text`
            sublocality:
              minLength: 0
              maxLength: 255
              type: string
              description: |-
                The name of the entity's sublocality


                Cannot Include:
                * a URL or domain name

                Filtering Type: `text`
          description: |-
            Contains the address of the entity (or where the entity is located)

            Must be a valid address
            Cannot be a P.O. Box

            If the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        acceptingNewPatients:
          type: boolean
          description: |-
            Indicates whether the healthcare provider is accepting new patients.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareFacility
               * healthcareProfessional
            ```
        acceptsReservations:
          type: boolean
          description: |-
            Indicates whether the entity accepts reservations.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * restaurant
            ```
        accessHours:
          additionalProperties: false
          type: object
          properties:
            friday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the access hours are "closed" on Friday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            holidayHours:
              description: |-

                **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.



                Array must be ordered.


                Filtering Type: `list of object`
              uniqueItems: true
              type: array
              items:
                required:
                  - date
                additionalProperties: false
                type: object
                properties:
                  date:
                    format: date
                    type: string
                    description: |-
                      Date on which the holiday hours will be in effect. Cannot be in the past.


                      Date must be on or after 1970-01-01
                      Date must be before or on 2038-01-01

                      Filtering Type: `date`
                  isClosed:
                    type: boolean
                    description: |-
                      Indicates if the access hours are "closed" on on the given date.

                      Filtering Type: `boolean`
                  isRegularHours:
                    type: boolean
                    description: |-
                      Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.

                      Filtering Type: `boolean`
                  openIntervals:
                    uniqueItems: false
                    type: array
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        end:
                          format: time
                          type: string
                          description: |-
                            The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                        start:
                          format: time
                          type: string
                          description: |-
                            The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                      description: 'Filtering Type: `object`'
                    description: |-
                      Contains the time intervals for which the Entity is open on the specified date.

                      Filtering Type: `list of object`
                description: 'Filtering Type: `object`'
            monday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the access hours are "closed" on Monday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            reopenDate:
              format: date
              type: string
              description: |-

                Date must be on or after 1970-01-01
                Date must be before or on 2038-01-01

                Filtering Type: `date`
            saturday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the access hours are "closed" on Saturday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            sunday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the access hours are "closed" on Sunday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            thursday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the access hours are "closed" on Thursday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            tuesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the access hours are "closed" on Tuesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            wednesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the access hours are "closed" on Wednesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
          description: |-
            Contains the daily access hours, holiday access hours, and reopen date for the Entity.

            Each day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
            Similarly, holiday access hours are represented by the `holidayHours` sub-field.
            Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
            SPECIAL CASES:
            * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
            * To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.
            * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.

            Filtering Type: `hours`

            ```
            Eligible For: 
               * atm
               * healthcareFacility
               * hotel
               * location
               * restaurant
            ```
        additionalHoursText:
          minLength: 0
          maxLength: 255
          type: string
          description: |-
            Additional information about hours that does not fit in **`hours`** (e.g., `"Closed during the winter"`)

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * contactCard
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        additionalPromotingLocations:
          description: |-
            If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager


            Array must be ordered.


            Filtering Type: `list of entityId`

            ```
            Eligible For: 
               * event
            ```
          uniqueItems: true
          type: array
          items:
            type: string
            description: 'Filtering Type: `entityId`'
        addressHidden:
          type: boolean
          description: |-
            If `true`, the entity's street address will not be shown on listings. Defaults to `false`.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        admittingHospitals:
          description: |-
            A list of hospitals where the healthcare professional admits patients


            Array must be ordered.

            Array may have a maximum of 100 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * healthcareProfessional
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        adultPool:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a pool for adults only.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        ageRange:
          additionalProperties: false
          type: object
          properties:
            maxValue:
              multipleOf: 1
              type: number
              description: |-
                Maximum age for the event

                Filtering Type: `integer`
            minValue:
              multipleOf: 1
              type: number
              description: |-
                Minimum age for the event

                Filtering Type: `integer`
          description: |-
            Contains the age range for the event

            Filtering Type: `object`

            ```
            Eligible For: 
               * event
            ```
        airportShuttle:
          enum:
            - AIRPORT_SHUTTLE_AVAILABLE
            - AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers a shuttle to/from the airport.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        airportTransfer:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        allInclusive:
          enum:
            - ALL_INCLUSIVE_RATES_AVAILABLE
            - ALL_INCLUSIVE_RATES_ONLY
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers all-inclusive rates.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        alternateNames:
          description: |-
            Other names for your business that you would like us to use when tracking your search performance


            Array must be ordered.

            Array may have a maximum of 3 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        alternatePhone:
          minLength: 0
          type: string
          description: |-
            Must be a valid phone number.

            If the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        alternateWebsites:
          description: |-
            Other websites for your business that we should search for when tracking your search performance


            Array must be ordered.

            Array may have a maximum of 3 elements.

            Array item description:

            >Cannot Include:
            >* common domain names, e.g., google.com, youtube.com, etc.

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 255
            format: uri
            type: string
            description: |-

              Cannot Include:
              * common domain names, e.g., google.com, youtube.com, etc.

              Filtering Type: `text`
        androidAppUrl:
          minLength: 0
          type: string
          description: |-
            The URL where consumers can download the entity's Android app

            Filtering Type: `text`

            ```
            Eligible For: 
               * financialProfessional
               * hotel
               * location
               * restaurant
            ```
        answer:
          description: |-
            The answer to the frequently asked question represented by this entity


            Character limit: 0 .. 15000

            Supported formats include:
            * BOLD
            * ITALICS
            * UNDERLINE
            * BULLETED_LIST
            * NUMBERED_LIST
            * HYPERLINK
            * IMAGE
            * CODE_SPAN
            * HEADINGS

            ```
            Eligible For: 
               * faq
            ```
          type: string
          format: rich-text
        applicationUrl:
          minLength: 0
          format: uri
          type: string
          description: |-
            The application URL

            Filtering Type: `text`

            ```
            Eligible For: 
               * job
            ```
        associations:
          description: |-
            Association memberships relevant to the entity (e.g., `"New York Doctors Association"`)
            All strings must be non-empty when trimmed of whitespace.



            Array must be ordered.

            Array may have a maximum of 100 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        attendance:
          required:
            - attendanceMode
          additionalProperties: false
          type: object
          properties:
            attendanceMode:
              enum:
                - OFFLINE
                - ONLINE
                - MIXED
              type: string
              description: 'Filtering Type: `option`'
            virtualLocationUrl:
              minLength: 0
              format: uri
              type: string
              description: 'Filtering Type: `text`'
          description: |-
            Indicates whether the event is online, offline, or a mix.
            A `virtualLocationUrl` must be specified for online and mixed events.

            Filtering Type: `object`

            ```
            Eligible For: 
               * event
            ```
        attire:
          enum:
            - UNSPECIFIED
            - DRESSY
            - CASUAL
            - FORMAL
          type: string
          description: |-
            The formality of clothing typically worn at this restaurant

            Filtering Type: `option`

            ```
            Eligible For: 
               * restaurant
            ```
        babysittingOffered:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers babysitting.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        baggageStorage:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers baggage storage pre check-in and post check-out.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        bar:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has an indoor or outdoor bar onsite.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        beachAccess:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has access to a beach.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        beachFrontProperty:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity is physically located next to a beach.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        bicycles:
          enum:
            - BICYCLE_RENTALS
            - BICYCLE_RENTALS_FOR_FREE
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers bicycles for rent or for free.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        bios:
          additionalProperties: false
          type: object
          properties:
            ids:
              description: |-
                IDs of the Bio Lists associated with this entity


                Array must be ordered.

                Array may have a maximum of 40 elements.


                Filtering Type: `list of text`
              uniqueItems: true
              type: array
              items:
                minLength: 0
                type: string
                description: 'Filtering Type: `text`'
            label:
              minLength: 0
              maxLength: 30
              type: string
              description: |-
                Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.

                Filtering Type: `text`
          description: |-
            Information about the Bio Content Lists associated with this entity

            Filtering Type: `object`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
        boutiqueStores:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        brands:
          description: |-
            Brands sold by this entity
            All strings must be non-empty when trimmed of whitespace.



            Array must be ordered.

            Array may have a maximum of 100 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        breakfast:
          enum:
            - BREAKFAST_AVAILABLE
            - BREAKFAST_AVAILABLE_FOR_FREE
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers breakfast.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        brunchHours:
          additionalProperties: false
          type: object
          properties:
            friday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the brunch hours are "closed" on Friday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            holidayHours:
              description: |-

                **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.



                Array must be ordered.


                Filtering Type: `list of object`
              uniqueItems: true
              type: array
              items:
                required:
                  - date
                additionalProperties: false
                type: object
                properties:
                  date:
                    format: date
                    type: string
                    description: |-
                      Date on which the holiday hours will be in effect. Cannot be in the past.


                      Date must be on or after 1970-01-01
                      Date must be before or on 2038-01-01

                      Filtering Type: `date`
                  isClosed:
                    type: boolean
                    description: |-
                      Indicates if the brunch hours are "closed" on on the given date.

                      Filtering Type: `boolean`
                  isRegularHours:
                    type: boolean
                    description: |-
                      Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.

                      Filtering Type: `boolean`
                  openIntervals:
                    uniqueItems: false
                    type: array
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        end:
                          format: time
                          type: string
                          description: |-
                            The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                        start:
                          format: time
                          type: string
                          description: |-
                            The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                      description: 'Filtering Type: `object`'
                    description: |-
                      Contains the time intervals for which the Entity is open on the specified date.

                      Filtering Type: `list of object`
                description: 'Filtering Type: `object`'
            monday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the brunch hours are "closed" on Monday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            reopenDate:
              format: date
              type: string
              description: |-

                Date must be on or after 1970-01-01
                Date must be before or on 2038-01-01

                Filtering Type: `date`
            saturday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the brunch hours are "closed" on Saturday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            sunday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the brunch hours are "closed" on Sunday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            thursday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the brunch hours are "closed" on Thursday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            tuesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the brunch hours are "closed" on Tuesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            wednesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the brunch hours are "closed" on Wednesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
          description: |-
            Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.

            Each day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
            Similarly, holiday brunch hours are represented by the `holidayHours` sub-field.
            Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
            SPECIAL CASES:
            * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
            * To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.
            * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.

            Filtering Type: `hours`

            ```
            Eligible For: 
               * hotel
               * location
               * restaurant
            ```
        businessCenter:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a business center.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        calendars:
          additionalProperties: false
          type: object
          properties:
            ids:
              description: |-
                IDs of the Calendars associated with this entity


                Array must be ordered.

                Array may have a maximum of 40 elements.


                Filtering Type: `list of text`
              uniqueItems: true
              type: array
              items:
                minLength: 0
                type: string
                description: 'Filtering Type: `text`'
            label:
              minLength: 0
              maxLength: 30
              type: string
              description: |-
                Label to be used for this entity's Calendars. This label will appear on your entity's listings.

                Filtering Type: `text`
          description: |-
            Information about the events Content Lists (Calendars) associated with this entity

            Filtering Type: `object`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * hotel
               * location
               * restaurant
            ```
        carRental:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers car rental.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        casino:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a casino on premise or nearby.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        categoryIds:
          uniqueItems: false
          type: array
          items:
            minLength: 0
            type: string
            description: 'Filtering Type: `text`'
          description: |-
            Yext Category IDs.

            IDs must be valid and selectable (i.e., cannot be parent categories).

            NOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.


            Filtering Type: `list of text`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        catsAllowed:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates if the entity is cat friendly.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        certifications:
          description: |-
            A list of the certifications held by the healthcare professional
            **NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.



            Array must be ordered.

            Array may have a maximum of 100 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareProfessional
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        checkInTime:
          format: time
          type: string
          description: |-
            The check-in time

            Filtering Type: `time`

            ```
            Eligible For: 
               * hotel
            ```
        checkOutTime:
          format: time
          type: string
          description: |-
            The check-out time

            Filtering Type: `time`

            ```
            Eligible For: 
               * hotel
            ```
        classificationRating:
          pattern: ^\d*\.?\d*$
          type: string
          description: |-
            The 1 to 5 star rating of the entitiy based on its services and facilities.

            Filtering Type: `decimal`

            ```
            Eligible For: 
               * hotel
            ```
        closed:
          type: boolean
          description: |-
            Indicates whether the entity is closed

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        concierge:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers concierge service.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        conditionsTreated:
          description: |-
            A list of the conditions treated by the healthcare provider


            Array must be ordered.

            Array may have a maximum of 100 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * healthcareFacility
               * healthcareProfessional
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        convenienceStore:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a convenience store.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        covidMessaging:
          minLength: 0
          maxLength: 15000
          type: string
          description: |-
            Information or messaging related to COVID-19.

            Filtering Type: `text`

            ```
            Eligible For: 
               * healthcareFacility
               * healthcareProfessional
               * location
            ```
        covidTestAppointmentUrl:
          minLength: 0
          format: uri
          type: string
          description: |-
            An appointment URL for scheduling a COVID-19 test.

            Filtering Type: `text`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidTestingAppointmentRequired:
          type: boolean
          description: |-
            Indicates whether an appointment is required for a COVID-19 test.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidTestingDriveThroughSite:
          type: boolean
          description: |-
            Indicates whether location is a drive-through site for COVID-19 tests.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidTestingIsFree:
          type: boolean
          description: |-
            Indicates whether location offers free COVID-19 testing.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidTestingPatientRestrictions:
          type: boolean
          description: |-
            Indicates whether there are patient restrictions for COVID-19 testing.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidTestingReferralRequired:
          type: boolean
          description: |-
            Indicates whether a referral is required for COVID-19 testing.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidTestingSiteInstructions:
          minLength: 0
          maxLength: 15000
          type: string
          description: |-
            Information or instructions for the COVID-19 testing site.

            Filtering Type: `text`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidVaccineAppointmentRequired:
          type: boolean
          description: |-
            Indicates whether an appointment is required for a COVID-19 vaccine.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidVaccineDriveThroughSite:
          type: boolean
          description: |-
            Indicates whether location is a drive-through site for COVID-19 vaccines.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidVaccineInformationUrl:
          minLength: 0
          format: uri
          type: string
          description: |-
            An information URL for more information about COVID-19 vaccines.

            Filtering Type: `text`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidVaccinePatientRestrictions:
          type: boolean
          description: |-
            Indicates whether there are patient restrictions for a COVID-19 vaccine.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidVaccineReferralRequired:
          type: boolean
          description: |-
            Indicates whether a referral is required for a COVID-19 vaccine.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidVaccineSiteInstructions:
          minLength: 0
          maxLength: 15000
          type: string
          description: |-
            Information or instructions for the COVID-19 vaccination site.

            Filtering Type: `text`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        covidVaccinesOffered:
          uniqueItems: true
          type: array
          items:
            enum:
              - PFIZER
              - MODERNA
              - JOHNSON_&_JOHNSON
            type: string
            description: 'Filtering Type: `option`'
          description: |-
            Indicates which COVID-19 vaccines the location offers.

            Filtering Type: `list of option`

            ```
            Eligible For: 
               * healthcareFacility
               * location
            ```
        currencyExchange:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers currency exchange services.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        customKeywords:
          description: |-
            Additional keywords you would like us to use when tracking your search performance


            Array must be ordered.

            Array may have a maximum of 5 elements.


            Filtering Type: `list of text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: 'Filtering Type: `text`'
        datePosted:
          format: date
          type: string
          description: |-
            The date this entity was posted

            Filtering Type: `date`

            ```
            Eligible For: 
               * job
            ```
        degrees:
          description: |-
            A list of the degrees earned by the healthcare professional


            Array must be ordered.


            Filtering Type: `list of option`

            ```
            Eligible For: 
               * healthcareProfessional
            ```
          uniqueItems: true
          type: array
          items:
            enum:
              - ANP
              - APN
              - APRN
              - ARNP
              - AUD
              - BSW
              - CCCA
              - CNM
              - CNP
              - CNS
              - CPNP
              - CRNA
              - CRNP
              - DC
              - DDS
              - DMD
              - DNP
              - DO
              - DPM
              - DSW
              - DVM
              - FNP
              - GNP
              - LAC
              - LCSW
              - LPN
              - MBA
              - MBBS
              - MD
              - MPH
              - MSW
              - ND
              - NNP
              - NP
              - OD
              - PA
              - PAC
              - PHARMD
              - PHD
              - PNP
              - PSYD
              - RD
              - RSW
              - VMD
              - WHNP
            type: string
            description: 'Filtering Type: `option`'
        deliveryHours:
          additionalProperties: false
          type: object
          properties:
            friday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the delivery hours are "closed" on Friday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            holidayHours:
              description: |-

                **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.



                Array must be ordered.


                Filtering Type: `list of object`
              uniqueItems: true
              type: array
              items:
                required:
                  - date
                additionalProperties: false
                type: object
                properties:
                  date:
                    format: date
                    type: string
                    description: |-
                      Date on which the holiday hours will be in effect. Cannot be in the past.


                      Date must be on or after 1970-01-01
                      Date must be before or on 2038-01-01

                      Filtering Type: `date`
                  isClosed:
                    type: boolean
                    description: |-
                      Indicates if the delivery hours are "closed" on on the given date.

                      Filtering Type: `boolean`
                  isRegularHours:
                    type: boolean
                    description: |-
                      Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.

                      Filtering Type: `boolean`
                  openIntervals:
                    uniqueItems: false
                    type: array
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        end:
                          format: time
                          type: string
                          description: |-
                            The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                        start:
                          format: time
                          type: string
                          description: |-
                            The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                      description: 'Filtering Type: `object`'
                    description: |-
                      Contains the time intervals for which the Entity is delivering on the specified date.

                      Filtering Type: `list of object`
                description: 'Filtering Type: `object`'
            monday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the delivery hours are "closed" on Monday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            reopenDate:
              format: date
              type: string
              description: |-

                Date must be on or after 1970-01-01
                Date must be before or on 2038-01-01

                Filtering Type: `date`
            saturday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the delivery hours are "closed" on Saturday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            sunday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the delivery hours are "closed" on Sunday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            thursday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the delivery hours are "closed" on Thursday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            tuesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the delivery hours are "closed" on Tuesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            wednesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the delivery hours are "closed" on Wednesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
          description: |-
            Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.

            Each day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
            Similarly, holiday delivery hours are represented by the `holidayHours` sub-field.
            Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
            SPECIAL CASES:
            * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
            * To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.
            * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.

            Filtering Type: `hours`

            ```
            Eligible For: 
               * location
               * restaurant
            ```
        description:
          minLength: 10
          maxLength: 15000
          type: string
          description: |-
            A description of the entity


            Cannot Include:
            * HTML markup

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * contactCard
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * job
               * location
               * organization
               * restaurant
            ```
        displayCoordinate:
          additionalProperties: false
          type: object
          properties:
            latitude:
              minimum: -90
              maximum: 90
              type: number
              description: 'Filtering Type: `float`'
            longitude:
              minimum: -180
              maximum: 180
              type: number
              description: 'Filtering Type: `float`'
          description: |-
            Coordinates where the map pin for the entity should be displayed, as provided by you

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * job
               * location
               * restaurant
            ```
        doctorOnCall:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a doctor on premise or on call.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        dogsAllowed:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates if the entity is dog friendly.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        driveThroughHours:
          additionalProperties: false
          type: object
          properties:
            friday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the drive-through hours are "closed" on Friday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            holidayHours:
              description: |-

                **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.



                Array must be ordered.


                Filtering Type: `list of object`
              uniqueItems: true
              type: array
              items:
                required:
                  - date
                additionalProperties: false
                type: object
                properties:
                  date:
                    format: date
                    type: string
                    description: |-
                      Date on which the holiday hours will be in effect. Cannot be in the past.


                      Date must be on or after 1970-01-01
                      Date must be before or on 2038-01-01

                      Filtering Type: `date`
                  isClosed:
                    type: boolean
                    description: |-
                      Indicates if the drive-through hours are "closed" on on the given date.

                      Filtering Type: `boolean`
                  isRegularHours:
                    type: boolean
                    description: |-
                      Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.

                      Filtering Type: `boolean`
                  openIntervals:
                    uniqueItems: false
                    type: array
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        end:
                          format: time
                          type: string
                          description: |-
                            The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                        start:
                          format: time
                          type: string
                          description: |-
                            The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                      description: 'Filtering Type: `object`'
                    description: |-
                      Contains the time intervals for which the Entity's drive-through is open on the specified date.

                      Filtering Type: `list of object`
                description: 'Filtering Type: `object`'
            monday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the drive-through hours are "closed" on Monday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            reopenDate:
              format: date
              type: string
              description: |-

                Date must be on or after 1970-01-01
                Date must be before or on 2038-01-01

                Filtering Type: `date`
            saturday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the drive-through hours are "closed" on Saturday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            sunday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the drive-through hours are "closed" on Sunday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            thursday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the drive-through hours are "closed" on Thursday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            tuesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the drive-through hours are "closed" on Tuesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            wednesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the drive-through hours are "closed" on Wednesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
          description: |-
            Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.

            Each day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
            Similarly, holiday drive-through hours are represented by the `holidayHours` sub-field.
            Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
            SPECIAL CASES:
            * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
            * To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.
            * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.

            Filtering Type: `hours`

            ```
            Eligible For: 
               * atm
               * location
               * restaurant
            ```
        dropoffCoordinate:
          additionalProperties: false
          type: object
          properties:
            latitude:
              minimum: -90
              maximum: 90
              type: number
              description: 'Filtering Type: `float`'
            longitude:
              minimum: -180
              maximum: 180
              type: number
              description: 'Filtering Type: `float`'
          description: |-
            Coordinates of the drop-off area for the entity, as provided by you

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        educationList:
          description: |-
            Information about the education or training completed by the healthcare professional


            Array must be ordered.


            Filtering Type: `list of object`

            ```
            Eligible For: 
               * healthcareProfessional
            ```
          uniqueItems: true
          type: array
          items:
            required:
              - type
              - institutionName
              - yearCompleted
            additionalProperties: false
            type: object
            properties:
              institutionName:
                minLength: 0
                maxLength: 100
                type: string
                description: 'Filtering Type: `text`'
              type:
                enum:
                  - FELLOWSHIP
                  - RESIDENCY
                  - INTERNSHIP
                  - MEDICAL_SCHOOL
                type: string
                description: 'Filtering Type: `option`'
              yearCompleted:
                multipleOf: 1
                minimum: 1900
                maximum: 2100
                type: number
                description: 'Filtering Type: `integer`'
            description: 'Filtering Type: `object`'
        electricChargingStation:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has electric car chargine stations on premise.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        elevator:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has an elevator.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        ellipticalMachine:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has an elliptical machine.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        emails:
          description: |-
            Emails addresses for this entity's point of contact

            Must be valid email addresses



            Array must be ordered.

            Array may have a maximum of 5 elements.


            Filtering Type: `list of text`

            ```
            Eligible For: 
               * contactCard
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            format: email
            type: string
            description: 'Filtering Type: `text`'
        employmentType:
          enum:
            - FULL_TIME
            - PART_TIME
            - CONTRACTOR
            - TEMPORARY
            - INTERN
            - VOLUNTEER
            - PER_DIEM
            - OTHER
          type: string
          description: |-
            The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.

            Filtering Type: `option`

            ```
            Eligible For: 
               * job
            ```
        eventStatus:
          enum:
            - SCHEDULED
            - RESCHEDULED
            - POSTPONED
            - CANCELED
            - EVENT_MOVED_ONLINE
          type: string
          description: |-
            Information on whether the event will take place as scheduled

            Filtering Type: `option`

            ```
            Eligible For: 
               * event
            ```
        facebookCallToAction:
          required:
            - type
          additionalProperties: false
          type: object
          properties:
            type:
              enum:
                - NONE
                - BOOK_NOW
                - CALL_NOW
                - CONTACT_US
                - SEND_MESSAGE
                - USE_APP
                - PLAY_GAME
                - SHOP_NOW
                - SIGN_UP
                - WATCH_VIDEO
                - SEND_EMAIL
                - LEARN_MORE
                - PURCHASE_GIFT_CARDS
                - ORDER_NOW
                - FOLLOW_PAGE
              type: string
              description: |-
                The action the consumer is being prompted to take by the button's text

                Filtering Type: `option`
            value:
              minLength: 0
              type: string
              description: |-
                Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.

                For example, if the user sets the Facebook Call-to-Action as " 'Sign Up' using 'Website URL' " in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.

                The Call-to-Action will have the same behavior if the user sets the value to "Custom Value" in the platform and embeds a field.

                Filtering Type: `text`
          description: |-
            Designates the Facebook Call-to-Action button text and value

            Valid contents of **`value`** depends on the Call-to-Action's **`type`**:
            * `NONE`: (optional)
            * `BOOK_NOW`: URL
            * `CALL_NOW`: Phone number
            * `CONTACT_US`: URL
            * `SEND_MESSAGE`: Any string
            * `USE_APP`: URL
            * `PLAY_GAME`: URL
            * `SHOP_NOW`: URL
            * `SIGN_UP`: URL
            * `WATCH_VIDEO`: URL
            * `SEND_EMAIL`: Email address
            * `LEARN_MORE`: URL
            * `PURCHASE_GIFT_CARDS`: URL
            * `ORDER_NOW`: URL
            * `FOLLOW_PAGE`: Any string

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        facebookCoverPhoto:
          required:
            - url
          additionalProperties: false
          type: object
          description: |-
            The cover photo for the entity's Facebook profile

            Displayed as a 851 x 315 pixel image

            You may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.


            Image must be at least 400 x 150 pixels

            Image area (width x height) may be no more than 41000000 pixels

            Image may be no more than 30000 x 30000 pixels

            Supported Aspect Ratios:
            * 1 x 1
            * 4 x 3
            * 3 x 2
            * 5 x 3
            * 16 x 9
            * 3 x 1
            * 2 x 3
            * 5 x 7
            * 4 x 5
            * 4 x 1

            **NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.


            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
          properties:
            alternateText:
              minLength: 0
              type: string
              description: 'Filtering Type: `text`'
            url:
              minLength: 0
              format: uri
              type: string
              description: 'Filtering Type: `text`'
        facebookDescriptor:
          minLength: 3
          maxLength: 75
          type: string
          description: |-
            Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.


            Cannot Include:
            * HTML markup

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        facebookName:
          minLength: 0
          type: string
          description: |-
            The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        facebookOverrideCity:
          minLength: 0
          type: string
          description: |-
            The city to be displayed on this entity's Facebook profile

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        facebookPageUrl:
          minLength: 0
          type: string
          description: |-
            URL for the entity's Facebook Page.

            Valid formats:

            - facebook.com/profile.php?id=[numId]
            - facebook.com/group.php?gid=[numId]
            - facebook.com/groups/[numId]
            - facebook.com/[Name]
            - facebook.com/pages/[Name]/[numId]
            - facebook.com/people/[Name]/[numId]

            where [Name] is a String and [numId] is an Integer
            The success response will contain a warning message explaining why the URL wasn't stored in the system.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
        facebookProfilePhoto:
          required:
            - url
          additionalProperties: false
          type: object
          description: |-
            The profile picture for the entity's Facebook profile

            You must have a profile picture in order for your listing to appear on Facebook.


            Image must be at least 180 x 180 pixels

            Image area (width x height) may be no more than 41000000 pixels

            Image may be no more than 30000 x 30000 pixels

            Supported Aspect Ratios:
            * 1 x 1

            **NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.


            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
          properties:
            alternateText:
              minLength: 0
              type: string
              description: 'Filtering Type: `text`'
            url:
              minLength: 0
              format: uri
              type: string
              description: 'Filtering Type: `text`'
        facebookVanityUrl:
          minLength: 0
          maxLength: 50
          type: string
          description: |-
            The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        fax:
          minLength: 0
          type: string
          description: |-
            Must be a valid fax number.

            If the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        featuredMessage:
          additionalProperties: false
          type: object
          properties:
            description:
              minLength: 0
              maxLength: 50
              type: string
              description: |-
                The text of Featured Message. Default: `Call today!`

                Cannot include:

                - inappropriate language
                - HTML markup
                - a URL or domain name
                - a phone number
                - control characters ([\x00-\x1F\x7F])
                - insufficient spacing

                If you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.


                Cannot Include:
                * HTML markup

                Filtering Type: `text`
            url:
              minLength: 0
              maxLength: 255
              format: uri
              type: string
              description: |-
                Valid URL linked to the Featured Message text

                Filtering Type: `text`
          description: |-
            Information about the entity's Featured Message

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        firstName:
          minLength: 0
          maxLength: 35
          type: string
          description: |-
            The first name of the healthcare professional


            Cannot Include:
            * a URL or domain name
            * HTML markup

            Filtering Type: `text`

            ```
            Eligible For: 
               * healthcareProfessional
            ```
        firstPartyReviewPage:
          minLength: 0
          type: string
          description: |-
            Link to the review-collection page, where consumers can leave first-party reviews

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        fitnessCenter:
          enum:
            - FITNESS_CENTER_AVAILABLE
            - FITNESS_CENTER_AVAILABLE_FOR_FREE
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a fitness center.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        floorCount:
          multipleOf: 1
          minimum: 0
          type: number
          description: |-
            The number of floors the entity has from ground floor to top floor.

            Filtering Type: `integer`

            ```
            Eligible For: 
               * hotel
            ```
        freeWeights:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has free weights.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        frequentlyAskedQuestions:
          description: |-
            A list of questions that are frequently asked about this entity


            Array must be ordered.

            Array may have a maximum of 100 elements.


            Filtering Type: `list of object`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            required:
              - question
            additionalProperties: false
            type: object
            properties:
              answer:
                minLength: 1
                maxLength: 4096
                type: string
                description: 'Filtering Type: `text`'
              question:
                minLength: 1
                maxLength: 4096
                type: string
                description: 'Filtering Type: `text`'
            description: 'Filtering Type: `object`'
        frontDesk:
          enum:
            - FRONT_DESK_AVAILABLE
            - FRONT_DESK_AVAILABLE_24_HOURS
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a front desk.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        fullyVaccinatedStaff:
          type: boolean
          description: |-
            Indicates whether the staff is vaccinated against COVID-19.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareFacility
               * hotel
               * location
               * restaurant
            ```
        gameRoom:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a game room.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        gender:
          enum:
            - UNSPECIFIED
            - FEMALE
            - MALE
          type: string
          description: |-
            The gender of the healthcare professional

            Filtering Type: `option`

            ```
            Eligible For: 
               * healthcareProfessional
            ```
        geomodifier:
          minLength: 0
          type: string
          description: |-
            Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        giftShop:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a gift shop.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        golf:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        googleAttributes:
          additionalProperties: false
          type: object
          properties: {}
          description: |-
            The unique IDs of the entity's Google Business Profile keywords, as well as the unique IDs of any values selected for each keyword.

            Valid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.

            Keyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).

            * If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ "id": "has_wheelchair_accessible_entrance", "values": [ "true" ] }]`)
            * If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ "has_wheelchair_accessible_entrance": [ "true" ]}`)

            **NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        googleCoverPhoto:
          required:
            - url
          additionalProperties: false
          type: object
          description: |-
            The cover photo for the entity's Google profile


            Image must be at least 250 x 250 pixels


            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
          properties:
            alternateText:
              minLength: 0
              type: string
              description: 'Filtering Type: `text`'
            url:
              minLength: 0
              format: uri
              type: string
              description: 'Filtering Type: `text`'
        googleMyBusinessLabels:
          description: |-
            Google Business Profile Labels help users organize their locations into groups within GBP.


            Array must be ordered.

            Array may have a maximum of 10 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 50
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        googlePlaceId:
          minLength: 0
          type: string
          description: |-
            The unique identifier of this entity on Google Maps.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        googleProfilePhoto:
          required:
            - url
          additionalProperties: false
          type: object
          description: |-
            The profile photo for the entity's Google profile


            Image must be at least 250 x 250 pixels

            Image may be no more than 500 x 500 pixels

            Supported Aspect Ratios:
            * 1 x 1

            **NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.


            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
          properties:
            alternateText:
              minLength: 0
              type: string
              description: 'Filtering Type: `text`'
            url:
              minLength: 0
              format: uri
              type: string
              description: 'Filtering Type: `text`'
        googleWebsiteOverride:
          minLength: 0
          format: uri
          type: string
          description: |-
            The URL you would like to submit to Google Business Profile in place of the one given in **`websiteUrl`** (if applicable).

            For example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        happyHours:
          additionalProperties: false
          type: object
          properties:
            friday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the happy hours are "closed" on Friday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            holidayHours:
              description: |-

                **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.



                Array must be ordered.


                Filtering Type: `list of object`
              uniqueItems: true
              type: array
              items:
                required:
                  - date
                additionalProperties: false
                type: object
                properties:
                  date:
                    format: date
                    type: string
                    description: |-
                      Date on which the holiday hours will be in effect. Cannot be in the past.


                      Date must be on or after 1970-01-01
                      Date must be before or on 2038-01-01

                      Filtering Type: `date`
                  isClosed:
                    type: boolean
                    description: |-
                      Indicates if the happy hours are "closed" on on the given date.

                      Filtering Type: `boolean`
                  isRegularHours:
                    type: boolean
                    description: |-
                      Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.

                      Filtering Type: `boolean`
                  openIntervals:
                    uniqueItems: false
                    type: array
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        end:
                          format: time
                          type: string
                          description: |-
                            The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                        start:
                          format: time
                          type: string
                          description: |-
                            The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                      description: 'Filtering Type: `object`'
                    description: |-
                      Contains the time intervals for the Entity's happy hours on the specified date.

                      Filtering Type: `list of object`
                description: 'Filtering Type: `object`'
            monday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the happy hours are "closed" on Monday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            reopenDate:
              format: date
              type: string
              description: |-

                Date must be on or after 1970-01-01
                Date must be before or on 2038-01-01

                Filtering Type: `date`
            saturday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the happy hours are "closed" on Saturday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            sunday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the happy hours are "closed" on Sunday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            thursday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the happy hours are "closed" on Thursday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            tuesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the happy hours are "closed" on Tuesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            wednesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the happy hours are "closed" on Wednesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
          description: |-
            Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.

            Each day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
            Similarly, holiday happy hours are represented by the `holidayHours` sub-field.
            Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
            SPECIAL CASES:
            * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
            * To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.
            * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.

            Filtering Type: `hours`

            ```
            Eligible For: 
               * hotel
               * location
               * restaurant
            ```
        headshot:
          required:
            - url
          additionalProperties: false
          type: object
          description: |-
            A portrait of the healthcare professional

            Filtering Type: `object`

            ```
            Eligible For: 
               * contactCard
               * financialProfessional
               * healthcareProfessional
            ```
          properties:
            alternateText:
              minLength: 0
              type: string
              description: 'Filtering Type: `text`'
            url:
              minLength: 0
              format: uri
              type: string
              description: 'Filtering Type: `text`'
        hiringOrganization:
          minLength: 0
          type: string
          description: |-
            The organization that is hiring for the open job

            Filtering Type: `text`

            ```
            Eligible For: 
               * job
            ```
        holidayHoursConversationEnabled:
          type: boolean
          description: |-
            Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        horsebackRiding:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers horseback riding.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        hotTub:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a hot tub.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        hours:
          additionalProperties: false
          type: object
          properties:
            friday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the hours of operation are "closed" on Friday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            holidayHours:
              description: |-

                **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.



                Array must be ordered.


                Filtering Type: `list of object`
              uniqueItems: true
              type: array
              items:
                required:
                  - date
                additionalProperties: false
                type: object
                properties:
                  date:
                    format: date
                    type: string
                    description: |-
                      Date on which the holiday hours will be in effect. Cannot be in the past.


                      Date must be on or after 1970-01-01
                      Date must be before or on 2038-01-01

                      Filtering Type: `date`
                  isClosed:
                    type: boolean
                    description: |-
                      Indicates if the hours of operation are "closed" on on the given date.

                      Filtering Type: `boolean`
                  isRegularHours:
                    type: boolean
                    description: |-
                      Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.

                      Filtering Type: `boolean`
                  openIntervals:
                    uniqueItems: false
                    type: array
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        end:
                          format: time
                          type: string
                          description: |-
                            The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                        start:
                          format: time
                          type: string
                          description: |-
                            The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                      description: 'Filtering Type: `object`'
                    description: |-
                      Contains the time intervals for which the Entity is open on the specified date.

                      Filtering Type: `list of object`
                description: 'Filtering Type: `object`'
            monday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the hours of operation are "closed" on Monday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            reopenDate:
              format: date
              type: string
              description: |-

                Date must be on or after 1970-01-01
                Date must be before or on 2038-01-01

                Filtering Type: `date`
            saturday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the hours of operation are "closed" on Saturday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            sunday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the hours of operation are "closed" on Sunday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            thursday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the hours of operation are "closed" on Thursday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            tuesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the hours of operation are "closed" on Tuesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            wednesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the hours of operation are "closed" on Wednesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
          description: |-
            Contains the daily hours, holiday hours, and reopen date for the Entity.

            Each day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
            Similarly, holiday hours are represented by the `holidayHours` sub-field.
            Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
            SPECIAL CASES:
            * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
            * To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.
            * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.

            Filtering Type: `hours`

            ```
            Eligible For: 
               * atm
               * contactCard
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        housekeeping:
          enum:
            - HOUSEKEEPING_AVAILABLE
            - HOUSEKEEPING_AVAILABLE_DAILY
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers housekeeping services.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        impressum:
          minLength: 0
          maxLength: 2000
          type: string
          description: |-
            A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        indoorPoolCount:
          multipleOf: 1
          minimum: 0
          type: number
          description: |-
            A count of the number of indoor pools

            Filtering Type: `integer`

            ```
            Eligible For: 
               * hotel
            ```
        instagramHandle:
          minLength: 0
          maxLength: 30
          type: string
          description: |-
            Valid Instagram username for the entity without the leading "@" (e.g., `NewCityAuto`)

            Filtering Type: `text`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
        insuranceAccepted:
          description: |-
            A list of insurance policies accepted by the healthcare provider


            Array must be ordered.

            Array may have a maximum of 100 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * healthcareFacility
               * healthcareProfessional
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        iosAppUrl:
          minLength: 0
          type: string
          description: |-
            The URL where consumers can download the entity's app to their iPhone or iPad

            Filtering Type: `text`

            ```
            Eligible For: 
               * financialProfessional
               * hotel
               * location
               * restaurant
            ```
        isClusterPrimary:
          type: boolean
          description: |-
            Indicates whether the healthcare entity is the primary entity in its group

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * healthcareProfessional
            ```
        isFreeEvent:
          type: boolean
          description: |-
            Indicates whether or not the event is free

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * event
            ```
        isoRegionCode:
          minLength: 0
          type: string
          description: |-
            The ISO 3166-2 region code for the entity

            Yext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        keywords:
          description: |-
            Keywords that describe the entity.

            All strings must be non-empty when trimmed of whitespace.



            Array must be ordered.

            Array may have a maximum of 100 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * atm
               * card
               * event
               * faq
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * helpArticle
               * hotel
               * job
               * location
               * product
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        kidFriendly:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates if the entity is kid friendly.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        kidsClub:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates if the property has a Kids Club.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        kidsStayFree:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity allows kids to stay free.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        kitchenHours:
          additionalProperties: false
          type: object
          properties:
            friday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the kitchen hours are "closed" on Friday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            holidayHours:
              description: |-

                **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.



                Array must be ordered.


                Filtering Type: `list of object`
              uniqueItems: true
              type: array
              items:
                required:
                  - date
                additionalProperties: false
                type: object
                properties:
                  date:
                    format: date
                    type: string
                    description: |-
                      Date on which the holiday hours will be in effect. Cannot be in the past.


                      Date must be on or after 1970-01-01
                      Date must be before or on 2038-01-01

                      Filtering Type: `date`
                  isClosed:
                    type: boolean
                    description: |-
                      Indicates if the kitchen hours are "closed" on on the given date.

                      Filtering Type: `boolean`
                  isRegularHours:
                    type: boolean
                    description: |-
                      Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.

                      Filtering Type: `boolean`
                  openIntervals:
                    uniqueItems: false
                    type: array
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        end:
                          format: time
                          type: string
                          description: |-
                            The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                        start:
                          format: time
                          type: string
                          description: |-
                            The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                      description: 'Filtering Type: `object`'
                    description: |-
                      Contains the time intervals for which the Entity's kitchen is open on the specified date.

                      Filtering Type: `list of object`
                description: 'Filtering Type: `object`'
            monday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the kitchen hours are "closed" on Monday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            reopenDate:
              format: date
              type: string
              description: |-

                Date must be on or after 1970-01-01
                Date must be before or on 2038-01-01

                Filtering Type: `date`
            saturday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the kitchen hours are "closed" on Saturday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            sunday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the kitchen hours are "closed" on Sunday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            thursday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the kitchen hours are "closed" on Thursday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            tuesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the kitchen hours are "closed" on Tuesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            wednesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the kitchen hours are "closed" on Wednesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
          description: |-
            Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.

            Each day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
            Similarly, holiday kitchen hours are represented by the `holidayHours` sub-field.
            Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
            SPECIAL CASES:
            * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
            * To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.
            * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.

            Filtering Type: `hours`

            ```
            Eligible For: 
               * hotel
               * location
               * restaurant
            ```
        labels:
          uniqueItems: false
          type: array
          items:
            minLength: 0
            type: string
          description: |-
            The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.

            **NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.

            Filtering Type: `opaque`

            ```
            Eligible For: 
               * atm
               * board
               * card
               * contactCard
               * event
               * faq
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * helpArticle
               * hotel
               * hotelRoomType
               * job
               * location
               * organization
               * product
               * restaurant
            ```
        landingPageUrl:
          minLength: 0
          format: uri
          type: string
          description: |-
            The URL of this entity's Landing Page that was created with Yext Pages

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * card
               * event
               * faq
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * helpArticle
               * hotel
               * job
               * location
               * product
               * restaurant
            ```
        languages:
          description: |-
            The langauges in which consumers can commicate with this entity or its staff members
            All strings must be non-empty when trimmed of whitespace.



            Array must be ordered.

            Array may have a maximum of 100 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        lastName:
          minLength: 0
          maxLength: 35
          type: string
          description: |-
            The last name of the healthcare professional


            Cannot Include:
            * a URL or domain name
            * HTML markup

            Filtering Type: `text`

            ```
            Eligible For: 
               * healthcareProfessional
            ```
        laundry:
          enum:
            - FULL_SERVICE
            - SELF_SERVICE
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers laundry services.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        lazyRiver:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates if the property has a lazy river

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        lifeguard:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates if the property has a lifeguard on duty

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        linkedLocation:
          type: string
          description: |-
            location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager

            Filtering Type: `entityId`

            ```
            Eligible For: 
               * contactCard
               * event
            ```
        localPhone:
          minLength: 0
          type: string
          description: |-
            Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        localShuttle:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers local shuttle services.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        locatedIn:
          type: string
          description: |-
            For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.

            Filtering Type: `entityId`

            ```
            Eligible For: 
               * atm
            ```
        location:
          additionalProperties: false
          type: object
          properties:
            existingLocation:
              type: string
              description: |-
                A location entity referenced by Yext ID or Entity ID where this job opening exists

                Filtering Type: `entityId`
            externalLocation:
              minLength: 0
              maxLength: 255
              type: string
              description: |-
                A location string where this job opening exists


                Cannot Include:
                * a URL or domain name
                * HTML markup

                Filtering Type: `text`
          description: |-
            The location where this job opening exists as either an existing location or an external location

            Filtering Type: `object`

            ```
            Eligible For: 
               * job
            ```
        locationType:
          enum:
            - LOCATION
            - HEALTHCARE_FACILITY
            - HEALTHCARE_PROFESSIONAL
            - ATM
            - RESTAURANT
            - HOTEL
          type: string
          description: |-
            Indicates the entity's type, if it is not an event

            Filtering Type: `option`

            ```
            Eligible For: 
               * atm
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        logo:
          required:
            - image
          additionalProperties: false
          type: object
          description: |-
            An image of the entity's logo


            Supported Aspect Ratios:
            * 1 x 1

            **NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.


            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * contactCard
               * faq
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * job
               * location
               * organization
               * restaurant
            ```
          properties:
            clickthroughUrl:
              minLength: 0
              format: uri
              type: string
              description: 'Filtering Type: `text`'
            description:
              minLength: 0
              type: string
              description: 'Filtering Type: `text`'
            details:
              minLength: 0
              type: string
              description: 'Filtering Type: `text`'
            image:
              required:
                - url
              additionalProperties: false
              type: object
              description: |-

                Supported Aspect Ratios:
                * 1 x 1

                **NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.


                Filtering Type: `object`
              properties:
                alternateText:
                  minLength: 0
                  type: string
                  description: 'Filtering Type: `text`'
                url:
                  minLength: 0
                  format: uri
                  type: string
                  description: 'Filtering Type: `text`'
        mainPhone:
          minLength: 0
          type: string
          description: |-
            The main phone number of the entity's point of contact

            Must be a valid phone number.

            If the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * contactCard
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
        massage:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers massage services.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        maxAgeOfKidsStayFree:
          multipleOf: 1
          minimum: 0
          type: number
          description: |-
            The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee

            Filtering Type: `integer`

            ```
            Eligible For: 
               * hotel
            ```
        maxNumberOfKidsStayFree:
          multipleOf: 1
          minimum: 0
          type: number
          description: |-
            The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee

            Filtering Type: `integer`

            ```
            Eligible For: 
               * hotel
            ```
        mealsServed:
          uniqueItems: true
          type: array
          items:
            enum:
              - BREAKFAST
              - LUNCH
              - BRUNCH
              - DINNER
              - HAPPY_HOUR
              - LATE_NIGHT
            type: string
            description: 'Filtering Type: `option`'
          description: |-
            Types of meals served at this restaurant

            Filtering Type: `list of option`

            ```
            Eligible For: 
               * restaurant
            ```
        meetingRoomCount:
          multipleOf: 1
          minimum: 0
          type: number
          description: |-
            The number of meeting rooms the entity has.

            Filtering Type: `integer`

            ```
            Eligible For: 
               * hotel
            ```
        menuUrl:
          additionalProperties: false
          type: object
          properties:
            displayUrl:
              minLength: 0
              maxLength: 2000
              format: uri
              type: string
              description: |-
                The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.

                Filtering Type: `text`
            preferDisplayUrl:
              type: boolean
              description: |-
                If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.

                Filtering Type: `boolean`
            url:
              minLength: 0
              maxLength: 2000
              format: uri
              type: string
              description: |-
                A valid URL where consumers can view the entity's menu

                Filtering Type: `text`
          description: |-
            Information about the URL where consumers can view the entity's menu

            Filtering Type: `object`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        menus:
          additionalProperties: false
          type: object
          properties:
            ids:
              description: |-
                IDs of the Menu Lists associated with this entity


                Array must be ordered.

                Array may have a maximum of 40 elements.


                Filtering Type: `list of text`
              uniqueItems: true
              type: array
              items:
                minLength: 0
                type: string
                description: 'Filtering Type: `text`'
            label:
              minLength: 0
              maxLength: 30
              type: string
              description: |-
                Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.

                Filtering Type: `text`
          description: |-
            Information about the Menu Content Lists associated with this entity

            Filtering Type: `object`

            ```
            Eligible For: 
               * hotel
               * location
               * restaurant
            ```
        middleName:
          minLength: 0
          maxLength: 35
          type: string
          description: |-
            The middle name of the healthcare professional


            Cannot Include:
            * a URL or domain name
            * HTML markup

            Filtering Type: `text`

            ```
            Eligible For: 
               * healthcareProfessional
            ```
        mobilePhone:
          minLength: 0
          type: string
          description: |-
            Must be a valid phone number.

            If the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        mobilityAccessible:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity is mobility/wheelchair accessible

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        nightclub:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a nightclub.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        npi:
          minLength: 0
          type: string
          description: |-
            The National Provider Identifier (NPI) of the healthcare provider

            Filtering Type: `text`

            ```
            Eligible For: 
               * healthcareFacility
               * healthcareProfessional
            ```
        nudgeEnabled:
          type: boolean
          description: |-
            Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * atm
               * faq
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * helpArticle
               * hotel
               * job
               * location
               * organization
               * product
               * restaurant
            ```
        officeName:
          minLength: 0
          type: string
          description: |-
            The name of the office where the healthcare professional works, if different from **`name`**

            Filtering Type: `text`

            ```
            Eligible For: 
               * healthcareProfessional
            ```
        onlineServiceHours:
          additionalProperties: false
          type: object
          properties:
            friday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the online service hours are "closed" on Friday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            holidayHours:
              description: |-

                **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.



                Array must be ordered.


                Filtering Type: `list of object`
              uniqueItems: true
              type: array
              items:
                required:
                  - date
                additionalProperties: false
                type: object
                properties:
                  date:
                    format: date
                    type: string
                    description: |-
                      Date on which the holiday hours will be in effect. Cannot be in the past.


                      Date must be on or after 1970-01-01
                      Date must be before or on 2038-01-01

                      Filtering Type: `date`
                  isClosed:
                    type: boolean
                    description: |-
                      Indicates if the online service hours are "closed" on on the given date.

                      Filtering Type: `boolean`
                  isRegularHours:
                    type: boolean
                    description: |-
                      Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.

                      Filtering Type: `boolean`
                  openIntervals:
                    uniqueItems: false
                    type: array
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        end:
                          format: time
                          type: string
                          description: |-
                            The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                        start:
                          format: time
                          type: string
                          description: |-
                            The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                      description: 'Filtering Type: `object`'
                    description: |-
                      Contains the time intervals for the Entity's online service hours on the specified date.

                      Filtering Type: `list of object`
                description: 'Filtering Type: `object`'
            monday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the online service hours are "closed" on Monday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            reopenDate:
              format: date
              type: string
              description: |-

                Date must be on or after 1970-01-01
                Date must be before or on 2038-01-01

                Filtering Type: `date`
            saturday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the online service hours are "closed" on Saturday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            sunday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the online service hours are "closed" on Sunday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            thursday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the online service hours are "closed" on Thursday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            tuesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the online service hours are "closed" on Tuesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            wednesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the online service hours are "closed" on Wednesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
          description: |-
            Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.

            Each day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
            Similarly, holiday online service hours are represented by the `holidayHours` sub-field.
            Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
            SPECIAL CASES:
            * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
            * To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.
            * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.

            Filtering Type: `hours`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * location
               * restaurant
            ```
        orderUrl:
          additionalProperties: false
          type: object
          properties:
            displayUrl:
              minLength: 0
              maxLength: 2000
              format: uri
              type: string
              description: |-
                The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.

                Filtering Type: `text`
            preferDisplayUrl:
              type: boolean
              description: |-
                If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.

                Filtering Type: `boolean`
            url:
              minLength: 0
              maxLength: 2000
              format: uri
              type: string
              description: |-
                A valid URL used to place an order at this entity

                Filtering Type: `text`
          description: |-
            Information about the URL used to place orders that will be fulfilled by the entity

            Filtering Type: `object`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        organizerEmail:
          minLength: 0
          format: email
          type: string
          description: |-
            Point of contact for the event organizer (not to be published publicly)

            Filtering Type: `text`

            ```
            Eligible For: 
               * event
            ```
        organizerName:
          minLength: 0
          type: string
          description: |-
            Point of contact for the event organizer (not to be published publicly)

            Filtering Type: `text`

            ```
            Eligible For: 
               * event
            ```
        organizerPhone:
          minLength: 0
          type: string
          description: |-
            Point of contact for the event organizer (not to be published publicly)

            Filtering Type: `text`

            ```
            Eligible For: 
               * event
            ```
        outdoorPoolCount:
          multipleOf: 1
          minimum: 0
          type: number
          description: |-
            The number of outdoor pools the entity has.

            Filtering Type: `integer`

            ```
            Eligible For: 
               * hotel
            ```
        parking:
          enum:
            - PARKING_AVAILABLE
            - PARKING_AVAILABLE_FOR_FREE
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers parking services.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        paymentOptions:
          uniqueItems: true
          type: array
          items:
            enum:
              - ALIPAY
              - AMERICANEXPRESS
              - ANDROIDPAY
              - APPLEPAY
              - ATM
              - ATMQUICK
              - BACS
              - BANCONTACT
              - BANKDEPOSIT
              - BANKPAY
              - BGO
              - BITCOIN
              - Bar
              - CARTASI
              - CASH
              - CCS
              - CHECK
              - CONB
              - CVVV
              - DEBITNOTE
              - DINERSCLUB
              - DIRECTDEBIT
              - DISCOVER
              - ECKARTE
              - ECOCHEQUE
              - EKENA
              - EMV
              - FINANCING
              - GOPAY
              - HAYAKAKEN
              - HEBAG
              - IBOD
              - ICCARDS
              - ICOCA
              - ID
              - IDEAL
              - INCA
              - INVOICE
              - JCB
              - JCoinPay
              - JKOPAY
              - KITACA
              - KLA
              - KLARNA
              - LINEPAY
              - MAESTRO
              - MANACA
              - MASTERCARD
              - MIPAY
              - MONIZZE
              - MPAY
              - Manuelle Lastsch
              - Merpay
              - NANACO
              - NEXI
              - NIMOCA
              - OREM
              - PASMO
              - PAYBACKPAY
              - PAYBOX
              - PAYCONIQ
              - PAYPAL
              - PAYPAY
              - PAYSEC
              - PIN
              - POSTEPAY
              - QRCODE
              - QUICPAY
              - RAKUTENEDY
              - RAKUTENPAY
              - SAMSUNGPAY
              - SODEXO
              - SUGOCA
              - SUICA
              - SWISH
              - TICKETRESTAURANT
              - TOICA
              - TRAVELERSCHECK
              - TSCUBIC
              - TWINT
              - UNIONPAY
              - VEV
              - VISA
              - VISAELECTRON
              - VOB
              - VOUCHER
              - VPAY
              - WAON
              - WECHATPAY
              - WIRETRANSFER
              - Yucho Pay
              - ZELLE
              - auPay
              - dBarai
              - Überweisung
            type: string
            description: 'Filtering Type: `option`'
          description: |-
            The payment methods accepted by this entity

            Valid elements depend on the entity's country.


            Filtering Type: `list of option`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        performers:
          description: |-
            Performers at the event


            Array must be ordered.

            Array may have a maximum of 100 elements.


            Filtering Type: `list of text`

            ```
            Eligible For: 
               * event
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: 'Filtering Type: `text`'
        petsAllowed:
          enum:
            - PETS_WELCOME
            - PETS_WELCOME_FOR_FREE
            - NOT_APPLICABLE
            - NOT_ALLOWED
          type: string
          description: |-
            Indicates if the entity is pet friendly.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        photoGallery:
          description: |-

            **NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.



            Array must be ordered.

            Array may have a maximum of 500 elements.

            Array item description:

            >Supported Aspect Ratios:
            >* 1 x 1
            >* 4 x 3
            >* 3 x 2
            >* 5 x 3
            >* 16 x 9
            >* 3 x 1
            >* 2 x 3
            >* 5 x 7
            >* 4 x 5
            >* 4 x 1
            >
            >**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.
            >

            Filtering Type: `list of object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * hotelRoomType
               * location
               * organization
               * product
               * restaurant
            ```
          uniqueItems: false
          type: array
          items:
            required:
              - image
            additionalProperties: false
            type: object
            description: |-

              Supported Aspect Ratios:
              * 1 x 1
              * 4 x 3
              * 3 x 2
              * 5 x 3
              * 16 x 9
              * 3 x 1
              * 2 x 3
              * 5 x 7
              * 4 x 5
              * 4 x 1

              **NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.


              Filtering Type: `object`
            properties:
              clickthroughUrl:
                minLength: 0
                format: uri
                type: string
                description: 'Filtering Type: `text`'
              description:
                minLength: 0
                type: string
                description: 'Filtering Type: `text`'
              details:
                minLength: 0
                type: string
                description: 'Filtering Type: `text`'
              image:
                required:
                  - url
                additionalProperties: false
                type: object
                description: |-

                  Supported Aspect Ratios:
                  * 1 x 1
                  * 4 x 3
                  * 3 x 2
                  * 5 x 3
                  * 16 x 9
                  * 3 x 1
                  * 2 x 3
                  * 5 x 7
                  * 4 x 5
                  * 4 x 1

                  **NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.


                  Filtering Type: `object`
                properties:
                  alternateText:
                    minLength: 0
                    type: string
                    description: 'Filtering Type: `text`'
                  url:
                    minLength: 0
                    format: uri
                    type: string
                    description: 'Filtering Type: `text`'
        pickupCoordinate:
          additionalProperties: false
          type: object
          properties:
            latitude:
              minimum: -90
              maximum: 90
              type: number
              description: 'Filtering Type: `float`'
            longitude:
              minimum: -180
              maximum: 180
              type: number
              description: 'Filtering Type: `float`'
          description: |-
            Coordinates of where consumers can be picked up at the entity, as provided by you

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        pickupHours:
          additionalProperties: false
          type: object
          properties:
            friday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the pickup hours are "closed" on Friday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            holidayHours:
              description: |-

                **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.



                Array must be ordered.


                Filtering Type: `list of object`
              uniqueItems: true
              type: array
              items:
                required:
                  - date
                additionalProperties: false
                type: object
                properties:
                  date:
                    format: date
                    type: string
                    description: |-
                      Date on which the holiday hours will be in effect. Cannot be in the past.


                      Date must be on or after 1970-01-01
                      Date must be before or on 2038-01-01

                      Filtering Type: `date`
                  isClosed:
                    type: boolean
                    description: |-
                      Indicates if the pickup hours are "closed" on on the given date.

                      Filtering Type: `boolean`
                  isRegularHours:
                    type: boolean
                    description: |-
                      Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.

                      Filtering Type: `boolean`
                  openIntervals:
                    uniqueItems: false
                    type: array
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        end:
                          format: time
                          type: string
                          description: |-
                            The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                        start:
                          format: time
                          type: string
                          description: |-
                            The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                      description: 'Filtering Type: `object`'
                    description: |-
                      Contains the time intervals for which the Entity is open for pickup on the specified date.

                      Filtering Type: `list of object`
                description: 'Filtering Type: `object`'
            monday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the pickup hours are "closed" on Monday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            reopenDate:
              format: date
              type: string
              description: |-

                Date must be on or after 1970-01-01
                Date must be before or on 2038-01-01

                Filtering Type: `date`
            saturday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the pickup hours are "closed" on Saturday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            sunday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the pickup hours are "closed" on Sunday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            thursday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the pickup hours are "closed" on Thursday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            tuesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the pickup hours are "closed" on Tuesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            wednesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the pickup hours are "closed" on Wednesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
          description: |-
            Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.

            Each day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
            Similarly, holiday pickup hours are represented by the `holidayHours` sub-field.
            Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
            SPECIAL CASES:
            * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
            * To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.
            * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.

            Filtering Type: `hours`

            ```
            Eligible For: 
               * healthcareFacility
               * location
               * restaurant
            ```
        pinterestUrl:
          minLength: 0
          type: string
          description: URL for your Pinterest account, format should be https://www.pinterest.com/yourUsername
        priceRange:
          enum:
            - UNSPECIFIED
            - ONE
            - TWO
            - THREE
            - FOUR
          type: string
          description: |-
            he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)

            Filtering Type: `option`

            ```
            Eligible For: 
               * atm
               * healthcareFacility
               * healthcareProfessional
               * location
               * restaurant
            ```
        primaryConversationContact:
          minLength: 0
          type: string
          description: |-
            ID of the user who is the primary Knowledge Assistant contact for the entity

            Filtering Type: `option`

            ```
            Eligible For: 
               * atm
               * faq
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * helpArticle
               * hotel
               * job
               * location
               * organization
               * product
               * restaurant
            ```
        privateBeach:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has access to a private beach.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        privateCarService:
          enum:
            - PRIVATE_CAR_SERVICE
            - PRIVATE_CAR_SERVICE_FOR_FREE
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers private car services.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        productLists:
          additionalProperties: false
          type: object
          properties:
            ids:
              description: |-
                IDs of the Products & Services Lists associated with this entity


                Array must be ordered.

                Array may have a maximum of 40 elements.


                Filtering Type: `list of text`
              uniqueItems: true
              type: array
              items:
                minLength: 0
                type: string
                description: 'Filtering Type: `text`'
            label:
              minLength: 0
              maxLength: 30
              type: string
              description: |-
                Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.

                Filtering Type: `text`
          description: |-
            Information about the Products & Services Content Lists associated with this entity

            Filtering Type: `object`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        products:
          description: |-
            Products sold by this entity

            All strings must be non-empty when trimmed of whitespace.



            Array must be ordered.

            Array may have a maximum of 100 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * financialProfessional
               * location
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        questionsAndAnswers:
          type: boolean
          description: |-
            Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
        rankTrackingCompetitors:
          description: |-
            Information about the competitors whose search performance you would like to compare to your own


            Array must be ordered.

            Array may have a maximum of 5 elements.


            Filtering Type: `list of object`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            required:
              - name
              - website
            additionalProperties: false
            type: object
            properties:
              name:
                minLength: 0
                maxLength: 100
                type: string
                description: |-
                  A name of a competitor


                  Cannot Include:
                  * HTML markup

                  Filtering Type: `text`
              website:
                minLength: 0
                maxLength: 255
                format: uri
                type: string
                description: |-
                  The business website of a competitor


                  Cannot Include:
                  * common domain names, e.g., google.com, youtube.com, etc.

                  Filtering Type: `text`
            description: 'Filtering Type: `object`'
        rankTrackingEnabled:
          type: boolean
          description: |-
            Indicates whether Rank Tracking is enabled

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
        rankTrackingFrequency:
          enum:
            - WEEKLY
            - MONTHLY
            - QUARTERLY
          type: string
          description: |-
            How often we send search queries to track your search performance

            Filtering Type: `option`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
        rankTrackingQueryTemplates:
          description: |-
            The ways in which your keywords will be arranged in the search queries we use to track your performance


            Array must have a minimum of 2 elements.

            Array may have a maximum of 4 elements.


            Filtering Type: `list of option`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            enum:
              - KEYWORD
              - KEYWORD_ZIP
              - KEYWORD_CITY
              - KEYWORD_IN_CITY
              - KEYWORD_NEAR_ME
              - KEYWORD_CITY_STATE
            type: string
            description: 'Filtering Type: `option`'
        rankTrackingSites:
          uniqueItems: true
          type: array
          items:
            enum:
              - GOOGLE_DESKTOP
              - GOOGLE_MOBILE
              - BING_DESKTOP
              - BING_MOBILE
              - YAHOO_DESKTOP
              - YAHOO_MOBILE
            type: string
            description: 'Filtering Type: `option`'
          description: |-
            The search engines that we will use to track your performance

            Filtering Type: `list of option`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
        reservationUrl:
          additionalProperties: false
          type: object
          properties:
            displayUrl:
              minLength: 0
              maxLength: 2000
              format: uri
              type: string
              description: |-
                The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.

                Must be a valid URL and be specified along with **`reservationUrl.url`**.

                Filtering Type: `text`
            preferDisplayUrl:
              type: boolean
              description: |-
                If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.

                Filtering Type: `boolean`
            url:
              minLength: 0
              maxLength: 2000
              format: uri
              type: string
              description: |-
                A valid URL used to make reservations at this entity

                Filtering Type: `text`
          description: |-
            Information about the URL consumers can visit to make reservations at this entity

            Filtering Type: `object`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        restaurantCount:
          multipleOf: 1
          minimum: 0
          type: number
          description: |-
            The number of restaurants the entity has.

            Filtering Type: `integer`

            ```
            Eligible For: 
               * hotel
            ```
        reviewGenerationUrl:
          minLength: 0
          type: string
          description: |-
            The URL given Review Invitation emails where consumers can leave a review about the entity

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        reviewResponseConversationEnabled:
          type: boolean
          description: |-
            Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        roomCount:
          multipleOf: 1
          minimum: 0
          type: number
          description: |-
            The number of rooms the entity has.

            Filtering Type: `integer`

            ```
            Eligible For: 
               * hotel
            ```
        roomService:
          enum:
            - ROOM_SERVICE_AVAILABLE
            - ROOM_SERVICE_AVAILABLE_24_HOURS
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers room service.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        routableCoordinate:
          additionalProperties: false
          type: object
          properties:
            latitude:
              minimum: -90
              maximum: 90
              type: number
              description: 'Filtering Type: `float`'
            longitude:
              minimum: -180
              maximum: 180
              type: number
              description: 'Filtering Type: `float`'
          description: |-
            Destination coordinates to use for driving directions to the entity, as provided by you

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        salon:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a salon.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        sauna:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a sauna.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        scuba:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers scuba diving.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        selfParking:
          enum:
            - SELF_PARKING_AVAILABLE
            - SELF_PARKING_AVAILABLE_FOR_FREE
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers self parking services.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        seniorHours:
          additionalProperties: false
          type: object
          properties:
            friday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the senior hours are "closed" on Friday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            holidayHours:
              description: |-

                **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.



                Array must be ordered.


                Filtering Type: `list of object`
              uniqueItems: true
              type: array
              items:
                required:
                  - date
                additionalProperties: false
                type: object
                properties:
                  date:
                    format: date
                    type: string
                    description: |-
                      Date on which the holiday hours will be in effect. Cannot be in the past.


                      Date must be on or after 1970-01-01
                      Date must be before or on 2038-01-01

                      Filtering Type: `date`
                  isClosed:
                    type: boolean
                    description: |-
                      Indicates if the senior hours are "closed" on on the given date.

                      Filtering Type: `boolean`
                  isRegularHours:
                    type: boolean
                    description: |-
                      Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.

                      Filtering Type: `boolean`
                  openIntervals:
                    uniqueItems: false
                    type: array
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        end:
                          format: time
                          type: string
                          description: |-
                            The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                        start:
                          format: time
                          type: string
                          description: |-
                            The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                      description: 'Filtering Type: `object`'
                    description: |-
                      Contains the time intervals for the Entity's senior hours on the specified date.

                      Filtering Type: `list of object`
                description: 'Filtering Type: `object`'
            monday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the senior hours are "closed" on Monday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            reopenDate:
              format: date
              type: string
              description: |-

                Date must be on or after 1970-01-01
                Date must be before or on 2038-01-01

                Filtering Type: `date`
            saturday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the senior hours are "closed" on Saturday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            sunday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the senior hours are "closed" on Sunday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            thursday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the senior hours are "closed" on Thursday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            tuesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the senior hours are "closed" on Tuesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            wednesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the senior hours are "closed" on Wednesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
          description: |-
            Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.

            Each day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
            Similarly, holiday senior hours are represented by the `holidayHours` sub-field.
            Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
            SPECIAL CASES:
            * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
            * To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.
            * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.

            Filtering Type: `hours`

            ```
            Eligible For: 
               * location
               * restaurant
            ```
        serviceArea:
          additionalProperties: false
          type: object
          properties:
            places:
              description: |-
                A list of places served by the entity, where each place is either:
                 - a postal code, or
                 - the name of a city.



                Array must be ordered.

                Array may have a maximum of 200 elements.


                Filtering Type: `list of text`
              uniqueItems: true
              type: array
              items:
                minLength: 0
                maxLength: 100
                type: string
                description: 'Filtering Type: `text`'
          description: |-
            Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.

            **Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites.

            Filtering Type: `object`

            ```
            Eligible For: 
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        serviceAreaPlaces:
          description: |-
            Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.
            **Only for Google Business Profile and Bing:** Currently, **serviceArea** is only supported by Google Business Profile and Bing and will not affect your listings on other sites.


            Array may have a maximum of 200 elements.


            Filtering Type: `list of object`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            additionalProperties: false
            type: object
            properties:
              name:
                minLength: 0
                maxLength: 100
                type: string
                description: 'Filtering Type: `text`'
              type:
                enum:
                  - POSTAL_CODE
                  - REGION
                  - COUNTY
                  - CITY
                  - SUBLOCALITY
                type: string
                description: 'Filtering Type: `option`'
            description: 'Filtering Type: `object`'
        services:
          description: |-
            Services offered by this entity

            All strings must be non-empty when trimmed of whitespace.



            Array must be ordered.

            Array may have a maximum of 100 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        smokeFreeProperty:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates if the entity is smoke free.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        snorkeling:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers snorkeling.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        socialHour:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers a social hour.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        spa:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a spa.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        specialities:
          description: |-
            Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)

            All strings must be non-empty when trimmed of whitespace.



            Array must be ordered.

            Array may have a maximum of 100 elements.

            Array item description:

            >Cannot Include:
            >* HTML markup

            Filtering Type: `list of text`

            ```
            Eligible For: 
               * financialProfessional
               * location
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            minLength: 0
            maxLength: 100
            type: string
            description: |-

              Cannot Include:
              * HTML markup

              Filtering Type: `text`
        tableService:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a sit-down restaurant.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        takeoutHours:
          additionalProperties: false
          type: object
          properties:
            friday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the takeout hours are "closed" on Friday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            holidayHours:
              description: |-

                **NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.



                Array must be ordered.


                Filtering Type: `list of object`
              uniqueItems: true
              type: array
              items:
                required:
                  - date
                additionalProperties: false
                type: object
                properties:
                  date:
                    format: date
                    type: string
                    description: |-
                      Date on which the holiday hours will be in effect. Cannot be in the past.


                      Date must be on or after 1970-01-01
                      Date must be before or on 2038-01-01

                      Filtering Type: `date`
                  isClosed:
                    type: boolean
                    description: |-
                      Indicates if the takeout hours are "closed" on on the given date.

                      Filtering Type: `boolean`
                  isRegularHours:
                    type: boolean
                    description: |-
                      Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.

                      Filtering Type: `boolean`
                  openIntervals:
                    uniqueItems: false
                    type: array
                    items:
                      additionalProperties: false
                      type: object
                      properties:
                        end:
                          format: time
                          type: string
                          description: |-
                            The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                        start:
                          format: time
                          type: string
                          description: |-
                            The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                            Filtering Type: `time`
                      description: 'Filtering Type: `object`'
                    description: |-
                      Contains the time intervals for which the Entity is open for takeout on the specified date.

                      Filtering Type: `list of object`
                description: 'Filtering Type: `object`'
            monday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the takeout hours are "closed" on Monday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            reopenDate:
              format: date
              type: string
              description: |-

                Date must be on or after 1970-01-01
                Date must be before or on 2038-01-01

                Filtering Type: `date`
            saturday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the takeout hours are "closed" on Saturday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            sunday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the takeout hours are "closed" on Sunday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            thursday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the takeout hours are "closed" on Thursday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            tuesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the takeout hours are "closed" on Tuesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
            wednesday:
              additionalProperties: false
              type: object
              properties:
                isClosed:
                  type: boolean
                  description: |-
                    Indicates if the takeout hours are "closed" on Wednesday.

                    Filtering Type: `boolean`
                openIntervals:
                  uniqueItems: false
                  type: array
                  items:
                    additionalProperties: false
                    type: object
                    properties:
                      end:
                        format: time
                        type: string
                        description: |-
                          The end time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                      start:
                        format: time
                        type: string
                        description: |-
                          The start time of the interval in `hh:mm` format (e.g., `"06:30"`, `"17:00"`).

                          Filtering Type: `time`
                    description: 'Filtering Type: `object`'
                  description: |-
                    Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, "openIntervals" cannot be provided in an update.

                    Filtering Type: `list of object`
              description: 'Filtering Type: `object`'
          description: |-
            Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.

            Each day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.
            Similarly, holiday takeout hours are represented by the `holidayHours` sub-field.
            Setting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.
            SPECIAL CASES:
            * To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.
            * To indicate that an Entity has split hours on a specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply two or more `openIntervals` values with non-overlapping sets of hours.
            * If you are providing `openIntervals`, you may not set `isClosed` to true for that day.

            Filtering Type: `hours`

            ```
            Eligible For: 
               * location
               * restaurant
            ```
        tennis:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has tennis courts.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        thermalPool:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a thermal pool.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        ticketAvailability:
          enum:
            - IN_STOCK
            - SOLD_OUT
            - PRE_ORDER
            - UNSPECIFIED
          type: string
          description: |-
            Information about the availability of tickets for the event

            Filtering Type: `option`

            ```
            Eligible For: 
               * event
            ```
        ticketPriceRange:
          additionalProperties: false
          type: object
          properties:
            currencyCode:
              minLength: 0
              type: string
              description: |-
                Three letter currency code (ISO standard)

                Filtering Type: `text`
            maxValue:
              pattern: ^\d*\.?\d*$
              type: string
              description: |-
                Maximum ticket price

                Filtering Type: `decimal`
            minValue:
              pattern: ^\d*\.?\d*$
              type: string
              description: |-
                Minimum ticket price

                Filtering Type: `decimal`
          description: |-
            Contains the price range for the event

            Filtering Type: `object`

            ```
            Eligible For: 
               * event
            ```
        ticketSaleDateTime:
          format: date-time
          type: string
          description: |-
            The date/time tickets are available for sale (local time)

            Filtering Type: `datetime`

            ```
            Eligible For: 
               * event
            ```
        ticketUrl:
          minLength: 0
          format: uri
          type: string
          description: |-
            URL to purchase tickets for the event (if ticketed)

            Filtering Type: `text`

            ```
            Eligible For: 
               * event
            ```
        time:
          additionalProperties: false
          type: object
          properties:
            end:
              format: date-time
              type: string
              description: |-
                End date/time of the event, in local time (see timezone field)
                Standard ISO 8601 datetime without timezone
                Format: `YYYY-MM-DDThh:mm`


                Filtering Type: `datetime`
            start:
              format: date-time
              type: string
              description: |-
                Start date/time of the event, in local time (see timezone field)
                Standard ISO 8601 datetime without timezone
                Format: `YYYY-MM-DDThh:mm`


                Filtering Type: `datetime`
          description: |-
            Contains the start/end times for the event

            Filtering Type: `object`

            ```
            Eligible For: 
               * event
            ```
        timeZoneUtcOffset:
          minLength: 0
          type: string
          description: |-
            Represents the time zone offset of the entity from UTC, in `±hh:mm` format.

            For example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.

            If the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.

            If the entity is in UTC time, the offset will be `+00:00`.


            ```
            Eligible For: 
               * atm
               * event
               * faq
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * job
               * location
               * restaurant
            ```
        tikTokUrl:
          minLength: 0
          type: string
          description: URL for your TikTok profile, format should be https://www.tiktok.com/yourUsername
        timezone:
          minLength: 0
          type: string
          description: |-
            The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `"America/New_York"`

            Filtering Type: `option`

            ```
            Eligible For: 
               * atm
               * board
               * card
               * contactCard
               * event
               * faq
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * helpArticle
               * hotel
               * hotelRoomType
               * job
               * location
               * organization
               * product
               * restaurant
            ```
        tollFreePhone:
          minLength: 0
          type: string
          description: |-
            Must be a valid phone number.

            If the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        treadmill:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a treadmill.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        ttyPhone:
          minLength: 0
          type: string
          description: |-
            Must be a valid phone number.

            If the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.

            Filtering Type: `text`

            ```
            Eligible For: 
               * atm
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        turndownService:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers turndown service.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        twitterHandle:
          minLength: 0
          maxLength: 15
          type: string
          description: |-
            Valid Twitter handle for the entity without the leading "@" (e.g., `JohnSmith`)

            If you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.

            Filtering Type: `text`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
        uberLink:
          required:
            - presentation
          additionalProperties: false
          type: object
          properties:
            presentation:
              enum:
                - BUTTON
                - LINK
              type: string
              description: |-
                Indicates whether the embedded Uber link for this entity appears as text or a button

                When consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.

                Filtering Type: `option`
            text:
              minLength: 0
              maxLength: 100
              type: string
              description: |-
                The text of the embedded Uber link

                Default is `Ride there with Uber`.

                **NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.

                Filtering Type: `text`
          description: |-
            Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear

            Filtering Type: `object`

            ```
            Eligible For: 
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        uberTripBranding:
          required:
            - text
            - url
            - description
          additionalProperties: false
          type: object
          properties:
            description:
              minLength: 0
              maxLength: 150
              type: string
              description: |-
                A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.

                **NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.

                Filtering Type: `text`
            text:
              minLength: 0
              maxLength: 28
              type: string
              description: |-
                The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)

                **NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.

                Filtering Type: `text`
            url:
              minLength: 0
              format: uri
              type: string
              description: |-
                The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.

                **NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.

                Filtering Type: `text`
          description: |-
            Information about the call-to-action consumers will see in the Uber app during a trip to your entity

            Filtering Type: `object`

            ```
            Eligible For: 
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        valetParking:
          enum:
            - VALET_PARKING_AVAILABLE
            - VALET_PARKING_AVAILABLE_FOR_FREE
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers valet parking services.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        validThrough:
          format: date-time
          type: string
          description: |-
            The date this entity is valid through.

            Filtering Type: `datetime`

            ```
            Eligible For: 
               * job
            ```
        vendingMachine:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a vending machine.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        venueName:
          minLength: 0
          type: string
          description: |-
            Name of the venue where the event is being held

            Filtering Type: `text`

            ```
            Eligible For: 
               * event
            ```
        videos:
          description: |-
            Valid YouTube URLs for embedding a video on some publisher sites

            **NOTE:** Currently, only the first URL in the Array appears in your listings.



            Array must be ordered.


            Filtering Type: `list of object`

            ```
            Eligible For: 
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * hotelRoomType
               * location
               * organization
               * product
               * restaurant
            ```
          uniqueItems: true
          type: array
          items:
            required:
              - video
            additionalProperties: false
            type: object
            properties:
              description:
                minLength: 0
                maxLength: 140
                type: string
                description: |-

                  Cannot Include:
                  * HTML markup

                  Filtering Type: `text`
              video:
                required:
                  - url
                additionalProperties: false
                type: object
                properties:
                  url:
                    minLength: 0
                    format: uri
                    type: string
                    description: 'Filtering Type: `text`'
                description: 'Filtering Type: `object`'
            description: 'Filtering Type: `object`'
        wadingPool:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a wading pool.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        wakeUpCalls:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers wake up call services.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        walkableCoordinate:
          additionalProperties: false
          type: object
          properties:
            latitude:
              minimum: -90
              maximum: 90
              type: number
              description: 'Filtering Type: `float`'
            longitude:
              minimum: -180
              maximum: 180
              type: number
              description: 'Filtering Type: `float`'
          description: |-
            Destination coordinates to use for walking directions to the entity, as provided by you

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        waterPark:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a water park.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        waterSkiing:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers water skiing.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        watercraft:
          enum:
            - WATERCRAFT_RENTALS
            - WATERCRAFT_RENTALS_FOR_FREE
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity offers any kind of watercrafts.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        waterslide:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a water slide.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        wavePool:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a wave pool.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        websiteUrl:
          additionalProperties: false
          type: object
          properties:
            displayUrl:
              minLength: 0
              maxLength: 2000
              format: uri
              type: string
              description: |-
                The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.

                Must be a valid URL and be specified along with **`websiteUrl.url`**.

                Filtering Type: `text`
            preferDisplayUrl:
              type: boolean
              description: |-
                If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.

                Filtering Type: `boolean`
            url:
              minLength: 0
              maxLength: 2000
              format: uri
              type: string
              description: |-
                A valid URL for this entity's website

                Filtering Type: `text`
          description: |-
            Information about the website for this entity

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * contactCard
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * organization
               * restaurant
            ```
        weightMachine:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has a weight machine.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        wheelchairAccessible:
          enum:
            - 'YES'
            - 'NO'
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates if the entity is wheelchair accessible.

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        wifiAvailable:
          enum:
            - WIFI_AVAILABLE
            - WIFI_AVAILABLE_FOR_FREE
            - NOT_APPLICABLE
          type: string
          description: |-
            Indicates whether the entity has WiFi available

            Filtering Type: `option`

            ```
            Eligible For: 
               * hotel
            ```
        workRemote:
          type: boolean
          description: |-
            Indicates whether the job is remote.

            Filtering Type: `boolean`

            ```
            Eligible For: 
               * job
            ```
        yearEstablished:
          multipleOf: 1
          minimum: 1000
          maximum: 2028
          type: number
          description: |-
            The year the entity was established.

            Filtering Type: `integer`

            ```
            Eligible For: 
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        yearLastRenovated:
          multipleOf: 1
          minimum: 1000
          maximum: 2028
          type: number
          description: |-
            The most recent year the entity was partially or completely renovated.

            Filtering Type: `integer`

            ```
            Eligible For: 
               * hotel
            ```
        yextDisplayCoordinate:
          additionalProperties: false
          type: object
          properties:
            latitude:
              minimum: -90
              maximum: 90
              type: number
              description: 'Filtering Type: `float`'
            longitude:
              minimum: -180
              maximum: 180
              type: number
              description: 'Filtering Type: `float`'
          description: |-
            Coordinates where the map pin for the entity should be displayed, as calculated by Yext

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * job
               * location
               * restaurant
            ```
        yextDropoffCoordinate:
          additionalProperties: false
          type: object
          properties:
            latitude:
              minimum: -90
              maximum: 90
              type: number
              description: 'Filtering Type: `float`'
            longitude:
              minimum: -180
              maximum: 180
              type: number
              description: 'Filtering Type: `float`'
          description: |-
            Coordinates of where consumers can be dropped off at the entity, as calculated by Yext

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        yextPickupCoordinate:
          additionalProperties: false
          type: object
          properties:
            latitude:
              minimum: -90
              maximum: 90
              type: number
              description: 'Filtering Type: `float`'
            longitude:
              minimum: -180
              maximum: 180
              type: number
              description: 'Filtering Type: `float`'
          description: |-
            Coordinates of where consumers can be picked up at the entity, as calculated by Yext

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        yextRoutableCoordinate:
          additionalProperties: false
          type: object
          properties:
            latitude:
              minimum: -90
              maximum: 90
              type: number
              description: 'Filtering Type: `float`'
            longitude:
              minimum: -180
              maximum: 180
              type: number
              description: 'Filtering Type: `float`'
          description: |-
            Destination coordinates to use for driving directions to the entity, as calculated by Yext

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        yextWalkableCoordinate:
          additionalProperties: false
          type: object
          properties:
            latitude:
              minimum: -90
              maximum: 90
              type: number
              description: 'Filtering Type: `float`'
            longitude:
              minimum: -180
              maximum: 180
              type: number
              description: 'Filtering Type: `float`'
          description: |-
            Destination coordinates to use for walking directions to the entity, as calculated by Yext

            Filtering Type: `object`

            ```
            Eligible For: 
               * atm
               * event
               * financialProfessional
               * healthcareFacility
               * healthcareProfessional
               * hotel
               * location
               * restaurant
            ```
        youTubeChannelUrl:
          minLength: 0
          type: string
          description: URL for your YouTube channel, format should be https://www.youtube.com/c/yourUsername
    ChangedFields:
      type: object
      properties:
        language:
          type: string
          description: The ISO 3166-1 alpha-2 code of the changed field's profile language.
        fieldNames:
          type: array
          items:
            type: string
            description: The names of the fields that were changed.
    LocationType:
      type: string
      enum:
        - LOCATION
        - HEALTHCARE_PROFESSIONAL
        - HEALTHCARE_FACILITY
        - RESTAURANT
        - ATM
    Photo:
      type: object
      properties:
        url:
          type: string
          description: |
            Valid URL to image. Accepted formats: .jpg, .gif, .png.

            While updating this field, if the image could not be downloaded, or if its URL is invalid, the image will be ignored. The success response will contain a warning message explaining why the image was not stored in the system.
        sourceUrl:
          type: string
          readOnly: true
          description: |
            The URL the image was uploaded from, if applicable. Note that this URL may not currently be valid.
        description:
          type: string
          description: Image description.
        details:
          type: string
          description: Image details.
        alternateText:
          type: string
          description: The alternate text to be used for accessibility purposes.
        width:
          type: integer
          readOnly: true
          description: Original photo width.
        height:
          type: integer
          readOnly: true
          description: Original photo height.
        derivatives:
          type: array
          readOnly: true
          items:
            type: object
            properties:
              url:
                type: string
                readOnly: true
                description: |-
                  The URL to derivative image.
                  Derivative images are alternate versions of the original image (e.g., smaller versions used to improve page-load times on your site). They are primarily used with our Pages product.
              width:
                type: integer
                readOnly: true
                description: Derivative photo width.
              height:
                type: integer
                readOnly: true
                description: Derivative photo height.
            description: If no derivative photos are available, this attribute is omitted rather than empty.
    Location:
      type: object
      properties:
        id:
          type: string
          maxLength: 50
          description: Primary key. Unique alphanumeric (Latin-1) ID assigned by the Customer.
        uid:
          type: string
          readOnly: true
          description: A static globally unique id for the location. Note that this field cannot be used in place of the location id in API calls to get or update location information.
        accountId:
          type: string
          maxLength: 50
          description: Must refer to an **account.id** that already exists.
        timestamp:
          type: integer
          format: int64
          readOnly: true
          description: |
            The timestamp of the most recent change to this location record.  Will be ignored when the client is saving location data to Yext.

            **NOTE:** The timestamp may change even if observable fields stay the same.
        timezone:
          readOnly: true
          description: |
            The timezone of the location
          minLength: 0
          type: string
        locationType:
          $ref: '#/components/schemas/LocationType'
        locationName:
          type: string
          maxLength: 100
          description: |
            Cannot include:
            * inappropriate language
            * HTML markup or entities
            * a URL or domain name
            * a phone number
            * control characters ([\x00-\x1F\x7F])

            Should be in appropriate letter case (e.g., not in all capital letters)
        firstName:
          type: string
          description: |
            The first name of the healthcare professional

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.
        middleName:
          type: string
          description: |
            The middle name of the healthcare professional

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.
        lastName:
          type: string
          description: |
            The last name of the healthcare professional

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.
        officeName:
          type: string
          description: |
            The name of the office where the healthcare professional works, if different from **locationName**

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.
        gender:
          type: string
          description: |
            The gender of the healthcare professional

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.
          enum:
            - FEMALE
            - F
            - MALE
            - M
            - UNSPECIFIED
        npi:
          type: string
          description: |
            The National Provider Identifier (NPI) of the healthcare provider

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.
        address:
          type: string
          maxLength: 255
          description: |
            Must be a valid address

            Cannot be a P.O. Box
        address2:
          type: string
          maxLength: 255
          description: Cannot be a P.O. Box
        suppressAddress:
          type: boolean
          description: If true, do not show street address on listings. Defaults to false.
        displayAddress:
          type: string
          maxLength: 255
          description: |
            Provides additional information to help consumers get to the location. This string appears along with the location's address (e.g., In Menlo Mall, 3rd Floor).

            It may also be used in conjunction with a hidden address (i.e., when **suppressAddress** is true) to give consumers information about where the location is found (e.g., Servicing the New York area).

            Cannot be a P.O. Box
        city:
          type: string
          maxLength: 80
        state:
          type: string
          maxLength: 80
          description: |
            For US locations, the two-character code of the location’s state, or DC for the District of Columbia
            For non-US locations, the name of the location’s province / region / state
        sublocality:
          type: string
          maxLength: 255
          description: The name of the location's sublocality.
        zip:
          type: string
          maxLength: 10
          description: The location's postal code. For US locations, this field contains the five- or nine-digit ZIP code (the hyphen is optional). Validations are only done on `zip` if `countryCode` is US.
        countryCode:
          type: string
          maxLength: 2
          description: The two-character ISO 3166-1 code of the location's country or region. If omitted, US is used.
        serviceArea:
          type: object
          properties:
            radius:
              type: number
              format: double
              description: |
                The distance around the location that the business serves

                **NOTE:** This field is no longer supported by Google Business Profile and is deprecated. We no longer accept or store values for **`radius`**.
            unit:
              type: string
              description: |
                The unit in which radius is measured.

                **NOTE:** This field is no longer supported by Google Business Profile and is deprecated. We no longer accept or store values for **`units`**.
            places:
              type: array
              items:
                type: string
              description: |
                A list of places served by the location, where each place is either:
                * a postal code, or
                * the name of a city.
          description: |
            Area that is served by this location. It may be specified as a radius from the location's address or as a list of cities and/or postal codes.

            **Only for Google Business Profile:** Currently, **serviceArea** is only supported by Google Business Profile and will not affect your listings on other sites.
        phone:
          type: string
          description: Must be a valid phone number.
        isPhoneTracked:
          type: boolean
          description: |
            Set to true if the number listed in **phone** is a tracked phone number.

            **NOTE:** When updating **isPhoneTracked**, you must provide a value for **phone** in the same request.
        localPhone:
          type: string
          description: |
            Must be a valid, non-toll-free phone number.

            Required if:
            * **isPhoneTracked** is true and the non-tracked number is a toll-free number, **OR**
            * **isPhoneTracked** is false and **phone** is a toll-free number
        alternatePhone:
          type: string
          description: Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits.
        faxPhone:
          type: string
          description: Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits.
        mobilePhone:
          type: string
          description: Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits.
        tollFreePhone:
          type: string
          description: Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits.
        ttyPhone:
          type: string
          description: Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits.
        categoryIds:
          type: array
          items:
            type: string
          description: |
            Yext Category IDs. A Location must have at least one and at most 10 Categories.

            IDs must be valid and selectable (i.e., cannot be parent categories).

            **NOTE:** The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.
        featuredMessage:
          type: string
          maxLength: 50
          description: |
            The Featured Message. Default: Call today!

            Cannot include:
            * inappropriate language
            * HTML markup
            * a URL or domain name
            * a phone number
            * control characters ([\x00-\x1F\x7F])
            * insufficient spacing

            If you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.
        featuredMessageUrl:
          type: string
          maxLength: 255
          description: Valid URL to which the Featured Message is linked
        websiteUrl:
          type: string
          maxLength: 255
          description: |
            The URL of the location's website. This URL will be shown on your listings unless you specify a value for `displayWebsiteUrl`.

            Must be a valid URL and is required whenever `displayWebsiteUrl` is specified.
        displayWebsiteUrl:
          type: string
          maxLength: 255
          description: |
            The URL that is shown on your listings in place of `websiteUrl`. You can use `displayWebsiteUrl` to display a short, memorable web address that redirects consumers to the URL given in `websiteUrl`.

            Must be a valid URL and be specified along with `websiteUrl`.
        reservationUrl:
          type: string
          maxLength: 255
          description: A valid URL used for reservations at this location.
        displayReservationUrl:
          type: string
          maxLength: 255
          description: |
            The URL that is shown on your listings in place of `reservationUrl`. You can use `displayReservationUrl` to display a short, memorable web address that redirects consumers to the URL given in `reservationUrl`.

            Must be a valid URL and be specified along with `reservationUrl`.
        menuUrl:
          type: string
          maxLength: 255
          description: The URL of the location's menu.
        displayMenuUrl:
          type: string
          maxLength: 255
          description: |
            The URL that is shown on your listings in place of `menuUrl`. You can use `displayMenuUrl` to display a short, memorable web address that redirects consumers to the URL given in `menuUrl`.

            Must be a valid URL and be specified along with `menuUrl`.
        orderUrl:
          type: string
          maxLength: 255
          description: The URL used to place orders that will be fulfilled at the location.
        displayOrderUrl:
          type: string
          maxLength: 255
          description: |
            The URL that is shown on your listings in place of `orderUrl`. You can use `displayOrderUrl` to display a short, memorable web address that redirects consumers to the URL given in `orderUrl`.

            Must be a valid URL and be specified along with `orderUrl`.
        hours:
          type: string
          maxLength: 255
          description: |
            Hours should be submitted as a comma-separated list of days, where each day's hours are specified as follows:

            d:oh:om:ch:cm
            * d = day of the week –
              * 1 – Sunday
              * 2 – Monday
              * 3 – Tuesday
              * 4 – Wednesday
              * 5 – Thursday
              * 6 – Friday
              * 7 – Saturday
            * oh:om = opening time in 24-hour format
            * ch:cm = closing time in 24-hour format

            Times with single-digit hours (e.g., 9 AM) can be submitted with or without a leading zero (9:00 or 09:00).

            **Example:** open 9 AM to 5 PM Monday and Tuesday, open 10 AM to 4 PM on Saturday – 2:9:00:17:00,3:9:00:17:00,7:10:00:16:00

            SPECIAL CASES:
            * To indicate that a location is open 24 hours on a specific day, set 00:00 as both the opening and closing time for that day.
              * **Example:** open all day on Saturdays – 7:00:00:00:00
            * To indicate that a location is closed on a specific day, omit that day from the list or set it as closed ("closed" is not case sensitive).
              * **Example:** closed on Sundays – 1:closed
              * **NOTE:** If a location is closed seven days a week, set at least one day to closed. Otherwise, **hours** is an empty string, and we assume you are not submitting hours information for that location.
            * To indicate that a location has split hours on a specific day, submit a set of hours for each block of time the location is open.
              * **Example:** open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM on Mondays – 2:9:00:12:00,2:13:00:17:00

            **NOTE:** To set hours for specific days of the year rather than days of the week, use **holidayHours**.
        additionalHoursText:
          type: string
          maxLength: 255
          description: Additional information about business hours that does not fit in **hours** (e.g., Closed during the winter)
        holidayHours:
          type: array
          items:
            type: object
            properties:
              hours:
                type: string
                description: |
                  Special opening and closing times in 24-hour format (OH:OM:CH:CM, where OH:OM is the opening time and CH:CM is the closing time).

                  Times with single-digit hours (e.g., 9 AM) can be submitted with or without a leading zero (9:00 or 09:00).

                  Examples:
                  * 9:00:15:00 — Opening at 9:00 AM, closing at 3:00 PM
                  * "" (empty string) — Closed all day
                  * 0:00:0:00 or 0:00:23:59 — Open 24 hours
                  * 9:00:15:00,17:00:19:00 — Split hours: open from 9:00 AM to 3:00 PM and again from 5:00 PM to 7:00 PM

                  **NOTE:** If **isRegularHours** is set to true, we will ignore this field.
              date:
                type: string
                format: date
                description: The date on which the holiday hours will be in effect
              isRegularHours:
                type: boolean
                default: false
                description: Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.
          description: |
            Holiday hours for this location.

            **NOTE:** hours must be set in order for holidayHours to appear on your listings)
        description:
          type: string
          minLength: 10
          maxLength: 5000
        conditionsTreated:
          type: array
          items:
            type: string
          description: |
            A list of the conditions treated by the healthcare provider

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.
        certifications:
          type: array
          items:
            type: string
          description: |
            A list of the certifications held by the healthcare professional

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.
        educationList:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: The kind of education or training completed
                enum:
                  - FELLOWSHIP
                  - INTERNSHIP
                  - MEDICAL_SCHOOL
                  - RESIDENCY
              institutionName:
                type: string
                description: The name of the institution where the healthcare professional received the education or training
              yearCompleted:
                type: string
                description: The year the healthcare professional completed the education or training
          description: |
            A list of the types of education and training completed by the healthcare professional

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.
        degrees:
          type: array
          items:
            type: string
          description: |
            A list of the degrees earned by the healthcare professional

            **NOTE:**  This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.

            Valid values:

            * `ANP` (Adult Nurse Practitioner)
            * `APN` (Advanced Practice Nurse)
            * `APRN` (Advanced Practice Registered Nurse)
            * `ARNP` (Advanced Registered Nurse Practitioner)
            * `CNM` (Certified Nurse Midwife)
            * `CNP` (Certified Nurse Practitioner)
            * `CNS` (Clinical Nurse Specialist)
            * `CPNP` (Certified Pediatric Nurse Practitioner)
            * `CRNA` (Certified Registered Nurse Anesthetist)
            * `CRNP` (Certified Registered Nurse Practitioner)
            * `DC` (Doctor of Chiropractic)
            * `DDS` (Doctor of Dental Surgery)
            * `DMD` (Doctor of Dental Medicine)
            * `DO` (Doctor of Osteopathy)
            * `DPM` (Doctor of Podiatric Medicine)
            * `DVM` (Doctor of Veterinary Medicine)
            * `FNP` (Family Nurse Practitioner)
            * `GNP` (Geriatric Nurse Practitioner)
            * `LAC` (Licensed Acupuncturist)
            * `LPN` (Licensed Practical Nurse)
            * `MD` (Medical Doctor)
            * `ND` (Naturopathic Doctor)
            * `NP` (Nurse Practitioner)
            * `OD` (Doctor of Optometry)
            * `PA` (Physician Assistant)
            * `PAC` (Physician Assistant Certified)
            * `PHARMD` (Doctor of Pharmacy)
            * `PHD` (Doctor of Philosophy)
            * `PNP` (Pediatric Nurse Practitioner)
            * `VMD` (Veterinary Medical Doctor)
            * `WHNP` (Womens Health Nurse Practitioner)
        admittingHospitals:
          type: array
          items:
            type: string
          description: |
            A list of hospitals where the healthcare professional admits patients

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.
        acceptingNewPatients:
          type: boolean
          description: |
            Indicates whether the healthcare provider is accepting new patients

            Default is true

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.
        closed:
          type: object
          properties:
            isClosed:
              type: boolean
              description: Indicates whether the location is closed
          description: |
            A set of field-value pairs indicating whether the location is closed and, if it is closed, the date of its closing.

            **NOTE:** This field does not appear in the GET response unless it has been explicitly set in a PUT request.
        paymentOptions:
          type: array
          items:
            type: string
          description: |
            The payment methods accepted at this location

            Valid elements depend on the location's country. For US locations, valid elements are:
            * AMERICANEXPRESS
            * CASH
            * CHECK
            * DINERSCLUB
            * DISCOVER
            * FINANCING
            * INVOICE
            * MASTERCARD
            * TRAVELERSCHECK
            * VISA
            * ANDROIDPAY
            * APPLEPAY
            * SAMSUNGPAY
            * BITCOIN
            * PAYPAL
        insuranceAccepted:
          type: array
          items:
            type: string
          description: |
            A list of insurance policies accepted by the healthcare provider

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.
        logo:
          $ref: '#/components/schemas/Photo'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/Photo'
          description: |
            Up to 50 Photos.

            **NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.
        headshot:
          type: object
          description: |
            A portrait of the healthcare professional

            **NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.
          allOf:
            - $ref: '#/components/schemas/Photo'
        videoUrls:
          type: array
          items:
            type: string
            maxLength: 255
          description: |
            Valid YouTube URLs for embedding a video on some publisher sites.

            **NOTE:** Currently, only the first URL in the Array appears in your listings.
        instagramHandle:
          type: string
          description: Valid Instagram username for the location (e.g., NewCityFiat (without the leading "@"))
        twitterHandle:
          type: string
          maxLength: 15
          description: |-
            Valid Twitter handle for the location (e.g., JohnSmith (without the leading '@')).
            If you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.
        googleWebsiteOverride:
          type: string
          maxLength: 255
          description: |
            The URL you would like to submit to Google Business Profile in place of the one given in **websiteUrl** (if applicable).

            For example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.
        googleCoverPhoto:
          type: object
          description: |
            The cover photo for your business's Google profile

            NOTE: Your cover photo must meet all of the following requirements:
            * have a 16:9 aspect ratio
            * be at least 480 x 270 pixels
            * be no more than 2120 x 1192 pixels
          allOf:
            - $ref: '#/components/schemas/Photo'
        googleProfilePhoto:
          type: object
          description: |
            The profile photo for your business's Google profile

            **NOTE:** Your profile picture must meet all of the following requirements:
            * be a square
            * be at least 250 x 250 pixels
          allOf:
            - $ref: '#/components/schemas/Photo'
        googleAttributes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: |
                  The unique ID Of the Google Business Profile keyword

                  Keywords are determined by the location's primary category (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`).
              optionIds:
                type: array
                items:
                  type: string
                description: |
                  The unique IDs of any options selected for the keyword.

                  Keyword options provide more details on how the keyword applies to the location (e.g., if **`id`** is `has_drive_through`, **`optionIds`** may be `true` or `false`).
          description: |
            The Google Business Profile attributes for this location.
        facebookPageUrl:
          type: string
          maxLength: 255
          description: |
            URL for the location's Facebook Page.

            Valid formats:
            * facebook.com/profile.php?id=[numId]
            * facebook.com/group.php?gid=[numId]
            * facebook.com/groups/[numId]
            * facebook.com/[Name]
            * facebook.com/pages/[Name]/[numId]

            where [Name] is a String and [numId] is an Integer

            If you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.

            **NOTE:** This value is automatically set to the location's Facebook Page URL. You can only manually set **facebookPageUrl** if the location meets one of the following criteria:
            * It is not subscribed to a Listings package that contains Facebook.
            * It is opted out of Facebook.
        facebookCallToAction:
          description: Designates the Facebook Call-to-Action button text and value
          type: object
          properties:
            type:
              description: The action the consumer is being prompted to take by the button's text
              enum:
                - NONE
                - BOOK_NOW
                - CALL_NOW
                - CONTACT_US
                - SEND_MESSAGE
                - USE_APP
                - PLAY_GAME
                - SHOP_NOW
                - SIGN_UP
                - WATCH_VIDEO
                - SEND_EMAIL
                - LEARN_MORE
                - PURCHASE_GIFT_CARDS
                - ORDER_NOW
                - FOLLOW_PAGE
              type: string
            value:
              description: |-
                Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.

                For example, if the user sets the Facebook Call-to-Action as " 'Sign Up' using 'Website URL' " in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.

                The Call-to-Action will have the same behavior if the user sets the value to "Custom Value" in the platform and embeds a field.
              type: string
          additionalProperties: false
        facebookCoverPhoto:
          type: object
          description: |
            The cover photo for your business's Facebook profile

            Displayed as a 851 x 315 pixel image

            You must have a cover photo in order for your listing to appear on Facebook.

            **NOTE:** Your cover photo must be at least 400 pixels wide.
          allOf:
            - $ref: '#/components/schemas/Photo'
        facebookProfilePicture:
          type: object
          description: |
            The profile picture for your business's Facebook profile

            You must have a profile picture in order for your listing to appear on Facebook.

            **NOTE:** Your profile picture must be larger than 180 x 180 pixels.
          allOf:
            - $ref: '#/components/schemas/Photo'
        uberLinkType:
          type: string
          description: |
            Indicates whether the embedded Uber link for this location appears as text or a button

            When consumers click on this link on a mobile device, the Uber app (if installed) will open with your location set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.
          enum:
            - LINK
            - BUTTON
        uberLinkText:
          type: string
          maxLength: 100
          description: |
            The text of the embedded Uber link

            Default is "Ride there with Uber".

            **NOTE:** This field is only available if **uberLinkType** is LINK.
        uberTripBrandingText:
          type: string
          maxLength: 28
          description: |
            The text of the call-to-action that will appear in the Uber app during a trip to your location (e.g., Check out our menu!)

            **NOTE:** If a value for **uberTripBrandingText** is provided, values must also be provided for **uberTripBrandingUrl** and **uberTripBrandingDescription**.
        uberTripBrandingUrl:
          type: string
          description: |
            The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your location.

            **NOTE:** If a value for **uberTripBrandingUrl** is provided, values must also be provided for **uberTripBrandingText** and **uberTripBrandingDescription**.
        uberTripBrandingDescription:
          type: string
          maxLength: 150
          description: |
            A longer description that will appear near the call-to-action in the Uber app during a trip to your location.

            **NOTE:** If a value for **uberTripBrandingDescription** is provided, values must also be provided for **uberTripBrandingText** and **uberTripBrandingUrl**.
        uberEmbedCode:
          type: string
          readOnly: true
          description: The Yext-powered code that can be copied and pasted into the markup of emails or web pages where the embedded Uber link should appear
        uberLink:
          type: string
          readOnly: true
          description: The Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear
        uberLinkRaw:
          type: string
          readOnly: true
          description: |
            The Uber universal link for the location.

            For more information on universal links, see Uber's developer documentation.

            **NOTE**: This field is only available in the LiveAPI and only for US locations.
        yearEstablished:
          type: string
          maxLength: 4
          description: |
            The year that this location was opened, not the number of years it was open

            Minimum of 1000, maximum of current year + 10.
        displayLat:
          type: number
          format: double
          description: |
            Latitude where the map pin should be displayed, as provided by you

            Between -90.0 and 90.0, inclusive
        displayLng:
          type: number
          format: double
          description: |
            Longitude where the map pin should be displayed, as provided by you

            Between -180.0 and 180.0, inclusive
        routableLat:
          type: number
          format: double
          description: |
            Latitude to use for driving directions to the location, as provided by you

            Between -90.0 and 90.0, inclusive
        routableLng:
          type: number
          format: double
          description: |
            Longitude to use for driving directions to the location, as provided by you

            Between -180.0 and 180.0, inclusive
        walkableLat:
          type: number
          format: double
          description: |
            Latitude to use for walking directions to the location, as provided by you

            Between -90.0 and 90.0, inclusive
        walkableLng:
          type: number
          format: double
          description: |
            Longitude to use for walking directions to the location, as provided by you

            Between -180.0 and 180.0, inclusive
        pickupLat:
          type: number
          format: double
          description: |
            Latitude to use for pickup spot for the location, as provided by you

            Between -90.0 and 90.0, inclusive
        pickupLng:
          type: number
          format: double
          description: |
            Longitude to use for pickup spot for the location, as provided by you

            Between -180.0 and 180.0, inclusive
        dropoffLat:
          type: number
          format: double
          description: |
            Latitude to use for drop off spot for the location, as provided by you

            Between -90.0 and 90.0, inclusive
        dropoffLng:
          type: number
          format: double
          description: |
            Longitude to use for drop off spot for the location, as provided by you

            Between -180.0 and 180.0, inclusive
        yextDisplayLat:
          type: number
          format: double
          readOnly: true
          description: |
            Latitude where the map pin should be displayed, as calculated by Yext

            Between -90.0 and 90.0, inclusive
        yextDisplayLng:
          type: number
          format: double
          readOnly: true
          description: |
            Longitude where the map pin should be displayed, as calculated by Yext

            Between -180.0 and 180.0, inclusive
        yextRoutableLat:
          type: number
          format: double
          readOnly: true
          description: |
            Latitude to use for driving directions to the location, as calculated by Yext

            Between -90.0 and 90.0, inclusive
        yextRoutableLng:
          type: number
          format: double
          readOnly: true
          description: |
            Longitude to use for driving directions to the location, as calculated by Yext

            Between -180.0 and 180.0, inclusive
        yextWalkableLat:
          type: number
          format: double
          readOnly: true
          description: |
            Latitude to use for walking directions to the location, as calculated by Yext

            Between -90.0 and 90.0, inclusive
        yextWalkableLng:
          type: number
          format: double
          readOnly: true
          description: |
            Longitude to use for walking directions to the location, as calculated by Yext

            Between -180.0 and 180.0, inclusive
        yextPickupLat:
          type: number
          format: double
          readOnly: true
          description: |
            Latitude to use for pickup spot for the location, as calculated by Yext

            Between -90.0 and 90.0, inclusive
        yextPickupLng:
          type: number
          format: double
          readOnly: true
          description: |
            Longitude to use for pickup spot for the location, as calculated by Yext

            Between -180.0 and 180.0, inclusive
        yextDropoffLat:
          type: number
          format: double
          readOnly: true
          description: |
            Latitude to use for drop off spot for the location, as calculated by Yext

            Between -90.0 and 90.0, inclusive
        yextDropoffLng:
          type: number
          format: double
          readOnly: true
          description: |
            Longitude to use for drop off spot for the location, as calculated by Yext

            Between -180.0 and 180.0, inclusive
        emails:
          type: array
          items:
            type: string
            maxLength: 255
          description: |
            Up to five emails addresses for reaching this location

            Must be valid email addresses
        specialities:
          type: array
          items:
            type: string
            maxLength: 100
          description: |
            Up to 100 specialities (e.g., for food and dining: Chicago style)

            All strings must be non-empty when trimmed of whitespace.
        associations:
          type: array
          items:
            type: string
            maxLength: 100
          description: |
            Up to 100 association memberships relevant to the location (e.g., New York Doctors Association)

            All strings must be non-empty when trimmed of whitespace.
        products:
          type: array
          items:
            type: string
            maxLength: 100
          description: |
            Up to 100 products sold at this location

            All strings must be non-empty when trimmed of whitespace.
        services:
          type: array
          items:
            type: string
            maxLength: 100
          description: |
            Up to 100 services offered at this location

            All strings must be non-empty when trimmed of whitespace.
        brands:
          type: array
          items:
            type: string
            maxLength: 100
          description: |
            Up to 100 brands sold by this location

            All strings must be non-empty when trimmed of whitespace.
        language:
          type: string
          maxLength: 10
          description: |
            Language code of the language in which this location's information is provided. This language is considered the Location's primary language in our system.


            If you would like to provide your Location data in more than one language, you can create a Language Profile for each of these additional (alternate) languages.
        languages:
          type: array
          items:
            type: string
            maxLength: 100
          description: |
            Up to 100 languages spoken at this location.

            All strings must be non-empty when trimmed of whitespace.
        keywords:
          type: array
          items:
            type: string
            maxLength: 100
          description: |
            Up to 100 keywords may be provided

            All strings must be non-empty when trimmed of whitespace.
        menusLabel:
          type: string
          description: Label to be used for this location’s Menus. This label will appear on your location's listings.
        menuIds:
          type: array
          items:
            type: string
          description: IDs of Menus associated with this location.
        bioListsLabel:
          type: string
          description: Label to be used for this location’s Bio lists. This label will appear on your location's listings.
        bioListIds:
          type: array
          items:
            type: string
          description: IDs of Bio lists associated with this location.
        productListsLabel:
          type: string
          description: Label to be used for this location’s Product & Services lists. This label will appear on your location's listings.
        productListIds:
          type: array
          items:
            type: string
          description: IDs of Product lists associated with this location.
        eventListsLabel:
          type: string
          description: Label to be used for this location’s Event lists. This label will appear on your location's listings.
        eventListIds:
          type: array
          items:
            type: string
          description: IDs of Event lists associated with this location.
        folderId:
          type: string
          description: The folder that this location is in. Must be a valid, existing Yext Folder ID
        labelIds:
          type: array
          items:
            type: string
          description: |
            The IDs of the location labels that have been added to this location. Location labels help you identify locations that share a certain characteristic; they do not appear on your location's listings.

            **NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.

            In Locations: Update requests:
            * If the **`v`** parameter is before `20180223`: setting the value of **`labelIds`** to an empty array has no effect on the current value
            * If the **`v`** parameter is `20180223` or after: setting the value of **`labelIds`** to an empty array deletes the current value
        customFields:
          type: object
          additionalProperties:
            type: object
          description: |
            A set of key-value pairs indicating the location's custom fields and their values. The keys are the **`ids`** of the custom fields, and the values are the fields' contents for this location.

            To retrieve a list of custom fields for your account, use the Custom Fields: List endpoint.

            If a field's **`type`** is `SINGLE_OPTION` or `MULTI_OPTION`, the option or options that apply to this location must be represented by their **`key`**s.

            Examples of each type of custom field:

            * BOOLEAN:
                * `{ "9662": "true" }`
            * DAILY_TIMES:
                * `{ "10012": { "dailyTimes": "2:7:00,3:7:00,4:7:00,5:7:00,6:7:00,7:7:00,1:7:00" } }`
            * DATE:
                * `{ "7066": "2016-10-12" }`
            * GALLERY:
                * `{ "7070": [ { "url": "http://a.mktgcdn.com/p/ounkg7aq6Oy029-sRf4CIH64/128x128.jpg" }, { "url": "http://a.mktgcdn.com/p/YkQGqxK8jFBqOlailQ9QIBsgs/1.0000/316x316.png" } ] }`
            * HOURS:
                * `{ "10011": { "hours": "1:7:00:20:00,2:7:00:20:00,3:7:00:20:00,4:7:00:20:00,5:7:00:20:00,6:7:00:20:00,7:7:00:20:00", "additionalHoursText": "Also by appointment" }`
            * LOCATION_LIST:
                * `{ "8098" : [ "locationId1", "locationId2" ] }`
            * MULTILINE_TEXT (up to 4,000 characters):
                * `{ "1592": "Take Route 13 south. Pass Riverrun Reservoir. At the traffic light before the post office, turn right off of Route 13. Pass the library and community center on your right and then pass a diner on your left. Cross over the bridge and at the third intersection, turn left onto Jones Street. We are located on the right side in the middle of the block." }`
            * MULTI_OPTION:
                * `{ "7068": ["2614", "2615"] }` (`"2614"` and `"2615"` are the options' **`key`**s)
            * NUMBER:
                * `{ "7078": "123" }`
            * PHOTO:
                * `{ "7071": { "url": "http://a.mktgcdn.com/p/bRtQXQZP2kEzgy2C8/800x800.jpg", "description": "New storefront", "details": "A picture of the new storefront" } }`
                * `{ "7071": null }` (This setting will clear the existing value of the Photo custom field.)
            * SINGLE_OPTION:
                * `{ "7069": "2617" }` (`"2617"` is the option's **`key`**)
            * TEXT (up to 255 characters):
                * `{ "6157": "Buy One, Get One 50% Off" }`
            * TEXT_LIST:
                * `{ "7072": [ "Item 1", "Item 2", "Item 3" ] }`
            * URL:
                * `{ "9381": "http://www.location.example.com" }`
            * VIDEO:
                * `{ "7077": { "url": "http://www.youtube.com/watch?v=6KQPho" } }`
            * VIDEO_GALLERY:
                * `{ "8452": [ { "url": "http://www.youtube.com/watch?v=B1EC1U" }, { "url": "http://www.youtube.com/watch?v=SkEtnN" } ] }`
        intelligentSearchTrackingEnabled:
          type: boolean
          description: |
            Indicates whether Intelligent Search Tracker is enabled.

            The Intelligent Search Tracker allows you to understand your performance in local search.
        intelligentSearchTrackingFrequency:
          type: string
          enum:
            - WEEKLY
            - MONTHLY
            - QUARTERLY
          description: |
            How often we send search queries to track your search performance.
        locationKeywords:
          type: array
          items:
            type: string
            enum:
              - NAME
              - PRIMARY_CATEGORY
          description: |
            Keywords that we will use to track your search performance. These keywords are based on the location information you've stored in our system.
        customKeywords:
          type: array
          items:
            type: string
          description: |
            Additional keywords you would like us to use when tracking your search performance
        queryTemplates:
          type: array
          items:
            type: string
            enum:
              - KEYWORD
              - KEYWORD_ZIP
              - KEYWORD_CITY
              - KEYWORD_IN_CITY
              - KEYWORD_NEAR_ME
              - KEYWORD_CITY_STATE
          description: |
            The ways in which your keywords will be arranged in the search queries we use to track your performance
        alternateNames:
          type: array
          items:
            type: string
          description: |
            Other names for your business that you would like us to use when tracking your search performance
        alternateWebsites:
          type: array
          items:
            type: string
          description: |
            Other websites for your business that we should look for when tracking your search performance
        competitors:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The competitor's name
              website:
                type: string
                description: The competitor's website.
          description: |
            The names and websites of the competitors whose search performance you would like to compare to your own
        trackingSites:
          type: array
          items:
            type: string
            enum:
              - GOOGLE_DESKTOP
              - GOOGLE_MOBILE
              - BING_DESKTOP
              - BING_MOBILE
              - YAHOO_DESKTOP
              - YAHOO_MOBILE
          description: |
            The search engines that we will use to track your performance
        isoRegionCode:
          type: string
          readOnly: true
          description: |
            The ISO 3166-2 region code for the location.

            Yext will determine the location’s code and update isoRegionCode with that value. If Yext is unable to determine the code for the location, the location’s ISO 3166-1 alpha-2 country code will be used.
        reviewBalancingURL:
          type: string
          maxLength: 255
          readOnly: true
          description: |
            Link to the balancing URL that will auto-direct consumers to certain sites to leave reviews, based on review-generation settings
        firstPartyReviewPage:
          type: string
          maxLength: 255
          readOnly: true
          description: |
            Link to the review-collection page, where consumers can leave first-party reviews
        isClusterPrimary:
          type: boolean
          description: |
            Indicates whether the location is the primary location in its group
        schemaTypes:
          type: array
          readOnly: true
          items:
            type: string
          description: |
            List of Schema Types for this location, based on its categories
        attire:
          type: string
          enum:
            - UNSPECIFIED
            - DRESSY
            - CASUAL
            - FORMAL
          description: |
            The formality of clothing typically worn at this location

            **NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.
        priceRange:
          type: string
          enum:
            - UNSPECIFIED
            - ONE
            - TWO
            - THREE
            - FOUR
          description: |
            The typical price of products sold at this location, on a scale of 1 (low) to 4 (high)

            **NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.
        mealsServed:
          type: array
          items:
            type: string
          description: |
            Types of meals served at this location

            **NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.

            Valid values:

            * `BREAKFAST`
            * `LUNCH`
            * `BRUNCH`
            * `HAPPY_HOUR`
            * `LATE_NIGHT`
        locatedIn:
          type: string
          description: |
            For ATMs, the external ID of the location that the ATM is installed in. The location must be in the same business account as the ATM.

            **NOTE:** This field is only available to locations whose **`locationType`** is `ATM`.
        primaryContact:
          type: string
          description: |
            ID of the user who is the primary Knowledge Assistant contact for the entity
        reviewResponseConversationEnabled:
          type: boolean
          description: |
            Indicates whether or not review response conversations are enabled for the Yext Knowledge Assistant
        holidayHoursConfirmationEnabled:
          type: boolean
          description: |
            Indicates whether or not holiday hour confirmation alerts are enabled for the Yext Knowledge Assistant
    BaseEcl:
      type: object
      properties:
        id:
          type: string
          maxLength: 32
          description: List ID.
        accountId:
          type: string
          readOnly: true
          description: ID of account that owns this List.
        name:
          type: string
          description: List name.
        title:
          type: string
          description: List title that appears on listings.
        size:
          type: integer
          readOnly: true
          description: Number of items in the List.
        publish:
          type: boolean
          description: Indicates whether the List should be shown on your listings.
        language:
          type: string
          description: |
            List language in ISO 639-1 format. An ISO 3166-1 alpha-2 country code can optionally be appended to the language.

            **Examples:** en, en_GB, fr_CA
    BaseEclSection:
      type: object
      properties:
        id:
          type: string
          description: Section ID.
        name:
          type: string
          description: Section name.
        description:
          type: string
          description: Section description.
    BaseEclItem:
      type: object
      properties:
        id:
          type: string
          description: Item ID.
        name:
          type: string
          description: Item name.
        description:
          type: string
          description: Item description.
    CommonEclDefinitions_Photo:
      type: object
      properties:
        url:
          type: string
          description: URL of photo.
        height:
          type: integer
          description: Dimension in pixels.
        width:
          type: integer
          description: Dimension in pixels.
        alternateText:
          type: string
          description: The alternate text to be used for accessibility purposes.
    Calories:
      type: object
      properties:
        type:
          type: string
          enum:
            - FIXED
            - RANGE
        calorie:
          type: integer
          description: Calorie count. Must be greater than or equal to 0 and less than or equal to 1000000.
        rangeTo:
          type: integer
          description: Specified only if `name` is `RANGE`. In that case, this Calories represents a calorie count range from `calorie` to `rangeTo`. Must be greater than `calorie` and less than or equal to 1000000.
    ContentListCostOption:
      type: object
      properties:
        name:
          type: string
          description: e.g., Small, Medium, Large, Add Bacon.
        price:
          type: string
          description: A simple price in USD, e.g., 1.00.
        calorie:
          type: integer
          description: How many calories this option adds. This field is for Menu items only.
    ContentListCost:
      type: object
      properties:
        type:
          type: string
          enum:
            - PRICE
            - RANGE
            - NONE
            - OTHER
        price:
          type: string
          description: Price in USD, e.g., 9.50. Must be greater than or equal to 0.0 and less than or equal to 1000000.00.
        unit:
          type: string
          description: e.g., Per Gallon, Each.
        rangeTo:
          type: string
          description: Specified only if `type` is `RANGE`. In that case, this Cost represents a `price` range from `price` to `rangeTo`. Must be greater than `price` and less than or equal to 1000000.00.
        other:
          type: string
          description: Specified only if `type` is `OTHER`. User-entered text, e.g., Market Price.
        options:
          type: array
          description: Add-ons or product variations that affect the price.
          items:
            $ref: '#/components/schemas/ContentListCostOption'
    MenuItem:
      allOf:
        - $ref: '#/components/schemas/BaseEclItem'
        - type: object
          properties:
            photo:
              $ref: '#/components/schemas/CommonEclDefinitions_Photo'
            calories:
              $ref: '#/components/schemas/Calories'
            cost:
              $ref: '#/components/schemas/ContentListCost'
            url:
              type: string
              description: The URL of the item's webpage.
            allergens:
              type: array
              items:
                type: string
              description: |
                A list of allergens associated with the menu item. Valid elements are:
                * Peanuts
                * Wheat
                * Sesame
                * Tree Nuts
                * Gluten
                * Soy
                * Dairy
                * Eggs
                * Fish
                * Shellfish
                * Shrimp
                * Crab
                * Soba
            featuredItem:
              type: boolean
              description: Indicates whether the item is a featured item on the menu.
            spiciness:
              type: string
              description: |
                The spiciness level of a food item. Valid elements are:
                * Mild
                * Medium
                * Hot
            dietaryRestrictions:
              type: array
              items:
                type: string
              description: |
                Dietary information of a food item. Valid elements are:
                * Halal
                * Kosher
                * Organic
                * Vegan
                * Vegetarian
            preparationMethods:
              type: array
              items:
                type: string
              description: |
                Methods on how the food dish option is prepared. Valid elements are:
                * Baked
                * Barbecued
                * Basted
                * Blanched
                * Boiled
                * Braised
                * Coddled
                * Fermented
                * Fried
                * Grilled
                * Kneaded
                * Marinated
                * Pan Fried
                * Pickled
                * Pressure Cooked
                * Roasted
                * Sauteed
                * Seared
                * Simmered
                * Smoked
                * Steamed
                * Steeped
                * Stir Fried
                * Other Method
    Section:
      allOf:
        - $ref: '#/components/schemas/BaseEclSection'
        - type: object
          properties:
            items:
              type: array
              description: Section Items.
              items:
                $ref: '#/components/schemas/MenuItem'
    Menu:
      allOf:
        - $ref: '#/components/schemas/BaseEcl'
        - type: object
          properties:
            currency:
              type: string
              description: The three-letter ISO 4217 currency code. Defaults to USD.
            sourceUrl:
              type: string
              description: The URL of the source the menu's content is retrieved from.
            sections:
              type: array
              description: A list of sections.
              items:
                $ref: '#/components/schemas/Section'
    BioItem:
      allOf:
        - $ref: '#/components/schemas/BaseEclItem'
        - type: object
          properties:
            photo:
              $ref: '#/components/schemas/CommonEclDefinitions_Photo'
            title:
              type: string
              description: Person's title.
            phone:
              type: string
              description: Item Phone.
            email:
              type: string
              description: Item Email.
            education:
              type: array
              description: List of up to 10 strings.
              items:
                type: string
            certifications:
              type: array
              description: List of up to 10 strings.
              items:
                type: string
            services:
              type: array
              description: List of up to 100 strings.
              items:
                type: string
            url:
              type: string
              description: Item URL.
    BioEcl_Section:
      allOf:
        - $ref: '#/components/schemas/BaseEclSection'
        - type: object
          properties:
            items:
              type: array
              description: Section Items.
              items:
                $ref: '#/components/schemas/BioItem'
    Bio:
      allOf:
        - $ref: '#/components/schemas/BaseEcl'
        - type: object
          properties:
            sections:
              type: array
              description: A list of sections.
              items:
                $ref: '#/components/schemas/BioEcl_Section'
    Photos:
      type: array
      description: List of up to 5 photos.
      items:
        $ref: '#/components/schemas/CommonEclDefinitions_Photo'
    ProductItem:
      allOf:
        - $ref: '#/components/schemas/BaseEclItem'
        - type: object
          properties:
            photos:
              $ref: '#/components/schemas/Photos'
            cost:
              $ref: '#/components/schemas/ContentListCost'
            idcode:
              type: string
              description: Displayed item ID.
            url:
              type: string
              description: Product home page
            video:
              type: string
              description: Youtube URL.
    ProductEcl_Section:
      allOf:
        - $ref: '#/components/schemas/BaseEclSection'
        - type: object
          properties:
            items:
              type: array
              description: Section Items.
              items:
                $ref: '#/components/schemas/ProductItem'
    Product:
      allOf:
        - $ref: '#/components/schemas/BaseEcl'
        - type: object
          properties:
            currency:
              type: string
              description: The three-letter ISO 4217 currency code. Defaults to USD.
            sections:
              type: array
              description: A list of sections.
              items:
                $ref: '#/components/schemas/ProductEcl_Section'
    EventItem:
      allOf:
        - $ref: '#/components/schemas/BaseEclItem'
        - type: object
          properties:
            type:
              type: string
              description: User-provided event type.
            starts:
              type: string
              format: date
              description: Start time in ISO 8601 format (yyyy-mm-ddThh:mm) (e.g., 2012-01-09T04:00).
            ends:
              type: string
              format: date
              description: End time in ISO 8601 format (yyyy-mm-ddThh:mm) (e.g., 2012-01-09T05:00).
            photos:
              $ref: '#/components/schemas/Photos'
            url:
              type: string
              description: Item URL.
            video:
              type: string
              description: Youtube URL.
    EventEcl_Section:
      allOf:
        - $ref: '#/components/schemas/BaseEclSection'
        - type: object
          properties:
            items:
              type: array
              description: Section Items.
              items:
                $ref: '#/components/schemas/EventItem'
    Event:
      allOf:
        - $ref: '#/components/schemas/BaseEcl'
        - type: object
          properties:
            sections:
              type: array
              description: A list of sections. However, Calendars cannot have more than one section.
              items:
                $ref: '#/components/schemas/EventEcl_Section'
    ListingStatusDetail:
      type: object
      properties:
        code:
          type: string
          description: Unique code for the warning/unavailable reason
        type:
          type: string
          enum:
            - UNAVAILABLE_REASON
            - WARNING
        message:
          type: string
          description: Explanation of the warning, or why the listing is unavailable
        actionable:
          type: boolean
          description: Indicates whether the customer can take action to resolve the issue
    Listing:
      type: object
      properties:
        id:
          type: string
          description: ID of this listing
        locationId:
          type: string
          description: ID of the location associated with this listing
        accountId:
          type: string
          description: ID of the account associated with this listing
        publisherId:
          type: string
          description: |
            ID of publisher associated with this listing
        status:
          type: string
          enum:
            - WAITING_ON_YEXT
            - WAITING_ON_CUSTOMER
            - WAITING_ON_PUBLISHER
            - LIVE
            - UNAVAILABLE
            - OPTED_OUT
        additionalStatus:
          type: string
          enum:
            - CONNECTED
            - NOT_CONNECTED
        listingUrl:
          type: string
          description: Listing URL
        loginUrl:
          type: string
          description: URL where the user can log in to the publisher to manage this listing at that publisher (only returned for Google Business Profile)
        screenshotUrl:
          type: string
          description: URL of a screenshot of the profile page that includes the Featured Message
        statusDetails:
          type: array
          description: List of warnings, or reasons why the listing is unavailable
          items:
            $ref: '#/components/schemas/ListingStatusDetail'
        alternateBrands:
          type: array
          description: |
            *(only present if the **v** parameter is `20170420` or later)*

            List of Publisher's alternate brands where the listing is syndicated
          items:
            type: object
            properties:
              brandName:
                type: string
                description: Alternate brand name
              listingUrl:
                type: string
                description: The listing's URL on the alternate brand's site
    EntityListing:
      type: object
      properties:
        id:
          type: string
          description: ID of this listing
        entityId:
          type: string
          description: ID of the entity associated with this listing
        accountId:
          type: string
          description: ID of the account associated with this listing
        publisherId:
          type: string
          description: ID of publisher associated with this listing
        status:
          type: string
          enum:
            - NOT_SYNCED
            - SYNC_IN_PROGRESS
            - LIVE
            - UPDATE_IN_PROGRESS
            - CANCELING_SYNC
            - NOT_APPLICABLE
            - DELETE_PENDING
            - DELETE_FAILED
            - DELETED
            - SYNC_STOPPED
          description: The status of this listing
        listingUrl:
          type: string
          description: The URL of this listing
        statusDetails:
          type: array
          description: List of warning messages or reasons why the listing is unavailable. Only included if the listing has a warning message or is unavailable.
          items:
            $ref: '#/components/schemas/ListingStatusDetail'
    DuplicateUnavailableReason:
      type: object
      properties:
        code:
          type: string
          description: Unique code for the unavailable reason
        reason:
          type: string
          description: Explanation for why the listing is unavailable
    Duplicate:
      type: object
      properties:
        id:
          type: string
          description: ID of this duplicate listing
        publisherId:
          type: string
          description: ID of the publisher site where the duplicate listing appears
        locationId:
          type: string
          description: ID of the location the duplicate listing is for
        url:
          type: string
          description: URL of the duplicate listing
        name:
          type: string
          description: The business name that appears on the duplicate listing
        address:
          type: string
          description: The address that appears on the duplicate listing
        phone:
          type: string
          description: The phone number that appears on the duplicate listing
        latitude:
          type: string
          description: The latitude of the location, as shown on the duplicate listing (e.g., in a map view)
        longitude:
          type: string
          description: The longitude of the location, as shown on the duplicate listing (e.g., in a map view)
        status:
          type: string
          description: 'The status of the duplicate. Note: the `DELETED` status is only available in webhook responses.'
          enum:
            - POSSIBLE_DUPLICATE
            - SUPPRESSION_REQUESTED
            - SUPPRESSED
            - UNAVAILABLE
            - DELETED
        suppressionType:
          type: string
          description: The publisher's suppression type
          enum:
            - REDIRECT
            - ERROR
            - MERGE
            - REMOVE_FROM_SEARCH
            - MOBILE
            - SEARCH_PAGE
        unavailableReasons:
          type: array
          description: List of reasons why suppression is unavailable for this duplicate listing (will be empty unless **`status`** is `UNAVAILABLE`)
          items:
            $ref: '#/components/schemas/DuplicateUnavailableReason'
    PublisherSuggestion:
      type: object
      properties:
        id:
          type: string
          description: ID of this Publisher Suggestion
        publisherId:
          type: string
          description: ID of the publisher who submitted the suggestion
        locationId:
          type: string
          description: ID of the location the suggestion is for
        dateCreated:
          type: string
          format: date
          description: The date Yext received the suggestion
        dateResolved:
          type: string
          format: date
          description: The date the suggestion expired or was accepted or rejected
        fieldName:
          type: string
          description: The location field the suggestion is for
        status:
          type: string
          description: The status of the suggestion
          enum:
            - WAITING_ON_CUSTOMER
            - ACCEPTED
            - REJECTED
            - EXPIRED
        resolvedBy:
          type: string
          description: Resolver of the Publisher Suggestion
        originalContent:
          type: string
          description: |
            The content that the publisher suggested to change
        suggestedContent:
          type: string
          description: |
            The content suggested as a replacement of the `originalContent`
    Answer:
      type: object
      properties:
        id:
          type: integer
          description: ID of this answer.
        authorName:
          type: string
          description: The name of the person that created this answer.
        authorPhotoUrl:
          type: string
          description: The photo URL of the person that created this answer.
        authorType:
          type: string
          enum:
            - REGULAR_USER
            - LOCAL_GUIDE
            - MERCHANT
            - AUTHOR_TYPE_UNSPECIFIED
        upvoteCount:
          type: integer
          description: Number of upvotes the answer has.
        content:
          type: string
          description: The answer text.
        createTime:
          type: integer
          description: Timestamp the answer was created on the publisher.
        updateTime:
          type: integer
          description: Timestamp the answer was last updated on the publisher.
    Question:
      type: object
      properties:
        id:
          type: string
          description: ID of this question.
        entityIds:
          type: array
          description: IDs of the entities associated to this question.
          items:
            type: string
        accountId:
          type: string
          description: ID of the account associated with this question.
        publisherId:
          type: string
          description: |
            ID of the publisher associated with this question. For first-party Q&A, this will be FIRSTPARTY.
        authorName:
          type: string
          description: The name of the person that asked the question.
        authorEmail:
          type: string
          description: |
            The email of the person that asked the question. Only supported for FIRSTPARTY Q&A.
        authorPhotoUrl:
          type: string
          description: The photo URL of the person that asked the question.
        authorType:
          type: string
          enum:
            - REGULAR_USER
            - LOCAL_GUIDE
            - MERCHANT
            - AUTHOR_TYPE_UNSPECIFIED
        language:
          type: string
          description: The language of the question. Only supported for FIRSTPARTY Q&A.
        upvoteCount:
          type: integer
          description: Number of upvotes the question has.
        content:
          type: string
          description: The question text.
        description:
          type: string
          description: Additional description text. Only supported for FIRSTPARTY Q&A.
        createTime:
          type: integer
          description: Timestamp the question was created on the publisher.
        updateTime:
          type: integer
          description: Timestamp the question was last updated on the publisher.
        answerCount:
          type: integer
          description: Number of answers the question has.
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    ReviewComment:
      type: object
      properties:
        id:
          type: integer
          description: ID of this comment (assigned by Yext).
          readOnly: true
        parentId:
          type: integer
          description: If this comment is in response to another comment, this is the ID of the parent comment.
        publisherDate:
          type: integer
          format: int64
          description: The timestamp of the comment as reported by the publisher.  If edits impact the comment timestamp on the publisher, then this timestamp may change.  This timestamp always comes from the publisher and we respect whatever they have.
          readOnly: true
        authorName:
          type: string
          description: The name of the person who wrote the comment (if we have it).
          readOnly: true
        authorEmail:
          type: string
          description: The email address of the person who wrote the comment (if we have it).
          readOnly: true
        authorRole:
          type: string
          enum:
            - BUSINESS_OWNER
            - CONSUMER
          readOnly: true
        content:
          type: string
          description: Content of the comment.
        visibility:
          type: string
          enum:
            - PUBLIC
            - PRIVATE
          description: Defaults to `PUBLIC` when creating a comment
    ReviewLabel:
      type: object
      properties:
        id:
          type: integer
          description: The ID of this review label.
          readOnly: true
        name:
          type: string
          description: The name of this review label.
          readOnly: true
    WebhookReview:
      type: object
      properties:
        id:
          type: integer
          description: ID of this review
          readOnly: true
        entityId:
          type: string
          description: |
            ID of the entity associated with this review.

            If the **`v`** parameter is before `20210728`, please refer to locationId as the parameter name instead of entityId.
        accountId:
          type: string
          description: ID of the account associated with this review
        publisherId:
          type: string
          description: |
            For third-party reviews, the ID of publisher associated with this listing.
            For first-party reviews, this will be FIRSTPARTY.
          readOnly: true
        rating:
          type: number
          format: double
          description: |
            Normalized rating out of 5.
            This value is omitted if the review does not include a rating.
        title:
          type: string
          description: |
            Title of the review.
            This value is omitted if reviews on the publisher's site do not have titles.
          readOnly: true
        content:
          type: string
          description: |
            Content of the review.
        authorName:
          type: string
          description: The name of the person who wrote the review (if we have it).
        authorEmail:
          type: string
          description: The email address of the person who wrote the review (if we have it).
        url:
          type: string
          description: The URL of the review, or the URL of the listing where the review can be found if there is no specific URL for the review.
          readOnly: true
        publisherDate:
          type: integer
          format: int64
          description: The timestamp of the review as reported by the publisher. If edits impact the review date on the publisher, then this date may change. This date always comes from the publisher and we respect whatever they have.
          readOnly: true
        lastYextUpdateTime:
          type: integer
          format: int64
          description: |
            If the **`v`** parameter is before `20170512`: the timestamp of the review (including listing updates).

            If the **`v`** parameter is `20170512` or later: the timestamp of the review (excluding listing updates), or the timestamp of the latest comment on the review.
          readOnly: true
        status:
          type: string
          enum:
            - LIVE
            - QUARANTINED
            - REMOVED
          description: The current status of the review; only returned for First Party and External First Party reviews. Defaults to `QUARANTINED` when creating.
        flagStatus:
          type: string
          enum:
            - FLAGGED
            - NOT_FLAGGED
          description: Indicates whether the review has been flagged for inappropriate or irrelevant content. Note that only First Party and External First Party reviews can be flagged.
        reviewLanguage:
          type: string
          description: The language of the review, if identified.
        comments:
          type: array
          description: |
            An ordered array of Comments on the review.

            **NOTE:** The order is a flattened tree with depth ties broken by publisher date.
          readOnly: true
          items:
            $ref: '#/components/schemas/ReviewComment'
        reviewLabels:
          type: array
          description: |
            The names and IDs of the review labels added to the review.

            **NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.
          readOnly: true
          items:
            $ref: '#/components/schemas/ReviewLabel'
        reviewType:
          type: string
          enum:
            - Rating
            - Recommendation
          description: |
            If the **`v`** parameter is before `20181002`: Not present.

            If the **`v`** parameter is `20181002` or later: Indicates whether the review is a rating or a recommendation.

            **NOTE:** Only applicable to Facebook reviews.
          readOnly: true
        recommendation:
          type: string
          enum:
            - Recommended
            - Not Recommended
          description: |
            If the **`v`** parameter is before `20181002`: Not present.

            If the **`v`** parameter is `20181002` or later: Indicates whether the consumer recommends the entity being reviewed.

            **NOTE:** Only applicable to Facebook reviews.
          readOnly: true
        transactionId:
          type: string
          description: |
            If present, the transaction ID associated with the invitation that resulted in this review.
        invitationId:
          type: string
          description: |
            If present, the ID associated with the invitation that resulted in this review.
        apiIdentifier:
          type: string
          description: |
            The unique identifier which will need to be included in any further requests to update or delete this review via the Review Submission API. Only supported for reviews created via Yext invitations or the Review Submission API.

            One of:
            * A UUID generated at the time the Review Creation request is accepted.
            * The invitationUid, if the review is associated with an invitation.
    CreatedReviewInvitation:
      type: object
      properties:
        id:
          type: string
          description: External ID of this invitation
        locationId:
          type: string
          description: ID of the location that will be reviewed
        partnerLocationId:
          type: string
          description: Partner specific ID of the location that will be reviewed
        locale:
          type: string
          description: The locale of this location as determined by this location's primary language
        country:
          type: string
          description: The country of the location that will be reviewed
        generationUrl:
          type: string
          description: The location's unique Review Generation URL
        googleListingUrl:
          type: string
          description: The location's unique Google listing URL
        facebookListingUrl:
          type: string
          description: The location's unique Facebook listing URL
        firstName:
          type: string
          description: The consumer's first name
        lastName:
          type: string
          description: The consumer's last name
        titleName:
          type: string
          description: The consumer’s title (e.g., `Mr.`, `Mrs.`, `Miss`, etc.)
        contact:
          type: string
          description: The consumer's email address or phone number (in E.164 format)
        type:
          type: string
          enum:
            - EMAIL
            - SMS
        partnerId:
          type: string
          description: |
            The determined sender of the invitation.

            For invitations directed towards App Directory Partners, the ID of the partner, otherwise this will be FIRSTPARTY
        templateId:
          type: string
          description: |
            The ID of the template to use in the invitation sent.

            If not specified, this will be the default ID in the app configuration.
        language:
          type: string
          description: |
            The ISO 639-1 code of the review invitation's language. Only valid for invitations created from default templates. Defaults to `en`.

            Supported languages:
              * `en`
              * `de`
              * `fr`
              * `es`
              * `it`
              * `nl`
              * `ja`
    AddRequest:
      title: Location Add Request Response
      type: object
      properties:
        id:
          type: integer
          example: 39483
          readOnly: true
          description: The Yext ID of the created add request.
        locationMode:
          type: string
          description: |
            Whether the request is to add service for an existing location or to create a new location and add service to it.
          enum:
            - EXISTING
            - NEW
        existingLocationId:
          type: string
          description: |
            The existing location ID to add service to.

            This field is provided only when *locationMode* is EXISTING. Either this field or *newLocationId* will be provided.
        newLocationId:
          type: string
          description: |
            The new location ID to create and add service to.

            This field is provided only when *locationMode* is NEW. Either this field or *existingLocationId* will be provided.
        newLocationAccountId:
          type: string
          description: |
            *(Partner Portal mode)* The account ID to create a new location under.

            This field is provided only for Partner Portal and when *locationMode* is NEW.
        newLocationAccountName:
          type: string
          description: |
            *(Partner Portal mode)* The account name to create a new location under.

            This field is provided only for Partner Portal and when *locationMode* is NEW and when *newLocationAccountName* was specified in the add request.
        newAccountParentAccountId:
          type: string
          description: |
            *(Partner Portal mode)* The account ID to create a new account and location under.

            This field is provided only for Partner Portal, when *locationMode* is NEW and *newAccountParentAccountId* was specified in the add request.
        newLocationData:
          description: |
            The location profile data used in creating a new location for this add request.

            Optional. Provided only for the **Add Requests: Create (New Location)** endpoint.
          allOf:
            - $ref: '#/components/schemas/Location'
        newEntityData:
          description: |
            The entity profile data used in creating a new entity for this add request.

            Optional. Provided only for the **Add Requests: Create (New Location)** endpoint.
          allOf:
            - $ref: '#/components/schemas/Entity'
        skus:
          type: array
          description: |
            List of SKUs to sign the location up for, from among those listed in the **Available Services: List** response with Location recipientType.
          items:
            type: string
          example:
            - SKU-00000167
            - SKU-00000168
        agreementId:
          type: integer
          description: |
            The Agreement ID of the agreement that services will be added under.
        status:
          type: string
          readOnly: true
          description: The current status of the add request.
          enum:
            - SUBMITTED
            - PROCESSING
            - COMPLETE
            - CANCELED
            - REVIEW
            - FAILED
        dateSubmitted:
          type: string
          format: date-time
          readOnly: true
          description: The date the add request was submitted.
        dateCompleted:
          type: string
          format: date-time
          readOnly: true
          description: The date the add request was completed. An empty string if the request has not been completed.
        statusDetail:
          type: string
          readOnly: true
          description: Results from processing.
    Source:
      type: object
      description: Provides information about the user/system responsible for creating the suggestion.
      properties:
        userId:
          description: |
            The Yext User ID of the user responsible for the suggestion. Only included when the suggester is a Yext User.
          type: string
        appId:
          description: |
            The Yext App ID of the app responsible for the suggestion. Only included when the suggester is an App.
          type: string
        publisherId:
          description: |
            The ID of the publisher responsible for the suggestion. Only included when the suggester is a Publisher
          type: string
        yextSource:
          description: |
            A string identifier denoting the source of the Yext Suggestion.

            For now, the only valid value here will be:
              * employee
          type: string
    EntityRead:
      type: object
      description: The Entity information for the suggestion.
      properties:
        id:
          description: |
            The ID of the entity.
          type: string
        uid:
          description: |
            The UID of the entity. Formerly known as the Yext ID, this is the immutable ID of the entity.
          type: string
        type:
          description: |
            The type of the entity.
          type: string
        language:
          description: |
            Language code of this Entity's Language Profile.
          type: string
        folderId:
          description: |
            The ID of the folder which the entity is in, if the entity is in a folder.
          type: string
        labels:
          description: |
            Any labels included on the entity.
          type: array
          items:
            type: string
    EntityFieldSuggestionRead:
      type: object
      properties:
        entity:
          description: |
            Information about the entity which the suggestion is being made on.
          type: object
          $ref: '#/components/schemas/EntityRead'
        existingContent:
          description: |
            Contains the fields and existing values for the field(s) which are included in the suggestion.
          type: object
          $ref: '#/components/schemas/Entity'
        suggestedContent:
          description: |
            Contains the fields and suggested values for the field(s) which are included in the suggestion.
          type: object
          $ref: '#/components/schemas/Entity'
    Assignee:
      type: object
      description: |
        Object containing information about who the suggestion is assigned to.

        Omitted if suggestion is unassigned.
      properties:
        userId:
          description: |
            The Yext User ID of the user to whom the suggestion is assigned.
          type: string
        userGroupId:
          description: |
            The Yext User Group ID of the user group to which the suggestion is assigned.
          type: string
    Commenter:
      type: object
      description: Provides information about the user/system responsible for creating the comment.
      properties:
        userId:
          description: |
            The Yext User ID of the user responsible for the comment. Only included when the commenter is a Yext User.
          type: string
        appId:
          description: |
            The Yext App ID of the app responsible for the comment. Only included when the commenter is an App.
          type: string
        yextSource:
          description: |
            A string identifier denoting the source of the comment when a Yext system is responsible.

            For now, the only valid value here will be:
              * employee
          type: string
    Attachment:
      type: object
      description: Attachment on a Comment on a Suggestion
      properties:
        name:
          description: |
            The name of the file.
          type: string
        downloadUrl:
          description: |
            The download URL of the file.
          type: string
    Comment:
      type: object
      description: A comment on a Suggestion.
      properties:
        commenter:
          $ref: '#/components/schemas/Commenter'
        text:
          description: |
            The text of the comment.
          type: string
        createdDate:
          description: |
            Timestamp for when the comment was created. The format is ISO 8601 standard in UTC, e.g. **`yyyy-MM-ddTHH:mm:ssZ`**.
          type: string
        attachments:
          description: |
            Attachments included in the comment.
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    Approver:
      type: object
      description: Provides information about the user/system responsible for approving/rejecting the suggestion. Only included if the suggestion has been approved or rejected.
      properties:
        userId:
          description: |
            The Yext User ID of the user responsible for resolving the suggestion. Only included when the approver is a Yext User.
          type: string
        appId:
          description: |
            The Yext App ID of the app responsible for resolving the suggestion. Only included when the approver is an App.
          type: string
    SuggestionRead:
      type: object
      properties:
        uid:
          description: |
            The Yext-generated unique identifier for the Suggestion.
          type: string
        accountId:
          description: |
            The ID of the account in which the Suggestion exists.
          type: string
        createdDate:
          description: |
            Timestamp for when the Suggestion was created. The format is ISO 8601 standard in UTC, e.g. **`yyyy-MM-ddTHH:mm:ssZ`**.
          type: string
        lastUpdatedDate:
          description: |
            Timestamp for when the Suggestion was last updated. The format is ISO 8601 standard in UTC, e.g. **`yyyy-MM-ddTHH:mm:ssZ`**.
          type: string
        resolvedDate:
          description: |
            Timestamp for when the Suggestion was approved, rejected, or canceled. The format is ISO 8601 standard in UTC, e.g. **`yyyy-MM-ddTHH:mm:ssZ`**. Only included if the suggestion has been resolved.
          type: string
        source:
          $ref: '#/components/schemas/Source'
        entityFieldSuggestion:
          description: |
            An object containing suggestion content and data for the entity and field the suggestion is
            on.
          type: object
          $ref: '#/components/schemas/EntityFieldSuggestionRead'
        status:
          description: |
            The status of the suggestion. One of: PENDING, APPROVED, REJECTED, CANCELED.
          type: string
        locked:
          description: |
            Boolean value specifying if the suggestion is locked or not.
          type: boolean
        assignee:
          $ref: '#/components/schemas/Assignee'
        comments:
          description: |
            List of objects representing comments on a given Suggestion.
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        approver:
          $ref: '#/components/schemas/Approver'
