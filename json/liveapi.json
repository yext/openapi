{
  "openapi": "3.0.0",
  "info": {
    "title": "Live API",
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://liveapi.yext.com/v2"
    }
  ],
  "paths": {
    "/accounts/{accountId}/entities": {
      "get": {
        "operationId": "listEntities",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of Entity types to filter on. Example: `\"location,event\"`\n\nShould be from the following types:\n  * `atm`\n  * `event`\n  * `faq`\n  * `financialProfessional`\n  * `healthcareFacility`\n  * `healthcareProfessional`\n  * `hotel`\n  * `hotelRoomType`\n  * `job`\n  * `location`\n  * `organization`\n  * `product`\n  * `restaurant`\n\nOR the API name of a custom entity type.\n",
            "name": "entityTypes",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of field names. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"address.line1\"`). Custom fields are specified in the same way, albeit with their `c_*` name.",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "This parameter represents one or more filtering conditions that are applied to the set of entities that would otherwise be returned. This parameter should be provided as a URL-encoded string containing a JSON object.\n\nFor example, if the filter JSON is `{\"name\":{\"$eq\":\"John\"}}`, then the filter param after URL-encoding will be: `filter=%7B%22name%22%3A%7B%22%24eq%22%3A%22John%22%7D%7D`\n\n**Basic Filter Structure**\n\nThe filter object at its core consists of a *matcher*, a *field*, and an *argument*.\n\nFor example, in the following filter JSON:\n\n```\n{\n  \"name\":{\n    \"$eq\":\"John\"\n  }\n}\n```\n\n`$eq` is the *matcher*, or filtering operation (equals, in this example),\n\n`name` is the *field* being filtered by, and\n\n`John` is *value* to be matched against.\n\n**Combining Multiple Filters**\n\nMultiple filters can be combined into one object using *combinators*. For example, the following filter JSON combines multiple filters using the combinator `$and`. `$or` is also supported.\n```\n{\n  \"$and\":[\n    {\n      \"firstName\":{\n        \"$eq\":\"John\"\n      }\n    },\n    {\n      \"countryCode\":{\n        \"$in\":[\n          \"US\",\n          \"GB\"\n        ]\n      }\n    }\n  ]\n}\n```\n\n**Filter Negation**\n\nCertain filter types may be negated. For example:\n\n```\n{\n  \"$not\" {\n    \"name\":{\n      \"$eq\":\"John\"\n    }\n  }\n}\n```\n\nThis can also be written more simply with a `!` in the `$eq` parameter. The following filter would have the same effect:\n\n```\n{\n  \"name\":{\n    \"!$eq\":\"John\"\n  }\n}\n```\n\n**Filter Complement**\n\nYou can also search for the complement of a filter. This filter would match entities that do not contain \"hello\" in their descriptions, or do not have a description set. This is different from negation which can only match entities who have the negated field set to something.\n\n```\n{\n  \"$complement\":{\n    \"description\":{\n      \"$contains\":\"hello\"\n    }\n  }\n}\n```\n\n**Addressing Subfields**\n\nSubfields of fields can be addressed using the \"dot\" notation while filtering. For example, if you have a custom field called **`c_myCustomField`**:\n\n```\n{\n  \"c_myCustomField\":{\n    \"age\": 30,\n    \"name\": \"Jim\",\n  }\n}\n```\n\nWhile filtering, subfields may be addressed using the \"dot\" notation.\n\n```\n{\n  \"c_myCustomField.name\":{\n    \"!$eq\":\"John\"\n  }\n}\n```\n\nFields that are nested deeper may be addressed using dot notation, as well. For example, if **`name`** in the above example was a compound field with two subfields **`first`** and **`last`**, **`first`** may be addressed as **`c_myCustomField.name.first`**.\n\n**Field Support**\n\nEntity fields correspond to certain filter types, which support matchers. Going by the example above, the field **`name`** supports the `TEXT` filter type, which supports `$eq` (equals) and `$startsWith` (starts with).\n\n**TEXT**\n\nThe `TEXT` filter type is supported for text fields. (e.g., **`name`**, **`countryCode`**)\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq (equals)</th>\n    <th>\n\n    {\n      \"countryCode\":{\n        \"$eq\":\"US\"\n      }\n    },\n    {\n      \"countryCode\":{\n        \"!$eq\":\"US\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n  Matches if the field starts with the argument value.\n\n  e.g., \"Amazing\" starts with \"amaz\"\n\n    {\n       \"address.line1\":{\n          \"$startsWith\": \"Jo\"\n       }\n    }\n\n  Supports negation. Case insensitive.\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n  Matches if field value is a member of the argument list.\n\n    {\n      \"firstName\":{\n        \"$in\": [\"John\", \"Jimmy\"]\n      }\n    }\n\n  Does not support negation. Negation can be mimicked by using an \"OR\" matcher, for example:\n\n    {\n      \"$and\":[\n        {\n          \"firstName\":{\n            \"!$eq\": \"John\"\n          }\n        },\n        {\n          \"firstName\":{\n            \"!$eq\": \"Jimmy\"\n          }\n        }\n      ]\n    }\n\n  </tr>\n  <tr>\n    <th>$contains</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$contains\":\"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" is contained in any string within **`c_myString`**.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n  <tr>\n    <th>$containsAny</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$containsAny\":[\n          \"sample1\", \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if either \"sample1\" or \"sample2\" is contained in any string within **`c_myString`**. The argument list can contain more than two strings.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n  <tr>\n    <th>$containsAll</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$containsAll\":[\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"sample1\" and \"sample2\" are contained in any string within **`c_myString`**. The argument list can contain more than two strings.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n</table>\n\n**BOOLEAN**\n\n\nThe BOOLEAN filter type is supported for boolean fields and Yes / No custom fields.\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"isFreeEvent\": {\n        \"$eq\": true\n      }\n    }\n\n  For booleans, the filter takes a boolean value, not a string.\n  Supports negation.\n  </tr>\n</table>\n\n**STRUCT**\n\nThe STRUCT filter type is supported for compound fields with subfields.\n\n*e.g., **`address`**, **`featuredMessage`**, fields of custom types*\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$hasProperty</th>\n    <th>\n\n  Matches if argument is a key (subfield) of field being filtered by. This filter type is useful for filtering by compound fields or to check if certain fields have a value set.\n\n    {\n      \"address\": {\n        \"$hasProperty\": \"line1\"\n      }\n    }\n\n  Note that if a given property of a compound field is not set, the filter will not match. For example, if `line1` of **`address`** is not set for an entity, then the above matcher will not match the entity.\n\n  Supports negation.\n\n  </tr>\n</table>\n\n**OPTION**\n\nThe OPTION filter type is supported for options custom fields and fields that have a predetermined list of valid values.\n\n *e.g., **`eventStatus`**, **`gender`**, `SINGLE_OPTION` and `MULTI_OPTION` types of custom fields.*\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n  Matching is case insensitive and insensitive to consecutive whitespace.\n\n  e.g., \"XYZ 123\" matches \"xyz       123\"\n\n    {\n      \"eventStatus\": {\n        \"$eq\": \"SCHEDULED\"\n      }\n    }\n\n  Supports negation. Negating `$eq` on the list will match any field that does not hold any of the provided values.\n\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n    {\n      \"eventStatus\": {\n        \"$in\": [\n          \"SCHEDULED\",\n          \"POSTPONED\"\n        ]\n      }\n    }\n\n  Does not support negation. However, negation can be mimicked by using an `$and` matcher to negate individually over the desired values. For example:\n\n    {\n      \"$and\": [\n        {\n          \"eventStatus\":{\n            \"!$eq\": \"SCHEDULED\"\n          }\n        },\n        {\n          \"firstName\":{\n            \"!$eq\": \"POSTPONED\"\n          }\n        }\n      ]\n    }\n\n  </tr>\n</table>\n\n**PHONE**\n\nThe PHONE filter type is supported for phone number fields only. PHONE will support the same matchers as TEXT, except that for `$eq`, the same phone number with or without calling code will match.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"mainPhone\":{\n        \"$eq\":\"+18187076189\"\n      }\n    },\n    {\n      \"mainPhone\":{\n        \"$eq\":\"8187076189\"\n      }\n    },\n    {\n      \"mainPhone\":{\n        \"!$eq\":\"9177076189\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n  Matches if the field starts with the argument value.\n\n  e.g., \"8187076189\" starts with \"818\"\n\n    {\n      \"mainPhone\":{\n        \"$startsWith\": \"818\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n  Matches if field value is a member of the argument list.\n\n    {\n      \"mainPhone\":{\n        \"$in\": [\n          \"8185551616\",\n          \"9171112211\"\n        ]\n      }\n    }\n\n  Does not support negation. However, negation can be mimicked by using an `$and` matcher to negate individually over the desired values.\n\n  </tr>\n</table>\n\n**INTEGER, FLOAT, DATE, DATETIME, and TIME**\n\nThese filter types are strictly ordered -- therefore, they support the following matchers:\n- Equals\n- Less Than / Less Than or Equal To\n- Greater Than / Greater Than or Equal To\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n  Equals\n\n    {\n      \"ageRange.maxValue\": {\n        \"$eq\": \"80\"\n      }\n    }\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$lt</th>\n    <th>\n\n  Less than\n\n    {\n      \"time.start\": {\n        \"$lt\": \"2018-08-28T05:56\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$gt</th>\n    <th>\n\n  Greater than\n\n    {\n      \"ageRange.maxValue\": {\n        \"$gt\": \"50\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$le</th>\n    <th>\n\n  Less than or equal to\n\n    {\n      \"ageRange.maxValue\": {\n        \"$le\": \"40\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$ge</th>\n    <th>\n\n  Greater than or equal to\n\n    {\n      \"time.end\": {\n        \"$ge\":  \"2018-08-28T05:56\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>Combinations</th>\n    <th>\n\n  While we do not support \"between\" in our filtering syntax, it is possible to combine multiple matchers for a result similar to an \"and\" operation:\n\n    {\n      \"ageRange.maxValue : {\n        \"$gt\" : 10,\n        \"$lt\": 20\n      }\n    }\n\n  </tr>\n</table>\n\n**LIST OF TEXT**\n\nAny field that has a list of valid values and supports any of the previously mentioned filter types will also support the `$contains` matcher.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eq\": \"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" EXACTLY matches any string within **`c_myStringList`**.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAny</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAny\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if any one of \"sample1\" or \"sample2\" EXACTLY match a string within **`c_myStringList`** . The argument can have more than two strings.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"sample1\" AND \"sample2\" EXACTLY match a string within **`c_myStringList`**. The argument can have more than two strings.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$contains</th>\n    <th>\n\n    {\n      \"c_myStringList\":{\n        \"$contains\":\"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" is contained in any string within **`c_myStringList`**.\n\n  Note that this matching is \"left edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This is a sample\", \"Sample one\", \"Sample 2\" but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$containsAny</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$containsAny\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n\n  This filter will match if either \"sample1\" or \"sample2\" is contained in any string within **`c_myStringList`**. The argument list can have more than two strings.\n\n  Note that similar to `$contains`, the matching for `$containsAny` is \"left edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This is a sample\", \"Sample one\", \"Sample 2\" but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$containsAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$containsAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if BOTH \"sample1\" and \"sample2\" are contained in strings within **`c_myStringList`**. The argument list can have more than two strings.\n\n  Note that similar to `$contains`, the matching for `$containsAll` is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$startsWith\":\"sample\"\n      }\n    }\n\n  This filter will match if any string within **`c_myStringList`** starts with \"sample\".\n\n  Does not supports negation. Case Insensitive.\n\n  </tr>\n</table>\n\n**LIST OF BOOLEAN, OPTION, PHONE, INTEGER, FLOAT, DATE, DATETIME, OR TIME**\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"c_myDateList\": {\n        \"$eq\": \"2019-01-01\"\n      }\n    }\n\n\n  This filter will match if \"2019-01-01\" EXACTLY matches any date within **`c_myDateList`**.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAny</th>\n    <th>\n\n    {\n      \"c_myIntegerList\": {\n        \"$eqAny\": [1, 2]\n      }\n    }\n\n  This filter will match if 1 or 2 EXACTLY match any integer within **`c_myIntegerList`**. The argument list can have more than two elements.\n\n  Supports negation.\n\n  </tr>\n\n  <tr>\n    <th>$eqAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"2019-01-01\" AND \"2019-01-02\" EXACTLY match a date within **`c_myDateList`**. The argument list can have more than two elements.\n\n  Supports negation.\n\n  </tr>\n</table>\n\n**LIST OF STRUCT**\n\nFiltering on lists of struct types is a bit nuanced. Filtering can only be done on lists of structs of the SAME type.\nFor example, if **`c_myStructList`** is a list of compound fields with the subfields **`age`** and **`name`**, then one can address the **`age`** properties of each field in **`c_myStructList`** as a flattened list of integers and filtering upon them. For example, the following filter:\n\n```\n{\n  \"c_myStructList.age\":{\n    \"$eq\": 20\n  }\n}\n```\n\nwill match if any field in the list has an **`age`** property equal to 20. Similarly, any filter that can be applied to lists of integers could be applied to **`age`** in this case (`$eq`, `$eqAll`, `$eqAny`).\n\n\n**HOURS**\n\nBy filtering on an hours field, you can find which entities are open or closed at a specified time or during a certain time range. All of these filters also take an entity’s holiday hours and reopen date into account.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$openAt</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openAt\":\n          \"2019-01-06T13:45\"\n      }\n    }\n\n\n  This filter would match entities open at the specified time.\n\n  </tr>\n  <tr>\n    <th>$closedAt</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedAt:\n          \"2019-01-06T13:45\"\n      }\n    }\n\n  </tr>\n\n  <tr>\n    <th>$openForAllOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openForAllOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n\n  This filter would match only those entities that are open for the entire range between 2019-01-06T13:45 and 2019-01-06T15:00.\n\n    {\n      \"hours\": {\n        \"$openForAllOf\":\n          \"2019-05-10\"\n      }\n    }\n\n  This filter would match entities open for the entire 24 hour period on 2019-05-10.\n\n  You can also supply a year, a month, or an hour to filter for entities open for the entire year, month, or hour, respectively.\n\n  </tr>\n  <tr>\n    <th>$openForAnyOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openForAnyOf\": {\n          \"start\": \"now\",\n          \"end\": \"now+2h\"\n        }\n      }\n    }\n\n  This filter will match any entities that are open for at least a portion of the time range between now and two hours from now.\n\n  </tr>\n  <tr>\n    <th>$closedForAllOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedForAllOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n  This filter will match only those entities that are closed for the entire given time range.\n  </tr>\n  <tr>\n    <th>$closedForAnyOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedForAnyOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n  This filter will match any entities that are closed for at least a portion of the given time range.\n  </tr>\n</table>\n\n\n**Filtering by Dates and Times**\n\n**Time zones**\n\nThe filtering language supports searching both in local time and within a certain time zone. Searching in local time will simply ignore the time zone on the target entities, while providing one will convert the zone of your queried time to the zone of the target entities.\n\nTo search in local time, simply provide the date or time without any zone: `2019-06-07T15:30` or `2019-06-07`.\n\nTo conduct a zoned search, provide the name of the time zone in brackets after the time, as it is shown in the tz database: `2019-06-07T15:30[America/New_York]` or `2019-06-06[America/Phoenix]`.\n\n\n**Date and time types**\n\nIn addition to searching with dates and datetimes, you can also query with years, months, and hours. For example, the filter:\n\n```\n{\n  \"time.start\": {\n    \"$eq\": \"2018\"\n  }\n}\n```\n\nwould match all start times in the year 2018. The same logic would apply for a month (`2019-05`), a date (`2019-05-01`), or an hour (`2019-05-01T06`).\n\nThese types also work with ordered searches. For example:\n\n```\n{\n \"time.start\": {\n    \"$lt\": \"2018\"\n }\n}\n```\n\nwould match start times before 2018 (i.e., anything in 2017 or before). On the other hand, the same query with a `$le` matcher would include anything in or before 2018.\n\n**\"Now\" and Date Math**\n\nInstead of providing a static date or time, you can also use `now` in place of any date time. When you do so, the system will calculate the time when the query is made and conduct a zoned search.\n\nIn order to search for a future or past time relative to `now`, you can use date math. For example, you can enter `now+3h` or `now-1d`, which would mean 3 hours from now and 1 day ago, respectively. You can also add and subtract minutes (`m`), months (`M`), and years (`y`).\n\nIt is also possible to add or subtract time from a static date or datetime. Simply add `||` between the static value and any addition or subtraction. For example, `2019-02-03||+1d` would be the same as `2019-02-04`.\n\nYou can also convert date and time types to other types. For example, to convert the datetime `2019-05-06T22:15` to a date, use `2019-05-06T22:15||/d`. Doing so would yield the same result as using `2019-05-06`. This method also works with `now`: `now/d` will give you today’s date without the time.\n\n**Filtering Across an Entity**\n\nIt is possible to search for a specific text string across all fields of an entity by using the `$anywhere` matcher.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$anywhere</th>\n    <th>\n\n  Matches if the argument text appears anywhere in the entity (including subfields, structs, and lists)\n\n    {\n      \"$anywhere\": \"hello\"\n    }\n\n  This filter will match all entities that contain the string \"hello\" or strings that begin with \"hello\".\n\n  </tr>\n</table>\n\n**Examples**\n\nThe following filter will match against entities that:\n- Are of type `event` (note that entity types can also be filtered by the **`entityTypes`** query parameter)\n- Have a name that starts with the text \"Century\"\n- Have a maximum age between 10 and 20\n- Have a minimum age between 5 and 7\n- Start after 7 PM (19:00) on August 28, 2018\n\n```\n{\n  \"$and\":[\n    {\n      \"entityType\":{\n        \"$eq\":\"event\"\n      }\n    },\n    {\n      \"name\":{\n        \"$startsWith\":\"Century\"\n      }\n    },\n    {\n      \"ageRange.maxValue\":{\n        \"$gt\":10,\n        \"$lt\":20\n      }\n    },\n    {\n      \"ageRange.minValue\":{\n        \"$gt\":5,\n        \"$lt\":7\n      }\n    },\n    {\n      \"time.start\":{\n        \"$ge\":\"2018-08-28T19:00\"\n      }\n    }\n  ]\n}\n```\n",
            "name": "filter",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if at least one field is of type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "name": "format",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of language codes.\n\nWhen present, the system will return Entities that have profiles in one or more of the provided languages. For each Location, only the first available profile from the provided list of languages will be returned. The keyword `\"primary\"` can be used to refer to a Location’s primary profile without providing a specific language code. If an Entity does not have profiles in any of the languages provided, that Entity's primary profile will be returned.\n",
            "name": "languages",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "multipleOf": 1,
              "maximum": 50,
              "type": "number",
              "default": "10"
            },
            "description": "Number of results to return.",
            "name": "limit",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "multipleOf": 1,
              "type": "number",
              "default": "0"
            },
            "description": "Number of results to skip. Used to page through results.\nCannot be used together with **`pageToken`**.\n\nFor Live API requests, the offset cannot be higher than 9,950. For Knowledge API the maximum limit is only enforced if a filter and/or sortBy parameter are given.\n",
            "name": "offset",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "If a response to a previous request contained the **`pageToken`** field, pass that field's value as the **`pageToken`** parameter to retrieve the next page of data.",
            "name": "pageToken",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A comma-separated list of saved filter IDs.\n\nWhen present, the system will return entities that are included in the filters matching **all** of the provided IDs.\n",
            "name": "savedFilterIds",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A list of fields and sort directions to order results by. Each ordering in the list should be in the format `{\"field_name\", \"sort_direction\"}`, where `sort_direction` is either `ASCENDING` or `DESCENDING`.\n\nFor example, to order by `name` the sort order would be `[{\"name\":\"ASCENDING\"}]`. To order by `name` and then `description`, the sort order would be `[{\"name\":\"ASCENDING\"},{\"description\":\"ASCENDING\"}]`.\n",
            "name": "sortBy",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Entities: List",
        "description": "Retrieve a list of Entities within an account\n\n**NOTE:** Responses will contain resolved values for embedded fields\n",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "count": {
                          "multipleOf": 1,
                          "type": "number",
                          "description": "Total number of Entities that meet the filter criteria (ignores **``limit``** / **``offset``** parameters)"
                        },
                        "entities": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "meta": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "accountId": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "ID of the account associated with this Entity"
                                  },
                                  "countryCode": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                                  },
                                  "entityType": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                                  },
                                  "folderId": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                                  },
                                  "id": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "ID of this Entity\n\nFiltering Type: `text`"
                                  },
                                  "labels": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer.\n\nFiltering Type: `list of text`"
                                  },
                                  "language": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                                  },
                                  "timestamp": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                                  },
                                  "uid": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                                  }
                                },
                                "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "name": {
                                "minLength": 0,
                                "maxLength": 5000,
                                "type": "string",
                                "description": "\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "address": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "city": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                                  },
                                  "countryCode": {
                                    "minLength": 0,
                                    "pattern": "^[a-zA-Z]{2}$",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "extraDescription": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                                  },
                                  "line1": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "line2": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "line3": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "postalCode": {
                                    "minLength": 0,
                                    "maxLength": 10,
                                    "type": "string",
                                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "region": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "sublocality": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "acceptingNewPatients": {
                                "type": "boolean",
                                "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                              },
                              "acceptsReservations": {
                                "type": "boolean",
                                "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "accessHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "additionalHoursText": {
                                "minLength": 0,
                                "maxLength": 255,
                                "type": "string",
                                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "additionalPromotingLocations": {
                                "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Filtering Type: `entityId`"
                                }
                              },
                              "addressHidden": {
                                "type": "boolean",
                                "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "admittingHospitals": {
                                "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "adultPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ageRange": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "maxValue": {
                                    "multipleOf": 1,
                                    "type": "number",
                                    "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                                  },
                                  "minValue": {
                                    "multipleOf": 1,
                                    "type": "number",
                                    "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                                  }
                                },
                                "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "airportShuttle": {
                                "enum": [
                                  "AIRPORT_SHUTTLE_AVAILABLE",
                                  "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "airportTransfer": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "allInclusive": {
                                "enum": [
                                  "ALL_INCLUSIVE_RATES_AVAILABLE",
                                  "ALL_INCLUSIVE_RATES_ONLY",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "alternateNames": {
                                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "alternatePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "alternateWebsites": {
                                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 255,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                }
                              },
                              "androidAppUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "answer": {
                                "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                                "type": "string",
                                "format": "rich-text"
                              },
                              "applicationUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "associations": {
                                "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "attendance": {
                                "required": [
                                  "attendanceMode"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "attendanceMode": {
                                    "enum": [
                                      "OFFLINE",
                                      "ONLINE",
                                      "MIXED"
                                    ],
                                    "type": "string",
                                    "description": "Filtering Type: `option`"
                                  },
                                  "virtualLocationUrl": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "attire": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "DRESSY",
                                  "CASUAL",
                                  "FORMAL"
                                ],
                                "type": "string",
                                "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "babysittingOffered": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "baggageStorage": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bar": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "beachAccess": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "beachFrontProperty": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bicycles": {
                                "enum": [
                                  "BICYCLE_RENTALS",
                                  "BICYCLE_RENTALS_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bios": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "boutiqueStores": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "brands": {
                                "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "breakfast": {
                                "enum": [
                                  "BREAKFAST_AVAILABLE",
                                  "BREAKFAST_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "brunchHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "businessCenter": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "calendars": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "carRental": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "casino": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "categoryIds": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "catsAllowed": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "certifications": {
                                "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "checkInTime": {
                                "format": "time",
                                "type": "string",
                                "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "checkOutTime": {
                                "format": "time",
                                "type": "string",
                                "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "classificationRating": {
                                "pattern": "^\\d*\\.?\\d*$",
                                "type": "string",
                                "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "closed": {
                                "type": "boolean",
                                "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "concierge": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "conditionsTreated": {
                                "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "convenienceStore": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "currencyExchange": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "customKeywords": {
                                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "datePosted": {
                                "format": "date",
                                "type": "string",
                                "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "degrees": {
                                "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "ANP",
                                    "APN",
                                    "APRN",
                                    "ARNP",
                                    "CNM",
                                    "CNP",
                                    "CNS",
                                    "CPNP",
                                    "CRNA",
                                    "CRNP",
                                    "DC",
                                    "DDS",
                                    "DMD",
                                    "DNP",
                                    "DO",
                                    "DPM",
                                    "DVM",
                                    "FNP",
                                    "GNP",
                                    "LAC",
                                    "LPN",
                                    "MBA",
                                    "MBBS",
                                    "MD",
                                    "MPH",
                                    "ND",
                                    "NNP",
                                    "NP",
                                    "OD",
                                    "PA",
                                    "PAC",
                                    "PHARMD",
                                    "PHD",
                                    "PNP",
                                    "PSYD",
                                    "VMD",
                                    "WHNP"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                }
                              },
                              "deliveryHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "description": {
                                "minLength": 10,
                                "maxLength": 15000,
                                "type": "string",
                                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "displayCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "doctorOnCall": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "dogsAllowed": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "driveThroughHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                              },
                              "dropoffCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "educationList": {
                                "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "type",
                                    "institutionName",
                                    "yearCompleted"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "institutionName": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "type": {
                                      "enum": [
                                        "FELLOWSHIP",
                                        "RESIDENCY",
                                        "INTERNSHIP",
                                        "MEDICAL_SCHOOL"
                                      ],
                                      "type": "string",
                                      "description": "Filtering Type: `option`"
                                    },
                                    "yearCompleted": {
                                      "multipleOf": 1,
                                      "minimum": 1900,
                                      "maximum": 2100,
                                      "type": "number",
                                      "description": "Filtering Type: `integer`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "electricChargingStation": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "elevator": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ellipticalMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "emails": {
                                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "format": "email",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "employmentType": {
                                "enum": [
                                  "FULL_TIME",
                                  "PART_TIME",
                                  "CONTRACTOR",
                                  "TEMPORARY",
                                  "INTERN",
                                  "VOLUNTEER",
                                  "PER_DIEM",
                                  "OTHER"
                                ],
                                "type": "string",
                                "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "eventStatus": {
                                "enum": [
                                  "SCHEDULED",
                                  "RESCHEDULED",
                                  "POSTPONED",
                                  "CANCELED",
                                  "EVENT_MOVED_ONLINE"
                                ],
                                "type": "string",
                                "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "facebookCallToAction": {
                                "required": [
                                  "type"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "NONE",
                                      "BOOK_NOW",
                                      "CALL_NOW",
                                      "CONTACT_US",
                                      "SEND_MESSAGE",
                                      "USE_APP",
                                      "PLAY_GAME",
                                      "SHOP_NOW",
                                      "SIGN_UP",
                                      "WATCH_VIDEO",
                                      "SEND_EMAIL",
                                      "LEARN_MORE",
                                      "PURCHASE_GIFT_CARDS",
                                      "ORDER_NOW",
                                      "FOLLOW_PAGE"
                                    ],
                                    "type": "string",
                                    "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                                  },
                                  "value": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookCoverPhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "facebookDescriptor": {
                                "minLength": 3,
                                "maxLength": 75,
                                "type": "string",
                                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookOverrideCity": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookPageUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookProfilePhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "facebookVanityUrl": {
                                "minLength": 0,
                                "maxLength": 50,
                                "type": "string",
                                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "fax": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "featuredMessage": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "firstName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "firstPartyReviewPage": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "fitnessCenter": {
                                "enum": [
                                  "FITNESS_CENTER_AVAILABLE",
                                  "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "floorCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "freeWeights": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "frequentlyAskedQuestions": {
                                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "question"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "answer": {
                                      "minLength": 1,
                                      "maxLength": 4096,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "question": {
                                      "minLength": 1,
                                      "maxLength": 4096,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "frontDesk": {
                                "enum": [
                                  "FRONT_DESK_AVAILABLE",
                                  "FRONT_DESK_AVAILABLE_24_HOURS",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "gameRoom": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "gender": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "FEMALE",
                                  "MALE"
                                ],
                                "type": "string",
                                "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "geomodifier": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "giftShop": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "golf": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "googleAttributes": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {},
                                "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "googleCoverPhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "googleMyBusinessLabels": {
                                "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 50,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "googlePlaceId": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "googleProfilePhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "googleWebsiteOverride": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "happyHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "headshot": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "hiringOrganization": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "holidayHoursConversationEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "horsebackRiding": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "hotTub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "hours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "housekeeping": {
                                "enum": [
                                  "HOUSEKEEPING_AVAILABLE",
                                  "HOUSEKEEPING_AVAILABLE_DAILY",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "impressum": {
                                "minLength": 0,
                                "maxLength": 2000,
                                "type": "string",
                                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "indoorPoolCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "instagramHandle": {
                                "minLength": 0,
                                "maxLength": 30,
                                "type": "string",
                                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "insuranceAccepted": {
                                "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "iosAppUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "isClusterPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "isFreeEvent": {
                                "type": "boolean",
                                "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "isoRegionCode": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "keywords": {
                                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "kidFriendly": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kidsClub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kidsStayFree": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kitchenHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "labels": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "landingPageUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "languages": {
                                "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "lastName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "laundry": {
                                "enum": [
                                  "FULL_SERVICE",
                                  "SELF_SERVICE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "lazyRiver": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "lifeguard": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "linkedLocation": {
                                "type": "string",
                                "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                              },
                              "localPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "localShuttle": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "locatedIn": {
                                "type": "string",
                                "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                              },
                              "location": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "existingLocation": {
                                    "type": "string",
                                    "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                                  },
                                  "externalLocation": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "locationType": {
                                "enum": [
                                  "LOCATION",
                                  "HEALTHCARE_FACILITY",
                                  "HEALTHCARE_PROFESSIONAL",
                                  "ATM",
                                  "RESTAURANT",
                                  "HOTEL"
                                ],
                                "type": "string",
                                "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "logo": {
                                "required": [
                                  "image"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "clickthroughUrl": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "description": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "details": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "image": {
                                    "required": [
                                      "url"
                                    ],
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                    "properties": {
                                      "alternateText": {
                                        "minLength": 0,
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      },
                                      "url": {
                                        "minLength": 0,
                                        "format": "uri",
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      }
                                    }
                                  }
                                }
                              },
                              "mainPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "massage": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "maxAgeOfKidsStayFree": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "maxNumberOfKidsStayFree": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "mealsServed": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "BREAKFAST",
                                    "LUNCH",
                                    "BRUNCH",
                                    "DINNER",
                                    "HAPPY_HOUR",
                                    "LATE_NIGHT"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "meetingRoomCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "menuUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL where consumers can view the entity's menu\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "menus": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "middleName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "mobilePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "mobilityAccessible": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "nightclub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "npi": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                              },
                              "nudgeEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "officeName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "onlineServiceHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                              },
                              "orderUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL used to place an order at this entity\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "organizerEmail": {
                                "minLength": 0,
                                "format": "email",
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "organizerName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "organizerPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "outdoorPoolCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "parking": {
                                "enum": [
                                  "PARKING_AVAILABLE",
                                  "PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "paymentOptions": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "ALIPAY",
                                    "AMERICANEXPRESS",
                                    "ANDROIDPAY",
                                    "APPLEPAY",
                                    "ATM",
                                    "ATMQUICK",
                                    "BACS",
                                    "BANCONTACT",
                                    "BANKDEPOSIT",
                                    "BANKPAY",
                                    "BGO",
                                    "BITCOIN",
                                    "Bar",
                                    "CARTASI",
                                    "CASH",
                                    "CCS",
                                    "CHECK",
                                    "CONB",
                                    "CVVV",
                                    "DEBITNOTE",
                                    "DINERSCLUB",
                                    "DIRECTDEBIT",
                                    "DISCOVER",
                                    "ECKARTE",
                                    "ECOCHEQUE",
                                    "EKENA",
                                    "EMV",
                                    "FINANCING",
                                    "GOPAY",
                                    "HAYAKAKEN",
                                    "HEBAG",
                                    "IBOD",
                                    "ICCARDS",
                                    "ICOCA",
                                    "ID",
                                    "IDEAL",
                                    "INCA",
                                    "INVOICE",
                                    "JCB",
                                    "JCoinPay",
                                    "JKOPAY",
                                    "KITACA",
                                    "KLA",
                                    "KLARNA",
                                    "LINEPAY",
                                    "MAESTRO",
                                    "MANACA",
                                    "MASTERCARD",
                                    "MIPAY",
                                    "MONIZZE",
                                    "MPAY",
                                    "Manuelle Lastsch",
                                    "Merpay",
                                    "NANACO",
                                    "NEXI",
                                    "NIMOCA",
                                    "OREM",
                                    "PASMO",
                                    "PAYBACKPAY",
                                    "PAYBOX",
                                    "PAYCONIQ",
                                    "PAYPAL",
                                    "PAYPAY",
                                    "PAYSEC",
                                    "PIN",
                                    "POSTEPAY",
                                    "QRCODE",
                                    "QUICPAY",
                                    "RAKUTENEDY",
                                    "RAKUTENPAY",
                                    "SAMSUNGPAY",
                                    "SODEXO",
                                    "SUGOCA",
                                    "SUICA",
                                    "SWISH",
                                    "TICKETRESTAURANT",
                                    "TOICA",
                                    "TRAVELERSCHECK",
                                    "TSCUBIC",
                                    "TWINT",
                                    "UNIONPAY",
                                    "VEV",
                                    "VISA",
                                    "VISAELECTRON",
                                    "VOB",
                                    "VOUCHER",
                                    "VPAY",
                                    "WAON",
                                    "WECHATPAY",
                                    "WIRETRANSFER",
                                    "Yucho Pay",
                                    "ZELLE",
                                    "auPay",
                                    "dBarai",
                                    "Überweisung"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "performers": {
                                "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "petsAllowed": {
                                "enum": [
                                  "PETS_WELCOME",
                                  "PETS_WELCOME_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "photoGallery": {
                                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "image"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                  "properties": {
                                    "clickthroughUrl": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "description": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "details": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "image": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "pickupCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "pickupHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                              },
                              "priceRange": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "ONE",
                                  "TWO",
                                  "THREE",
                                  "FOUR"
                                ],
                                "type": "string",
                                "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                              },
                              "primaryConversationContact": {
                                "minLength": 0,
                                "type": "string",
                                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "privateBeach": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "privateCarService": {
                                "enum": [
                                  "PRIVATE_CAR_SERVICE",
                                  "PRIVATE_CAR_SERVICE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "productLists": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "products": {
                                "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "questionsAndAnswers": {
                                "type": "boolean",
                                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingCompetitors": {
                                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "name",
                                    "website"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                    },
                                    "website": {
                                      "minLength": 0,
                                      "maxLength": 255,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "rankTrackingEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingFrequency": {
                                "enum": [
                                  "WEEKLY",
                                  "MONTHLY",
                                  "QUARTERLY"
                                ],
                                "type": "string",
                                "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingQueryTemplates": {
                                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "KEYWORD",
                                    "KEYWORD_ZIP",
                                    "KEYWORD_CITY",
                                    "KEYWORD_IN_CITY",
                                    "KEYWORD_NEAR_ME",
                                    "KEYWORD_CITY_STATE"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                }
                              },
                              "rankTrackingSites": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "GOOGLE_DESKTOP",
                                    "GOOGLE_MOBILE",
                                    "BING_DESKTOP",
                                    "BING_MOBILE",
                                    "YAHOO_DESKTOP",
                                    "YAHOO_MOBILE"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "reservationUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL used to make reservations at this entity\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "restaurantCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "reviewGenerationUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "reviewResponseConversationEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "roomCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "roomService": {
                                "enum": [
                                  "ROOM_SERVICE_AVAILABLE",
                                  "ROOM_SERVICE_AVAILABLE_24_HOURS",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "routableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "salon": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "sauna": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "scuba": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "selfParking": {
                                "enum": [
                                  "SELF_PARKING_AVAILABLE",
                                  "SELF_PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "seniorHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "serviceArea": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "places": {
                                    "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  }
                                },
                                "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "serviceAreaPlaces": {
                                "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "type": {
                                      "enum": [
                                        "POSTAL_CODE",
                                        "REGION",
                                        "COUNTY",
                                        "CITY",
                                        "SUBLOCALITY"
                                      ],
                                      "type": "string",
                                      "description": "Filtering Type: `option`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "services": {
                                "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "smokeFreeProperty": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "snorkeling": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "socialHour": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "spa": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "specialities": {
                                "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "tableService": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "takeoutHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "tennis": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "thermalPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ticketAvailability": {
                                "enum": [
                                  "IN_STOCK",
                                  "SOLD_OUT",
                                  "PRE_ORDER",
                                  "UNSPECIFIED"
                                ],
                                "type": "string",
                                "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketPriceRange": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "currencyCode": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                                  },
                                  "maxValue": {
                                    "pattern": "^\\d*\\.?\\d*$",
                                    "type": "string",
                                    "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                                  },
                                  "minValue": {
                                    "pattern": "^\\d*\\.?\\d*$",
                                    "type": "string",
                                    "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                                  }
                                },
                                "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketSaleDateTime": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "time": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "end": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                  },
                                  "start": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                  }
                                },
                                "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "timeZoneUtcOffset": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "timezone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "tollFreePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "treadmill": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ttyPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "turndownService": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "twitterHandle": {
                                "minLength": 0,
                                "maxLength": 15,
                                "type": "string",
                                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "uberLink": {
                                "required": [
                                  "presentation"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "presentation": {
                                    "enum": [
                                      "BUTTON",
                                      "LINK"
                                    ],
                                    "type": "string",
                                    "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                                  },
                                  "text": {
                                    "minLength": 0,
                                    "maxLength": 100,
                                    "type": "string",
                                    "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "uberTripBranding": {
                                "required": [
                                  "text",
                                  "url",
                                  "description"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "minLength": 0,
                                    "maxLength": 150,
                                    "type": "string",
                                    "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "text": {
                                    "minLength": 0,
                                    "maxLength": 28,
                                    "type": "string",
                                    "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "valetParking": {
                                "enum": [
                                  "VALET_PARKING_AVAILABLE",
                                  "VALET_PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "validThrough": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "vendingMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "venueName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "videos": {
                                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "video"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "minLength": 0,
                                      "maxLength": 140,
                                      "type": "string",
                                      "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                    },
                                    "video": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "wadingPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wakeUpCalls": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "walkableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "waterPark": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "waterSkiing": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "watercraft": {
                                "enum": [
                                  "WATERCRAFT_RENTALS",
                                  "WATERCRAFT_RENTALS_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "waterslide": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wavePool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "websiteUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL for this entity's website\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "weightMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wheelchairAccessible": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wifiAvailable": {
                                "enum": [
                                  "WIFI_AVAILABLE",
                                  "WIFI_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "workRemote": {
                                "type": "boolean",
                                "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "yearEstablished": {
                                "multipleOf": 1,
                                "minimum": 1000,
                                "maximum": 2028,
                                "type": "number",
                                "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yearLastRenovated": {
                                "multipleOf": 1,
                                "minimum": 1000,
                                "maximum": 2028,
                                "type": "number",
                                "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "yextDisplayCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "yextDropoffCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextPickupCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextRoutableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextWalkableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              }
                            }
                          }
                        },
                        "pageToken": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Pass this value into the next request as the **`pageToken`** parameter to retrieve the next page of data.\n\nIf the response of a request contains the last page of data, a **`pageToken`** value will not be returned. A **`pageToken`** will never appear in the response if the request contains the **`sortOrder`**, **`randomization`**, or **`randomizationToken`** parameters.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/entities/{entityId}": {
      "get": {
        "operationId": "getEntity",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The external ID of the requested Entity",
            "name": "entityId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of field names. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"address.line1\"`). Custom fields are specified in the same way, albeit with their `c_*` name.",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if at least one field is of type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "name": "format",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Entities: Get",
        "description": "Retrieve information for an Entity with a given ID\n\n**NOTE:** Responses will contain resolved values for embedded fields\n",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "meta": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "accountId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of the account associated with this Entity"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                            },
                            "entityType": {
                              "minLength": 0,
                              "type": "string",
                              "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                            },
                            "folderId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                            },
                            "id": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of this Entity\n\nFiltering Type: `text`"
                            },
                            "labels": {
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer.\n\nFiltering Type: `list of text`"
                            },
                            "language": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                            },
                            "timestamp": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                            },
                            "uid": {
                              "minLength": 0,
                              "type": "string",
                              "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                            }
                          },
                          "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "name": {
                          "minLength": 0,
                          "maxLength": 5000,
                          "type": "string",
                          "description": "\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "address": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "city": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "pattern": "^[a-zA-Z]{2}$",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "extraDescription": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                            },
                            "line1": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line2": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line3": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "postalCode": {
                              "minLength": 0,
                              "maxLength": 10,
                              "type": "string",
                              "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "region": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "sublocality": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "acceptingNewPatients": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "acceptsReservations": {
                          "type": "boolean",
                          "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "accessHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalHoursText": {
                          "minLength": 0,
                          "maxLength": 255,
                          "type": "string",
                          "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalPromotingLocations": {
                          "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Filtering Type: `entityId`"
                          }
                        },
                        "addressHidden": {
                          "type": "boolean",
                          "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "admittingHospitals": {
                          "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "adultPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ageRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "maxValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                            },
                            "minValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                            }
                          },
                          "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "airportShuttle": {
                          "enum": [
                            "AIRPORT_SHUTTLE_AVAILABLE",
                            "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "airportTransfer": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "allInclusive": {
                          "enum": [
                            "ALL_INCLUSIVE_RATES_AVAILABLE",
                            "ALL_INCLUSIVE_RATES_ONLY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "alternateNames": {
                          "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "alternatePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "alternateWebsites": {
                          "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 255,
                            "format": "uri",
                            "type": "string",
                            "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                          }
                        },
                        "androidAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "answer": {
                          "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                          "type": "string",
                          "format": "rich-text"
                        },
                        "applicationUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "associations": {
                          "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "attendance": {
                          "required": [
                            "attendanceMode"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "attendanceMode": {
                              "enum": [
                                "OFFLINE",
                                "ONLINE",
                                "MIXED"
                              ],
                              "type": "string",
                              "description": "Filtering Type: `option`"
                            },
                            "virtualLocationUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          },
                          "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "attire": {
                          "enum": [
                            "UNSPECIFIED",
                            "DRESSY",
                            "CASUAL",
                            "FORMAL"
                          ],
                          "type": "string",
                          "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "babysittingOffered": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "baggageStorage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bar": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachAccess": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachFrontProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bicycles": {
                          "enum": [
                            "BICYCLE_RENTALS",
                            "BICYCLE_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bios": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "boutiqueStores": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brands": {
                          "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "breakfast": {
                          "enum": [
                            "BREAKFAST_AVAILABLE",
                            "BREAKFAST_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brunchHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "businessCenter": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "calendars": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "carRental": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "casino": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "categoryIds": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          },
                          "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "catsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "certifications": {
                          "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "checkInTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "checkOutTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "classificationRating": {
                          "pattern": "^\\d*\\.?\\d*$",
                          "type": "string",
                          "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "closed": {
                          "type": "boolean",
                          "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "concierge": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "conditionsTreated": {
                          "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "convenienceStore": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "currencyExchange": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "customKeywords": {
                          "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "datePosted": {
                          "format": "date",
                          "type": "string",
                          "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "degrees": {
                          "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ANP",
                              "APN",
                              "APRN",
                              "ARNP",
                              "CNM",
                              "CNP",
                              "CNS",
                              "CPNP",
                              "CRNA",
                              "CRNP",
                              "DC",
                              "DDS",
                              "DMD",
                              "DNP",
                              "DO",
                              "DPM",
                              "DVM",
                              "FNP",
                              "GNP",
                              "LAC",
                              "LPN",
                              "MBA",
                              "MBBS",
                              "MD",
                              "MPH",
                              "ND",
                              "NNP",
                              "NP",
                              "OD",
                              "PA",
                              "PAC",
                              "PHARMD",
                              "PHD",
                              "PNP",
                              "PSYD",
                              "VMD",
                              "WHNP"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "deliveryHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "description": {
                          "minLength": 10,
                          "maxLength": 15000,
                          "type": "string",
                          "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "displayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "doctorOnCall": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "dogsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "driveThroughHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                        },
                        "dropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "educationList": {
                          "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "type",
                              "institutionName",
                              "yearCompleted"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "institutionName": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "FELLOWSHIP",
                                  "RESIDENCY",
                                  "INTERNSHIP",
                                  "MEDICAL_SCHOOL"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              },
                              "yearCompleted": {
                                "multipleOf": 1,
                                "minimum": 1900,
                                "maximum": 2100,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "electricChargingStation": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "elevator": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ellipticalMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "emails": {
                          "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "format": "email",
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "employmentType": {
                          "enum": [
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "OTHER"
                          ],
                          "type": "string",
                          "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "eventStatus": {
                          "enum": [
                            "SCHEDULED",
                            "RESCHEDULED",
                            "POSTPONED",
                            "CANCELED",
                            "EVENT_MOVED_ONLINE"
                          ],
                          "type": "string",
                          "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "facebookCallToAction": {
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "type": {
                              "enum": [
                                "NONE",
                                "BOOK_NOW",
                                "CALL_NOW",
                                "CONTACT_US",
                                "SEND_MESSAGE",
                                "USE_APP",
                                "PLAY_GAME",
                                "SHOP_NOW",
                                "SIGN_UP",
                                "WATCH_VIDEO",
                                "SEND_EMAIL",
                                "LEARN_MORE",
                                "PURCHASE_GIFT_CARDS",
                                "ORDER_NOW",
                                "FOLLOW_PAGE"
                              ],
                              "type": "string",
                              "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                            },
                            "value": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookDescriptor": {
                          "minLength": 3,
                          "maxLength": 75,
                          "type": "string",
                          "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookOverrideCity": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookPageUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookVanityUrl": {
                          "minLength": 0,
                          "maxLength": 50,
                          "type": "string",
                          "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fax": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "featuredMessage": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 50,
                              "type": "string",
                              "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "firstName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "firstPartyReviewPage": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fitnessCenter": {
                          "enum": [
                            "FITNESS_CENTER_AVAILABLE",
                            "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "floorCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "freeWeights": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "frequentlyAskedQuestions": {
                          "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "question"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "answer": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "question": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "frontDesk": {
                          "enum": [
                            "FRONT_DESK_AVAILABLE",
                            "FRONT_DESK_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gameRoom": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gender": {
                          "enum": [
                            "UNSPECIFIED",
                            "FEMALE",
                            "MALE"
                          ],
                          "type": "string",
                          "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "geomodifier": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "giftShop": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "golf": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "googleAttributes": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {},
                          "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "googleCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleMyBusinessLabels": {
                          "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 50,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "googlePlaceId": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "googleProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleWebsiteOverride": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "happyHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "headshot": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "hiringOrganization": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "holidayHoursConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "horsebackRiding": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hotTub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "housekeeping": {
                          "enum": [
                            "HOUSEKEEPING_AVAILABLE",
                            "HOUSEKEEPING_AVAILABLE_DAILY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "impressum": {
                          "minLength": 0,
                          "maxLength": 2000,
                          "type": "string",
                          "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "indoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "instagramHandle": {
                          "minLength": 0,
                          "maxLength": 30,
                          "type": "string",
                          "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "insuranceAccepted": {
                          "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "iosAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "isClusterPrimary": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "isFreeEvent": {
                          "type": "boolean",
                          "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "isoRegionCode": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "keywords": {
                          "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "kidFriendly": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsClub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsStayFree": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kitchenHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "labels": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string"
                          },
                          "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "landingPageUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "languages": {
                          "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "lastName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "laundry": {
                          "enum": [
                            "FULL_SERVICE",
                            "SELF_SERVICE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lazyRiver": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lifeguard": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "linkedLocation": {
                          "type": "string",
                          "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                        },
                        "localPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "localShuttle": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "locatedIn": {
                          "type": "string",
                          "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                        },
                        "location": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "existingLocation": {
                              "type": "string",
                              "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                            },
                            "externalLocation": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "locationType": {
                          "enum": [
                            "LOCATION",
                            "HEALTHCARE_FACILITY",
                            "HEALTHCARE_PROFESSIONAL",
                            "ATM",
                            "RESTAURANT",
                            "HOTEL"
                          ],
                          "type": "string",
                          "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "logo": {
                          "required": [
                            "image"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                          "properties": {
                            "clickthroughUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "description": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "details": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "image": {
                              "required": [
                                "url"
                              ],
                              "additionalProperties": false,
                              "type": "object",
                              "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                              "properties": {
                                "alternateText": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "url": {
                                  "minLength": 0,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              }
                            }
                          }
                        },
                        "mainPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "massage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxAgeOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxNumberOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "mealsServed": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "BREAKFAST",
                              "LUNCH",
                              "BRUNCH",
                              "DINNER",
                              "HAPPY_HOUR",
                              "LATE_NIGHT"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "meetingRoomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "menuUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL where consumers can view the entity's menu\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "menus": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "middleName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "mobilePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "mobilityAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "nightclub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "npi": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "nudgeEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "officeName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "onlineServiceHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "orderUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to place an order at this entity\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "organizerEmail": {
                          "minLength": 0,
                          "format": "email",
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "outdoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "parking": {
                          "enum": [
                            "PARKING_AVAILABLE",
                            "PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "paymentOptions": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ALIPAY",
                              "AMERICANEXPRESS",
                              "ANDROIDPAY",
                              "APPLEPAY",
                              "ATM",
                              "ATMQUICK",
                              "BACS",
                              "BANCONTACT",
                              "BANKDEPOSIT",
                              "BANKPAY",
                              "BGO",
                              "BITCOIN",
                              "Bar",
                              "CARTASI",
                              "CASH",
                              "CCS",
                              "CHECK",
                              "CONB",
                              "CVVV",
                              "DEBITNOTE",
                              "DINERSCLUB",
                              "DIRECTDEBIT",
                              "DISCOVER",
                              "ECKARTE",
                              "ECOCHEQUE",
                              "EKENA",
                              "EMV",
                              "FINANCING",
                              "GOPAY",
                              "HAYAKAKEN",
                              "HEBAG",
                              "IBOD",
                              "ICCARDS",
                              "ICOCA",
                              "ID",
                              "IDEAL",
                              "INCA",
                              "INVOICE",
                              "JCB",
                              "JCoinPay",
                              "JKOPAY",
                              "KITACA",
                              "KLA",
                              "KLARNA",
                              "LINEPAY",
                              "MAESTRO",
                              "MANACA",
                              "MASTERCARD",
                              "MIPAY",
                              "MONIZZE",
                              "MPAY",
                              "Manuelle Lastsch",
                              "Merpay",
                              "NANACO",
                              "NEXI",
                              "NIMOCA",
                              "OREM",
                              "PASMO",
                              "PAYBACKPAY",
                              "PAYBOX",
                              "PAYCONIQ",
                              "PAYPAL",
                              "PAYPAY",
                              "PAYSEC",
                              "PIN",
                              "POSTEPAY",
                              "QRCODE",
                              "QUICPAY",
                              "RAKUTENEDY",
                              "RAKUTENPAY",
                              "SAMSUNGPAY",
                              "SODEXO",
                              "SUGOCA",
                              "SUICA",
                              "SWISH",
                              "TICKETRESTAURANT",
                              "TOICA",
                              "TRAVELERSCHECK",
                              "TSCUBIC",
                              "TWINT",
                              "UNIONPAY",
                              "VEV",
                              "VISA",
                              "VISAELECTRON",
                              "VOB",
                              "VOUCHER",
                              "VPAY",
                              "WAON",
                              "WECHATPAY",
                              "WIRETRANSFER",
                              "Yucho Pay",
                              "ZELLE",
                              "auPay",
                              "dBarai",
                              "Überweisung"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "performers": {
                          "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "petsAllowed": {
                          "enum": [
                            "PETS_WELCOME",
                            "PETS_WELCOME_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "photoGallery": {
                          "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "image"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                            "properties": {
                              "clickthroughUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "description": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "details": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "image": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "pickupHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                        },
                        "priceRange": {
                          "enum": [
                            "UNSPECIFIED",
                            "ONE",
                            "TWO",
                            "THREE",
                            "FOUR"
                          ],
                          "type": "string",
                          "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "primaryConversationContact": {
                          "minLength": 0,
                          "type": "string",
                          "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "privateBeach": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "privateCarService": {
                          "enum": [
                            "PRIVATE_CAR_SERVICE",
                            "PRIVATE_CAR_SERVICE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "productLists": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "products": {
                          "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "questionsAndAnswers": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingCompetitors": {
                          "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "name",
                              "website"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "website": {
                                "minLength": 0,
                                "maxLength": 255,
                                "format": "uri",
                                "type": "string",
                                "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "rankTrackingEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingFrequency": {
                          "enum": [
                            "WEEKLY",
                            "MONTHLY",
                            "QUARTERLY"
                          ],
                          "type": "string",
                          "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingQueryTemplates": {
                          "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "KEYWORD",
                              "KEYWORD_ZIP",
                              "KEYWORD_CITY",
                              "KEYWORD_IN_CITY",
                              "KEYWORD_NEAR_ME",
                              "KEYWORD_CITY_STATE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "rankTrackingSites": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "GOOGLE_DESKTOP",
                              "GOOGLE_MOBILE",
                              "BING_DESKTOP",
                              "BING_MOBILE",
                              "YAHOO_DESKTOP",
                              "YAHOO_MOBILE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reservationUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to make reservations at this entity\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "restaurantCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "reviewGenerationUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reviewResponseConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "roomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "roomService": {
                          "enum": [
                            "ROOM_SERVICE_AVAILABLE",
                            "ROOM_SERVICE_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "routableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "salon": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "sauna": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "scuba": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "selfParking": {
                          "enum": [
                            "SELF_PARKING_AVAILABLE",
                            "SELF_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "seniorHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "serviceArea": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "places": {
                              "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            }
                          },
                          "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "serviceAreaPlaces": {
                          "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "POSTAL_CODE",
                                  "REGION",
                                  "COUNTY",
                                  "CITY",
                                  "SUBLOCALITY"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "services": {
                          "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "smokeFreeProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "snorkeling": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "socialHour": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "spa": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "specialities": {
                          "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "tableService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "takeoutHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "tennis": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "thermalPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ticketAvailability": {
                          "enum": [
                            "IN_STOCK",
                            "SOLD_OUT",
                            "PRE_ORDER",
                            "UNSPECIFIED"
                          ],
                          "type": "string",
                          "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketPriceRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                            },
                            "maxValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                            },
                            "minValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                            }
                          },
                          "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketSaleDateTime": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "time": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "date-time",
                              "type": "string",
                              "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            },
                            "start": {
                              "format": "date-time",
                              "type": "string",
                              "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            }
                          },
                          "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "timeZoneUtcOffset": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "timezone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "tollFreePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "treadmill": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ttyPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "turndownService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "twitterHandle": {
                          "minLength": 0,
                          "maxLength": 15,
                          "type": "string",
                          "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberLink": {
                          "required": [
                            "presentation"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "presentation": {
                              "enum": [
                                "BUTTON",
                                "LINK"
                              ],
                              "type": "string",
                              "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 100,
                              "type": "string",
                              "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberTripBranding": {
                          "required": [
                            "text",
                            "url",
                            "description"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 150,
                              "type": "string",
                              "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 28,
                              "type": "string",
                              "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "valetParking": {
                          "enum": [
                            "VALET_PARKING_AVAILABLE",
                            "VALET_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "validThrough": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "vendingMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "venueName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "videos": {
                          "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "video"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "description": {
                                "minLength": 0,
                                "maxLength": 140,
                                "type": "string",
                                "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "video": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "wadingPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wakeUpCalls": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "walkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "waterPark": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterSkiing": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "watercraft": {
                          "enum": [
                            "WATERCRAFT_RENTALS",
                            "WATERCRAFT_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterslide": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wavePool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "websiteUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL for this entity's website\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "weightMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wheelchairAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wifiAvailable": {
                          "enum": [
                            "WIFI_AVAILABLE",
                            "WIFI_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "workRemote": {
                          "type": "boolean",
                          "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "yearEstablished": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yearLastRenovated": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "yextDisplayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "yextDropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextPickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextRoutableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextWalkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/entities/geosearch": {
      "get": {
        "operationId": "geoSearchEntities",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Only entities near this position will be returned. The values can be specified in one of two ways:\n\n1) Latitude and Longitude: The latitude and longitude of the point, separated by a comma (e.g.`\"40.740957,-73.987565\"`),\n\n2) Address: A free-form address to geocode into a latitude and longitude (e.g., `\"1 Madison Ave, New York, NY 10010\"` or `\"New York, NY\"`).\n\nNote that providing an address that resolves to an area, like a city or a postal code, does not restrict the search to exactly that area; it simply centers the search circle on a point in that area.\n",
            "name": "location",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The two-character ISO 3166-1 code of the country where the geocoder should be biased.\n\nThe value of the **`countryBias`** parameter influences the search results, but it does not guarantee that the geocoded location will be in the country provided.\n\nIf both **`countryBias`** and **`geocoderBias`** are provided, **`geocoderBias`** is given priority, but both values are considered in the search.\n",
            "name": "countryBias",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of Entity types to filter on. Example: `\"location,event\"`\n\nShould be from the following types:\n  * `atm`\n  * `event`\n  * `faq`\n  * `financialProfessional`\n  * `healthcareFacility`\n  * `healthcareProfessional`\n  * `hotel`\n  * `hotelRoomType`\n  * `job`\n  * `location`\n  * `organization`\n  * `product`\n  * `restaurant`\n\nOR the API name of a custom entity type.\n",
            "name": "entityTypes",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of field names. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"address.line1\"`). Custom fields are specified in the same way, albeit with their `c_*` name.",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "This parameter represents one or more filtering conditions that are applied to the set of entities that would otherwise be returned. This parameter should be provided as a URL-encoded string containing a JSON object.\n\nFor example, if the filter JSON is `{\"name\":{\"$eq\":\"John\"}}`, then the filter param after URL-encoding will be: `filter=%7B%22name%22%3A%7B%22%24eq%22%3A%22John%22%7D%7D`\n\n**Basic Filter Structure**\n\nThe filter object at its core consists of a *matcher*, a *field*, and an *argument*.\n\nFor example, in the following filter JSON:\n\n```\n{\n  \"name\":{\n    \"$eq\":\"John\"\n  }\n}\n```\n\n`$eq` is the *matcher*, or filtering operation (equals, in this example),\n\n`name` is the *field* being filtered by, and\n\n`John` is *value* to be matched against.\n\n**Combining Multiple Filters**\n\nMultiple filters can be combined into one object using *combinators*. For example, the following filter JSON combines multiple filters using the combinator `$and`. `$or` is also supported.\n```\n{\n  \"$and\":[\n    {\n      \"firstName\":{\n        \"$eq\":\"John\"\n      }\n    },\n    {\n      \"countryCode\":{\n        \"$in\":[\n          \"US\",\n          \"GB\"\n        ]\n      }\n    }\n  ]\n}\n```\n\n**Filter Negation**\n\nCertain filter types may be negated. For example:\n\n```\n{\n  \"$not\" {\n    \"name\":{\n      \"$eq\":\"John\"\n    }\n  }\n}\n```\n\nThis can also be written more simply with a `!` in the `$eq` parameter. The following filter would have the same effect:\n\n```\n{\n  \"name\":{\n    \"!$eq\":\"John\"\n  }\n}\n```\n\n**Filter Complement**\n\nYou can also search for the complement of a filter. This filter would match entities that do not contain \"hello\" in their descriptions, or do not have a description set. This is different from negation which can only match entities who have the negated field set to something.\n\n```\n{\n  \"$complement\":{\n    \"description\":{\n      \"$contains\":\"hello\"\n    }\n  }\n}\n```\n\n**Addressing Subfields**\n\nSubfields of fields can be addressed using the \"dot\" notation while filtering. For example, if you have a custom field called **`c_myCustomField`**:\n\n```\n{\n  \"c_myCustomField\":{\n    \"age\": 30,\n    \"name\": \"Jim\",\n  }\n}\n```\n\nWhile filtering, subfields may be addressed using the \"dot\" notation.\n\n```\n{\n  \"c_myCustomField.name\":{\n    \"!$eq\":\"John\"\n  }\n}\n```\n\nFields that are nested deeper may be addressed using dot notation, as well. For example, if **`name`** in the above example was a compound field with two subfields **`first`** and **`last`**, **`first`** may be addressed as **`c_myCustomField.name.first`**.\n\n**Field Support**\n\nEntity fields correspond to certain filter types, which support matchers. Going by the example above, the field **`name`** supports the `TEXT` filter type, which supports `$eq` (equals) and `$startsWith` (starts with).\n\n**TEXT**\n\nThe `TEXT` filter type is supported for text fields. (e.g., **`name`**, **`countryCode`**)\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq (equals)</th>\n    <th>\n\n    {\n      \"countryCode\":{\n        \"$eq\":\"US\"\n      }\n    },\n    {\n      \"countryCode\":{\n        \"!$eq\":\"US\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n  Matches if the field starts with the argument value.\n\n  e.g., \"Amazing\" starts with \"amaz\"\n\n    {\n       \"address.line1\":{\n          \"$startsWith\": \"Jo\"\n       }\n    }\n\n  Supports negation. Case insensitive.\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n  Matches if field value is a member of the argument list.\n\n    {\n      \"firstName\":{\n        \"$in\": [\"John\", \"Jimmy\"]\n      }\n    }\n\n  Does not support negation. Negation can be mimicked by using an \"OR\" matcher, for example:\n\n    {\n      \"$and\":[\n        {\n          \"firstName\":{\n            \"!$eq\": \"John\"\n          }\n        },\n        {\n          \"firstName\":{\n            \"!$eq\": \"Jimmy\"\n          }\n        }\n      ]\n    }\n\n  </tr>\n  <tr>\n    <th>$contains</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$contains\":\"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" is contained in any string within **`c_myString`**.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n  <tr>\n    <th>$containsAny</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$containsAny\":[\n          \"sample1\", \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if either \"sample1\" or \"sample2\" is contained in any string within **`c_myString`**. The argument list can contain more than two strings.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n  <tr>\n    <th>$containsAll</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$containsAll\":[\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"sample1\" and \"sample2\" are contained in any string within **`c_myString`**. The argument list can contain more than two strings.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n</table>\n\n**BOOLEAN**\n\n\nThe BOOLEAN filter type is supported for boolean fields and Yes / No custom fields.\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"isFreeEvent\": {\n        \"$eq\": true\n      }\n    }\n\n  For booleans, the filter takes a boolean value, not a string.\n  Supports negation.\n  </tr>\n</table>\n\n**STRUCT**\n\nThe STRUCT filter type is supported for compound fields with subfields.\n\n*e.g., **`address`**, **`featuredMessage`**, fields of custom types*\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$hasProperty</th>\n    <th>\n\n  Matches if argument is a key (subfield) of field being filtered by. This filter type is useful for filtering by compound fields or to check if certain fields have a value set.\n\n    {\n      \"address\": {\n        \"$hasProperty\": \"line1\"\n      }\n    }\n\n  Note that if a given property of a compound field is not set, the filter will not match. For example, if `line1` of **`address`** is not set for an entity, then the above matcher will not match the entity.\n\n  Supports negation.\n\n  </tr>\n</table>\n\n**OPTION**\n\nThe OPTION filter type is supported for options custom fields and fields that have a predetermined list of valid values.\n\n *e.g., **`eventStatus`**, **`gender`**, `SINGLE_OPTION` and `MULTI_OPTION` types of custom fields.*\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n  Matching is case insensitive and insensitive to consecutive whitespace.\n\n  e.g., \"XYZ 123\" matches \"xyz       123\"\n\n    {\n      \"eventStatus\": {\n        \"$eq\": \"SCHEDULED\"\n      }\n    }\n\n  Supports negation. Negating `$eq` on the list will match any field that does not hold any of the provided values.\n\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n    {\n      \"eventStatus\": {\n        \"$in\": [\n          \"SCHEDULED\",\n          \"POSTPONED\"\n        ]\n      }\n    }\n\n  Does not support negation. However, negation can be mimicked by using an `$and` matcher to negate individually over the desired values. For example:\n\n    {\n      \"$and\": [\n        {\n          \"eventStatus\":{\n            \"!$eq\": \"SCHEDULED\"\n          }\n        },\n        {\n          \"firstName\":{\n            \"!$eq\": \"POSTPONED\"\n          }\n        }\n      ]\n    }\n\n  </tr>\n</table>\n\n**PHONE**\n\nThe PHONE filter type is supported for phone number fields only. PHONE will support the same matchers as TEXT, except that for `$eq`, the same phone number with or without calling code will match.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"mainPhone\":{\n        \"$eq\":\"+18187076189\"\n      }\n    },\n    {\n      \"mainPhone\":{\n        \"$eq\":\"8187076189\"\n      }\n    },\n    {\n      \"mainPhone\":{\n        \"!$eq\":\"9177076189\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n  Matches if the field starts with the argument value.\n\n  e.g., \"8187076189\" starts with \"818\"\n\n    {\n      \"mainPhone\":{\n        \"$startsWith\": \"818\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n  Matches if field value is a member of the argument list.\n\n    {\n      \"mainPhone\":{\n        \"$in\": [\n          \"8185551616\",\n          \"9171112211\"\n        ]\n      }\n    }\n\n  Does not support negation. However, negation can be mimicked by using an `$and` matcher to negate individually over the desired values.\n\n  </tr>\n</table>\n\n**INTEGER, FLOAT, DATE, DATETIME, and TIME**\n\nThese filter types are strictly ordered -- therefore, they support the following matchers:\n- Equals\n- Less Than / Less Than or Equal To\n- Greater Than / Greater Than or Equal To\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n  Equals\n\n    {\n      \"ageRange.maxValue\": {\n        \"$eq\": \"80\"\n      }\n    }\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$lt</th>\n    <th>\n\n  Less than\n\n    {\n      \"time.start\": {\n        \"$lt\": \"2018-08-28T05:56\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$gt</th>\n    <th>\n\n  Greater than\n\n    {\n      \"ageRange.maxValue\": {\n        \"$gt\": \"50\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$le</th>\n    <th>\n\n  Less than or equal to\n\n    {\n      \"ageRange.maxValue\": {\n        \"$le\": \"40\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$ge</th>\n    <th>\n\n  Greater than or equal to\n\n    {\n      \"time.end\": {\n        \"$ge\":  \"2018-08-28T05:56\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>Combinations</th>\n    <th>\n\n  While we do not support \"between\" in our filtering syntax, it is possible to combine multiple matchers for a result similar to an \"and\" operation:\n\n    {\n      \"ageRange.maxValue : {\n        \"$gt\" : 10,\n        \"$lt\": 20\n      }\n    }\n\n  </tr>\n</table>\n\n**LIST OF TEXT**\n\nAny field that has a list of valid values and supports any of the previously mentioned filter types will also support the `$contains` matcher.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eq\": \"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" EXACTLY matches any string within **`c_myStringList`**.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAny</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAny\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if any one of \"sample1\" or \"sample2\" EXACTLY match a string within **`c_myStringList`** . The argument can have more than two strings.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"sample1\" AND \"sample2\" EXACTLY match a string within **`c_myStringList`**. The argument can have more than two strings.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$contains</th>\n    <th>\n\n    {\n      \"c_myStringList\":{\n        \"$contains\":\"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" is contained in any string within **`c_myStringList`**.\n\n  Note that this matching is \"left edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This is a sample\", \"Sample one\", \"Sample 2\" but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$containsAny</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$containsAny\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n\n  This filter will match if either \"sample1\" or \"sample2\" is contained in any string within **`c_myStringList`**. The argument list can have more than two strings.\n\n  Note that similar to `$contains`, the matching for `$containsAny` is \"left edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This is a sample\", \"Sample one\", \"Sample 2\" but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$containsAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$containsAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if BOTH \"sample1\" and \"sample2\" are contained in strings within **`c_myStringList`**. The argument list can have more than two strings.\n\n  Note that similar to `$contains`, the matching for `$containsAll` is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$startsWith\":\"sample\"\n      }\n    }\n\n  This filter will match if any string within **`c_myStringList`** starts with \"sample\".\n\n  Does not supports negation. Case Insensitive.\n\n  </tr>\n</table>\n\n**LIST OF BOOLEAN, OPTION, PHONE, INTEGER, FLOAT, DATE, DATETIME, OR TIME**\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"c_myDateList\": {\n        \"$eq\": \"2019-01-01\"\n      }\n    }\n\n\n  This filter will match if \"2019-01-01\" EXACTLY matches any date within **`c_myDateList`**.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAny</th>\n    <th>\n\n    {\n      \"c_myIntegerList\": {\n        \"$eqAny\": [1, 2]\n      }\n    }\n\n  This filter will match if 1 or 2 EXACTLY match any integer within **`c_myIntegerList`**. The argument list can have more than two elements.\n\n  Supports negation.\n\n  </tr>\n\n  <tr>\n    <th>$eqAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"2019-01-01\" AND \"2019-01-02\" EXACTLY match a date within **`c_myDateList`**. The argument list can have more than two elements.\n\n  Supports negation.\n\n  </tr>\n</table>\n\n**LIST OF STRUCT**\n\nFiltering on lists of struct types is a bit nuanced. Filtering can only be done on lists of structs of the SAME type.\nFor example, if **`c_myStructList`** is a list of compound fields with the subfields **`age`** and **`name`**, then one can address the **`age`** properties of each field in **`c_myStructList`** as a flattened list of integers and filtering upon them. For example, the following filter:\n\n```\n{\n  \"c_myStructList.age\":{\n    \"$eq\": 20\n  }\n}\n```\n\nwill match if any field in the list has an **`age`** property equal to 20. Similarly, any filter that can be applied to lists of integers could be applied to **`age`** in this case (`$eq`, `$eqAll`, `$eqAny`).\n\n\n**HOURS**\n\nBy filtering on an hours field, you can find which entities are open or closed at a specified time or during a certain time range. All of these filters also take an entity’s holiday hours and reopen date into account.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$openAt</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openAt\":\n          \"2019-01-06T13:45\"\n      }\n    }\n\n\n  This filter would match entities open at the specified time.\n\n  </tr>\n  <tr>\n    <th>$closedAt</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedAt:\n          \"2019-01-06T13:45\"\n      }\n    }\n\n  </tr>\n\n  <tr>\n    <th>$openForAllOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openForAllOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n\n  This filter would match only those entities that are open for the entire range between 2019-01-06T13:45 and 2019-01-06T15:00.\n\n    {\n      \"hours\": {\n        \"$openForAllOf\":\n          \"2019-05-10\"\n      }\n    }\n\n  This filter would match entities open for the entire 24 hour period on 2019-05-10.\n\n  You can also supply a year, a month, or an hour to filter for entities open for the entire year, month, or hour, respectively.\n\n  </tr>\n  <tr>\n    <th>$openForAnyOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openForAnyOf\": {\n          \"start\": \"now\",\n          \"end\": \"now+2h\"\n        }\n      }\n    }\n\n  This filter will match any entities that are open for at least a portion of the time range between now and two hours from now.\n\n  </tr>\n  <tr>\n    <th>$closedForAllOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedForAllOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n  This filter will match only those entities that are closed for the entire given time range.\n  </tr>\n  <tr>\n    <th>$closedForAnyOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedForAnyOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n  This filter will match any entities that are closed for at least a portion of the given time range.\n  </tr>\n</table>\n\n\n**Filtering by Dates and Times**\n\n**Time zones**\n\nThe filtering language supports searching both in local time and within a certain time zone. Searching in local time will simply ignore the time zone on the target entities, while providing one will convert the zone of your queried time to the zone of the target entities.\n\nTo search in local time, simply provide the date or time without any zone: `2019-06-07T15:30` or `2019-06-07`.\n\nTo conduct a zoned search, provide the name of the time zone in brackets after the time, as it is shown in the tz database: `2019-06-07T15:30[America/New_York]` or `2019-06-06[America/Phoenix]`.\n\n\n**Date and time types**\n\nIn addition to searching with dates and datetimes, you can also query with years, months, and hours. For example, the filter:\n\n```\n{\n  \"time.start\": {\n    \"$eq\": \"2018\"\n  }\n}\n```\n\nwould match all start times in the year 2018. The same logic would apply for a month (`2019-05`), a date (`2019-05-01`), or an hour (`2019-05-01T06`).\n\nThese types also work with ordered searches. For example:\n\n```\n{\n \"time.start\": {\n    \"$lt\": \"2018\"\n }\n}\n```\n\nwould match start times before 2018 (i.e., anything in 2017 or before). On the other hand, the same query with a `$le` matcher would include anything in or before 2018.\n\n**\"Now\" and Date Math**\n\nInstead of providing a static date or time, you can also use `now` in place of any date time. When you do so, the system will calculate the time when the query is made and conduct a zoned search.\n\nIn order to search for a future or past time relative to `now`, you can use date math. For example, you can enter `now+3h` or `now-1d`, which would mean 3 hours from now and 1 day ago, respectively. You can also add and subtract minutes (`m`), months (`M`), and years (`y`).\n\nIt is also possible to add or subtract time from a static date or datetime. Simply add `||` between the static value and any addition or subtraction. For example, `2019-02-03||+1d` would be the same as `2019-02-04`.\n\nYou can also convert date and time types to other types. For example, to convert the datetime `2019-05-06T22:15` to a date, use `2019-05-06T22:15||/d`. Doing so would yield the same result as using `2019-05-06`. This method also works with `now`: `now/d` will give you today’s date without the time.\n\n**Filtering Across an Entity**\n\nIt is possible to search for a specific text string across all fields of an entity by using the `$anywhere` matcher.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$anywhere</th>\n    <th>\n\n  Matches if the argument text appears anywhere in the entity (including subfields, structs, and lists)\n\n    {\n      \"$anywhere\": \"hello\"\n    }\n\n  This filter will match all entities that contain the string \"hello\" or strings that begin with \"hello\".\n\n  </tr>\n</table>\n\n**Examples**\n\nThe following filter will match against entities that:\n- Are of type `event` (note that entity types can also be filtered by the **`entityTypes`** query parameter)\n- Have a name that starts with the text \"Century\"\n- Have a maximum age between 10 and 20\n- Have a minimum age between 5 and 7\n- Start after 7 PM (19:00) on August 28, 2018\n\n```\n{\n  \"$and\":[\n    {\n      \"entityType\":{\n        \"$eq\":\"event\"\n      }\n    },\n    {\n      \"name\":{\n        \"$startsWith\":\"Century\"\n      }\n    },\n    {\n      \"ageRange.maxValue\":{\n        \"$gt\":10,\n        \"$lt\":20\n      }\n    },\n    {\n      \"ageRange.minValue\":{\n        \"$gt\":5,\n        \"$lt\":7\n      }\n    },\n    {\n      \"time.start\":{\n        \"$ge\":\"2018-08-28T19:00\"\n      }\n    }\n  ]\n}\n```\n",
            "name": "filter",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The latitude, longitude, and approximate radius in miles, separated by commas, where the geocoder should be biased.",
            "name": "geocoderBias",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of language codes.\n\nWhen present, the system will return Entities that have profiles in one or more of the provided languages. For each Location, only the first available profile from the provided list of languages will be returned. The keyword `\"primary\"` can be used to refer to a Location’s primary profile without providing a specific language code. If an Entity does not have profiles in any of the languages provided, that Entity's primary profile will be returned.\n",
            "name": "languages",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "multipleOf": 1,
              "maximum": 50,
              "type": "number",
              "default": "10"
            },
            "description": "Number of results to return.",
            "name": "limit",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "multipleOf": 1,
              "type": "number",
              "default": "0"
            },
            "description": "Number of results to skip. Used to page through results.\nCannot be used together with **`pageToken`**.\n\nFor Live API requests, the offset cannot be higher than 9,950. For Knowledge API the maximum limit is only enforced if a filter and/or sortBy parameter are given.\n",
            "name": "offset",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minimum": 0.1,
              "maximum": 2500,
              "type": "number",
              "default": "10"
            },
            "description": "Indicates the search radius around the provided **`location`** in miles",
            "name": "radius",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "0"
            },
            "description": "Determines the noise level for randomizing sort order. Must be between 0 and 1 inclusive.\n\nA value of `0` results in no randomness: results are returned by order of distance.\n\nA value of `1` results in full randomness: results within the radius are returned in a random order.\n\nOnly one of **`randomization`** and **`randomizationToken`** can be set.\n",
            "name": "randomization",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "To be used alongside **`offset`** to allow for movement through randomized search results. After the first search with **`randomization`** set, **`randomizationToken`** is returned, which should be passed into the request as this parameter in order to iterate through subsequent results under the same randomness.\n\nOnly one of **`randomization`** and **`randomizationToken`** can be set.\n",
            "name": "randomizationToken",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A comma-separated list of saved filter IDs.\n\nWhen present, the system will return entities that are included in the filters matching **all** of the provided IDs.\n",
            "name": "savedFilterIds",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Entities: GeoSearch",
        "description": "Gets multiple Entities with addresses near a given geographical point,\nordered by proximity to that point and restricted to a radius.\n\n**NOTE:** Responses will contain resolved values for embedded fields\n",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "count": {
                          "multipleOf": 1,
                          "type": "number",
                          "description": "Total number of Entities that meet the filter criteria (ignores **``limit``** / **``offset``** parameters)"
                        },
                        "distances": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "distanceKilometers": {
                                "type": "number",
                                "description": "Distance in kilometers between the entity and the coordinate specified in the Geo object."
                              },
                              "distanceMiles": {
                                "type": "number",
                                "description": "Distance in miles between the entity and the coordinate specified in the Geo object."
                              },
                              "id": {
                                "minLength": 0,
                                "type": "string",
                                "description": "External entity ID"
                              }
                            }
                          }
                        },
                        "entities": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "meta": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "accountId": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "ID of the account associated with this Entity"
                                  },
                                  "countryCode": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                                  },
                                  "entityType": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                                  },
                                  "folderId": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                                  },
                                  "id": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "ID of this Entity\n\nFiltering Type: `text`"
                                  },
                                  "labels": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer.\n\nFiltering Type: `list of text`"
                                  },
                                  "language": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                                  },
                                  "timestamp": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                                  },
                                  "uid": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                                  }
                                },
                                "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "name": {
                                "minLength": 0,
                                "maxLength": 5000,
                                "type": "string",
                                "description": "\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "address": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "city": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                                  },
                                  "countryCode": {
                                    "minLength": 0,
                                    "pattern": "^[a-zA-Z]{2}$",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "extraDescription": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                                  },
                                  "line1": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "line2": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "line3": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "postalCode": {
                                    "minLength": 0,
                                    "maxLength": 10,
                                    "type": "string",
                                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "region": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "sublocality": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "acceptingNewPatients": {
                                "type": "boolean",
                                "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                              },
                              "acceptsReservations": {
                                "type": "boolean",
                                "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "accessHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "additionalHoursText": {
                                "minLength": 0,
                                "maxLength": 255,
                                "type": "string",
                                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "additionalPromotingLocations": {
                                "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Filtering Type: `entityId`"
                                }
                              },
                              "addressHidden": {
                                "type": "boolean",
                                "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "admittingHospitals": {
                                "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "adultPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ageRange": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "maxValue": {
                                    "multipleOf": 1,
                                    "type": "number",
                                    "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                                  },
                                  "minValue": {
                                    "multipleOf": 1,
                                    "type": "number",
                                    "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                                  }
                                },
                                "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "airportShuttle": {
                                "enum": [
                                  "AIRPORT_SHUTTLE_AVAILABLE",
                                  "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "airportTransfer": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "allInclusive": {
                                "enum": [
                                  "ALL_INCLUSIVE_RATES_AVAILABLE",
                                  "ALL_INCLUSIVE_RATES_ONLY",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "alternateNames": {
                                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "alternatePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "alternateWebsites": {
                                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 255,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                }
                              },
                              "androidAppUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "answer": {
                                "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                                "type": "string",
                                "format": "rich-text"
                              },
                              "applicationUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "associations": {
                                "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "attendance": {
                                "required": [
                                  "attendanceMode"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "attendanceMode": {
                                    "enum": [
                                      "OFFLINE",
                                      "ONLINE",
                                      "MIXED"
                                    ],
                                    "type": "string",
                                    "description": "Filtering Type: `option`"
                                  },
                                  "virtualLocationUrl": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "attire": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "DRESSY",
                                  "CASUAL",
                                  "FORMAL"
                                ],
                                "type": "string",
                                "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "babysittingOffered": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "baggageStorage": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bar": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "beachAccess": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "beachFrontProperty": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bicycles": {
                                "enum": [
                                  "BICYCLE_RENTALS",
                                  "BICYCLE_RENTALS_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bios": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "boutiqueStores": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "brands": {
                                "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "breakfast": {
                                "enum": [
                                  "BREAKFAST_AVAILABLE",
                                  "BREAKFAST_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "brunchHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "businessCenter": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "calendars": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "carRental": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "casino": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "categoryIds": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "catsAllowed": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "certifications": {
                                "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "checkInTime": {
                                "format": "time",
                                "type": "string",
                                "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "checkOutTime": {
                                "format": "time",
                                "type": "string",
                                "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "classificationRating": {
                                "pattern": "^\\d*\\.?\\d*$",
                                "type": "string",
                                "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "closed": {
                                "type": "boolean",
                                "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "concierge": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "conditionsTreated": {
                                "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "convenienceStore": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "currencyExchange": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "customKeywords": {
                                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "datePosted": {
                                "format": "date",
                                "type": "string",
                                "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "degrees": {
                                "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "ANP",
                                    "APN",
                                    "APRN",
                                    "ARNP",
                                    "CNM",
                                    "CNP",
                                    "CNS",
                                    "CPNP",
                                    "CRNA",
                                    "CRNP",
                                    "DC",
                                    "DDS",
                                    "DMD",
                                    "DNP",
                                    "DO",
                                    "DPM",
                                    "DVM",
                                    "FNP",
                                    "GNP",
                                    "LAC",
                                    "LPN",
                                    "MBA",
                                    "MBBS",
                                    "MD",
                                    "MPH",
                                    "ND",
                                    "NNP",
                                    "NP",
                                    "OD",
                                    "PA",
                                    "PAC",
                                    "PHARMD",
                                    "PHD",
                                    "PNP",
                                    "PSYD",
                                    "VMD",
                                    "WHNP"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                }
                              },
                              "deliveryHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "description": {
                                "minLength": 10,
                                "maxLength": 15000,
                                "type": "string",
                                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "displayCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "doctorOnCall": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "dogsAllowed": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "driveThroughHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                              },
                              "dropoffCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "educationList": {
                                "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "type",
                                    "institutionName",
                                    "yearCompleted"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "institutionName": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "type": {
                                      "enum": [
                                        "FELLOWSHIP",
                                        "RESIDENCY",
                                        "INTERNSHIP",
                                        "MEDICAL_SCHOOL"
                                      ],
                                      "type": "string",
                                      "description": "Filtering Type: `option`"
                                    },
                                    "yearCompleted": {
                                      "multipleOf": 1,
                                      "minimum": 1900,
                                      "maximum": 2100,
                                      "type": "number",
                                      "description": "Filtering Type: `integer`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "electricChargingStation": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "elevator": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ellipticalMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "emails": {
                                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "format": "email",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "employmentType": {
                                "enum": [
                                  "FULL_TIME",
                                  "PART_TIME",
                                  "CONTRACTOR",
                                  "TEMPORARY",
                                  "INTERN",
                                  "VOLUNTEER",
                                  "PER_DIEM",
                                  "OTHER"
                                ],
                                "type": "string",
                                "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "eventStatus": {
                                "enum": [
                                  "SCHEDULED",
                                  "RESCHEDULED",
                                  "POSTPONED",
                                  "CANCELED",
                                  "EVENT_MOVED_ONLINE"
                                ],
                                "type": "string",
                                "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "facebookCallToAction": {
                                "required": [
                                  "type"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "NONE",
                                      "BOOK_NOW",
                                      "CALL_NOW",
                                      "CONTACT_US",
                                      "SEND_MESSAGE",
                                      "USE_APP",
                                      "PLAY_GAME",
                                      "SHOP_NOW",
                                      "SIGN_UP",
                                      "WATCH_VIDEO",
                                      "SEND_EMAIL",
                                      "LEARN_MORE",
                                      "PURCHASE_GIFT_CARDS",
                                      "ORDER_NOW",
                                      "FOLLOW_PAGE"
                                    ],
                                    "type": "string",
                                    "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                                  },
                                  "value": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookCoverPhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "facebookDescriptor": {
                                "minLength": 3,
                                "maxLength": 75,
                                "type": "string",
                                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookOverrideCity": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookPageUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookProfilePhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "facebookVanityUrl": {
                                "minLength": 0,
                                "maxLength": 50,
                                "type": "string",
                                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "fax": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "featuredMessage": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "firstName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "firstPartyReviewPage": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "fitnessCenter": {
                                "enum": [
                                  "FITNESS_CENTER_AVAILABLE",
                                  "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "floorCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "freeWeights": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "frequentlyAskedQuestions": {
                                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "question"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "answer": {
                                      "minLength": 1,
                                      "maxLength": 4096,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "question": {
                                      "minLength": 1,
                                      "maxLength": 4096,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "frontDesk": {
                                "enum": [
                                  "FRONT_DESK_AVAILABLE",
                                  "FRONT_DESK_AVAILABLE_24_HOURS",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "gameRoom": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "gender": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "FEMALE",
                                  "MALE"
                                ],
                                "type": "string",
                                "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "geomodifier": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "giftShop": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "golf": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "googleAttributes": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {},
                                "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "googleCoverPhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "googleMyBusinessLabels": {
                                "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 50,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "googlePlaceId": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "googleProfilePhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "googleWebsiteOverride": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "happyHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "headshot": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "hiringOrganization": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "holidayHoursConversationEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "horsebackRiding": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "hotTub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "hours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "housekeeping": {
                                "enum": [
                                  "HOUSEKEEPING_AVAILABLE",
                                  "HOUSEKEEPING_AVAILABLE_DAILY",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "impressum": {
                                "minLength": 0,
                                "maxLength": 2000,
                                "type": "string",
                                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "indoorPoolCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "instagramHandle": {
                                "minLength": 0,
                                "maxLength": 30,
                                "type": "string",
                                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "insuranceAccepted": {
                                "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "iosAppUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "isClusterPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "isFreeEvent": {
                                "type": "boolean",
                                "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "isoRegionCode": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "keywords": {
                                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "kidFriendly": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kidsClub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kidsStayFree": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kitchenHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "labels": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "landingPageUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "languages": {
                                "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "lastName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "laundry": {
                                "enum": [
                                  "FULL_SERVICE",
                                  "SELF_SERVICE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "lazyRiver": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "lifeguard": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "linkedLocation": {
                                "type": "string",
                                "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                              },
                              "localPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "localShuttle": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "locatedIn": {
                                "type": "string",
                                "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                              },
                              "location": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "existingLocation": {
                                    "type": "string",
                                    "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                                  },
                                  "externalLocation": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "locationType": {
                                "enum": [
                                  "LOCATION",
                                  "HEALTHCARE_FACILITY",
                                  "HEALTHCARE_PROFESSIONAL",
                                  "ATM",
                                  "RESTAURANT",
                                  "HOTEL"
                                ],
                                "type": "string",
                                "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "logo": {
                                "required": [
                                  "image"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "clickthroughUrl": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "description": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "details": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "image": {
                                    "required": [
                                      "url"
                                    ],
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                    "properties": {
                                      "alternateText": {
                                        "minLength": 0,
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      },
                                      "url": {
                                        "minLength": 0,
                                        "format": "uri",
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      }
                                    }
                                  }
                                }
                              },
                              "mainPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "massage": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "maxAgeOfKidsStayFree": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "maxNumberOfKidsStayFree": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "mealsServed": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "BREAKFAST",
                                    "LUNCH",
                                    "BRUNCH",
                                    "DINNER",
                                    "HAPPY_HOUR",
                                    "LATE_NIGHT"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "meetingRoomCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "menuUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL where consumers can view the entity's menu\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "menus": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "middleName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "mobilePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "mobilityAccessible": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "nightclub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "npi": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                              },
                              "nudgeEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "officeName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "onlineServiceHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                              },
                              "orderUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL used to place an order at this entity\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "organizerEmail": {
                                "minLength": 0,
                                "format": "email",
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "organizerName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "organizerPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "outdoorPoolCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "parking": {
                                "enum": [
                                  "PARKING_AVAILABLE",
                                  "PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "paymentOptions": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "ALIPAY",
                                    "AMERICANEXPRESS",
                                    "ANDROIDPAY",
                                    "APPLEPAY",
                                    "ATM",
                                    "ATMQUICK",
                                    "BACS",
                                    "BANCONTACT",
                                    "BANKDEPOSIT",
                                    "BANKPAY",
                                    "BGO",
                                    "BITCOIN",
                                    "Bar",
                                    "CARTASI",
                                    "CASH",
                                    "CCS",
                                    "CHECK",
                                    "CONB",
                                    "CVVV",
                                    "DEBITNOTE",
                                    "DINERSCLUB",
                                    "DIRECTDEBIT",
                                    "DISCOVER",
                                    "ECKARTE",
                                    "ECOCHEQUE",
                                    "EKENA",
                                    "EMV",
                                    "FINANCING",
                                    "GOPAY",
                                    "HAYAKAKEN",
                                    "HEBAG",
                                    "IBOD",
                                    "ICCARDS",
                                    "ICOCA",
                                    "ID",
                                    "IDEAL",
                                    "INCA",
                                    "INVOICE",
                                    "JCB",
                                    "JCoinPay",
                                    "JKOPAY",
                                    "KITACA",
                                    "KLA",
                                    "KLARNA",
                                    "LINEPAY",
                                    "MAESTRO",
                                    "MANACA",
                                    "MASTERCARD",
                                    "MIPAY",
                                    "MONIZZE",
                                    "MPAY",
                                    "Manuelle Lastsch",
                                    "Merpay",
                                    "NANACO",
                                    "NEXI",
                                    "NIMOCA",
                                    "OREM",
                                    "PASMO",
                                    "PAYBACKPAY",
                                    "PAYBOX",
                                    "PAYCONIQ",
                                    "PAYPAL",
                                    "PAYPAY",
                                    "PAYSEC",
                                    "PIN",
                                    "POSTEPAY",
                                    "QRCODE",
                                    "QUICPAY",
                                    "RAKUTENEDY",
                                    "RAKUTENPAY",
                                    "SAMSUNGPAY",
                                    "SODEXO",
                                    "SUGOCA",
                                    "SUICA",
                                    "SWISH",
                                    "TICKETRESTAURANT",
                                    "TOICA",
                                    "TRAVELERSCHECK",
                                    "TSCUBIC",
                                    "TWINT",
                                    "UNIONPAY",
                                    "VEV",
                                    "VISA",
                                    "VISAELECTRON",
                                    "VOB",
                                    "VOUCHER",
                                    "VPAY",
                                    "WAON",
                                    "WECHATPAY",
                                    "WIRETRANSFER",
                                    "Yucho Pay",
                                    "ZELLE",
                                    "auPay",
                                    "dBarai",
                                    "Überweisung"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "performers": {
                                "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "petsAllowed": {
                                "enum": [
                                  "PETS_WELCOME",
                                  "PETS_WELCOME_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "photoGallery": {
                                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "image"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                  "properties": {
                                    "clickthroughUrl": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "description": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "details": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "image": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "pickupCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "pickupHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                              },
                              "priceRange": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "ONE",
                                  "TWO",
                                  "THREE",
                                  "FOUR"
                                ],
                                "type": "string",
                                "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                              },
                              "primaryConversationContact": {
                                "minLength": 0,
                                "type": "string",
                                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "privateBeach": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "privateCarService": {
                                "enum": [
                                  "PRIVATE_CAR_SERVICE",
                                  "PRIVATE_CAR_SERVICE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "productLists": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "products": {
                                "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "questionsAndAnswers": {
                                "type": "boolean",
                                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingCompetitors": {
                                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "name",
                                    "website"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                    },
                                    "website": {
                                      "minLength": 0,
                                      "maxLength": 255,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "rankTrackingEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingFrequency": {
                                "enum": [
                                  "WEEKLY",
                                  "MONTHLY",
                                  "QUARTERLY"
                                ],
                                "type": "string",
                                "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingQueryTemplates": {
                                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "KEYWORD",
                                    "KEYWORD_ZIP",
                                    "KEYWORD_CITY",
                                    "KEYWORD_IN_CITY",
                                    "KEYWORD_NEAR_ME",
                                    "KEYWORD_CITY_STATE"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                }
                              },
                              "rankTrackingSites": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "GOOGLE_DESKTOP",
                                    "GOOGLE_MOBILE",
                                    "BING_DESKTOP",
                                    "BING_MOBILE",
                                    "YAHOO_DESKTOP",
                                    "YAHOO_MOBILE"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "reservationUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL used to make reservations at this entity\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "restaurantCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "reviewGenerationUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "reviewResponseConversationEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "roomCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "roomService": {
                                "enum": [
                                  "ROOM_SERVICE_AVAILABLE",
                                  "ROOM_SERVICE_AVAILABLE_24_HOURS",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "routableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "salon": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "sauna": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "scuba": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "selfParking": {
                                "enum": [
                                  "SELF_PARKING_AVAILABLE",
                                  "SELF_PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "seniorHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "serviceArea": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "places": {
                                    "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  }
                                },
                                "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "serviceAreaPlaces": {
                                "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "type": {
                                      "enum": [
                                        "POSTAL_CODE",
                                        "REGION",
                                        "COUNTY",
                                        "CITY",
                                        "SUBLOCALITY"
                                      ],
                                      "type": "string",
                                      "description": "Filtering Type: `option`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "services": {
                                "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "smokeFreeProperty": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "snorkeling": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "socialHour": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "spa": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "specialities": {
                                "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "tableService": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "takeoutHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "tennis": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "thermalPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ticketAvailability": {
                                "enum": [
                                  "IN_STOCK",
                                  "SOLD_OUT",
                                  "PRE_ORDER",
                                  "UNSPECIFIED"
                                ],
                                "type": "string",
                                "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketPriceRange": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "currencyCode": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                                  },
                                  "maxValue": {
                                    "pattern": "^\\d*\\.?\\d*$",
                                    "type": "string",
                                    "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                                  },
                                  "minValue": {
                                    "pattern": "^\\d*\\.?\\d*$",
                                    "type": "string",
                                    "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                                  }
                                },
                                "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketSaleDateTime": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "time": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "end": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                  },
                                  "start": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                  }
                                },
                                "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "timeZoneUtcOffset": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "timezone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "tollFreePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "treadmill": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ttyPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "turndownService": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "twitterHandle": {
                                "minLength": 0,
                                "maxLength": 15,
                                "type": "string",
                                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "uberLink": {
                                "required": [
                                  "presentation"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "presentation": {
                                    "enum": [
                                      "BUTTON",
                                      "LINK"
                                    ],
                                    "type": "string",
                                    "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                                  },
                                  "text": {
                                    "minLength": 0,
                                    "maxLength": 100,
                                    "type": "string",
                                    "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "uberTripBranding": {
                                "required": [
                                  "text",
                                  "url",
                                  "description"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "minLength": 0,
                                    "maxLength": 150,
                                    "type": "string",
                                    "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "text": {
                                    "minLength": 0,
                                    "maxLength": 28,
                                    "type": "string",
                                    "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "valetParking": {
                                "enum": [
                                  "VALET_PARKING_AVAILABLE",
                                  "VALET_PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "validThrough": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "vendingMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "venueName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "videos": {
                                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "video"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "minLength": 0,
                                      "maxLength": 140,
                                      "type": "string",
                                      "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                    },
                                    "video": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "wadingPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wakeUpCalls": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "walkableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "waterPark": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "waterSkiing": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "watercraft": {
                                "enum": [
                                  "WATERCRAFT_RENTALS",
                                  "WATERCRAFT_RENTALS_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "waterslide": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wavePool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "websiteUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL for this entity's website\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "weightMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wheelchairAccessible": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wifiAvailable": {
                                "enum": [
                                  "WIFI_AVAILABLE",
                                  "WIFI_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "workRemote": {
                                "type": "boolean",
                                "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "yearEstablished": {
                                "multipleOf": 1,
                                "minimum": 1000,
                                "maximum": 2028,
                                "type": "number",
                                "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yearLastRenovated": {
                                "multipleOf": 1,
                                "minimum": 1000,
                                "maximum": 2028,
                                "type": "number",
                                "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "yextDisplayCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "yextDropoffCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextPickupCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextRoutableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextWalkableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              }
                            }
                          }
                        },
                        "geo": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "address": {
                              "required": [
                                "line1",
                                "region",
                                "postalCode",
                                "country",
                                "city"
                              ],
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "city": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Locality (city) field as returned by geocoder. If no value, returns \"\""
                                },
                                "country": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Country field as returned by geocoder. If no value, returns \"\""
                                },
                                "line1": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Address line 1 field as returned by geocoder. If no value, returns \"\""
                                },
                                "line2": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Address line 2 field as returned by geocoder. If no value, returns \"\""
                                },
                                "line3": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "postalCode": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "PostalCode (ZIP) field as returned by geocoder. If no value, returns \"\""
                                },
                                "region": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Region (state) field as returned by geocoder. If no value, returns \"\""
                                },
                                "sublocality": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Sublocality field as returned by geocoder. If no value, returns \"\""
                                }
                              },
                              "description": "Address field as returned by geocoder. If no value, returns \"\""
                            },
                            "coordinate": {
                              "required": [
                                "latitude",
                                "longitude",
                                "granularity"
                              ],
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "granularity": {
                                  "enum": [
                                    "POINT",
                                    "ADDRESS",
                                    "STREET",
                                    "SUBLOCALITY",
                                    "LOCALITY",
                                    "POSTALCODE",
                                    "REGION",
                                    "COUNTRY",
                                    "UNKNOWN"
                                  ],
                                  "type": "string",
                                  "description": "Country field as returned by geocoder. If no value, returns \"\""
                                },
                                "latitude": {
                                  "type": "number",
                                  "description": "Latitude as returned by geocoder. If no value, returns \"\""
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "Longitude as returned by geocoder. If no value, returns \"\""
                                }
                              }
                            }
                          },
                          "description": "If location provided in geosearch cannot be geocoded, this field will be set to null."
                        },
                        "randomizationToken": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Returned only when a **`randomization`** or **`randomizationToken`** parameter is specified.\nThis token should be included as the **`randomizationToken`** parameter, along with an **`offset`** parameter value for moving through subsequent randomized results.\n"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`\n\n```\nEligible For: \n   * helpArticle\n```"
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/entityschema/{entityType}/{entityId}/{languageCode}": {
      "get": {
        "operationId": "getEntitySchema",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/entityId"
          },
          {
            "$ref": "#/components/parameters/languageCode"
          },
          {
            "$ref": "#/components/parameters/entityTypePath"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Entities Schema: Get",
        "description": "Gets the schema.org-compliant schema for the primary profile of a single Entity. Schema will vary depending on entity type.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EntitySchemaResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/entityprofiles/{entityId}/{languageCode}": {
      "get": {
        "operationId": "getLanguageProfile",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The external ID of the requested Entity",
            "name": "entityId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The language code corresponding to the language of the profiles that the user wishes to retrieve",
            "name": "languageCode",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of field names. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"address.line1\"`). Custom fields are specified in the same way, albeit with their `c_*` name.",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if at least one field is of type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "name": "format",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Entity Language Profiles: Get",
        "description": "Retrieve a Language Profile for an Entity\n\n**NOTE:**\n\n* Responses will contain resolved values for embedded fields\n* If the `fields` parameter is unspecified, responses will contain the full\nentity profile for the requested language\n",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "meta": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "accountId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of the account associated with this Entity"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                            },
                            "entityType": {
                              "minLength": 0,
                              "type": "string",
                              "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                            },
                            "folderId": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                            },
                            "id": {
                              "minLength": 0,
                              "type": "string",
                              "description": "ID of this Entity\n\nFiltering Type: `text`"
                            },
                            "labels": {
                              "uniqueItems": false,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer.\n\nFiltering Type: `list of text`"
                            },
                            "language": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                            },
                            "timestamp": {
                              "minLength": 0,
                              "type": "string",
                              "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                            },
                            "uid": {
                              "minLength": 0,
                              "type": "string",
                              "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                            }
                          },
                          "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "name": {
                          "minLength": 0,
                          "maxLength": 5000,
                          "type": "string",
                          "description": "\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "address": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "city": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                            },
                            "countryCode": {
                              "minLength": 0,
                              "pattern": "^[a-zA-Z]{2}$",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "extraDescription": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                            },
                            "line1": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line2": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "line3": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "postalCode": {
                              "minLength": 0,
                              "maxLength": 10,
                              "type": "string",
                              "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "region": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            },
                            "sublocality": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "acceptingNewPatients": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "acceptsReservations": {
                          "type": "boolean",
                          "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "accessHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalHoursText": {
                          "minLength": 0,
                          "maxLength": 255,
                          "type": "string",
                          "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "additionalPromotingLocations": {
                          "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Filtering Type: `entityId`"
                          }
                        },
                        "addressHidden": {
                          "type": "boolean",
                          "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "admittingHospitals": {
                          "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "adultPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ageRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "maxValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                            },
                            "minValue": {
                              "multipleOf": 1,
                              "type": "number",
                              "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                            }
                          },
                          "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "airportShuttle": {
                          "enum": [
                            "AIRPORT_SHUTTLE_AVAILABLE",
                            "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "airportTransfer": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "allInclusive": {
                          "enum": [
                            "ALL_INCLUSIVE_RATES_AVAILABLE",
                            "ALL_INCLUSIVE_RATES_ONLY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "alternateNames": {
                          "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "alternatePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "alternateWebsites": {
                          "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 255,
                            "format": "uri",
                            "type": "string",
                            "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                          }
                        },
                        "androidAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "answer": {
                          "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                          "type": "string",
                          "format": "rich-text"
                        },
                        "applicationUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "associations": {
                          "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "attendance": {
                          "required": [
                            "attendanceMode"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "attendanceMode": {
                              "enum": [
                                "OFFLINE",
                                "ONLINE",
                                "MIXED"
                              ],
                              "type": "string",
                              "description": "Filtering Type: `option`"
                            },
                            "virtualLocationUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          },
                          "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "attire": {
                          "enum": [
                            "UNSPECIFIED",
                            "DRESSY",
                            "CASUAL",
                            "FORMAL"
                          ],
                          "type": "string",
                          "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "babysittingOffered": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "baggageStorage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bar": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachAccess": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "beachFrontProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bicycles": {
                          "enum": [
                            "BICYCLE_RENTALS",
                            "BICYCLE_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "bios": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "boutiqueStores": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brands": {
                          "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "breakfast": {
                          "enum": [
                            "BREAKFAST_AVAILABLE",
                            "BREAKFAST_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "brunchHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "businessCenter": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "calendars": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "carRental": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "casino": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "categoryIds": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          },
                          "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "catsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "certifications": {
                          "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "checkInTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "checkOutTime": {
                          "format": "time",
                          "type": "string",
                          "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "classificationRating": {
                          "pattern": "^\\d*\\.?\\d*$",
                          "type": "string",
                          "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "closed": {
                          "type": "boolean",
                          "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "concierge": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "conditionsTreated": {
                          "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "convenienceStore": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "currencyExchange": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "customKeywords": {
                          "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "datePosted": {
                          "format": "date",
                          "type": "string",
                          "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "degrees": {
                          "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ANP",
                              "APN",
                              "APRN",
                              "ARNP",
                              "CNM",
                              "CNP",
                              "CNS",
                              "CPNP",
                              "CRNA",
                              "CRNP",
                              "DC",
                              "DDS",
                              "DMD",
                              "DNP",
                              "DO",
                              "DPM",
                              "DVM",
                              "FNP",
                              "GNP",
                              "LAC",
                              "LPN",
                              "MBA",
                              "MBBS",
                              "MD",
                              "MPH",
                              "ND",
                              "NNP",
                              "NP",
                              "OD",
                              "PA",
                              "PAC",
                              "PHARMD",
                              "PHD",
                              "PNP",
                              "PSYD",
                              "VMD",
                              "WHNP"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "deliveryHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "description": {
                          "minLength": 10,
                          "maxLength": 15000,
                          "type": "string",
                          "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "displayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "doctorOnCall": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "dogsAllowed": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "driveThroughHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                        },
                        "dropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "educationList": {
                          "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "type",
                              "institutionName",
                              "yearCompleted"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "institutionName": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "FELLOWSHIP",
                                  "RESIDENCY",
                                  "INTERNSHIP",
                                  "MEDICAL_SCHOOL"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              },
                              "yearCompleted": {
                                "multipleOf": 1,
                                "minimum": 1900,
                                "maximum": 2100,
                                "type": "number",
                                "description": "Filtering Type: `integer`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "electricChargingStation": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "elevator": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ellipticalMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "emails": {
                          "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "format": "email",
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "employmentType": {
                          "enum": [
                            "FULL_TIME",
                            "PART_TIME",
                            "CONTRACTOR",
                            "TEMPORARY",
                            "INTERN",
                            "VOLUNTEER",
                            "PER_DIEM",
                            "OTHER"
                          ],
                          "type": "string",
                          "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "eventStatus": {
                          "enum": [
                            "SCHEDULED",
                            "RESCHEDULED",
                            "POSTPONED",
                            "CANCELED",
                            "EVENT_MOVED_ONLINE"
                          ],
                          "type": "string",
                          "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "facebookCallToAction": {
                          "required": [
                            "type"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "type": {
                              "enum": [
                                "NONE",
                                "BOOK_NOW",
                                "CALL_NOW",
                                "CONTACT_US",
                                "SEND_MESSAGE",
                                "USE_APP",
                                "PLAY_GAME",
                                "SHOP_NOW",
                                "SIGN_UP",
                                "WATCH_VIDEO",
                                "SEND_EMAIL",
                                "LEARN_MORE",
                                "PURCHASE_GIFT_CARDS",
                                "ORDER_NOW",
                                "FOLLOW_PAGE"
                              ],
                              "type": "string",
                              "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                            },
                            "value": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookDescriptor": {
                          "minLength": 3,
                          "maxLength": 75,
                          "type": "string",
                          "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookOverrideCity": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookPageUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "facebookProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "facebookVanityUrl": {
                          "minLength": 0,
                          "maxLength": 50,
                          "type": "string",
                          "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fax": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "featuredMessage": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 50,
                              "type": "string",
                              "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 255,
                              "format": "uri",
                              "type": "string",
                              "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "firstName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "firstPartyReviewPage": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "fitnessCenter": {
                          "enum": [
                            "FITNESS_CENTER_AVAILABLE",
                            "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "floorCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "freeWeights": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "frequentlyAskedQuestions": {
                          "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "question"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "answer": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "question": {
                                "minLength": 1,
                                "maxLength": 4096,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "frontDesk": {
                          "enum": [
                            "FRONT_DESK_AVAILABLE",
                            "FRONT_DESK_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gameRoom": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "gender": {
                          "enum": [
                            "UNSPECIFIED",
                            "FEMALE",
                            "MALE"
                          ],
                          "type": "string",
                          "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "geomodifier": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "giftShop": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "golf": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "googleAttributes": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {},
                          "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "googleCoverPhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleMyBusinessLabels": {
                          "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 50,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "googlePlaceId": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "googleProfilePhoto": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "googleWebsiteOverride": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "happyHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "headshot": {
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                          "properties": {
                            "alternateText": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            }
                          }
                        },
                        "hiringOrganization": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "holidayHoursConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "horsebackRiding": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hotTub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "hours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "housekeeping": {
                          "enum": [
                            "HOUSEKEEPING_AVAILABLE",
                            "HOUSEKEEPING_AVAILABLE_DAILY",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "impressum": {
                          "minLength": 0,
                          "maxLength": 2000,
                          "type": "string",
                          "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "indoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "instagramHandle": {
                          "minLength": 0,
                          "maxLength": 30,
                          "type": "string",
                          "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "insuranceAccepted": {
                          "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "iosAppUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "isClusterPrimary": {
                          "type": "boolean",
                          "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "isFreeEvent": {
                          "type": "boolean",
                          "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "isoRegionCode": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "keywords": {
                          "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "kidFriendly": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsClub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kidsStayFree": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "kitchenHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "labels": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "type": "string"
                          },
                          "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "landingPageUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "languages": {
                          "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "lastName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "laundry": {
                          "enum": [
                            "FULL_SERVICE",
                            "SELF_SERVICE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lazyRiver": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "lifeguard": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "linkedLocation": {
                          "type": "string",
                          "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                        },
                        "localPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "localShuttle": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "locatedIn": {
                          "type": "string",
                          "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                        },
                        "location": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "existingLocation": {
                              "type": "string",
                              "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                            },
                            "externalLocation": {
                              "minLength": 0,
                              "maxLength": 255,
                              "type": "string",
                              "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "locationType": {
                          "enum": [
                            "LOCATION",
                            "HEALTHCARE_FACILITY",
                            "HEALTHCARE_PROFESSIONAL",
                            "ATM",
                            "RESTAURANT",
                            "HOTEL"
                          ],
                          "type": "string",
                          "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "logo": {
                          "required": [
                            "image"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                          "properties": {
                            "clickthroughUrl": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "description": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "details": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Filtering Type: `text`"
                            },
                            "image": {
                              "required": [
                                "url"
                              ],
                              "additionalProperties": false,
                              "type": "object",
                              "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                              "properties": {
                                "alternateText": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "url": {
                                  "minLength": 0,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              }
                            }
                          }
                        },
                        "mainPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "massage": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxAgeOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "maxNumberOfKidsStayFree": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "mealsServed": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "BREAKFAST",
                              "LUNCH",
                              "BRUNCH",
                              "DINNER",
                              "HAPPY_HOUR",
                              "LATE_NIGHT"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                        },
                        "meetingRoomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "menuUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL where consumers can view the entity's menu\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "menus": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "middleName": {
                          "minLength": 0,
                          "maxLength": 35,
                          "type": "string",
                          "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "mobilePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "mobilityAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "nightclub": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "npi": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                        },
                        "nudgeEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "officeName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                        },
                        "onlineServiceHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "orderUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to place an order at this entity\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "organizerEmail": {
                          "minLength": 0,
                          "format": "email",
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "organizerPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "outdoorPoolCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "parking": {
                          "enum": [
                            "PARKING_AVAILABLE",
                            "PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "paymentOptions": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "ALIPAY",
                              "AMERICANEXPRESS",
                              "ANDROIDPAY",
                              "APPLEPAY",
                              "ATM",
                              "ATMQUICK",
                              "BACS",
                              "BANCONTACT",
                              "BANKDEPOSIT",
                              "BANKPAY",
                              "BGO",
                              "BITCOIN",
                              "Bar",
                              "CARTASI",
                              "CASH",
                              "CCS",
                              "CHECK",
                              "CONB",
                              "CVVV",
                              "DEBITNOTE",
                              "DINERSCLUB",
                              "DIRECTDEBIT",
                              "DISCOVER",
                              "ECKARTE",
                              "ECOCHEQUE",
                              "EKENA",
                              "EMV",
                              "FINANCING",
                              "GOPAY",
                              "HAYAKAKEN",
                              "HEBAG",
                              "IBOD",
                              "ICCARDS",
                              "ICOCA",
                              "ID",
                              "IDEAL",
                              "INCA",
                              "INVOICE",
                              "JCB",
                              "JCoinPay",
                              "JKOPAY",
                              "KITACA",
                              "KLA",
                              "KLARNA",
                              "LINEPAY",
                              "MAESTRO",
                              "MANACA",
                              "MASTERCARD",
                              "MIPAY",
                              "MONIZZE",
                              "MPAY",
                              "Manuelle Lastsch",
                              "Merpay",
                              "NANACO",
                              "NEXI",
                              "NIMOCA",
                              "OREM",
                              "PASMO",
                              "PAYBACKPAY",
                              "PAYBOX",
                              "PAYCONIQ",
                              "PAYPAL",
                              "PAYPAY",
                              "PAYSEC",
                              "PIN",
                              "POSTEPAY",
                              "QRCODE",
                              "QUICPAY",
                              "RAKUTENEDY",
                              "RAKUTENPAY",
                              "SAMSUNGPAY",
                              "SODEXO",
                              "SUGOCA",
                              "SUICA",
                              "SWISH",
                              "TICKETRESTAURANT",
                              "TOICA",
                              "TRAVELERSCHECK",
                              "TSCUBIC",
                              "TWINT",
                              "UNIONPAY",
                              "VEV",
                              "VISA",
                              "VISAELECTRON",
                              "VOB",
                              "VOUCHER",
                              "VPAY",
                              "WAON",
                              "WECHATPAY",
                              "WIRETRANSFER",
                              "Yucho Pay",
                              "ZELLE",
                              "auPay",
                              "dBarai",
                              "Überweisung"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "performers": {
                          "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "Filtering Type: `text`"
                          }
                        },
                        "petsAllowed": {
                          "enum": [
                            "PETS_WELCOME",
                            "PETS_WELCOME_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "photoGallery": {
                          "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "required": [
                              "image"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                            "properties": {
                              "clickthroughUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "description": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "details": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "image": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "pickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "pickupHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                        },
                        "priceRange": {
                          "enum": [
                            "UNSPECIFIED",
                            "ONE",
                            "TWO",
                            "THREE",
                            "FOUR"
                          ],
                          "type": "string",
                          "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                        },
                        "primaryConversationContact": {
                          "minLength": 0,
                          "type": "string",
                          "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "privateBeach": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "privateCarService": {
                          "enum": [
                            "PRIVATE_CAR_SERVICE",
                            "PRIVATE_CAR_SERVICE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "productLists": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "ids": {
                              "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            },
                            "label": {
                              "minLength": 0,
                              "maxLength": 30,
                              "type": "string",
                              "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "products": {
                          "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "questionsAndAnswers": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingCompetitors": {
                          "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "name",
                              "website"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "website": {
                                "minLength": 0,
                                "maxLength": 255,
                                "format": "uri",
                                "type": "string",
                                "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "rankTrackingEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingFrequency": {
                          "enum": [
                            "WEEKLY",
                            "MONTHLY",
                            "QUARTERLY"
                          ],
                          "type": "string",
                          "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "rankTrackingQueryTemplates": {
                          "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "KEYWORD",
                              "KEYWORD_ZIP",
                              "KEYWORD_CITY",
                              "KEYWORD_IN_CITY",
                              "KEYWORD_NEAR_ME",
                              "KEYWORD_CITY_STATE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          }
                        },
                        "rankTrackingSites": {
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "enum": [
                              "GOOGLE_DESKTOP",
                              "GOOGLE_MOBILE",
                              "BING_DESKTOP",
                              "BING_MOBILE",
                              "YAHOO_DESKTOP",
                              "YAHOO_MOBILE"
                            ],
                            "type": "string",
                            "description": "Filtering Type: `option`"
                          },
                          "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reservationUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL used to make reservations at this entity\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "restaurantCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "reviewGenerationUrl": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "reviewResponseConversationEnabled": {
                          "type": "boolean",
                          "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "roomCount": {
                          "multipleOf": 1,
                          "minimum": 0,
                          "type": "number",
                          "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "roomService": {
                          "enum": [
                            "ROOM_SERVICE_AVAILABLE",
                            "ROOM_SERVICE_AVAILABLE_24_HOURS",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "routableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "salon": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "sauna": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "scuba": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "selfParking": {
                          "enum": [
                            "SELF_PARKING_AVAILABLE",
                            "SELF_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "seniorHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "serviceArea": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "places": {
                              "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              }
                            }
                          },
                          "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "serviceAreaPlaces": {
                          "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "name": {
                                "minLength": 0,
                                "maxLength": 100,
                                "type": "string",
                                "description": "Filtering Type: `text`"
                              },
                              "type": {
                                "enum": [
                                  "POSTAL_CODE",
                                  "REGION",
                                  "COUNTY",
                                  "CITY",
                                  "SUBLOCALITY"
                                ],
                                "type": "string",
                                "description": "Filtering Type: `option`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "services": {
                          "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "smokeFreeProperty": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "snorkeling": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "socialHour": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "spa": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "specialities": {
                          "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minLength": 0,
                            "maxLength": 100,
                            "type": "string",
                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                          }
                        },
                        "tableService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "takeoutHours": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "friday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "holidayHours": {
                              "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                              "uniqueItems": true,
                              "type": "array",
                              "items": {
                                "required": [
                                  "date"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "isClosed": {
                                    "type": "boolean",
                                    "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                  },
                                  "isRegularHours": {
                                    "type": "boolean",
                                    "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                  },
                                  "openIntervals": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        },
                                        "start": {
                                          "format": "time",
                                          "type": "string",
                                          "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    },
                                    "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "monday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "reopenDate": {
                              "format": "date",
                              "type": "string",
                              "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                            },
                            "saturday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "sunday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "thursday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "tuesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            },
                            "wednesday": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "isClosed": {
                                  "type": "boolean",
                                  "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                },
                                "openIntervals": {
                                  "uniqueItems": false,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "end": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      },
                                      "start": {
                                        "format": "time",
                                        "type": "string",
                                        "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                }
                              },
                              "description": "Filtering Type: `object`"
                            }
                          },
                          "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                        },
                        "tennis": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "thermalPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ticketAvailability": {
                          "enum": [
                            "IN_STOCK",
                            "SOLD_OUT",
                            "PRE_ORDER",
                            "UNSPECIFIED"
                          ],
                          "type": "string",
                          "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketPriceRange": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "currencyCode": {
                              "minLength": 0,
                              "type": "string",
                              "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                            },
                            "maxValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                            },
                            "minValue": {
                              "pattern": "^\\d*\\.?\\d*$",
                              "type": "string",
                              "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                            }
                          },
                          "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketSaleDateTime": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "ticketUrl": {
                          "minLength": 0,
                          "format": "uri",
                          "type": "string",
                          "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "time": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "end": {
                              "format": "date-time",
                              "type": "string",
                              "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            },
                            "start": {
                              "format": "date-time",
                              "type": "string",
                              "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                            }
                          },
                          "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "timeZoneUtcOffset": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "timezone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                        },
                        "tollFreePhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "treadmill": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "ttyPhone": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "turndownService": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "twitterHandle": {
                          "minLength": 0,
                          "maxLength": 15,
                          "type": "string",
                          "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberLink": {
                          "required": [
                            "presentation"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "presentation": {
                              "enum": [
                                "BUTTON",
                                "LINK"
                              ],
                              "type": "string",
                              "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 100,
                              "type": "string",
                              "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "uberTripBranding": {
                          "required": [
                            "text",
                            "url",
                            "description"
                          ],
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "description": {
                              "minLength": 0,
                              "maxLength": 150,
                              "type": "string",
                              "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                            },
                            "text": {
                              "minLength": 0,
                              "maxLength": 28,
                              "type": "string",
                              "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            },
                            "url": {
                              "minLength": 0,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "valetParking": {
                          "enum": [
                            "VALET_PARKING_AVAILABLE",
                            "VALET_PARKING_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "validThrough": {
                          "format": "date-time",
                          "type": "string",
                          "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "vendingMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "venueName": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                        },
                        "videos": {
                          "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "required": [
                              "video"
                            ],
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "description": {
                                "minLength": 0,
                                "maxLength": 140,
                                "type": "string",
                                "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                              },
                              "video": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Filtering Type: `object`"
                              }
                            },
                            "description": "Filtering Type: `object`"
                          }
                        },
                        "wadingPool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wakeUpCalls": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "walkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "waterPark": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterSkiing": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "watercraft": {
                          "enum": [
                            "WATERCRAFT_RENTALS",
                            "WATERCRAFT_RENTALS_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "waterslide": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wavePool": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "websiteUrl": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "displayUrl": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\nFiltering Type: `text`"
                            },
                            "preferDisplayUrl": {
                              "type": "boolean",
                              "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                            },
                            "url": {
                              "minLength": 0,
                              "maxLength": 2000,
                              "format": "uri",
                              "type": "string",
                              "description": "A valid URL for this entity's website\n\nFiltering Type: `text`"
                            }
                          },
                          "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "weightMachine": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wheelchairAccessible": {
                          "enum": [
                            "YES",
                            "NO",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "wifiAvailable": {
                          "enum": [
                            "WIFI_AVAILABLE",
                            "WIFI_AVAILABLE_FOR_FREE",
                            "NOT_APPLICABLE"
                          ],
                          "type": "string",
                          "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "workRemote": {
                          "type": "boolean",
                          "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                        },
                        "yearEstablished": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yearLastRenovated": {
                          "multipleOf": 1,
                          "minimum": 1000,
                          "maximum": 2028,
                          "type": "number",
                          "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                        },
                        "yextDisplayCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                        },
                        "yextDropoffCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextPickupCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextRoutableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        },
                        "yextWalkableCoordinate": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "latitude": {
                              "minimum": -90,
                              "maximum": 90,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            },
                            "longitude": {
                              "minimum": -180,
                              "maximum": 180,
                              "type": "number",
                              "description": "Filtering Type: `float`"
                            }
                          },
                          "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/entityprofiles/{entityId}": {
      "get": {
        "operationId": "listLanguageProfiles",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The external ID of the requested Entity",
            "name": "entityId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of Entity types to filter on. Example: `\"location,event\"`\n\nShould be from the following types:\n  * `atm`\n  * `event`\n  * `faq`\n  * `financialProfessional`\n  * `healthcareFacility`\n  * `healthcareProfessional`\n  * `hotel`\n  * `hotelRoomType`\n  * `job`\n  * `location`\n  * `organization`\n  * `product`\n  * `restaurant`\n\nOR the API name of a custom entity type.\n",
            "name": "entityTypes",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of field names. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"address.line1\"`). Custom fields are specified in the same way, albeit with their `c_*` name.",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if at least one field is of type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "name": "format",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The comma-separated language codes corresponding to the languages of the profile that the user wishes to retrieve",
            "name": "languageCodes",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Entity Language Profiles: List",
        "description": "Retrieve Language Profiles for an Entity\n\n**NOTE:**\n\n* Responses will contain resolved values for embedded fields\n* If the `fields` parameter is unspecified, responses will contain the full\nentity profile for the requested language\n",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "profiles": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "meta": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "accountId": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "ID of the account associated with this Entity"
                                  },
                                  "countryCode": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                                  },
                                  "entityType": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                                  },
                                  "folderId": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                                  },
                                  "id": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "ID of this Entity\n\nFiltering Type: `text`"
                                  },
                                  "labels": {
                                    "uniqueItems": false,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer.\n\nFiltering Type: `list of text`"
                                  },
                                  "language": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                                  },
                                  "timestamp": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                                  },
                                  "uid": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                                  }
                                },
                                "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "name": {
                                "minLength": 0,
                                "maxLength": 5000,
                                "type": "string",
                                "description": "\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "address": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "city": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                                  },
                                  "countryCode": {
                                    "minLength": 0,
                                    "pattern": "^[a-zA-Z]{2}$",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "extraDescription": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                                  },
                                  "line1": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "line2": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "line3": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "postalCode": {
                                    "minLength": 0,
                                    "maxLength": 10,
                                    "type": "string",
                                    "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "region": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  },
                                  "sublocality": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "acceptingNewPatients": {
                                "type": "boolean",
                                "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                              },
                              "acceptsReservations": {
                                "type": "boolean",
                                "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "accessHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "additionalHoursText": {
                                "minLength": 0,
                                "maxLength": 255,
                                "type": "string",
                                "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "additionalPromotingLocations": {
                                "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "Filtering Type: `entityId`"
                                }
                              },
                              "addressHidden": {
                                "type": "boolean",
                                "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "admittingHospitals": {
                                "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "adultPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ageRange": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "maxValue": {
                                    "multipleOf": 1,
                                    "type": "number",
                                    "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                                  },
                                  "minValue": {
                                    "multipleOf": 1,
                                    "type": "number",
                                    "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                                  }
                                },
                                "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "airportShuttle": {
                                "enum": [
                                  "AIRPORT_SHUTTLE_AVAILABLE",
                                  "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "airportTransfer": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "allInclusive": {
                                "enum": [
                                  "ALL_INCLUSIVE_RATES_AVAILABLE",
                                  "ALL_INCLUSIVE_RATES_ONLY",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "alternateNames": {
                                "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "alternatePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "alternateWebsites": {
                                "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 255,
                                  "format": "uri",
                                  "type": "string",
                                  "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                }
                              },
                              "androidAppUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "answer": {
                                "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                                "type": "string",
                                "format": "rich-text"
                              },
                              "applicationUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "associations": {
                                "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "attendance": {
                                "required": [
                                  "attendanceMode"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "attendanceMode": {
                                    "enum": [
                                      "OFFLINE",
                                      "ONLINE",
                                      "MIXED"
                                    ],
                                    "type": "string",
                                    "description": "Filtering Type: `option`"
                                  },
                                  "virtualLocationUrl": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                },
                                "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "attire": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "DRESSY",
                                  "CASUAL",
                                  "FORMAL"
                                ],
                                "type": "string",
                                "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "babysittingOffered": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "baggageStorage": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bar": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "beachAccess": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "beachFrontProperty": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bicycles": {
                                "enum": [
                                  "BICYCLE_RENTALS",
                                  "BICYCLE_RENTALS_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "bios": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "boutiqueStores": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "brands": {
                                "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "breakfast": {
                                "enum": [
                                  "BREAKFAST_AVAILABLE",
                                  "BREAKFAST_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "brunchHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "businessCenter": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "calendars": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "carRental": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "casino": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "categoryIds": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                },
                                "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "catsAllowed": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "certifications": {
                                "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "checkInTime": {
                                "format": "time",
                                "type": "string",
                                "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "checkOutTime": {
                                "format": "time",
                                "type": "string",
                                "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "classificationRating": {
                                "pattern": "^\\d*\\.?\\d*$",
                                "type": "string",
                                "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "closed": {
                                "type": "boolean",
                                "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "concierge": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "conditionsTreated": {
                                "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "convenienceStore": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "currencyExchange": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "customKeywords": {
                                "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "datePosted": {
                                "format": "date",
                                "type": "string",
                                "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "degrees": {
                                "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "ANP",
                                    "APN",
                                    "APRN",
                                    "ARNP",
                                    "CNM",
                                    "CNP",
                                    "CNS",
                                    "CPNP",
                                    "CRNA",
                                    "CRNP",
                                    "DC",
                                    "DDS",
                                    "DMD",
                                    "DNP",
                                    "DO",
                                    "DPM",
                                    "DVM",
                                    "FNP",
                                    "GNP",
                                    "LAC",
                                    "LPN",
                                    "MBA",
                                    "MBBS",
                                    "MD",
                                    "MPH",
                                    "ND",
                                    "NNP",
                                    "NP",
                                    "OD",
                                    "PA",
                                    "PAC",
                                    "PHARMD",
                                    "PHD",
                                    "PNP",
                                    "PSYD",
                                    "VMD",
                                    "WHNP"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                }
                              },
                              "deliveryHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "description": {
                                "minLength": 10,
                                "maxLength": 15000,
                                "type": "string",
                                "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "displayCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "doctorOnCall": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "dogsAllowed": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "driveThroughHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                              },
                              "dropoffCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "educationList": {
                                "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "type",
                                    "institutionName",
                                    "yearCompleted"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "institutionName": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "type": {
                                      "enum": [
                                        "FELLOWSHIP",
                                        "RESIDENCY",
                                        "INTERNSHIP",
                                        "MEDICAL_SCHOOL"
                                      ],
                                      "type": "string",
                                      "description": "Filtering Type: `option`"
                                    },
                                    "yearCompleted": {
                                      "multipleOf": 1,
                                      "minimum": 1900,
                                      "maximum": 2100,
                                      "type": "number",
                                      "description": "Filtering Type: `integer`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "electricChargingStation": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "elevator": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ellipticalMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "emails": {
                                "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "format": "email",
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "employmentType": {
                                "enum": [
                                  "FULL_TIME",
                                  "PART_TIME",
                                  "CONTRACTOR",
                                  "TEMPORARY",
                                  "INTERN",
                                  "VOLUNTEER",
                                  "PER_DIEM",
                                  "OTHER"
                                ],
                                "type": "string",
                                "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "eventStatus": {
                                "enum": [
                                  "SCHEDULED",
                                  "RESCHEDULED",
                                  "POSTPONED",
                                  "CANCELED",
                                  "EVENT_MOVED_ONLINE"
                                ],
                                "type": "string",
                                "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "facebookCallToAction": {
                                "required": [
                                  "type"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "enum": [
                                      "NONE",
                                      "BOOK_NOW",
                                      "CALL_NOW",
                                      "CONTACT_US",
                                      "SEND_MESSAGE",
                                      "USE_APP",
                                      "PLAY_GAME",
                                      "SHOP_NOW",
                                      "SIGN_UP",
                                      "WATCH_VIDEO",
                                      "SEND_EMAIL",
                                      "LEARN_MORE",
                                      "PURCHASE_GIFT_CARDS",
                                      "ORDER_NOW",
                                      "FOLLOW_PAGE"
                                    ],
                                    "type": "string",
                                    "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                                  },
                                  "value": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookCoverPhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "facebookDescriptor": {
                                "minLength": 3,
                                "maxLength": 75,
                                "type": "string",
                                "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookOverrideCity": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookPageUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "facebookProfilePhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "facebookVanityUrl": {
                                "minLength": 0,
                                "maxLength": 50,
                                "type": "string",
                                "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "fax": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "featuredMessage": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "minLength": 0,
                                    "maxLength": 50,
                                    "type": "string",
                                    "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "firstName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "firstPartyReviewPage": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "fitnessCenter": {
                                "enum": [
                                  "FITNESS_CENTER_AVAILABLE",
                                  "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "floorCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "freeWeights": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "frequentlyAskedQuestions": {
                                "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "question"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "answer": {
                                      "minLength": 1,
                                      "maxLength": 4096,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "question": {
                                      "minLength": 1,
                                      "maxLength": 4096,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "frontDesk": {
                                "enum": [
                                  "FRONT_DESK_AVAILABLE",
                                  "FRONT_DESK_AVAILABLE_24_HOURS",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "gameRoom": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "gender": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "FEMALE",
                                  "MALE"
                                ],
                                "type": "string",
                                "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "geomodifier": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "giftShop": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "golf": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "googleAttributes": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {},
                                "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "googleCoverPhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "googleMyBusinessLabels": {
                                "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 50,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "googlePlaceId": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "googleProfilePhoto": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "googleWebsiteOverride": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "happyHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "headshot": {
                                "required": [
                                  "url"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                                "properties": {
                                  "alternateText": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  }
                                }
                              },
                              "hiringOrganization": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "holidayHoursConversationEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "horsebackRiding": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "hotTub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "hours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "housekeeping": {
                                "enum": [
                                  "HOUSEKEEPING_AVAILABLE",
                                  "HOUSEKEEPING_AVAILABLE_DAILY",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "impressum": {
                                "minLength": 0,
                                "maxLength": 2000,
                                "type": "string",
                                "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "indoorPoolCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "instagramHandle": {
                                "minLength": 0,
                                "maxLength": 30,
                                "type": "string",
                                "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "insuranceAccepted": {
                                "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "iosAppUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "isClusterPrimary": {
                                "type": "boolean",
                                "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "isFreeEvent": {
                                "type": "boolean",
                                "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "isoRegionCode": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "keywords": {
                                "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "kidFriendly": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kidsClub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kidsStayFree": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "kitchenHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "labels": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "landingPageUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "languages": {
                                "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "lastName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "laundry": {
                                "enum": [
                                  "FULL_SERVICE",
                                  "SELF_SERVICE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "lazyRiver": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "lifeguard": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "linkedLocation": {
                                "type": "string",
                                "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                              },
                              "localPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "localShuttle": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "locatedIn": {
                                "type": "string",
                                "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                              },
                              "location": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "existingLocation": {
                                    "type": "string",
                                    "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                                  },
                                  "externalLocation": {
                                    "minLength": 0,
                                    "maxLength": 255,
                                    "type": "string",
                                    "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "locationType": {
                                "enum": [
                                  "LOCATION",
                                  "HEALTHCARE_FACILITY",
                                  "HEALTHCARE_PROFESSIONAL",
                                  "ATM",
                                  "RESTAURANT",
                                  "HOTEL"
                                ],
                                "type": "string",
                                "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "logo": {
                                "required": [
                                  "image"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                                "properties": {
                                  "clickthroughUrl": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "description": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "details": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Filtering Type: `text`"
                                  },
                                  "image": {
                                    "required": [
                                      "url"
                                    ],
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                    "properties": {
                                      "alternateText": {
                                        "minLength": 0,
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      },
                                      "url": {
                                        "minLength": 0,
                                        "format": "uri",
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      }
                                    }
                                  }
                                }
                              },
                              "mainPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "massage": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "maxAgeOfKidsStayFree": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "maxNumberOfKidsStayFree": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "mealsServed": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "BREAKFAST",
                                    "LUNCH",
                                    "BRUNCH",
                                    "DINNER",
                                    "HAPPY_HOUR",
                                    "LATE_NIGHT"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                              },
                              "meetingRoomCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "menuUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL where consumers can view the entity's menu\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "menus": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "middleName": {
                                "minLength": 0,
                                "maxLength": 35,
                                "type": "string",
                                "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "mobilePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "mobilityAccessible": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "nightclub": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "npi": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                              },
                              "nudgeEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "officeName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                              },
                              "onlineServiceHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                              },
                              "orderUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL used to place an order at this entity\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "organizerEmail": {
                                "minLength": 0,
                                "format": "email",
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "organizerName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "organizerPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "outdoorPoolCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "parking": {
                                "enum": [
                                  "PARKING_AVAILABLE",
                                  "PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "paymentOptions": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "ALIPAY",
                                    "AMERICANEXPRESS",
                                    "ANDROIDPAY",
                                    "APPLEPAY",
                                    "ATM",
                                    "ATMQUICK",
                                    "BACS",
                                    "BANCONTACT",
                                    "BANKDEPOSIT",
                                    "BANKPAY",
                                    "BGO",
                                    "BITCOIN",
                                    "Bar",
                                    "CARTASI",
                                    "CASH",
                                    "CCS",
                                    "CHECK",
                                    "CONB",
                                    "CVVV",
                                    "DEBITNOTE",
                                    "DINERSCLUB",
                                    "DIRECTDEBIT",
                                    "DISCOVER",
                                    "ECKARTE",
                                    "ECOCHEQUE",
                                    "EKENA",
                                    "EMV",
                                    "FINANCING",
                                    "GOPAY",
                                    "HAYAKAKEN",
                                    "HEBAG",
                                    "IBOD",
                                    "ICCARDS",
                                    "ICOCA",
                                    "ID",
                                    "IDEAL",
                                    "INCA",
                                    "INVOICE",
                                    "JCB",
                                    "JCoinPay",
                                    "JKOPAY",
                                    "KITACA",
                                    "KLA",
                                    "KLARNA",
                                    "LINEPAY",
                                    "MAESTRO",
                                    "MANACA",
                                    "MASTERCARD",
                                    "MIPAY",
                                    "MONIZZE",
                                    "MPAY",
                                    "Manuelle Lastsch",
                                    "Merpay",
                                    "NANACO",
                                    "NEXI",
                                    "NIMOCA",
                                    "OREM",
                                    "PASMO",
                                    "PAYBACKPAY",
                                    "PAYBOX",
                                    "PAYCONIQ",
                                    "PAYPAL",
                                    "PAYPAY",
                                    "PAYSEC",
                                    "PIN",
                                    "POSTEPAY",
                                    "QRCODE",
                                    "QUICPAY",
                                    "RAKUTENEDY",
                                    "RAKUTENPAY",
                                    "SAMSUNGPAY",
                                    "SODEXO",
                                    "SUGOCA",
                                    "SUICA",
                                    "SWISH",
                                    "TICKETRESTAURANT",
                                    "TOICA",
                                    "TRAVELERSCHECK",
                                    "TSCUBIC",
                                    "TWINT",
                                    "UNIONPAY",
                                    "VEV",
                                    "VISA",
                                    "VISAELECTRON",
                                    "VOB",
                                    "VOUCHER",
                                    "VPAY",
                                    "WAON",
                                    "WECHATPAY",
                                    "WIRETRANSFER",
                                    "Yucho Pay",
                                    "ZELLE",
                                    "auPay",
                                    "dBarai",
                                    "Überweisung"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "performers": {
                                "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "Filtering Type: `text`"
                                }
                              },
                              "petsAllowed": {
                                "enum": [
                                  "PETS_WELCOME",
                                  "PETS_WELCOME_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "photoGallery": {
                                "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "image"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                  "properties": {
                                    "clickthroughUrl": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "description": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "details": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "image": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "pickupCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "pickupHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                              },
                              "priceRange": {
                                "enum": [
                                  "UNSPECIFIED",
                                  "ONE",
                                  "TWO",
                                  "THREE",
                                  "FOUR"
                                ],
                                "type": "string",
                                "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                              },
                              "primaryConversationContact": {
                                "minLength": 0,
                                "type": "string",
                                "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "privateBeach": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "privateCarService": {
                                "enum": [
                                  "PRIVATE_CAR_SERVICE",
                                  "PRIVATE_CAR_SERVICE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "productLists": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "ids": {
                                    "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  },
                                  "label": {
                                    "minLength": 0,
                                    "maxLength": 30,
                                    "type": "string",
                                    "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "products": {
                                "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "questionsAndAnswers": {
                                "type": "boolean",
                                "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingCompetitors": {
                                "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "name",
                                    "website"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                    },
                                    "website": {
                                      "minLength": 0,
                                      "maxLength": 255,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "rankTrackingEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingFrequency": {
                                "enum": [
                                  "WEEKLY",
                                  "MONTHLY",
                                  "QUARTERLY"
                                ],
                                "type": "string",
                                "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "rankTrackingQueryTemplates": {
                                "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "KEYWORD",
                                    "KEYWORD_ZIP",
                                    "KEYWORD_CITY",
                                    "KEYWORD_IN_CITY",
                                    "KEYWORD_NEAR_ME",
                                    "KEYWORD_CITY_STATE"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                }
                              },
                              "rankTrackingSites": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "enum": [
                                    "GOOGLE_DESKTOP",
                                    "GOOGLE_MOBILE",
                                    "BING_DESKTOP",
                                    "BING_MOBILE",
                                    "YAHOO_DESKTOP",
                                    "YAHOO_MOBILE"
                                  ],
                                  "type": "string",
                                  "description": "Filtering Type: `option`"
                                },
                                "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "reservationUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL used to make reservations at this entity\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "restaurantCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "reviewGenerationUrl": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "reviewResponseConversationEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "roomCount": {
                                "multipleOf": 1,
                                "minimum": 0,
                                "type": "number",
                                "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "roomService": {
                                "enum": [
                                  "ROOM_SERVICE_AVAILABLE",
                                  "ROOM_SERVICE_AVAILABLE_24_HOURS",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "routableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "salon": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "sauna": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "scuba": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "selfParking": {
                                "enum": [
                                  "SELF_PARKING_AVAILABLE",
                                  "SELF_PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "seniorHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "serviceArea": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "places": {
                                    "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    }
                                  }
                                },
                                "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "serviceAreaPlaces": {
                                "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 100,
                                      "type": "string",
                                      "description": "Filtering Type: `text`"
                                    },
                                    "type": {
                                      "enum": [
                                        "POSTAL_CODE",
                                        "REGION",
                                        "COUNTY",
                                        "CITY",
                                        "SUBLOCALITY"
                                      ],
                                      "type": "string",
                                      "description": "Filtering Type: `option`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "services": {
                                "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "smokeFreeProperty": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "snorkeling": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "socialHour": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "spa": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "specialities": {
                                "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "minLength": 0,
                                  "maxLength": 100,
                                  "type": "string",
                                  "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                }
                              },
                              "tableService": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "takeoutHours": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "friday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "holidayHours": {
                                    "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "required": [
                                        "date"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "date": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "isClosed": {
                                          "type": "boolean",
                                          "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                        },
                                        "isRegularHours": {
                                          "type": "boolean",
                                          "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                        },
                                        "openIntervals": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "end": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              },
                                              "start": {
                                                "format": "time",
                                                "type": "string",
                                                "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          },
                                          "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "monday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "reopenDate": {
                                    "format": "date",
                                    "type": "string",
                                    "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                  },
                                  "saturday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "sunday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "thursday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "tuesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  },
                                  "wednesday": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "properties": {
                                      "isClosed": {
                                        "type": "boolean",
                                        "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                      },
                                      "openIntervals": {
                                        "uniqueItems": false,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "end": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            },
                                            "start": {
                                              "format": "time",
                                              "type": "string",
                                              "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                      }
                                    },
                                    "description": "Filtering Type: `object`"
                                  }
                                },
                                "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                              },
                              "tennis": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "thermalPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ticketAvailability": {
                                "enum": [
                                  "IN_STOCK",
                                  "SOLD_OUT",
                                  "PRE_ORDER",
                                  "UNSPECIFIED"
                                ],
                                "type": "string",
                                "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketPriceRange": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "currencyCode": {
                                    "minLength": 0,
                                    "type": "string",
                                    "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                                  },
                                  "maxValue": {
                                    "pattern": "^\\d*\\.?\\d*$",
                                    "type": "string",
                                    "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                                  },
                                  "minValue": {
                                    "pattern": "^\\d*\\.?\\d*$",
                                    "type": "string",
                                    "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                                  }
                                },
                                "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketSaleDateTime": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "ticketUrl": {
                                "minLength": 0,
                                "format": "uri",
                                "type": "string",
                                "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "time": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "end": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                  },
                                  "start": {
                                    "format": "date-time",
                                    "type": "string",
                                    "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                  }
                                },
                                "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "timeZoneUtcOffset": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "timezone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                              },
                              "tollFreePhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "treadmill": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "ttyPhone": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "turndownService": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "twitterHandle": {
                                "minLength": 0,
                                "maxLength": 15,
                                "type": "string",
                                "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "uberLink": {
                                "required": [
                                  "presentation"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "presentation": {
                                    "enum": [
                                      "BUTTON",
                                      "LINK"
                                    ],
                                    "type": "string",
                                    "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                                  },
                                  "text": {
                                    "minLength": 0,
                                    "maxLength": 100,
                                    "type": "string",
                                    "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "uberTripBranding": {
                                "required": [
                                  "text",
                                  "url",
                                  "description"
                                ],
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "minLength": 0,
                                    "maxLength": 150,
                                    "type": "string",
                                    "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "text": {
                                    "minLength": 0,
                                    "maxLength": 28,
                                    "type": "string",
                                    "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "valetParking": {
                                "enum": [
                                  "VALET_PARKING_AVAILABLE",
                                  "VALET_PARKING_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "validThrough": {
                                "format": "date-time",
                                "type": "string",
                                "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "vendingMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "venueName": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                              },
                              "videos": {
                                "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "required": [
                                    "video"
                                  ],
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "minLength": 0,
                                      "maxLength": 140,
                                      "type": "string",
                                      "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                    },
                                    "video": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      },
                                      "description": "Filtering Type: `object`"
                                    }
                                  },
                                  "description": "Filtering Type: `object`"
                                }
                              },
                              "wadingPool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wakeUpCalls": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "walkableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "waterPark": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "waterSkiing": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "watercraft": {
                                "enum": [
                                  "WATERCRAFT_RENTALS",
                                  "WATERCRAFT_RENTALS_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "waterslide": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wavePool": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "websiteUrl": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "displayUrl": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\nFiltering Type: `text`"
                                  },
                                  "preferDisplayUrl": {
                                    "type": "boolean",
                                    "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                  },
                                  "url": {
                                    "minLength": 0,
                                    "maxLength": 2000,
                                    "format": "uri",
                                    "type": "string",
                                    "description": "A valid URL for this entity's website\n\nFiltering Type: `text`"
                                  }
                                },
                                "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "weightMachine": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wheelchairAccessible": {
                                "enum": [
                                  "YES",
                                  "NO",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "wifiAvailable": {
                                "enum": [
                                  "WIFI_AVAILABLE",
                                  "WIFI_AVAILABLE_FOR_FREE",
                                  "NOT_APPLICABLE"
                                ],
                                "type": "string",
                                "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "workRemote": {
                                "type": "boolean",
                                "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                              },
                              "yearEstablished": {
                                "multipleOf": 1,
                                "minimum": 1000,
                                "maximum": 2028,
                                "type": "number",
                                "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yearLastRenovated": {
                                "multipleOf": 1,
                                "minimum": 1000,
                                "maximum": 2028,
                                "type": "number",
                                "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                              },
                              "yextDisplayCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                              },
                              "yextDropoffCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextPickupCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextRoutableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              },
                              "yextWalkableCoordinate": {
                                "additionalProperties": false,
                                "type": "object",
                                "properties": {
                                  "latitude": {
                                    "minimum": -90,
                                    "maximum": 90,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  },
                                  "longitude": {
                                    "minimum": -180,
                                    "maximum": 180,
                                    "type": "number",
                                    "description": "Filtering Type: `float`"
                                  }
                                },
                                "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/entityprofiles": {
      "get": {
        "operationId": "listAllLanguageProfiles",
        "parameters": [
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "name": "accountId",
            "in": "path",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A date in `YYYYMMDD` format.",
            "name": "v",
            "in": "query",
            "required": true
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of Entity types to filter on. Example: `\"location,event\"`\n\nShould be from the following types:\n  * `atm`\n  * `event`\n  * `faq`\n  * `financialProfessional`\n  * `healthcareFacility`\n  * `healthcareProfessional`\n  * `hotel`\n  * `hotelRoomType`\n  * `job`\n  * `location`\n  * `organization`\n  * `product`\n  * `restaurant`\n\nOR the API name of a custom entity type.\n",
            "name": "entityTypes",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "Comma-separated list of field names. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"address.line1\"`). Custom fields are specified in the same way, albeit with their `c_*` name.",
            "name": "fields",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "This parameter represents one or more filtering conditions that are applied to the set of entities that would otherwise be returned. This parameter should be provided as a URL-encoded string containing a JSON object.\n\nFor example, if the filter JSON is `{\"name\":{\"$eq\":\"John\"}}`, then the filter param after URL-encoding will be: `filter=%7B%22name%22%3A%7B%22%24eq%22%3A%22John%22%7D%7D`\n\n**Basic Filter Structure**\n\nThe filter object at its core consists of a *matcher*, a *field*, and an *argument*.\n\nFor example, in the following filter JSON:\n\n```\n{\n  \"name\":{\n    \"$eq\":\"John\"\n  }\n}\n```\n\n`$eq` is the *matcher*, or filtering operation (equals, in this example),\n\n`name` is the *field* being filtered by, and\n\n`John` is *value* to be matched against.\n\n**Combining Multiple Filters**\n\nMultiple filters can be combined into one object using *combinators*. For example, the following filter JSON combines multiple filters using the combinator `$and`. `$or` is also supported.\n```\n{\n  \"$and\":[\n    {\n      \"firstName\":{\n        \"$eq\":\"John\"\n      }\n    },\n    {\n      \"countryCode\":{\n        \"$in\":[\n          \"US\",\n          \"GB\"\n        ]\n      }\n    }\n  ]\n}\n```\n\n**Filter Negation**\n\nCertain filter types may be negated. For example:\n\n```\n{\n  \"$not\" {\n    \"name\":{\n      \"$eq\":\"John\"\n    }\n  }\n}\n```\n\nThis can also be written more simply with a `!` in the `$eq` parameter. The following filter would have the same effect:\n\n```\n{\n  \"name\":{\n    \"!$eq\":\"John\"\n  }\n}\n```\n\n**Filter Complement**\n\nYou can also search for the complement of a filter. This filter would match entities that do not contain \"hello\" in their descriptions, or do not have a description set. This is different from negation which can only match entities who have the negated field set to something.\n\n```\n{\n  \"$complement\":{\n    \"description\":{\n      \"$contains\":\"hello\"\n    }\n  }\n}\n```\n\n**Addressing Subfields**\n\nSubfields of fields can be addressed using the \"dot\" notation while filtering. For example, if you have a custom field called **`c_myCustomField`**:\n\n```\n{\n  \"c_myCustomField\":{\n    \"age\": 30,\n    \"name\": \"Jim\",\n  }\n}\n```\n\nWhile filtering, subfields may be addressed using the \"dot\" notation.\n\n```\n{\n  \"c_myCustomField.name\":{\n    \"!$eq\":\"John\"\n  }\n}\n```\n\nFields that are nested deeper may be addressed using dot notation, as well. For example, if **`name`** in the above example was a compound field with two subfields **`first`** and **`last`**, **`first`** may be addressed as **`c_myCustomField.name.first`**.\n\n**Field Support**\n\nEntity fields correspond to certain filter types, which support matchers. Going by the example above, the field **`name`** supports the `TEXT` filter type, which supports `$eq` (equals) and `$startsWith` (starts with).\n\n**TEXT**\n\nThe `TEXT` filter type is supported for text fields. (e.g., **`name`**, **`countryCode`**)\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq (equals)</th>\n    <th>\n\n    {\n      \"countryCode\":{\n        \"$eq\":\"US\"\n      }\n    },\n    {\n      \"countryCode\":{\n        \"!$eq\":\"US\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n  Matches if the field starts with the argument value.\n\n  e.g., \"Amazing\" starts with \"amaz\"\n\n    {\n       \"address.line1\":{\n          \"$startsWith\": \"Jo\"\n       }\n    }\n\n  Supports negation. Case insensitive.\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n  Matches if field value is a member of the argument list.\n\n    {\n      \"firstName\":{\n        \"$in\": [\"John\", \"Jimmy\"]\n      }\n    }\n\n  Does not support negation. Negation can be mimicked by using an \"OR\" matcher, for example:\n\n    {\n      \"$and\":[\n        {\n          \"firstName\":{\n            \"!$eq\": \"John\"\n          }\n        },\n        {\n          \"firstName\":{\n            \"!$eq\": \"Jimmy\"\n          }\n        }\n      ]\n    }\n\n  </tr>\n  <tr>\n    <th>$contains</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$contains\":\"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" is contained in any string within **`c_myString`**.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n  <tr>\n    <th>$containsAny</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$containsAny\":[\n          \"sample1\", \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if either \"sample1\" or \"sample2\" is contained in any string within **`c_myString`**. The argument list can contain more than two strings.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n  <tr>\n    <th>$containsAll</th>\n    <th>\n\n    {\n      \"c_myString\":{\n        \"$containsAll\":[\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"sample1\" and \"sample2\" are contained in any string within **`c_myString`**. The argument list can contain more than two strings.\n\n  Note that this matching is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n  </tr>\n</table>\n\n**BOOLEAN**\n\n\nThe BOOLEAN filter type is supported for boolean fields and Yes / No custom fields.\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"isFreeEvent\": {\n        \"$eq\": true\n      }\n    }\n\n  For booleans, the filter takes a boolean value, not a string.\n  Supports negation.\n  </tr>\n</table>\n\n**STRUCT**\n\nThe STRUCT filter type is supported for compound fields with subfields.\n\n*e.g., **`address`**, **`featuredMessage`**, fields of custom types*\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$hasProperty</th>\n    <th>\n\n  Matches if argument is a key (subfield) of field being filtered by. This filter type is useful for filtering by compound fields or to check if certain fields have a value set.\n\n    {\n      \"address\": {\n        \"$hasProperty\": \"line1\"\n      }\n    }\n\n  Note that if a given property of a compound field is not set, the filter will not match. For example, if `line1` of **`address`** is not set for an entity, then the above matcher will not match the entity.\n\n  Supports negation.\n\n  </tr>\n</table>\n\n**OPTION**\n\nThe OPTION filter type is supported for options custom fields and fields that have a predetermined list of valid values.\n\n *e.g., **`eventStatus`**, **`gender`**, `SINGLE_OPTION` and `MULTI_OPTION` types of custom fields.*\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n  Matching is case insensitive and insensitive to consecutive whitespace.\n\n  e.g., \"XYZ 123\" matches \"xyz       123\"\n\n    {\n      \"eventStatus\": {\n        \"$eq\": \"SCHEDULED\"\n      }\n    }\n\n  Supports negation. Negating `$eq` on the list will match any field that does not hold any of the provided values.\n\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n    {\n      \"eventStatus\": {\n        \"$in\": [\n          \"SCHEDULED\",\n          \"POSTPONED\"\n        ]\n      }\n    }\n\n  Does not support negation. However, negation can be mimicked by using an `$and` matcher to negate individually over the desired values. For example:\n\n    {\n      \"$and\": [\n        {\n          \"eventStatus\":{\n            \"!$eq\": \"SCHEDULED\"\n          }\n        },\n        {\n          \"firstName\":{\n            \"!$eq\": \"POSTPONED\"\n          }\n        }\n      ]\n    }\n\n  </tr>\n</table>\n\n**PHONE**\n\nThe PHONE filter type is supported for phone number fields only. PHONE will support the same matchers as TEXT, except that for `$eq`, the same phone number with or without calling code will match.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"mainPhone\":{\n        \"$eq\":\"+18187076189\"\n      }\n    },\n    {\n      \"mainPhone\":{\n        \"$eq\":\"8187076189\"\n      }\n    },\n    {\n      \"mainPhone\":{\n        \"!$eq\":\"9177076189\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n  Matches if the field starts with the argument value.\n\n  e.g., \"8187076189\" starts with \"818\"\n\n    {\n      \"mainPhone\":{\n        \"$startsWith\": \"818\"\n      }\n    }\n\n  Supports negation. Case insensitive.\n\n  </tr>\n  <tr>\n    <th>$in</th>\n    <th>\n\n  Matches if field value is a member of the argument list.\n\n    {\n      \"mainPhone\":{\n        \"$in\": [\n          \"8185551616\",\n          \"9171112211\"\n        ]\n      }\n    }\n\n  Does not support negation. However, negation can be mimicked by using an `$and` matcher to negate individually over the desired values.\n\n  </tr>\n</table>\n\n**INTEGER, FLOAT, DATE, DATETIME, and TIME**\n\nThese filter types are strictly ordered -- therefore, they support the following matchers:\n- Equals\n- Less Than / Less Than or Equal To\n- Greater Than / Greater Than or Equal To\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n  Equals\n\n    {\n      \"ageRange.maxValue\": {\n        \"$eq\": \"80\"\n      }\n    }\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$lt</th>\n    <th>\n\n  Less than\n\n    {\n      \"time.start\": {\n        \"$lt\": \"2018-08-28T05:56\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$gt</th>\n    <th>\n\n  Greater than\n\n    {\n      \"ageRange.maxValue\": {\n        \"$gt\": \"50\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$le</th>\n    <th>\n\n  Less than or equal to\n\n    {\n      \"ageRange.maxValue\": {\n        \"$le\": \"40\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>$ge</th>\n    <th>\n\n  Greater than or equal to\n\n    {\n      \"time.end\": {\n        \"$ge\":  \"2018-08-28T05:56\"\n      }\n    }\n\n  </tr>\n  <tr>\n    <th>Combinations</th>\n    <th>\n\n  While we do not support \"between\" in our filtering syntax, it is possible to combine multiple matchers for a result similar to an \"and\" operation:\n\n    {\n      \"ageRange.maxValue : {\n        \"$gt\" : 10,\n        \"$lt\": 20\n      }\n    }\n\n  </tr>\n</table>\n\n**LIST OF TEXT**\n\nAny field that has a list of valid values and supports any of the previously mentioned filter types will also support the `$contains` matcher.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eq\": \"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" EXACTLY matches any string within **`c_myStringList`**.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAny</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAny\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if any one of \"sample1\" or \"sample2\" EXACTLY match a string within **`c_myStringList`** . The argument can have more than two strings.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"sample1\" AND \"sample2\" EXACTLY match a string within **`c_myStringList`**. The argument can have more than two strings.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$contains</th>\n    <th>\n\n    {\n      \"c_myStringList\":{\n        \"$contains\":\"sample\"\n      }\n    }\n\n  This filter will match if \"sample\" is contained in any string within **`c_myStringList`**.\n\n  Note that this matching is \"left edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This is a sample\", \"Sample one\", \"Sample 2\" but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$containsAny</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$containsAny\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n\n  This filter will match if either \"sample1\" or \"sample2\" is contained in any string within **`c_myStringList`**. The argument list can have more than two strings.\n\n  Note that similar to `$contains`, the matching for `$containsAny` is \"left edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This is a sample\", \"Sample one\", \"Sample 2\" but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$containsAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$containsAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if BOTH \"sample1\" and \"sample2\" are contained in strings within **`c_myStringList`**. The argument list can have more than two strings.\n\n  Note that similar to `$contains`, the matching for `$containsAll` is \"left-edge n-gram\", meaning the argument string must be the beginning of a token. The string \"sample\" will match strings like \"This a sample\", \"Sample one\", and \"Sample 2\", but not strings like \"thisisasamplewithoutspaces\".\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$startsWith</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$startsWith\":\"sample\"\n      }\n    }\n\n  This filter will match if any string within **`c_myStringList`** starts with \"sample\".\n\n  Does not supports negation. Case Insensitive.\n\n  </tr>\n</table>\n\n**LIST OF BOOLEAN, OPTION, PHONE, INTEGER, FLOAT, DATE, DATETIME, OR TIME**\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$eq</th>\n    <th>\n\n    {\n      \"c_myDateList\": {\n        \"$eq\": \"2019-01-01\"\n      }\n    }\n\n\n  This filter will match if \"2019-01-01\" EXACTLY matches any date within **`c_myDateList`**.\n\n  Supports negation.\n\n  </tr>\n  <tr>\n    <th>$eqAny</th>\n    <th>\n\n    {\n      \"c_myIntegerList\": {\n        \"$eqAny\": [1, 2]\n      }\n    }\n\n  This filter will match if 1 or 2 EXACTLY match any integer within **`c_myIntegerList`**. The argument list can have more than two elements.\n\n  Supports negation.\n\n  </tr>\n\n  <tr>\n    <th>$eqAll</th>\n    <th>\n\n    {\n      \"c_myStringList\": {\n        \"$eqAll\": [\n          \"sample1\",\n          \"sample2\"\n        ]\n      }\n    }\n\n  This filter will match if both \"2019-01-01\" AND \"2019-01-02\" EXACTLY match a date within **`c_myDateList`**. The argument list can have more than two elements.\n\n  Supports negation.\n\n  </tr>\n</table>\n\n**LIST OF STRUCT**\n\nFiltering on lists of struct types is a bit nuanced. Filtering can only be done on lists of structs of the SAME type.\nFor example, if **`c_myStructList`** is a list of compound fields with the subfields **`age`** and **`name`**, then one can address the **`age`** properties of each field in **`c_myStructList`** as a flattened list of integers and filtering upon them. For example, the following filter:\n\n```\n{\n  \"c_myStructList.age\":{\n    \"$eq\": 20\n  }\n}\n```\n\nwill match if any field in the list has an **`age`** property equal to 20. Similarly, any filter that can be applied to lists of integers could be applied to **`age`** in this case (`$eq`, `$eqAll`, `$eqAny`).\n\n\n**HOURS**\n\nBy filtering on an hours field, you can find which entities are open or closed at a specified time or during a certain time range. All of these filters also take an entity’s holiday hours and reopen date into account.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$openAt</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openAt\":\n          \"2019-01-06T13:45\"\n      }\n    }\n\n\n  This filter would match entities open at the specified time.\n\n  </tr>\n  <tr>\n    <th>$closedAt</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedAt:\n          \"2019-01-06T13:45\"\n      }\n    }\n\n  </tr>\n\n  <tr>\n    <th>$openForAllOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openForAllOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n\n  This filter would match only those entities that are open for the entire range between 2019-01-06T13:45 and 2019-01-06T15:00.\n\n    {\n      \"hours\": {\n        \"$openForAllOf\":\n          \"2019-05-10\"\n      }\n    }\n\n  This filter would match entities open for the entire 24 hour period on 2019-05-10.\n\n  You can also supply a year, a month, or an hour to filter for entities open for the entire year, month, or hour, respectively.\n\n  </tr>\n  <tr>\n    <th>$openForAnyOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$openForAnyOf\": {\n          \"start\": \"now\",\n          \"end\": \"now+2h\"\n        }\n      }\n    }\n\n  This filter will match any entities that are open for at least a portion of the time range between now and two hours from now.\n\n  </tr>\n  <tr>\n    <th>$closedForAllOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedForAllOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n  This filter will match only those entities that are closed for the entire given time range.\n  </tr>\n  <tr>\n    <th>$closedForAnyOf</th>\n    <th>\n\n    {\n      \"hours\": {\n        \"$closedForAnyOf\": {\n          \"start\":\n            \"2019-01-06T13:45\",\n          \"end\":\n            \"2019-01-06T15:00\"\n        }\n      }\n    }\n\n  This filter will match any entities that are closed for at least a portion of the given time range.\n  </tr>\n</table>\n\n\n**Filtering by Dates and Times**\n\n**Time zones**\n\nThe filtering language supports searching both in local time and within a certain time zone. Searching in local time will simply ignore the time zone on the target entities, while providing one will convert the zone of your queried time to the zone of the target entities.\n\nTo search in local time, simply provide the date or time without any zone: `2019-06-07T15:30` or `2019-06-07`.\n\nTo conduct a zoned search, provide the name of the time zone in brackets after the time, as it is shown in the tz database: `2019-06-07T15:30[America/New_York]` or `2019-06-06[America/Phoenix]`.\n\n\n**Date and time types**\n\nIn addition to searching with dates and datetimes, you can also query with years, months, and hours. For example, the filter:\n\n```\n{\n  \"time.start\": {\n    \"$eq\": \"2018\"\n  }\n}\n```\n\nwould match all start times in the year 2018. The same logic would apply for a month (`2019-05`), a date (`2019-05-01`), or an hour (`2019-05-01T06`).\n\nThese types also work with ordered searches. For example:\n\n```\n{\n \"time.start\": {\n    \"$lt\": \"2018\"\n }\n}\n```\n\nwould match start times before 2018 (i.e., anything in 2017 or before). On the other hand, the same query with a `$le` matcher would include anything in or before 2018.\n\n**\"Now\" and Date Math**\n\nInstead of providing a static date or time, you can also use `now` in place of any date time. When you do so, the system will calculate the time when the query is made and conduct a zoned search.\n\nIn order to search for a future or past time relative to `now`, you can use date math. For example, you can enter `now+3h` or `now-1d`, which would mean 3 hours from now and 1 day ago, respectively. You can also add and subtract minutes (`m`), months (`M`), and years (`y`).\n\nIt is also possible to add or subtract time from a static date or datetime. Simply add `||` between the static value and any addition or subtraction. For example, `2019-02-03||+1d` would be the same as `2019-02-04`.\n\nYou can also convert date and time types to other types. For example, to convert the datetime `2019-05-06T22:15` to a date, use `2019-05-06T22:15||/d`. Doing so would yield the same result as using `2019-05-06`. This method also works with `now`: `now/d` will give you today’s date without the time.\n\n**Filtering Across an Entity**\n\nIt is possible to search for a specific text string across all fields of an entity by using the `$anywhere` matcher.\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Matcher</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <th>$anywhere</th>\n    <th>\n\n  Matches if the argument text appears anywhere in the entity (including subfields, structs, and lists)\n\n    {\n      \"$anywhere\": \"hello\"\n    }\n\n  This filter will match all entities that contain the string \"hello\" or strings that begin with \"hello\".\n\n  </tr>\n</table>\n\n**Examples**\n\nThe following filter will match against entities that:\n- Are of type `event` (note that entity types can also be filtered by the **`entityTypes`** query parameter)\n- Have a name that starts with the text \"Century\"\n- Have a maximum age between 10 and 20\n- Have a minimum age between 5 and 7\n- Start after 7 PM (19:00) on August 28, 2018\n\n```\n{\n  \"$and\":[\n    {\n      \"entityType\":{\n        \"$eq\":\"event\"\n      }\n    },\n    {\n      \"name\":{\n        \"$startsWith\":\"Century\"\n      }\n    },\n    {\n      \"ageRange.maxValue\":{\n        \"$gt\":10,\n        \"$lt\":20\n      }\n    },\n    {\n      \"ageRange.minValue\":{\n        \"$gt\":5,\n        \"$lt\":7\n      }\n    },\n    {\n      \"time.start\":{\n        \"$ge\":\"2018-08-28T19:00\"\n      }\n    }\n  ]\n}\n```\n",
            "name": "filter",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string",
              "default": "markdown"
            },
            "description": "Present if and only if at least one field is of type \"**Rich Text**.\"\n\nValid values:\n  * `markdown`\n  * `html`\n  * `none`\n",
            "name": "format",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "The comma-separated language codes corresponding to the languages of the profile that the user wishes to retrieve",
            "name": "languageCodes",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "multipleOf": 1,
              "maximum": 50,
              "type": "number",
              "default": "10"
            },
            "description": "Number of results to return.",
            "name": "limit",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "multipleOf": 1,
              "type": "number",
              "default": "0"
            },
            "description": "Number of results to skip. Used to page through results.\nCannot be used together with **`pageToken`**.\n\nFor Live API requests, the offset cannot be higher than 9,950. For Knowledge API the maximum limit is only enforced if a filter and/or sortBy parameter are given.\n",
            "name": "offset",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "If a response to a previous request contained the **`pageToken`** field, pass that field's value as the **`pageToken`** parameter to retrieve the next page of data.",
            "name": "pageToken",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "minLength": 0,
              "type": "string"
            },
            "description": "A list of fields and sort directions to order results by. Each ordering in the list should be in the format `{\"field_name\", \"sort_direction\"}`, where `sort_direction` is either `ASCENDING` or `DESCENDING`.\n\nFor example, to order by `name` the sort order would be `[{\"name\":\"ASCENDING\"}]`. To order by `name` and then `description`, the sort order would be `[{\"name\":\"ASCENDING\"},{\"description\":\"ASCENDING\"}]`.\n",
            "name": "sortBy",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Entity Language Profiles: List All",
        "description": "Retrieve a list of Language Profiles for Entities within an account\n\n**NOTE:**\n\n* Responses will contain resolved values for embedded fields\n* If the `fields` parameter is unspecified, responses will contain the full\nentity profile for the requested language\n",
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Unique ID for this request / response."
                        }
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "count": {
                          "multipleOf": 1,
                          "type": "number",
                          "description": "Total number of Entities that meet the filter criteria (ignores **``limit``** / **``offset``** parameters)"
                        },
                        "pageToken": {
                          "minLength": 0,
                          "type": "string",
                          "description": "Pass this value into the next request as the **`pageToken`** parameter to retrieve the next page of data.\n\nIf the response of a request contains the last page of data, a **`pageToken`** value will not be returned. A **`pageToken`** will never appear in the response if the request contains the **`sortOrder`**, **`randomization`**, or **`randomizationToken`** parameters.\n"
                        },
                        "profileLists": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "profiles": {
                                "uniqueItems": false,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "properties": {
                                    "meta": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "accountId": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "ID of the account associated with this Entity"
                                        },
                                        "countryCode": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Country code of this Entity's Language Profile (defaults to the country of the account)\n\nFiltering Type: `text`"
                                        },
                                        "entityType": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "This Entity's type (e.g., location, event)\n\nFiltering Type: `text`"
                                        },
                                        "folderId": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "The ID of the folder containing this Entity\n\nFiltering Type: `text`"
                                        },
                                        "id": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "ID of this Entity\n\nFiltering Type: `text`"
                                        },
                                        "labels": {
                                          "uniqueItems": false,
                                          "type": "array",
                                          "items": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "description": "This Entity's labels. If the **`v`** parameter is before `20211215`, this will be an integer.\n\nFiltering Type: `list of text`"
                                        },
                                        "language": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Language code of this Entity's Language Profile (defaults to the language code of the account)\n\nFiltering Type: `text`"
                                        },
                                        "timestamp": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "The timestamp of the most recent change to this entity record. Will be ignored when the client is saving entity data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
                                        },
                                        "uid": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "A static globally unique ID for the Entity. Note that this value cannot be used in place of **`id`** in API calls to retrieve or edit Entity information."
                                        }
                                      },
                                      "description": "Contains the metadata about the entity.\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "name": {
                                      "minLength": 0,
                                      "maxLength": 5000,
                                      "type": "string",
                                      "description": "\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "address": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "city": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "The city the entity (or the entity's location) is in\n\n\nCannot Include:\n* a URL or domain name\n* a digit\n\nFiltering Type: `text`"
                                        },
                                        "countryCode": {
                                          "minLength": 0,
                                          "pattern": "^[a-zA-Z]{2}$",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "extraDescription": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "Provides additional information to help consumers get to the entity. This string appears along with the entity's address (e.g., `In Menlo Mall, 3rd Floor`).\nIt may also be used in conjunction with a hidden address (i.e., when **`addressHidden`** is `true`) to give consumers information about where the entity can be found (e.g., `Servicing the New York area`).\n\nFiltering Type: `text`"
                                        },
                                        "line1": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        },
                                        "line2": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        },
                                        "line3": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        },
                                        "postalCode": {
                                          "minLength": 0,
                                          "maxLength": 10,
                                          "type": "string",
                                          "description": "The entity's postal code. The postal code must be valid for the entity's country. Cannot include a URL or domain name.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        },
                                        "region": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "The name of the entity's region or state.\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        },
                                        "sublocality": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "The name of the entity's sublocality\n\n\nCannot Include:\n* a URL or domain name\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Contains the address of the entity (or where the entity is located)\n\nMust be a valid address\nCannot be a P.O. Box\n\nIf the entity is an `event`, either an **`address`** value or a **`linkedLocation`** value can be provided.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "acceptingNewPatients": {
                                      "type": "boolean",
                                      "description": "Indicates whether the healthcare provider is accepting new patients.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                                    },
                                    "acceptsReservations": {
                                      "type": "boolean",
                                      "description": "Indicates whether the entity accepts reservations.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * restaurant\n```"
                                    },
                                    "accessHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the access hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the access hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily access hours, holiday access hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `accessHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday access hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "additionalHoursText": {
                                      "minLength": 0,
                                      "maxLength": 255,
                                      "type": "string",
                                      "description": "Additional information about hours that does not fit in **`hours`** (e.g., `\"Closed during the winter\"`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "additionalPromotingLocations": {
                                      "description": "If other locations are promoting this event, a list of those locations' **`id`**s in the Yext Knowledge Manager\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of entityId`\n\n```\nEligible For: \n   * event\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Filtering Type: `entityId`"
                                      }
                                    },
                                    "addressHidden": {
                                      "type": "boolean",
                                      "description": "If `true`, the entity's street address will not be shown on listings. Defaults to `false`.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "admittingHospitals": {
                                      "description": "A list of hospitals where the healthcare professional admits patients\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "adultPool": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a pool for adults only.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "ageRange": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "maxValue": {
                                          "multipleOf": 1,
                                          "type": "number",
                                          "description": "Maximum age for the event\n\nFiltering Type: `integer`"
                                        },
                                        "minValue": {
                                          "multipleOf": 1,
                                          "type": "number",
                                          "description": "Minimum age for the event\n\nFiltering Type: `integer`"
                                        }
                                      },
                                      "description": "Contains the age range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "airportShuttle": {
                                      "enum": [
                                        "AIRPORT_SHUTTLE_AVAILABLE",
                                        "AIRPORT_SHUTTLE_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers a shuttle to/from the airport.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "airportTransfer": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers a shuttle service of car service to/from nearby airports or train stations.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "allInclusive": {
                                      "enum": [
                                        "ALL_INCLUSIVE_RATES_AVAILABLE",
                                        "ALL_INCLUSIVE_RATES_ONLY",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers all-inclusive rates.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "alternateNames": {
                                      "description": "Other names for your business that you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "alternatePhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "alternateWebsites": {
                                      "description": "Other websites for your business that we should search for when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 3 elements.\n\nArray item description:\n\n>Cannot Include:\n>* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 255,
                                        "format": "uri",
                                        "type": "string",
                                        "description": "\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "androidAppUrl": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The URL where consumers can download the entity's Android app\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "answer": {
                                      "description": "The answer to the frequently asked question represented by this entity\n\n\nCharacter limit: 0 .. 15000\n\nSupported formats include:\n* BOLD\n* ITALICS\n* UNDERLINE\n* BULLETED_LIST\n* NUMBERED_LIST\n* HYPERLINK\n* IMAGE\n* CODE_SPAN\n* HEADINGS\n\n```\nEligible For: \n   * faq\n```",
                                      "type": "string",
                                      "format": "rich-text"
                                    },
                                    "applicationUrl": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "The application URL\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "associations": {
                                      "description": "Association memberships relevant to the entity (e.g., `\"New York Doctors Association\"`)\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "attendance": {
                                      "required": [
                                        "attendanceMode"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "attendanceMode": {
                                          "enum": [
                                            "OFFLINE",
                                            "ONLINE",
                                            "MIXED"
                                          ],
                                          "type": "string",
                                          "description": "Filtering Type: `option`"
                                        },
                                        "virtualLocationUrl": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      },
                                      "description": "Indicates whether the event is online, offline, or a mix.\nA `virtualLocationUrl` must be specified for online and mixed events.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "attire": {
                                      "enum": [
                                        "UNSPECIFIED",
                                        "DRESSY",
                                        "CASUAL",
                                        "FORMAL"
                                      ],
                                      "type": "string",
                                      "description": "The formality of clothing typically worn at this restaurant\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * restaurant\n```"
                                    },
                                    "babysittingOffered": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers babysitting.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "baggageStorage": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers baggage storage pre check-in and post check-out.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "bar": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has an indoor or outdoor bar onsite.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "beachAccess": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has access to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "beachFrontProperty": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity is physically located next to a beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "bicycles": {
                                      "enum": [
                                        "BICYCLE_RENTALS",
                                        "BICYCLE_RENTALS_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers bicycles for rent or for free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "bios": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "ids": {
                                          "description": "IDs of the Bio Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        },
                                        "label": {
                                          "minLength": 0,
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Label to be used for this entity's Bio Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the Bio Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "boutiqueStores": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a boutique store. Gift shop or convenience store are not eligible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "brands": {
                                      "description": "Brands sold by this entity\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "breakfast": {
                                      "enum": [
                                        "BREAKFAST_AVAILABLE",
                                        "BREAKFAST_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers breakfast.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "brunchHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the brunch hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the brunch hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for brunch on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily brunch hours, holiday brunch hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `brunchHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday brunch hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "businessCenter": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a business center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "calendars": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "ids": {
                                          "description": "IDs of the Calendars associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        },
                                        "label": {
                                          "minLength": 0,
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Label to be used for this entity's Calendars. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the events Content Lists (Calendars) associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "carRental": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers car rental.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "casino": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a casino on premise or nearby.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "categoryIds": {
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      },
                                      "description": "Yext Category IDs.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\nNOTE: The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "catsAllowed": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is cat friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "certifications": {
                                      "description": "A list of the certifications held by the healthcare professional\n**NOTE:** This field is only available to locations whose **`entityType`** is `healthcareProfessional`.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "checkInTime": {
                                      "format": "time",
                                      "type": "string",
                                      "description": "The check-in time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "checkOutTime": {
                                      "format": "time",
                                      "type": "string",
                                      "description": "The check-out time\n\nFiltering Type: `time`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "classificationRating": {
                                      "pattern": "^\\d*\\.?\\d*$",
                                      "type": "string",
                                      "description": "The 1 to 5 star rating of the entitiy based on its services and facilities.\n\nFiltering Type: `decimal`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "closed": {
                                      "type": "boolean",
                                      "description": "Indicates whether the entity is closed\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "concierge": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers concierge service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "conditionsTreated": {
                                      "description": "A list of the conditions treated by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "convenienceStore": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a convenience store.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "currencyExchange": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers currency exchange services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "customKeywords": {
                                      "description": "Additional keywords you would like us to use when tracking your search performance\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      }
                                    },
                                    "datePosted": {
                                      "format": "date",
                                      "type": "string",
                                      "description": "The date this entity was posted\n\nFiltering Type: `date`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "degrees": {
                                      "description": "A list of the degrees earned by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "ANP",
                                          "APN",
                                          "APRN",
                                          "ARNP",
                                          "CNM",
                                          "CNP",
                                          "CNS",
                                          "CPNP",
                                          "CRNA",
                                          "CRNP",
                                          "DC",
                                          "DDS",
                                          "DMD",
                                          "DNP",
                                          "DO",
                                          "DPM",
                                          "DVM",
                                          "FNP",
                                          "GNP",
                                          "LAC",
                                          "LPN",
                                          "MBA",
                                          "MBBS",
                                          "MD",
                                          "MPH",
                                          "ND",
                                          "NNP",
                                          "NP",
                                          "OD",
                                          "PA",
                                          "PAC",
                                          "PHARMD",
                                          "PHD",
                                          "PNP",
                                          "PSYD",
                                          "VMD",
                                          "WHNP"
                                        ],
                                        "type": "string",
                                        "description": "Filtering Type: `option`"
                                      }
                                    },
                                    "deliveryHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the delivery hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is delivering on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the delivery hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is delivering on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily delivery hours, holiday delivery hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `deliveryHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday delivery hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                                    },
                                    "description": {
                                      "minLength": 10,
                                      "maxLength": 15000,
                                      "type": "string",
                                      "description": "A description of the entity\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "displayCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates where the map pin for the entity should be displayed, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "doctorOnCall": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a doctor on premise or on call.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "dogsAllowed": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is dog friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "driveThroughHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the drive-through hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity's drive-through is open on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the drive-through hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's drive-through is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily drive-through hours, holiday drive-through hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `driveThroughHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday drive-through hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * location\n   * restaurant\n```"
                                    },
                                    "dropoffCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates of the drop-off area for the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "educationList": {
                                      "description": "Information about the education or training completed by the healthcare professional\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "required": [
                                          "type",
                                          "institutionName",
                                          "yearCompleted"
                                        ],
                                        "additionalProperties": false,
                                        "type": "object",
                                        "properties": {
                                          "institutionName": {
                                            "minLength": 0,
                                            "maxLength": 100,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "type": {
                                            "enum": [
                                              "FELLOWSHIP",
                                              "RESIDENCY",
                                              "INTERNSHIP",
                                              "MEDICAL_SCHOOL"
                                            ],
                                            "type": "string",
                                            "description": "Filtering Type: `option`"
                                          },
                                          "yearCompleted": {
                                            "multipleOf": 1,
                                            "minimum": 1900,
                                            "maximum": 2100,
                                            "type": "number",
                                            "description": "Filtering Type: `integer`"
                                          }
                                        },
                                        "description": "Filtering Type: `object`"
                                      }
                                    },
                                    "electricChargingStation": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has electric car chargine stations on premise.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "elevator": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has an elevator.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "ellipticalMachine": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has an elliptical machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "emails": {
                                      "description": "Emails addresses for this entity's point of contact\n\nMust be valid email addresses\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "format": "email",
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      }
                                    },
                                    "employmentType": {
                                      "enum": [
                                        "FULL_TIME",
                                        "PART_TIME",
                                        "CONTRACTOR",
                                        "TEMPORARY",
                                        "INTERN",
                                        "VOLUNTEER",
                                        "PER_DIEM",
                                        "OTHER"
                                      ],
                                      "type": "string",
                                      "description": "The employment type for the open job. Indicates whether the job is full-time, part-time, temporary, etc.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "eventStatus": {
                                      "enum": [
                                        "SCHEDULED",
                                        "RESCHEDULED",
                                        "POSTPONED",
                                        "CANCELED",
                                        "EVENT_MOVED_ONLINE"
                                      ],
                                      "type": "string",
                                      "description": "Information on whether the event will take place as scheduled\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "facebookCallToAction": {
                                      "required": [
                                        "type"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "enum": [
                                            "NONE",
                                            "BOOK_NOW",
                                            "CALL_NOW",
                                            "CONTACT_US",
                                            "SEND_MESSAGE",
                                            "USE_APP",
                                            "PLAY_GAME",
                                            "SHOP_NOW",
                                            "SIGN_UP",
                                            "WATCH_VIDEO",
                                            "SEND_EMAIL",
                                            "LEARN_MORE",
                                            "PURCHASE_GIFT_CARDS",
                                            "ORDER_NOW",
                                            "FOLLOW_PAGE"
                                          ],
                                          "type": "string",
                                          "description": "The action the consumer is being prompted to take by the button's text\n\nFiltering Type: `option`"
                                        },
                                        "value": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Designates the Facebook Call-to-Action button text and value\n\nValid contents of **`value`** depends on the Call-to-Action's **`type`**:\n* `NONE`: (optional)\n* `BOOK_NOW`: URL\n* `CALL_NOW`: Phone number\n* `CONTACT_US`: URL\n* `SEND_MESSAGE`: Any string\n* `USE_APP`: URL\n* `PLAY_GAME`: URL\n* `SHOP_NOW`: URL\n* `SIGN_UP`: URL\n* `WATCH_VIDEO`: URL\n* `SEND_EMAIL`: Email address\n* `LEARN_MORE`: URL\n* `PURCHASE_GIFT_CARDS`: URL\n* `ORDER_NOW`: URL\n* `FOLLOW_PAGE`: Any string\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "facebookCoverPhoto": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "The cover photo for the entity's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou may need a cover photo in order for your listing to appear on Facebook. Please check your listings tab to learn more.\n\n\nImage must be at least 400 x 150 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    },
                                    "facebookDescriptor": {
                                      "minLength": 3,
                                      "maxLength": 75,
                                      "type": "string",
                                      "description": "Location Descriptors are used for Enterprise businesses that sync Facebook listings using brand page location structure. The Location Descriptor is typically an additional geographic description (e.g. geomodifier) that will appear in parentheses after the name on the Facebook listing.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "facebookName": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The name for this entity's Facebook profile.  A separate name may be specified to send only to Facebook in order to comply with any specific Facebook rules or naming conventions.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "facebookOverrideCity": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The city to be displayed on this entity's Facebook profile\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "facebookPageUrl": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "URL for the entity's Facebook Page.\n\nValid formats:\n\n- facebook.com/profile.php?id=[numId]\n- facebook.com/group.php?gid=[numId]\n- facebook.com/groups/[numId]\n- facebook.com/[Name]\n- facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "facebookProfilePhoto": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "The profile picture for the entity's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n\nImage must be at least 180 x 180 pixels\n\nImage may be no more than 30000 x 30000 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    },
                                    "facebookVanityUrl": {
                                      "minLength": 0,
                                      "maxLength": 50,
                                      "type": "string",
                                      "description": "The username that appear's in the Facebook listing URL to help customers find and remember a brand’s Facebook page.  The username is also be used for tagging the Facebook page in other users’ posts, and searching for the Facebook page.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "fax": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid fax number.\n\nIf the fax number's calling code is for a country other than the one given in the entity's **`countryCode`**, the fax number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "featuredMessage": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "minLength": 0,
                                          "maxLength": 50,
                                          "type": "string",
                                          "description": "The text of Featured Message. Default: `Call today!`\n\nCannot include:\n\n- inappropriate language\n- HTML markup\n- a URL or domain name\n- a phone number\n- control characters ([\\x00-\\x1F\\x7F])\n- insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Valid URL linked to the Featured Message text\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the entity's Featured Message\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "firstName": {
                                      "minLength": 0,
                                      "maxLength": 35,
                                      "type": "string",
                                      "description": "The first name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "firstPartyReviewPage": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Link to the review-collection page, where consumers can leave first-party reviews\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "fitnessCenter": {
                                      "enum": [
                                        "FITNESS_CENTER_AVAILABLE",
                                        "FITNESS_CENTER_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a fitness center.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "floorCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The number of floors the entity has from ground floor to top floor.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "freeWeights": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has free weights.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "frequentlyAskedQuestions": {
                                      "description": "A list of questions that are frequently asked about this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "required": [
                                          "question"
                                        ],
                                        "additionalProperties": false,
                                        "type": "object",
                                        "properties": {
                                          "answer": {
                                            "minLength": 1,
                                            "maxLength": 4096,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "question": {
                                            "minLength": 1,
                                            "maxLength": 4096,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        },
                                        "description": "Filtering Type: `object`"
                                      }
                                    },
                                    "frontDesk": {
                                      "enum": [
                                        "FRONT_DESK_AVAILABLE",
                                        "FRONT_DESK_AVAILABLE_24_HOURS",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a front desk.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "gameRoom": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a game room.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "gender": {
                                      "enum": [
                                        "UNSPECIFIED",
                                        "FEMALE",
                                        "MALE"
                                      ],
                                      "type": "string",
                                      "description": "The gender of the healthcare professional\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "geomodifier": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Provides additional information on where the entity can be found (e.g., `Times Square`, `Global Center Mall`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "giftShop": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a gift shop.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "golf": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a golf couse on premise or nearby. The golf course may be independently run.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "googleAttributes": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {},
                                      "description": "The unique IDs of the entity's Google My Business keywords, as well as the unique IDs of any values selected for each keyword.\n\nValid keywords (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`) are determined by the entity's primary category. A full list of keywords can be retrieved with the Google Fields: List endpoint.\n\nKeyword values provide more details on how the keyword applies to the entity (e.g., if the keyword is `has_drive_through`, its values may be `true` or `false`).\n\n* If the **`v`** parameter is before `20181204`: **`googleAttributes`** is formatted as a map of key-value pairs (e.g., `[{ \"id\": \"has_wheelchair_accessible_entrance\", \"values\": [ \"true\" ] }]`)\n* If the **`v`** parameter is on or after `20181204`: the contents are formatted as a list of objects (e.g., `{ \"has_wheelchair_accessible_entrance\": [ \"true\" ]}`)\n\n**NOTE:** The latest Google Attributes are available via the Google Fields: List endpoint. Google Attributes are managed by Google and are subject to change without notice. To prevent errors, make sure your API implementation is not dependent on the presence of specific attributes.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "googleCoverPhoto": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "The cover photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    },
                                    "googleMyBusinessLabels": {
                                      "description": "Google My Business Labels help users organize their locations into groups within GMB.\n\n\nArray must be ordered.\n\nArray may have a maximum of 10 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 50,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "googlePlaceId": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The unique identifier of this entity on Google Maps.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "googleProfilePhoto": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "The profile photo for the entity's Google profile\n\n\nImage must be at least 250 x 250 pixels\n\nImage may be no more than 500 x 500 pixels\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    },
                                    "googleWebsiteOverride": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "The URL you would like to submit to Google My Business in place of the one given in **`websiteUrl`** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "happyHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's happy hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the happy hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for the Entity's happy hours on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the happy hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's happy hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily happy hours, holiday happy hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `happyHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday happy hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "headshot": {
                                      "required": [
                                        "url"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "A portrait of the healthcare professional\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * contactCard\n   * financialProfessional\n   * healthcareProfessional\n```",
                                      "properties": {
                                        "alternateText": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        }
                                      }
                                    },
                                    "hiringOrganization": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The organization that is hiring for the open job\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "holidayHoursConversationEnabled": {
                                      "type": "boolean",
                                      "description": "Indicates whether holiday-hour confirmation alerts are enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "horsebackRiding": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers horseback riding.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "hotTub": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a hot tub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "hours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the hours of operation are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is open on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the hours of operation are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily hours, holiday hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `hours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "housekeeping": {
                                      "enum": [
                                        "HOUSEKEEPING_AVAILABLE",
                                        "HOUSEKEEPING_AVAILABLE_DAILY",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers housekeeping services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "impressum": {
                                      "minLength": 0,
                                      "maxLength": 2000,
                                      "type": "string",
                                      "description": "A statement of the ownership and authorship of a document. Individuals or organizations based in many German-speaking countries are required by law to include an Impressum in published media.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "indoorPoolCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "A count of the number of indoor pools\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "instagramHandle": {
                                      "minLength": 0,
                                      "maxLength": 30,
                                      "type": "string",
                                      "description": "Valid Instagram username for the entity without the leading \"@\" (e.g., `NewCityAuto`)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "insuranceAccepted": {
                                      "description": "A list of insurance policies accepted by the healthcare provider\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "iosAppUrl": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The URL where consumers can download the entity's app to their iPhone or iPad\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "isClusterPrimary": {
                                      "type": "boolean",
                                      "description": "Indicates whether the healthcare entity is the primary entity in its group\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "isFreeEvent": {
                                      "type": "boolean",
                                      "description": "Indicates whether or not the event is free\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "isoRegionCode": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The ISO 3166-2 region code for the entity\n\nYext will determine the entity's code and update **`isoRegionCode`** with that value. If Yext is unable to determine the code for the entity, the entity'ss ISO 3166-1 alpha-2 country code will be used.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "keywords": {
                                      "description": "Keywords that describe the entity.\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "kidFriendly": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is kid friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "kidsClub": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the property has a Kids Club.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "kidsStayFree": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity allows kids to stay free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "kitchenHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the kitchen hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity's kitchen is open on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen open on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the kitchen hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity's kitchen is open on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily kitchen hours, holiday kitchen hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `kitchenHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday kitchen hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "labels": {
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "type": "string"
                                      },
                                      "description": "The IDs of the entity labels that have been added to this entity. Entity labels help you identify entities that share a certain characteristic; they do not appear on your entity's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nFiltering Type: `opaque`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "landingPageUrl": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "The URL of this entity's Landing Page that was created with Yext Pages\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "languages": {
                                      "description": "The langauges in which consumers can commicate with this entity or its staff members\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "lastName": {
                                      "minLength": 0,
                                      "maxLength": 35,
                                      "type": "string",
                                      "description": "The last name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "laundry": {
                                      "enum": [
                                        "FULL_SERVICE",
                                        "SELF_SERVICE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers laundry services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "lazyRiver": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the property has a lazy river\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "lifeguard": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the property has a lifeguard on duty\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "linkedLocation": {
                                      "type": "string",
                                      "description": "location ID of the event location, if the event is held at a location managed in the Yext Knowledge Manager\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * contactCard\n   * event\n```"
                                    },
                                    "localPhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid, non-toll-free phone number, based on the country specified in **`address.region`**. Phone numbers for US entities must contain 10 digits.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "localShuttle": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers local shuttle services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "locatedIn": {
                                      "type": "string",
                                      "description": "For atms, the external ID of the entity that the atm is installed in. The entity must be in the same business account as the atm.\n\nFiltering Type: `entityId`\n\n```\nEligible For: \n   * atm\n```"
                                    },
                                    "location": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "existingLocation": {
                                          "type": "string",
                                          "description": "A location entity referenced by Yext ID or Entity ID where this job opening exists\n\nFiltering Type: `entityId`"
                                        },
                                        "externalLocation": {
                                          "minLength": 0,
                                          "maxLength": 255,
                                          "type": "string",
                                          "description": "A location string where this job opening exists\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "The location where this job opening exists as either an existing location or an external location\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "locationType": {
                                      "enum": [
                                        "LOCATION",
                                        "HEALTHCARE_FACILITY",
                                        "HEALTHCARE_PROFESSIONAL",
                                        "ATM",
                                        "RESTAURANT",
                                        "HOTEL"
                                      ],
                                      "type": "string",
                                      "description": "Indicates the entity's type, if it is not an event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "logo": {
                                      "required": [
                                        "image"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "description": "An image of the entity's logo\n\n\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```",
                                      "properties": {
                                        "clickthroughUrl": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "description": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "details": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Filtering Type: `text`"
                                        },
                                        "image": {
                                          "required": [
                                            "url"
                                          ],
                                          "additionalProperties": false,
                                          "type": "object",
                                          "description": "\nSupported Aspect Ratios:\n* 1 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                          "properties": {
                                            "alternateText": {
                                              "minLength": 0,
                                              "type": "string",
                                              "description": "Filtering Type: `text`"
                                            },
                                            "url": {
                                              "minLength": 0,
                                              "format": "uri",
                                              "type": "string",
                                              "description": "Filtering Type: `text`"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "mainPhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The main phone number of the entity's point of contact\n\nMust be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "massage": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers massage services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "maxAgeOfKidsStayFree": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The maximum age specified by the property for children to stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "maxNumberOfKidsStayFree": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The maximum number of children who can stay in the room/suite of a parent or adult without an additional fee\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "mealsServed": {
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "BREAKFAST",
                                          "LUNCH",
                                          "BRUNCH",
                                          "DINNER",
                                          "HAPPY_HOUR",
                                          "LATE_NIGHT"
                                        ],
                                        "type": "string",
                                        "description": "Filtering Type: `option`"
                                      },
                                      "description": "Types of meals served at this restaurant\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * restaurant\n```"
                                    },
                                    "meetingRoomCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The number of meeting rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "menuUrl": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "displayUrl": {
                                          "minLength": 0,
                                          "maxLength": 2000,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "The URL that is shown on your listings in place of **`menuUrl.url`**. You can use **`menuUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`menuUrl.url`**.\n\nFiltering Type: `text`"
                                        },
                                        "preferDisplayUrl": {
                                          "type": "boolean",
                                          "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "maxLength": 2000,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "A valid URL where consumers can view the entity's menu\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the URL where consumers can view the entity's menu\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "menus": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "ids": {
                                          "description": "IDs of the Menu Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        },
                                        "label": {
                                          "minLength": 0,
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Label to be used for this entity's Menu Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the Menu Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "middleName": {
                                      "minLength": 0,
                                      "maxLength": 35,
                                      "type": "string",
                                      "description": "The middle name of the healthcare professional\n\n\nCannot Include:\n* a URL or domain name\n* HTML markup\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "mobilePhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "mobilityAccessible": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity is mobility/wheelchair accessible\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "nightclub": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a nightclub.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "npi": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The National Provider Identifier (NPI) of the healthcare provider\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n```"
                                    },
                                    "nudgeEnabled": {
                                      "type": "boolean",
                                      "description": "Indicates whether Knowledge Nudge is enabled for the Yext Knowledge Assistant for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "officeName": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The name of the office where the healthcare professional works, if different from **`name`**\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * healthcareProfessional\n```"
                                    },
                                    "onlineServiceHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the online service hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for the Entity's online service hours on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the online service hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's online service hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily online service hours, holiday online service hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `onlineServiceHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday online service hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                                    },
                                    "orderUrl": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "displayUrl": {
                                          "minLength": 0,
                                          "maxLength": 2000,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "The URL that is shown on your listings in place of **`orderUrl.url`**. You can use **`orderUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`orderUrl.url`**.\n\nFiltering Type: `text`"
                                        },
                                        "preferDisplayUrl": {
                                          "type": "boolean",
                                          "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "maxLength": 2000,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "A valid URL used to place an order at this entity\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the URL used to place orders that will be fulfilled by the entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "organizerEmail": {
                                      "minLength": 0,
                                      "format": "email",
                                      "type": "string",
                                      "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "organizerName": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "organizerPhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Point of contact for the event organizer (not to be published publicly)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "outdoorPoolCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The number of outdoor pools the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "parking": {
                                      "enum": [
                                        "PARKING_AVAILABLE",
                                        "PARKING_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "paymentOptions": {
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "ALIPAY",
                                          "AMERICANEXPRESS",
                                          "ANDROIDPAY",
                                          "APPLEPAY",
                                          "ATM",
                                          "ATMQUICK",
                                          "BACS",
                                          "BANCONTACT",
                                          "BANKDEPOSIT",
                                          "BANKPAY",
                                          "BGO",
                                          "BITCOIN",
                                          "Bar",
                                          "CARTASI",
                                          "CASH",
                                          "CCS",
                                          "CHECK",
                                          "CONB",
                                          "CVVV",
                                          "DEBITNOTE",
                                          "DINERSCLUB",
                                          "DIRECTDEBIT",
                                          "DISCOVER",
                                          "ECKARTE",
                                          "ECOCHEQUE",
                                          "EKENA",
                                          "EMV",
                                          "FINANCING",
                                          "GOPAY",
                                          "HAYAKAKEN",
                                          "HEBAG",
                                          "IBOD",
                                          "ICCARDS",
                                          "ICOCA",
                                          "ID",
                                          "IDEAL",
                                          "INCA",
                                          "INVOICE",
                                          "JCB",
                                          "JCoinPay",
                                          "JKOPAY",
                                          "KITACA",
                                          "KLA",
                                          "KLARNA",
                                          "LINEPAY",
                                          "MAESTRO",
                                          "MANACA",
                                          "MASTERCARD",
                                          "MIPAY",
                                          "MONIZZE",
                                          "MPAY",
                                          "Manuelle Lastsch",
                                          "Merpay",
                                          "NANACO",
                                          "NEXI",
                                          "NIMOCA",
                                          "OREM",
                                          "PASMO",
                                          "PAYBACKPAY",
                                          "PAYBOX",
                                          "PAYCONIQ",
                                          "PAYPAL",
                                          "PAYPAY",
                                          "PAYSEC",
                                          "PIN",
                                          "POSTEPAY",
                                          "QRCODE",
                                          "QUICPAY",
                                          "RAKUTENEDY",
                                          "RAKUTENPAY",
                                          "SAMSUNGPAY",
                                          "SODEXO",
                                          "SUGOCA",
                                          "SUICA",
                                          "SWISH",
                                          "TICKETRESTAURANT",
                                          "TOICA",
                                          "TRAVELERSCHECK",
                                          "TSCUBIC",
                                          "TWINT",
                                          "UNIONPAY",
                                          "VEV",
                                          "VISA",
                                          "VISAELECTRON",
                                          "VOB",
                                          "VOUCHER",
                                          "VPAY",
                                          "WAON",
                                          "WECHATPAY",
                                          "WIRETRANSFER",
                                          "Yucho Pay",
                                          "ZELLE",
                                          "auPay",
                                          "dBarai",
                                          "Überweisung"
                                        ],
                                        "type": "string",
                                        "description": "Filtering Type: `option`"
                                      },
                                      "description": "The payment methods accepted by this entity\n\nValid elements depend on the entity's country.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "performers": {
                                      "description": "Performers at the event\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * event\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "Filtering Type: `text`"
                                      }
                                    },
                                    "petsAllowed": {
                                      "enum": [
                                        "PETS_WELCOME",
                                        "PETS_WELCOME_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is pet friendly.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "photoGallery": {
                                      "description": "\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Supported Aspect Ratios:\n>* 1 x 1\n>* 4 x 3\n>* 3 x 2\n>* 5 x 3\n>* 16 x 9\n>* 3 x 1\n>* 2 x 3\n>* 5 x 7\n>* 4 x 5\n>* 4 x 1\n>\n>**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n>\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                      "uniqueItems": false,
                                      "type": "array",
                                      "items": {
                                        "required": [
                                          "image"
                                        ],
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                        "properties": {
                                          "clickthroughUrl": {
                                            "minLength": 0,
                                            "format": "uri",
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "description": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "details": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "image": {
                                            "required": [
                                              "url"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "\nSupported Aspect Ratios:\n* 1 x 1\n* 4 x 3\n* 3 x 2\n* 5 x 3\n* 16 x 9\n* 3 x 1\n* 2 x 3\n* 5 x 7\n* 4 x 5\n* 4 x 1\n\n**NOTE**: Maximum image size is 5mb after normalization and padding (if applicable). As well, there is a 6 second download limit from the image host.\n\n\nFiltering Type: `object`",
                                            "properties": {
                                              "alternateText": {
                                                "minLength": 0,
                                                "type": "string",
                                                "description": "Filtering Type: `text`"
                                              },
                                              "url": {
                                                "minLength": 0,
                                                "format": "uri",
                                                "type": "string",
                                                "description": "Filtering Type: `text`"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "pickupCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates of where consumers can be picked up at the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "pickupHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the pickup hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is open for pickup on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the pickup hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for pickup on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily pickup hours, holiday pickup hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `pickupHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday pickup hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * healthcareFacility\n   * location\n   * restaurant\n```"
                                    },
                                    "priceRange": {
                                      "enum": [
                                        "UNSPECIFIED",
                                        "ONE",
                                        "TWO",
                                        "THREE",
                                        "FOUR"
                                      ],
                                      "type": "string",
                                      "description": "he typical price of products sold by this location, on a scale of 1 (low) to 4 (high)\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * healthcareFacility\n   * healthcareProfessional\n   * location\n   * restaurant\n```"
                                    },
                                    "primaryConversationContact": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "privateBeach": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has access to a private beach.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "privateCarService": {
                                      "enum": [
                                        "PRIVATE_CAR_SERVICE",
                                        "PRIVATE_CAR_SERVICE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers private car services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "productLists": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "ids": {
                                          "description": "IDs of the Products & Services Lists associated with this entity\n\n\nArray must be ordered.\n\nArray may have a maximum of 40 elements.\n\n\nFiltering Type: `list of text`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "minLength": 0,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        },
                                        "label": {
                                          "minLength": 0,
                                          "maxLength": 30,
                                          "type": "string",
                                          "description": "Label to be used for this entity's Products & Services Lists. This label will appear on your entity's listings.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the Products & Services Content Lists associated with this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "products": {
                                      "description": "Products sold by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "questionsAndAnswers": {
                                      "type": "boolean",
                                      "description": "Indicates whether Yext Knowledge Assistant question-and-answer conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "rankTrackingCompetitors": {
                                      "description": "Information about the competitors whose search performance you would like to compare to your own\n\n\nArray must be ordered.\n\nArray may have a maximum of 5 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "required": [
                                          "name",
                                          "website"
                                        ],
                                        "additionalProperties": false,
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "minLength": 0,
                                            "maxLength": 100,
                                            "type": "string",
                                            "description": "A name of a competitor\n\n\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                          },
                                          "website": {
                                            "minLength": 0,
                                            "maxLength": 255,
                                            "format": "uri",
                                            "type": "string",
                                            "description": "The business website of a competitor\n\n\nCannot Include:\n* common domain names, e.g., google.com, youtube.com, etc.\n\nFiltering Type: `text`"
                                          }
                                        },
                                        "description": "Filtering Type: `object`"
                                      }
                                    },
                                    "rankTrackingEnabled": {
                                      "type": "boolean",
                                      "description": "Indicates whether Rank Tracking is enabled\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "rankTrackingFrequency": {
                                      "enum": [
                                        "WEEKLY",
                                        "MONTHLY",
                                        "QUARTERLY"
                                      ],
                                      "type": "string",
                                      "description": "How often we send search queries to track your search performance\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "rankTrackingQueryTemplates": {
                                      "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n\n\nArray must have a minimum of 2 elements.\n\nArray may have a maximum of 4 elements.\n\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "KEYWORD",
                                          "KEYWORD_ZIP",
                                          "KEYWORD_CITY",
                                          "KEYWORD_IN_CITY",
                                          "KEYWORD_NEAR_ME",
                                          "KEYWORD_CITY_STATE"
                                        ],
                                        "type": "string",
                                        "description": "Filtering Type: `option`"
                                      }
                                    },
                                    "rankTrackingSites": {
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "enum": [
                                          "GOOGLE_DESKTOP",
                                          "GOOGLE_MOBILE",
                                          "BING_DESKTOP",
                                          "BING_MOBILE",
                                          "YAHOO_DESKTOP",
                                          "YAHOO_MOBILE"
                                        ],
                                        "type": "string",
                                        "description": "Filtering Type: `option`"
                                      },
                                      "description": "The search engines that we will use to track your performance\n\nFiltering Type: `list of option`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "reservationUrl": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "displayUrl": {
                                          "minLength": 0,
                                          "maxLength": 2000,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "The URL that is shown on your listings in place of **`reservationUrl.url`**. You can use **`reservationUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`reservationUrl.url`**.\n\nMust be a valid URL and be specified along with **`reservationUrl.url`**.\n\nFiltering Type: `text`"
                                        },
                                        "preferDisplayUrl": {
                                          "type": "boolean",
                                          "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "maxLength": 2000,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "A valid URL used to make reservations at this entity\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the URL consumers can visit to make reservations at this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "restaurantCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The number of restaurants the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "reviewGenerationUrl": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The URL given Review Invitation emails where consumers can leave a review about the entity\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "reviewResponseConversationEnabled": {
                                      "type": "boolean",
                                      "description": "Indicates whether Yext Knowledge Assistant review-response conversations are enabled for this entity\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "roomCount": {
                                      "multipleOf": 1,
                                      "minimum": 0,
                                      "type": "number",
                                      "description": "The number of rooms the entity has.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "roomService": {
                                      "enum": [
                                        "ROOM_SERVICE_AVAILABLE",
                                        "ROOM_SERVICE_AVAILABLE_24_HOURS",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers room service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "routableCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Destination coordinates to use for driving directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "salon": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a salon.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "sauna": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a sauna.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "scuba": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers scuba diving.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "selfParking": {
                                      "enum": [
                                        "SELF_PARKING_AVAILABLE",
                                        "SELF_PARKING_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers self parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "seniorHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the senior hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for the Entity's senior hours on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the senior hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for the Entity's senior hours on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily senior hours, holiday senior hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `seniorHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday senior hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                                    },
                                    "serviceArea": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "places": {
                                          "description": "A list of places served by the entity, where each place is either:\n - a postal code, or\n - the name of a city.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of text`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "minLength": 0,
                                            "maxLength": 100,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          }
                                        }
                                      },
                                      "description": "Information about the area that is served by this entity. It is specified as a list of cities and/or postal codes.\n\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "serviceAreaPlaces": {
                                      "description": "Information about the area that is served by this entity. It is specified as a list of service area names and their associated types.\n**Only for Google My Business and Bing:** Currently, **serviceArea** is only supported by Google My Business and Bing and will not affect your listings on other sites.\n\n\nArray may have a maximum of 200 elements.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "minLength": 0,
                                            "maxLength": 100,
                                            "type": "string",
                                            "description": "Filtering Type: `text`"
                                          },
                                          "type": {
                                            "enum": [
                                              "POSTAL_CODE",
                                              "REGION",
                                              "COUNTY",
                                              "CITY",
                                              "SUBLOCALITY"
                                            ],
                                            "type": "string",
                                            "description": "Filtering Type: `option`"
                                          }
                                        },
                                        "description": "Filtering Type: `object`"
                                      }
                                    },
                                    "services": {
                                      "description": "Services offered by this entity\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "smokeFreeProperty": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is smoke free.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "snorkeling": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers snorkeling.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "socialHour": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers a social hour.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "spa": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a spa.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "specialities": {
                                      "description": "Up to 100 of this entity's specialities (e.g., for food and dining: `Chicago style`)\n\nAll strings must be non-empty when trimmed of whitespace.\n\n\n\nArray must be ordered.\n\nArray may have a maximum of 100 elements.\n\nArray item description:\n\n>Cannot Include:\n>* HTML markup\n\nFiltering Type: `list of text`\n\n```\nEligible For: \n   * financialProfessional\n   * location\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "minLength": 0,
                                        "maxLength": 100,
                                        "type": "string",
                                        "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                      }
                                    },
                                    "tableService": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a sit-down restaurant.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "takeoutHours": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "friday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Friday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Friday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "holidayHours": {
                                          "description": "\n**NOTE:** The list of Holiday Hours that you send us must be comprehensive. For example, if you send us a list of Holiday Hours that does not include Holiday Hours that you sent in your last update, Yext considers the missing Holiday Hours to be deleted, and we remove them.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`",
                                          "uniqueItems": true,
                                          "type": "array",
                                          "items": {
                                            "required": [
                                              "date"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "date": {
                                                "format": "date",
                                                "type": "string",
                                                "description": "Date on which the holiday hours will be in effect. Cannot be in the past.\n\n\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                              },
                                              "isClosed": {
                                                "type": "boolean",
                                                "description": "Indicates if the takeout hours are \"closed\" on on the given date.\n\nFiltering Type: `boolean`"
                                              },
                                              "isRegularHours": {
                                                "type": "boolean",
                                                "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week.\n\nFiltering Type: `boolean`"
                                              },
                                              "openIntervals": {
                                                "uniqueItems": false,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "properties": {
                                                    "end": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    },
                                                    "start": {
                                                      "format": "time",
                                                      "type": "string",
                                                      "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                    }
                                                  },
                                                  "description": "Filtering Type: `object`"
                                                },
                                                "description": "Contains the time intervals for which the Entity is open for takeout on the specified date.\n\nFiltering Type: `list of object`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "monday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Monday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Monday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "reopenDate": {
                                          "format": "date",
                                          "type": "string",
                                          "description": "\nDate must be on or after 1970-01-01\nDate must be before or on 2038-01-01\n\nFiltering Type: `date`"
                                        },
                                        "saturday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Saturday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Saturday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "sunday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Sunday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Sunday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "thursday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Thursday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Thursday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "tuesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Tuesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Tuesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        },
                                        "wednesday": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "properties": {
                                            "isClosed": {
                                              "type": "boolean",
                                              "description": "Indicates if the takeout hours are \"closed\" on Wednesday.\n\nFiltering Type: `boolean`"
                                            },
                                            "openIntervals": {
                                              "uniqueItems": false,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "properties": {
                                                  "end": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The end time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  },
                                                  "start": {
                                                    "format": "time",
                                                    "type": "string",
                                                    "description": "The start time of the interval in `hh:mm` format (e.g., `\"06:30\"`, `\"17:00\"`).\n\nFiltering Type: `time`"
                                                  }
                                                },
                                                "description": "Filtering Type: `object`"
                                              },
                                              "description": "Contains the time intervals for which the Entity is open for takeout on Wednesday. Note that if isClosed is set to true, \"openIntervals\" cannot be provided in an update.\n\nFiltering Type: `list of object`"
                                            }
                                          },
                                          "description": "Filtering Type: `object`"
                                        }
                                      },
                                      "description": "Contains the daily takeout hours, holiday takeout hours, and reopen date for the Entity.\n\nEach day is represented by a sub-field of `takeoutHours`. (e.g. `monday`, `tuesday`, etc.) Open times can be specified per day through the `openIntervals` field and the `isClosed` flag.\nSimilarly, holiday takeout hours are represented by the `holidayHours` sub-field.\nSetting the `reopenDate` sub-field indicates that the business is temporarily closed and will reopen on the specified date.\nSPECIAL CASES:\n* To indicate that an Entity is open 24 hours on a specific day, set start to 00:00 and end to 23:59 in `openIntervals` for that day.\n* To indicate that an Entity has split hours on specific day (e.g., open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM), supply up to two `openIntervals` values with non-overlapping sets of hours.\n* If you are providing `openIntervals`, you may not set `isClosed` to true for that day.\n\nFiltering Type: `hours`\n\n```\nEligible For: \n   * location\n   * restaurant\n```"
                                    },
                                    "tennis": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has tennis courts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "thermalPool": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a thermal pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "ticketAvailability": {
                                      "enum": [
                                        "IN_STOCK",
                                        "SOLD_OUT",
                                        "PRE_ORDER",
                                        "UNSPECIFIED"
                                      ],
                                      "type": "string",
                                      "description": "Information about the availability of tickets for the event\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "ticketPriceRange": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "currencyCode": {
                                          "minLength": 0,
                                          "type": "string",
                                          "description": "Three letter currency code (ISO standard)\n\nFiltering Type: `text`"
                                        },
                                        "maxValue": {
                                          "pattern": "^\\d*\\.?\\d*$",
                                          "type": "string",
                                          "description": "Maximum ticket price\n\nFiltering Type: `decimal`"
                                        },
                                        "minValue": {
                                          "pattern": "^\\d*\\.?\\d*$",
                                          "type": "string",
                                          "description": "Minimum ticket price\n\nFiltering Type: `decimal`"
                                        }
                                      },
                                      "description": "Contains the price range for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "ticketSaleDateTime": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "The date/time tickets are available for sale (local time)\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "ticketUrl": {
                                      "minLength": 0,
                                      "format": "uri",
                                      "type": "string",
                                      "description": "URL to purchase tickets for the event (if ticketed)\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "time": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "end": {
                                          "format": "date-time",
                                          "type": "string",
                                          "description": "End date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                        },
                                        "start": {
                                          "format": "date-time",
                                          "type": "string",
                                          "description": "Start date/time of the event, in local time (see timezone field)\nStandard ISO 8601 datetime without timezone\nFormat: `YYYY-MM-DDThh:mm`\n\n\nFiltering Type: `datetime`"
                                        }
                                      },
                                      "description": "Contains the start/end times for the event\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "timeZoneUtcOffset": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Represents the time zone offset of the entity from UTC, in `±hh:mm` format.\n\nFor example, if the entity is 4 hours ahead of UTC time, the offset will be `+04:00`.\n\nIf the entity is 15.5 hours behind UTC time, the offset will be `-15:30`.\n\nIf the entity is in UTC time, the offset will be `+00:00`.\n\n\n```\nEligible For: \n   * atm\n   * event\n   * faq\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "timezone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "The timezone of the entity, in the standard `IANA time zone database` format (tz database). e.g. `\"America/New_York\"`\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * faq\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * helpArticle\n   * hotel\n   * job\n   * location\n   * product\n   * restaurant\n```"
                                    },
                                    "tollFreePhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "treadmill": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a treadmill.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "ttyPhone": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Must be a valid phone number.\n\nIf the phone number's calling code is for a country other than the one given in the entity's **`countryCode`**, the phone number provided must contain the calling code (e.g., `+44` in `+442038083831`). Otherwise, the calling code is optional.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * atm\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "turndownService": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers turndown service.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "twitterHandle": {
                                      "minLength": 0,
                                      "maxLength": 15,
                                      "type": "string",
                                      "description": "Valid Twitter handle for the entity without the leading \"@\" (e.g., `JohnSmith`)\n\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system.\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "uberLink": {
                                      "required": [
                                        "presentation"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "presentation": {
                                          "enum": [
                                            "BUTTON",
                                            "LINK"
                                          ],
                                          "type": "string",
                                          "description": "Indicates whether the embedded Uber link for this entity appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your entity set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n\nFiltering Type: `option`"
                                        },
                                        "text": {
                                          "minLength": 0,
                                          "maxLength": 100,
                                          "type": "string",
                                          "description": "The text of the embedded Uber link\n\nDefault is `Ride there with Uber`.\n\n**NOTE:** This field is only available if **`uberLink.presentation`** is `LINK`.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "uberTripBranding": {
                                      "required": [
                                        "text",
                                        "url",
                                        "description"
                                      ],
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "minLength": 0,
                                          "maxLength": 150,
                                          "type": "string",
                                          "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.description`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.url`**.\n\nFiltering Type: `text`"
                                        },
                                        "text": {
                                          "minLength": 0,
                                          "maxLength": 28,
                                          "type": "string",
                                          "description": "The text of the call-to-action that will appear in the Uber app during a trip to your entity (e.g., `Check out our menu!`)\n\n**NOTE:** If a value for **`uberTripBranding.text`** is provided, values must also be provided for **`uberTripBranding.url`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your entity.\n\n**NOTE:** If a value for **`uberTripBranding.url`** is provided, values must also be provided for **`uberTripBranding.text`** and **`uberTripBranding.description`**.\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the call-to-action consumers will see in the Uber app during a trip to your entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "valetParking": {
                                      "enum": [
                                        "VALET_PARKING_AVAILABLE",
                                        "VALET_PARKING_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers valet parking services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "validThrough": {
                                      "format": "date-time",
                                      "type": "string",
                                      "description": "The date this entity is valid through.\n\nFiltering Type: `datetime`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "vendingMachine": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a vending machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "venueName": {
                                      "minLength": 0,
                                      "type": "string",
                                      "description": "Name of the venue where the event is being held\n\nFiltering Type: `text`\n\n```\nEligible For: \n   * event\n```"
                                    },
                                    "videos": {
                                      "description": "Valid YouTube URLs for embedding a video on some publisher sites\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n\n\n\nArray must be ordered.\n\n\nFiltering Type: `list of object`\n\n```\nEligible For: \n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * product\n   * restaurant\n```",
                                      "uniqueItems": true,
                                      "type": "array",
                                      "items": {
                                        "required": [
                                          "video"
                                        ],
                                        "additionalProperties": false,
                                        "type": "object",
                                        "properties": {
                                          "description": {
                                            "minLength": 0,
                                            "maxLength": 140,
                                            "type": "string",
                                            "description": "\nCannot Include:\n* HTML markup\n\nFiltering Type: `text`"
                                          },
                                          "video": {
                                            "required": [
                                              "url"
                                            ],
                                            "additionalProperties": false,
                                            "type": "object",
                                            "properties": {
                                              "url": {
                                                "minLength": 0,
                                                "format": "uri",
                                                "type": "string",
                                                "description": "Filtering Type: `text`"
                                              }
                                            },
                                            "description": "Filtering Type: `object`"
                                          }
                                        },
                                        "description": "Filtering Type: `object`"
                                      }
                                    },
                                    "wadingPool": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a wading pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "wakeUpCalls": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers wake up call services.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "walkableCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Destination coordinates to use for walking directions to the entity, as provided by you\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "waterPark": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a water park.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "waterSkiing": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers water skiing.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "watercraft": {
                                      "enum": [
                                        "WATERCRAFT_RENTALS",
                                        "WATERCRAFT_RENTALS_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity offers any kind of watercrafts.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "waterslide": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a water slide.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "wavePool": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a wave pool.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "websiteUrl": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "displayUrl": {
                                          "minLength": 0,
                                          "maxLength": 2000,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "The URL that is shown on your listings in place of **`websiteUrl.url`**. You can use **`websiteUrl.displayUrl`** to display a short, memorable web address that redirects consumers to the URL given in **`websiteUrl.url`**.\n\nMust be a valid URL and be specified along with **`websiteUrl.url`**.\n\nFiltering Type: `text`"
                                        },
                                        "preferDisplayUrl": {
                                          "type": "boolean",
                                          "description": "If set to true, only the display URL will be sent to those publishers who do not support separate display and tracking URLs for this field.\n\nFiltering Type: `boolean`"
                                        },
                                        "url": {
                                          "minLength": 0,
                                          "maxLength": 2000,
                                          "format": "uri",
                                          "type": "string",
                                          "description": "A valid URL for this entity's website\n\nFiltering Type: `text`"
                                        }
                                      },
                                      "description": "Information about the website for this entity\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * contactCard\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "weightMachine": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has a weight machine.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "wheelchairAccessible": {
                                      "enum": [
                                        "YES",
                                        "NO",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates if the entity is wheelchair accessible.\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "wifiAvailable": {
                                      "enum": [
                                        "WIFI_AVAILABLE",
                                        "WIFI_AVAILABLE_FOR_FREE",
                                        "NOT_APPLICABLE"
                                      ],
                                      "type": "string",
                                      "description": "Indicates whether the entity has WiFi available\n\nFiltering Type: `option`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "workRemote": {
                                      "type": "boolean",
                                      "description": "Indicates whether the job is remote.\n\nFiltering Type: `boolean`\n\n```\nEligible For: \n   * job\n```"
                                    },
                                    "yearEstablished": {
                                      "multipleOf": 1,
                                      "minimum": 1000,
                                      "maximum": 2028,
                                      "type": "number",
                                      "description": "The year the entity was established.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "yearLastRenovated": {
                                      "multipleOf": 1,
                                      "minimum": 1000,
                                      "maximum": 2028,
                                      "type": "number",
                                      "description": "The most recent year the entity was partially or completely renovated.\n\nFiltering Type: `integer`\n\n```\nEligible For: \n   * hotel\n```"
                                    },
                                    "yextDisplayCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates where the map pin for the entity should be displayed, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * job\n   * location\n   * restaurant\n```"
                                    },
                                    "yextDropoffCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates of where consumers can be dropped off at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "yextPickupCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Coordinates of where consumers can be picked up at the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "yextRoutableCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Destination coordinates to use for driving directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    },
                                    "yextWalkableCoordinate": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "properties": {
                                        "latitude": {
                                          "minimum": -90,
                                          "maximum": 90,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        },
                                        "longitude": {
                                          "minimum": -180,
                                          "maximum": 180,
                                          "type": "number",
                                          "description": "Filtering Type: `float`"
                                        }
                                      },
                                      "description": "Destination coordinates to use for walking directions to the entity, as calculated by Yext\n\nFiltering Type: `object`\n\n```\nEligible For: \n   * atm\n   * event\n   * financialProfessional\n   * healthcareFacility\n   * healthcareProfessional\n   * hotel\n   * location\n   * restaurant\n```"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "errors": {
                          "uniqueItems": false,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "code": {
                                "multipleOf": 1,
                                "type": "number",
                                "description": "Code that uniquely identifies the error or warning.\n"
                              },
                              "message": {
                                "minLength": 0,
                                "type": "string",
                                "description": "Message explaining the problem."
                              },
                              "type": {
                                "enum": [
                                  "FATAL_ERROR",
                                  "NON_FATAL_ERROR",
                                  "WARNING"
                                ],
                                "type": "string"
                              }
                            }
                          },
                          "description": "List of errors and warnings."
                        },
                        "uuid": {
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "description": "Filtering Type: `object`"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/menus/{listId}": {
      "get": {
        "operationId": "getMenus",
        "parameters": [
          {
            "$ref": "#/components/parameters/listId"
          },
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Menus: Get",
        "description": "Retrieve a specific Menu",
        "responses": {
          "200": {
            "$ref": "#/components/responses/MenuResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/bios/{listId}": {
      "get": {
        "operationId": "getBios",
        "parameters": [
          {
            "$ref": "#/components/parameters/listId"
          },
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Bios: Get",
        "description": "Retrieve a specific Bios ECL",
        "responses": {
          "200": {
            "$ref": "#/components/responses/BioResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/products/{listId}": {
      "get": {
        "operationId": "getProducts",
        "parameters": [
          {
            "$ref": "#/components/parameters/listId"
          },
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Products: Get",
        "description": "Retrieve a specific Products ECL",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ProductResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/events/{listId}": {
      "get": {
        "operationId": "getEvents",
        "parameters": [
          {
            "$ref": "#/components/parameters/listId"
          },
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Events (Legacy): Get",
        "description": "Retrieve a specific Events ECL",
        "responses": {
          "200": {
            "$ref": "#/components/responses/EventResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/locations/{locationId}/profiles/{languageCode}": {
      "get": {
        "operationId": "getLanguageProfiles",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/locationId"
          },
          {
            "$ref": "#/components/parameters/languageCode"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Language Profiles (Legacy): Get",
        "description": "Gets the requested Language Profile for a given Location\n\n**NOTE:**\n* Responses will contain resolved values for embedded fields\n* If the `fields` parameter is unspecified, responses will contain the full \nentity profile for the requested language\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LanguageProfileResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/locations/{locationId}/profiles": {
      "get": {
        "operationId": "listLocationLanguageProfiles",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/locationId"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Language Profiles (Legacy): List",
        "description": "Gets all Language Profiles for a Location\n\n**NOTE:**\n* Responses will contain resolved values for embedded fields\n* If the `fields` parameter is unspecified, responses will contain the full \nentity profile for the requested language\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LanguageProfilesResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/locations/{locationId}/profiles/{languageCode}/schema": {
      "get": {
        "operationId": "getLanguageProfilesSchema",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/locationId"
          },
          {
            "$ref": "#/components/parameters/languageCode"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Language Profiles Schema (Legacy): Get",
        "description": "Gets the schema.org-compliant schema for the requested Language Profile of a given Location. Schema will vary depending on the primary category of the Location.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LanguageProfileSchemaResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/locations/{locationId}": {
      "get": {
        "operationId": "getLocation",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/locationId"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Locations (Legacy): Get",
        "description": "Gets the primary profile for a single Location\n\n**NOTE:** Responses will contain resolved values for embedded fields\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LocationResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/locations": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/limit"
        },
        {
          "$ref": "#/components/parameters/offset"
        },
        {
          "$ref": "#/components/parameters/languages"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/filters"
        },
        {
          "$ref": "#/components/parameters/v"
        },
        {
          "$ref": "#/components/parameters/sortBy"
        }
      ],
      "get": {
        "operationId": "locationsList",
        "tags": [
          "Live API"
        ],
        "summary": "Locations (Legacy): List",
        "description": "Get multiple Locations (primary profile only). Filters are evaluated against all language profiles as well as the primary profile.\n\n**NOTE:** Responses will contain resolved values for embedded fields\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LocationsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/locations/{locationId}/schema": {
      "get": {
        "operationId": "getLocationSchema",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/locationId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "tags": [
          "Live API"
        ],
        "summary": "Locations Schema (Legacy): Get",
        "description": "Gets the schema.org-compliant schema for the primary profile of a single Location. Schema will vary depending on the primary category of the Location.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LocationSchemaResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/locations/geosearch": {
      "parameters": [
        {
          "$ref": "#/components/parameters/accountId"
        },
        {
          "$ref": "#/components/parameters/limit"
        },
        {
          "$ref": "#/components/parameters/offset"
        },
        {
          "$ref": "#/components/parameters/location"
        },
        {
          "$ref": "#/components/parameters/radius"
        },
        {
          "$ref": "#/components/parameters/geocoderBias"
        },
        {
          "$ref": "#/components/parameters/countryBias"
        },
        {
          "$ref": "#/components/parameters/languages"
        },
        {
          "$ref": "#/components/parameters/fields"
        },
        {
          "$ref": "#/components/parameters/filters"
        },
        {
          "$ref": "#/components/parameters/v"
        },
        {
          "$ref": "#/components/parameters/sortBy"
        }
      ],
      "get": {
        "operationId": "geoSearch",
        "tags": [
          "Live API"
        ],
        "summary": "Locations (Legacy): GeoSearch",
        "description": "Gets multiple Locations (primary profile only) near a given location, ordered by proximity to the location (if no other sort criteria are given) and restricted to a radius. Searches through all language profiles, including the primary profile.\n\n**NOTE:** Responses will contain resolved values for embedded fields\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GeoSearchResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/createQuestion": {
      "post": {
        "operationId": "createQuestion",
        "tags": [
          "Live API"
        ],
        "summary": "Question: Create\n",
        "requestBody": {
          "$ref": "#/components/requestBodies/createQuestionRequest"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "description": "Create a new Question.",
        "responses": {
          "201": {
            "$ref": "#/components/responses/EmptyResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/reviewSubmission": {
      "post": {
        "operationId": "createReview",
        "tags": [
          "Live API"
        ],
        "description": "Create a new Review.",
        "summary": "Review: Create\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReview"
              }
            }
          }
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/ReviewsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/reviewSubmission/{apiIdentifier}": {
      "put": {
        "operationId": "updateReview",
        "tags": [
          "Live API"
        ],
        "description": "Update a Review.",
        "summary": "Review: Update\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/apiIdentifier"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReview"
              }
            }
          }
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/ReviewsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "operationId": "deleteReview",
        "tags": [
          "Live API"
        ],
        "description": "Delete a Review.",
        "summary": "Review: Delete\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/apiIdentifier"
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/components/responses/ReviewsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/api/{endpoint}/{ids}": {
      "get": {
        "servers": [
          {
            "url": "https://streams.yext.com/v2"
          }
        ],
        "operationId": "streamsGet",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/endpoint"
          },
          {
            "$ref": "#/components/parameters/streamsDocIds"
          },
          {
            "$ref": "#/components/parameters/v"
          }
        ],
        "tags": [
          "Streams API"
        ],
        "summary": "Streams: Get",
        "description": "Retrieve records by ID from a Streams Endpoint",
        "responses": {
          "200": {
            "$ref": "#/components/responses/StreamsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/accounts/{accountId}/api/{endpoint}": {
      "get": {
        "servers": [
          {
            "url": "https://streams.yext.com/v2"
          }
        ],
        "operationId": "streamsList",
        "parameters": [
          {
            "$ref": "#/components/parameters/accountId"
          },
          {
            "$ref": "#/components/parameters/endpoint"
          },
          {
            "$ref": "#/components/parameters/v"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/pageToken"
          }
        ],
        "tags": [
          "Streams API"
        ],
        "summary": "Streams: List",
        "description": "List records from a Streams Endpoint\n\nIn addition to the parameters above, users can filter on the content of fields defined in the\nendpoint's field indexes.\n\nFor example, with the parameter **`name=Alice`**, only records where the field **`name`**\nhas value **`Alice`** will be returned.\n\nSimilarly, adding the parameters **`name__in=Alice`** and **`name__in=Bob`** will result in\nrecords with **`name`** equal to **`Alice`** or **`Bob`** being returned.\n\nMultiple filters on different fields and different filter types can be combined in the same\nquery. When filtering on a field that contains more than one value (an array field) the filter\nwill be satisfied if any value in the array matches the filter.\n",
        "responses": {
          "200": {
            "$ref": "#/components/responses/StreamsResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "query"
      },
      "api-key": {
        "type": "apiKey",
        "name": "api-key",
        "in": "header"
      }
    },
    "parameters": {
      "accountId": {
        "name": "accountId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "entityId": {
        "name": "entityId",
        "in": "path",
        "schema": {
          "type": "string"
        },
        "required": true,
        "description": "\nThe external ID of the requested Entity\n"
      },
      "languageCode": {
        "name": "languageCode",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The language code corresponding to the language of the profiles that the user wishes to retrieve\n"
      },
      "entityTypePath": {
        "name": "entityType",
        "in": "path",
        "schema": {
          "type": "string"
        },
        "required": true,
        "description": "The type of entity to be created. Should be one of the following:\n* `atm`\n* `event`\n* `healthcareFacility`\n* `healthcareProfessional`\n* `hotel`\n* `job`\n* `location`\n* `restaurant`\n* `faq`\n\nOR the API name of a custom entity type.\n"
      },
      "v": {
        "name": "v",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "A date in `YYYYMMDD` format."
      },
      "listId": {
        "name": "listId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "ID of this List."
      },
      "locationId": {
        "name": "locationId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "name": "fields",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Comma-separated list of field names from the Location object. When present, only the fields listed will be returned. You can use dot notation to specify substructures (e.g., `\"logo.url\"`). To include a custom field, specify it as `custom###`, where \"###\" is the custom field's **`id`**.\n"
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 10,
          "maximum": 50
        },
        "description": "Number of results to return."
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 0,
          "maximum": 9949,
          "default": 0
        },
        "description": "Number of results to skip. Used to move through results"
      },
      "languages": {
        "name": "languages",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "default": "false"
        },
        "description": "\nComma-separated list of language codes. When present, the system will return Locations with one or more of the provided languages.  For each Location, only the first available language from the provided list will be returned. The keyword `\"primary\"` can be used to refer to a Location’s primary profile without providing a specific language code.\n"
      },
      "filters": {
        "name": "filters",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "A set of filters that is applied to the set of locations that would otherwise be returned. Should be provided as a URL-encoded string containing a JSON array. The array should have one or more filter objects defined. All filter objects will apply as an intersection (i.e., AND). Field names reference Location fields, as well as custom fields using the format `custom###`, where \"###\" is the custom field’s **`id`**.\n\nFor example, to provide a filter that would match location names containing the word \"gourmet\", the filter parameter would be `[{\"name\":{\"contains\":[\"gourmet\"]}}]`, which URL-encoded would be `%5B%7B%22name%22%3A%7B%22contains%22%3A%5B%22gourmet%22%5D%7D%7D%5D`.\n\nNOTE: \"x\", \"xx\", and \"xxx\" are reserved keywords that, when passed in a `contains` matcher for a Full or Text filter, will cause that filter to match on all locations.\n\nThe filter types are the following. Note there may be multiple available specifications for a given filter type:\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Filter Type</th>\n    <th>Syntax</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>Full</td>\n    <td>fieldName: {contains: $search}</td>\n    <td>$search is the search string</td>\n  </tr>\n  <tr>\n    <td>Text</td>\n    <td>fieldName: {$type: [$search,...]}</td>\n    <td>$type is one of [contains,doesNotContain,startsWith,equalTo], $search is an array of search strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>Text</td>\n    <td>fieldName: $type</td>\n    <td>$type is one of [empty,notEmpty]</td>\n  </tr>\n  <tr>\n    <td>Number</td>\n    <td>fieldName: {$type: $value}</td>\n    <td>$type is one of [eq,lt,gt,le,ge], $value is the numeric value</td>\n  </tr>\n  <tr>\n    <td>Number</td>\n    <td>fieldName: {$type: [$value1, $value2]}</td>\n    <td>$type is one of [between], $value1 and $value2 are numeric values</td>\n  </tr>\n  <tr>\n    <td>Date</td>\n    <td>fieldName: {$type: $value}</td>\n    <td>$type is one of [eq,lt,gt,le,ge], $value is a string of \"YYYY-MM-DD\" formatted date</td>\n  </tr>\n  <tr>\n    <td>Date</td>\n    <td>fieldName: $type</td>\n    <td>$type is one of [empty,notEmpty]</td>\n  </tr>\n  <tr>\n    <td>Date</td>\n    <td>fieldName: {$type: [$value1, $value2]}</td>\n    <td>$type is one of [between], $value1 and $value2 are strings of \"YYYY-MM-DD\" formatted date</td>\n  </tr>\n  <tr>\n    <td>Categories</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$type is one of [includes,notIncludes], $id is an array of numeric category IDs, combined with OR</td>\n  </tr>\n  <tr>\n    <td>Categories</td>\n    <td>fieldName: $type</td>\n    <td>$type is one of [none]</td>\n  </tr>\n  <tr>\n    <td>Assets</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$type is one of [includes,notIncludes], $id is an array of numeric category IDs, combined with OR</td>\n  </tr>\n  <tr>\n    <td>Assets</td>\n    <td>fieldName: $type</td>\n    <td>$type is one of [none]</td>\n  </tr>\n  <tr>\n    <td>Country</td>\n    <td>fieldName: {$type: [$country,...]}</td>\n    <td>$type is one of [includes,notIncludes], $country is an array of country code strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>PrimaryLanguage</td>\n    <td>fieldName: {$type: [$language,...]}</td>\n    <td>$type is one of [is,isNot], $language is an array of language code strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>AlternateLanguage</td>\n    <td>fieldName: {$type: [$language,...]}</td>\n    <td>$type is one of [includes, notIncludes], $language is an array of language code strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>StringSingle</td>\n    <td>fieldName: {$type: [$string,...]}</td>\n    <td>$type is one of [is,isNot], $string is an array of strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>StringList</td>\n    <td>fieldName: {$type: [$string,...]}</td>\n    <td>$type is one of [includes,notIncludes], $string is an array of strings, combined with OR</td>\n  </tr>\n  <tr>\n    <td>LocationType</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$type is one of [is,isNot], $id is an array of location type IDs, combined with OR</td>\n  </tr>\n  <tr>\n    <td>Bool</td>\n    <td>fieldName: $type</td>\n    <td>$type is one of [true,false]</td>\n  </tr>\n  <tr>\n    <td>Option</td>\n    <td>fieldName: {$type: $id}</td>\n    <td>$type is one of [is,isNot], $id is an option ID (For single option custom fields)</td>\n  </tr>\n  <tr>\n    <td>Option</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$type is one of [includes,notIncludes], $id is an array of option IDs, combined with OR (For multi option custom fields)</td>\n  </tr>\n  <tr>\n    <td>Folder</td>\n    <td>fieldName: [$id,...]</td>\n    <td>$id is a numeric folder ID</td>\n  </tr>\n  <tr>\n    <td>Folder</td>\n    <td>fieldName: $id</td>\n    <td>$id is a numeric folder ID</td>\n  </tr>\n  <tr>\n    <td>Folder</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$id is a numeric folder ID, $type is one of ['isIn', 'isNotIn']</td>\n  </tr>\n  <tr>\n    <td>Labels</td>\n    <td>fieldName: {$type: [$id,...]}</td>\n    <td>$type is one of [includes,notIncludes], $id is an array of label IDs, combined with OR</td>\n  </tr>\n</table>\n\nThe following fields can be specified in the request (Field name/Filter Type/Example(s)):\n\n<table style=\"width:100%\">\n  <tr>\n    <th>Field Name</th>\n    <th>Filter Type</th>\n    <th>Example(s)</th>\n  </tr>\n  <tr>\n    <td>location</td>\n    <td>Full</td>\n    <td>\"location\": {\"contains\": \"Atlanta\"}</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Text</td>\n    <td>\"name\": {\"startsWith\": [\"Guitar\"]}, \"name\": {\"contains\": [\"A\",\"B\"]}</td>\n  </tr>\n  <tr>\n    <td>address</td>\n    <td>Text</td>\n    <td>\"address\": {\"startsWith\": [\"South\"]}</td>\n  </tr>\n  <tr>\n    <td>address2</td>\n    <td>Text</td>\n    <td>\"address2\": {\"contains\": [\"Suite\"]}</td>\n  </tr>\n  <tr>\n    <td>city</td>\n    <td>Text</td>\n    <td>\"city\": {\"contains\": [\"Atlanta\"]}</td>\n  </tr>\n  <tr>\n    <td>state</td>\n    <td>Text</td>\n    <td>\"state\": {\"contains\": [\"AK\",\"VA\"]}</td>\n  </tr>\n  <tr>\n    <td>zip</td>\n    <td>Text</td>\n    <td>\"zip\": {\"contains\": [\"M5K 7QB\"]}</td>\n  </tr>\n  <tr>\n    <td>phones</td>\n    <td>Text</td>\n    <td>\"phones\": {\"startsWith\": [\"703\",\"571\"]}</td>\n  </tr>\n  <tr>\n    <td>specialOffer</td>\n    <td>Text</td>\n    <td>\"specialOffer\": \"notEmpty\"</td>\n  </tr>\n  <tr>\n    <td>emails</td>\n    <td>Text</td>\n    <td>\"emails\": {\"doesNotContain\": [\"@yext.com\"]}</td>\n  </tr>\n  <tr>\n    <td>website</td>\n    <td>Text</td>\n    <td>\"website\": {\"equalTo\": [\"https://www.yext.com/\"]}</td>\n  </tr>\n  <tr>\n    <td>categories</td>\n    <td>Categories</td>\n    <td>\"categories\": {\"includes\": [23,755,34]}</td>\n  </tr>\n  <tr>\n    <td>closed</td>\n    <td>Bool</td>\n    <td>\"closed\": true</td>\n  </tr>\n  <tr>\n    <td>storeId</td>\n    <td>Text</td>\n    <td>\"storeId\": {\"equalTo\": [\"MCD0001\"]}</td>\n  </tr>\n  <tr>\n    <td>countryCode</td>\n    <td>Country</td>\n    <td>\"countryCode\": {\"notIncludes\": [\"US\"]}</td>\n  </tr>\n  <tr>\n    <td>products</td>\n    <td>Text</td>\n    <td>\"products\": {\"startsWith\": [\"Burger\",\"Fries\"]}</td>\n  </tr>\n  <tr>\n    <td>services</td>\n    <td>Text</td>\n    <td>\"services\": {\"contains\": [\"Manicures\"]}</td>\n  </tr>\n  <tr>\n    <td>specialities</td>\n    <td>Text</td>\n    <td>\"services\": \"notEmpty\"</td>\n  </tr>\n  <tr>\n    <td>associations</td>\n    <td>Text</td>\n    <td>\"associations\": \"empty\"</td>\n  </tr>\n  <tr>\n    <td>brands</td>\n    <td>Text</td>\n    <td>\"brands\": {\"equalTo\": [\"North Face\"]}</td>\n  </tr>\n  <tr>\n    <td>languages</td>\n    <td>Text</td>\n    <td>\"languages\": {\"equalTo\": [\"English\",\"Spanish\"]}</td>\n  </tr>\n  <tr>\n    <td>keywords</td>\n    <td>Text</td>\n    <td>\"keywords\": {\"startsWith\": [\"Franchise\"]}</td>\n  </tr>\n  <tr>\n    <td>menuIds</td>\n    <td>IdList</td>\n    <td>\"menuIds\": {\"includes\": [\"m-23\",\"755\",\"menu34\"]}</td>\n  </tr>\n  <tr>\n    <td>productListIds</td>\n    <td>IdList</td>\n    <td>\"productListIds\": {\"notIncludes\": [\"pl-2\"]}</td>\n  </tr>\n  <tr>\n    <td>calendarIds</td>\n    <td>IdList</td>\n    <td>\"calendarIds\": {\"notIncludes\": [\"cal34\"]}</td>\n  </tr>\n  <tr>\n    <td>bioIds</td>\n    <td>IdList</td>\n    <td>\"bioIds\": {\"includes\": [\"b23\",\"34\"]}</td>\n  </tr>\n  <tr>\n    <td>custom###</td>\n    <td>Text (for Multiline Text, URL, Text List, and Text Custom Fields), Number, Date, Bool, or Option</td>\n    <td>\"custom123\": {\"equalTo\": [\"asdf\"]}</td>\n  </tr>\n  <tr>\n    <td>folder</td>\n    <td>Folder</td>\n    <td>\"folder\": 123, \"folder\": [123,456]</td>\n  </tr>\n  <tr>\n    <td>primary_language</td>\n    <td>PrimaryLanguage</td>\n    <td>\"primary_language\": {\"is\": \"fr_CA\"}</td>\n  </tr>\n  <tr>\n    <td>alternateProfileLanguage</td>\n    <td>AlternateLanguage</td>\n    <td>\"alternateProfileLanguage\": {\"includes\": [\"en\", \"fr\"]}</td>\n  </tr>\n  <tr>\n    <td>npi</td>\n    <td>StringSingle</td>\n    <td>\"npi\": {\"is\": [\"1234567890\", \"1111111111\"]}</td>\n  </tr>\n  <tr>\n    <td>conditionsTreated</td>\n    <td>Text</td>\n    <td>\"conditionsTreated\": {\"startsWith\": [\"Influenza\"]}, \"conditionsTreated\": {\"contains\": [\"A\",\"B\"]}</td>\n  </tr>\n  <tr>\n    <td>lastUpdated</td>\n    <td>Date</td>\n    <td>\"lastUpdated\": {\"eq\": \"2018-01-01\"}, \"lastUpdated\": {\"between\": [\"2017-01-01\", \"2018-01-01\"]}</td>\n  </tr>\n  <tr>\n    <td>fieldsWithData</td>\n    <td>Fields</td>\n    <td>\"fieldsWithData\": [\"email\", \"hours\"]</td>\n  </tr>\n  <tr>\n    <td>fieldsWithoutData</td>\n    <td>Fields</td>\n    <td>\"fieldsWithoutData\": [\"logo\", \"video\"]</td>\n  </tr>\n  <tr>\n    <td>reviewCount</td>\n    <td>Number</td>\n    <td>\"review_count\": {\"gt\": 1}, \"review_count \": {\"lt\": 10}</td>\n  </tr>\n  <tr>\n    <td>averageRating</td>\n    <td>Number</td>\n    <td>\"averageRating\": {\"lt\": 3}</td>\n  </tr>\n  <tr>\n    <td>locationType</td>\n    <td>LocationType</td>\n    <td>\"locationType\": {\"is\": [1]}, \"locationType\": {\"isNot\": [123]}</td>\n  </tr>\n  <tr>\n    <td>gender</td>\n    <td>StringSingle</td>\n    <td>\"gender\": {\"is\": [\"FEMALE\"]}, \"gender\": {\"isNot\": [\"MALE\"]}</td>\n  </tr>\n  <tr>\n    <td>degrees</td>\n    <td>StringList</td>\n    <td>\"degrees\": {\"includes\": [\"MD\"]}, \"degrees\": {\"notIncludes\": [\"PHD\"]}</td>\n  </tr>\n  <tr>\n    <td>experiences</td>\n    <td>StringList</td>\n    <td>\"experiences\": {\"includes\": [\"FELLOWSHIP\"]}, \"experiences\": {\"notIncludes\":[\"INTERNSHIP\"]}</td>\n  </tr>\n  <tr>\n    <td>yearCompleted</td>\n    <td>Number</td>\n    <td>\"yearCompleted\": {\"gt\": 2000}, \"yearCompleted\": {\"lt\": 2015}</td>\n  </tr>\n  <tr>\n    <td>acceptingNewPatients</td>\n    <td>Bool</td>\n    <td>\"acceptingNewPatients\": true</td>\n  </tr>\n  <tr>\n    <td>firstName</td>\n    <td>Text</td>\n    <td>\"firstName\": {\"startsWith\": [\"David\"]}, \"firstName\": {\"contains\": [\"A\",\"B\"]}</td>\n  </tr>\n  <tr>\n    <td>middleName</td>\n    <td>Text</td>\n    <td>\"middleName\": {\"startsWith\": [\"P\"]}, \"middleName\": {\"contains\": [\"N\",\"E\"]}</td>\n  </tr>\n  <tr>\n    <td>lastName</td>\n    <td>Text</td>\n    <td>\"lastName\": {\"startsWith\": [\"Sm\"]}, \"lastName\": {\"contains\": [\"Y\",\"Z\"]}</td>\n  </tr>\n  <tr>\n    <td>officeName</td>\n    <td>Text</td>\n    <td>\"officeName\": {\"startsWith\": [\"Chiropractic\"]}, \"officeName\": {\"contains\":[\"Center\",\"P\"]}</td>\n  </tr>\n  <tr>\n    <td>certifications</td>\n    <td>Text</td>\n    <td>\"certifications\": {\"contains\": [\"Radiation Oncology\"]}</td>\n  </tr>\n  <tr>\n    <td>institutionName</td>\n    <td>Text</td>\n    <td>\"institutionName\": {\"startsWith\": [\"New York\"]}</td>\n  </tr>\n  <tr>\n    <td>insuranceAccepted</td>\n    <td>Text</td>\n    <td>\"insuranceAccepted\": {\"startsWith\": [\"United\"]}, \"insuranceAccepted\":{\"contains\": [\"C\",\"Health\"]}</td>\n  </tr>\n  <tr>\n    <td>admittingHospitals</td>\n    <td>Text</td>\n    <td>\"admittingHospitals\": {\"startsWith\": [\"Children's\"]}, \"admittingHospitals\":{\"contains\": [\"Medical\",\"University\"]}</td>\n  </tr>\n  <tr>\n    <td>subscriptions</td>\n    <td>IdList</td>\n    <td>\"subscriptions\": {\"notIncludes\": [\"123\"]}</td>\n  </tr>\n  <tr>\n    <td>facebookAccounts</td>\n    <td>IdList</td>\n    <td>\"facebookAccounts\": {\"notIncludes\": [\"1111\"]}</td>\n  </tr>\n  <tr>\n    <td>foursquareAccounts</td>\n    <td>IdList</td>\n    <td>\"foursquareAccounts\": {\"notIncludes\": [\"1111\"]}</td>\n  </tr>\n  <tr>\n    <td>googleplusAccounts</td>\n    <td>IdList</td>\n    <td>\"googleplusAccounts\": {\"notIncludes\": [\"1111\"]}</td>\n  </tr>\n  <tr>\n    <td>labels</td>\n    <td>Labels</td>\n    <td>\"labels\": {\"includes\": [1, 100]}</td>\n  </tr>\n</table>\n"
      },
      "sortBy": {
        "name": "sortBy",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Specifies the fields and direction by which the output should be sorted. Should be provided as a URL-encoded string containing a JSON array of `sortDefinition` objects. A `sortDefinition` object consists of a `sortField` and a `sortDirection` field. The `sortField` is the name of the field you are sorting by (e.g., `firstName` or `custom###` for a custom field, where \"###\" is the custom field’s **`id`**). The `sortDirection` indicates whether the sort is ascending (`ASCENDING`) or descending (`DESCENDING`).\n\nFor example, to sort by last name ascending and first name descending, this parameter would be `[{\"sortField\":\"lastName\",\"sortDirection\":\"ASCENDING\"},{\"sortField\":\"firstName\", \"sortDirection\":\"DESCENDING\"}]`, which, when URL-encoded, would be `%5B%7B%22sortField%22%3A%22lastName%22%2C%22sortDirection%22%3A%22ASCENDING%22%7D%2C%7B%22sortField%22%3A%22firstName%22%2C%22sortDirection%22%3A%22DESCENDING%22%7D%5D`.\n\n**NOTE:** Currently, we support sorting by **`firstName`**, **`lastName`**, and text custom fields.\n"
      },
      "location": {
        "name": "location",
        "in": "query",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "\nOnly entities near this position will be returned. The values can be specified in one of two ways:\n\n1) Latitude and Longitude: The latitude and longitude of the point, separated by a comma (e.g.`\"40.740957,-73.987565\"`),\n\n2) Address: A free-form address to geocode into a latitude and longitude (e.g., `\"1 Madison Ave, New York, NY 10010\"` or `\"New York, NY\"`).\n\nNote that providing an address that resolves to an area, like a city or a postal code, does not restrict the search to exactly that area; it simply centers the search circle on a point in that area.\n"
      },
      "radius": {
        "name": "radius",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "default": 10,
          "minimum": 0.1,
          "maximum": 500
        },
        "description": "\nIndicates the search radius around the provided **`location`** in miles\n"
      },
      "geocoderBias": {
        "name": "geocoderBias",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The latitude, longitude, and approximate radius in miles, separated by commas, where the geocoder should be biased.\n"
      },
      "countryBias": {
        "name": "countryBias",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "required": false,
        "description": "\nThe two-character ISO 3166-1 code of the country where the geocoder should be biased.\n\nThe value of the **`countryBias`** parameter influences the search results, but it does not guarantee that the geocoded location will be in the country provided.\n\nIf both **`countryBias`** and **`geocoderBias`** are provided, **`geocoderBias`** is given priority, but both values are considered in the search.\n"
      },
      "apiIdentifier": {
        "name": "apiIdentifier",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The unique identifier of this review.\n\nOne of:\n* A UUID generated at the time the Review Creation request is accepted.\n* The invitationUid, if the review is associated with an invitation.\n\nThis ID will be returned in the response to any requests to the Review: Create Live API\nendpoint.\n\nThis ID will also be included in the Reviews Webhook, and the Review: Get/List Knowledge API\nendpoints.\n"
      },
      "endpoint": {
        "name": "endpoint",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "The ID of the Streams Endpoint to query."
      },
      "streamsDocIds": {
        "name": "ids",
        "in": "path",
        "required": true,
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "style": "simple",
        "description": "The Streams records to get. Multiple record IDs can be provided separated by commas.\n"
      },
      "pageToken": {
        "name": "pageToken",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "required": false,
        "description": "If a response to a previous request contained the **`nextPageToken`** field, pass that field's value as the **`pageToken`** parameter to retrieve the next page of data.\n"
      }
    },
    "schemas": {
      "ResponseMeta": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "example": "4f72b877-e2d0-4de4-9324-b9cf2c03e1a0",
            "description": "Unique ID for this request / response."
          }
        }
      },
      "ResponseError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Code that uniquely identifies the error or warning.\n"
          },
          "type": {
            "type": "string",
            "enum": [
              "FATAL_ERROR",
              "NON_FATAL_ERROR",
              "WARNING"
            ]
          },
          "message": {
            "type": "string",
            "description": "Message explaining the problem."
          }
        }
      },
      "ResponseMetaWithError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ResponseMeta"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "description": "List of errors and warnings.",
                "items": {
                  "$ref": "#/components/schemas/ResponseError"
                }
              }
            }
          }
        ]
      },
      "EntitySchema": {
        "type": "object",
        "properties": {
          "@context": {
            "type": "string"
          },
          "@type": {
            "type": "string"
          },
          "@id": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Image": {
            "type": "string"
          },
          "Geo": {
            "type": "object",
            "properties": {
              "@type": {
                "type": "string"
              },
              "Latitude": {
                "type": "number",
                "format": "double"
              },
              "Longitude": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "Address": {
            "type": "object",
            "properties": {
              "@type": {
                "type": "string"
              },
              "StreetAddress": {
                "type": "string"
              },
              "AddressLocality": {
                "type": "string"
              },
              "PostalCode": {
                "type": "string"
              },
              "AddressCountry": {
                "type": "string"
              }
            }
          },
          "Telephone": {
            "type": "string"
          }
        }
      },
      "BaseEcl": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 32,
            "description": "List ID."
          },
          "accountId": {
            "type": "string",
            "readOnly": true,
            "description": "ID of account that owns this List."
          },
          "name": {
            "type": "string",
            "description": "List name."
          },
          "title": {
            "type": "string",
            "description": "List title that appears on listings."
          },
          "size": {
            "type": "integer",
            "readOnly": true,
            "description": "Number of items in the List."
          },
          "publish": {
            "type": "boolean",
            "description": "Indicates whether the List should be shown on your listings."
          },
          "language": {
            "type": "string",
            "description": "List language in ISO 639-1 format. An ISO 3166-1 alpha-2 country code can optionally be appended to the language.\n\n**Examples:** en, en_GB, fr_CA\n"
          }
        }
      },
      "BaseEclSection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Section ID."
          },
          "name": {
            "type": "string",
            "description": "Section name."
          },
          "description": {
            "type": "string",
            "description": "Section description."
          }
        }
      },
      "BaseEclItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Item ID."
          },
          "name": {
            "type": "string",
            "description": "Item name."
          },
          "description": {
            "type": "string",
            "description": "Item description."
          }
        }
      },
      "Photo": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL of photo."
          },
          "height": {
            "type": "integer",
            "description": "Dimension in pixels."
          },
          "width": {
            "type": "integer",
            "description": "Dimension in pixels."
          },
          "alternateText": {
            "type": "string",
            "description": "The alternate text to be used for accessibility purposes."
          }
        }
      },
      "Calories": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "FIXED",
              "RANGE"
            ]
          },
          "calorie": {
            "type": "integer",
            "description": "Calorie count. Must be greater than or equal to 0 and less than or equal to 1000000."
          },
          "rangeTo": {
            "type": "integer",
            "description": "Specified only if `name` is `RANGE`. In that case, this Calories represents a calorie count range from `calorie` to `rangeTo`. Must be greater than `calorie` and less than or equal to 1000000."
          }
        }
      },
      "ContentListCostOption": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "e.g., Small, Medium, Large, Add Bacon."
          },
          "price": {
            "type": "string",
            "description": "A simple price in USD, e.g., 1.00."
          },
          "calorie": {
            "type": "integer",
            "description": "How many calories this option adds. This field is for Menu items only."
          }
        }
      },
      "ContentListCost": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRICE",
              "RANGE",
              "NONE",
              "OTHER"
            ]
          },
          "price": {
            "type": "string",
            "description": "Price in USD, e.g., 9.50. Must be greater than or equal to 0.0 and less than or equal to 1000000.00."
          },
          "unit": {
            "type": "string",
            "description": "e.g., Per Gallon, Each."
          },
          "rangeTo": {
            "type": "string",
            "description": "Specified only if `type` is `RANGE`. In that case, this Cost represents a `price` range from `price` to `rangeTo`. Must be greater than `price` and less than or equal to 1000000.00."
          },
          "other": {
            "type": "string",
            "description": "Specified only if `type` is `OTHER`. User-entered text, e.g., Market Price."
          },
          "options": {
            "type": "array",
            "description": "Add-ons or product variations that affect the price.",
            "items": {
              "$ref": "#/components/schemas/ContentListCostOption"
            }
          }
        }
      },
      "MenuItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclItem"
          },
          {
            "type": "object",
            "properties": {
              "photo": {
                "$ref": "#/components/schemas/Photo"
              },
              "calories": {
                "$ref": "#/components/schemas/Calories"
              },
              "cost": {
                "$ref": "#/components/schemas/ContentListCost"
              },
              "url": {
                "type": "string",
                "description": "The URL of the item's webpage."
              },
              "allergens": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of allergens associated with the menu item. Valid elements are:\n* Peanuts\n* Wheat\n* Sesame\n* Tree Nuts\n* Gluten\n* Soy\n* Dairy\n* Eggs\n* Fish\n* Shellfish\n* Shrimp\n* Crab\n* Soba\n"
              },
              "featuredItem": {
                "type": "boolean",
                "description": "Indicates whether the item is a featured item on the menu."
              }
            }
          }
        ]
      },
      "Section": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclSection"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Section Items.",
                "items": {
                  "$ref": "#/components/schemas/MenuItem"
                }
              }
            }
          }
        ]
      },
      "Menu": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEcl"
          },
          {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "The three-letter ISO 4217 currency code. Defaults to USD."
              },
              "sourceUrl": {
                "type": "string",
                "description": "The URL of the source the menu's content is retrieved from."
              },
              "sections": {
                "type": "array",
                "description": "A list of sections.",
                "items": {
                  "$ref": "#/components/schemas/Section"
                }
              }
            }
          }
        ]
      },
      "BioItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclItem"
          },
          {
            "type": "object",
            "properties": {
              "photo": {
                "$ref": "#/components/schemas/Photo"
              },
              "title": {
                "type": "string",
                "description": "Person's title."
              },
              "phone": {
                "type": "string",
                "description": "Item Phone."
              },
              "email": {
                "type": "string",
                "description": "Item Email."
              },
              "education": {
                "type": "array",
                "description": "List of up to 10 strings.",
                "items": {
                  "type": "string"
                }
              },
              "certifications": {
                "type": "array",
                "description": "List of up to 10 strings.",
                "items": {
                  "type": "string"
                }
              },
              "services": {
                "type": "array",
                "description": "List of up to 100 strings.",
                "items": {
                  "type": "string"
                }
              },
              "url": {
                "type": "string",
                "description": "Item URL."
              }
            }
          }
        ]
      },
      "BioEcl_Section": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclSection"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Section Items.",
                "items": {
                  "$ref": "#/components/schemas/BioItem"
                }
              }
            }
          }
        ]
      },
      "Bio": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEcl"
          },
          {
            "type": "object",
            "properties": {
              "sections": {
                "type": "array",
                "description": "A list of sections.",
                "items": {
                  "$ref": "#/components/schemas/BioEcl_Section"
                }
              }
            }
          }
        ]
      },
      "Photos": {
        "type": "array",
        "description": "List of up to 5 photos.",
        "items": {
          "$ref": "#/components/schemas/Photo"
        }
      },
      "ProductItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclItem"
          },
          {
            "type": "object",
            "properties": {
              "photos": {
                "$ref": "#/components/schemas/Photos"
              },
              "cost": {
                "$ref": "#/components/schemas/ContentListCost"
              },
              "idcode": {
                "type": "string",
                "description": "Displayed item ID."
              },
              "url": {
                "type": "string",
                "description": "Product home page"
              },
              "video": {
                "type": "string",
                "description": "Youtube URL."
              }
            }
          }
        ]
      },
      "ProductEcl_Section": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclSection"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Section Items.",
                "items": {
                  "$ref": "#/components/schemas/ProductItem"
                }
              }
            }
          }
        ]
      },
      "Product": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEcl"
          },
          {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string",
                "description": "The three-letter ISO 4217 currency code. Defaults to USD."
              },
              "sections": {
                "type": "array",
                "description": "A list of sections.",
                "items": {
                  "$ref": "#/components/schemas/ProductEcl_Section"
                }
              }
            }
          }
        ]
      },
      "EventItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclItem"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "User-provided event type."
              },
              "starts": {
                "type": "string",
                "format": "date",
                "description": "Start time in ISO 8601 format (yyyy-mm-ddThh:mm) (e.g., 2012-01-09T04:00)."
              },
              "ends": {
                "type": "string",
                "format": "date",
                "description": "End time in ISO 8601 format (yyyy-mm-ddThh:mm) (e.g., 2012-01-09T05:00)."
              },
              "photos": {
                "$ref": "#/components/schemas/Photos"
              },
              "url": {
                "type": "string",
                "description": "Item URL."
              },
              "video": {
                "type": "string",
                "description": "Youtube URL."
              }
            }
          }
        ]
      },
      "EventEcl_Section": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEclSection"
          },
          {
            "type": "object",
            "properties": {
              "items": {
                "type": "array",
                "description": "Section Items.",
                "items": {
                  "$ref": "#/components/schemas/EventItem"
                }
              }
            }
          }
        ]
      },
      "Event": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEcl"
          },
          {
            "type": "object",
            "properties": {
              "sections": {
                "type": "array",
                "description": "A list of sections. However, Calendars cannot have more than one section.",
                "items": {
                  "$ref": "#/components/schemas/EventEcl_Section"
                }
              }
            }
          }
        ]
      },
      "LocationType": {
        "type": "string",
        "enum": [
          "LOCATION",
          "HEALTHCARE_PROFESSIONAL",
          "HEALTHCARE_FACILITY",
          "RESTAURANT",
          "ATM"
        ]
      },
      "Photo-2": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Valid URL to image. Accepted formats: .jpg, .gif, .png.\n\nWhile updating this field, if the image could not be downloaded, or if its URL is invalid, the image will be ignored. The success response will contain a warning message explaining why the image was not stored in the system.\n"
          },
          "sourceUrl": {
            "type": "string",
            "readOnly": true,
            "description": "The URL the image was uploaded from, if applicable. Note that this URL may not currently be valid.\n"
          },
          "description": {
            "type": "string",
            "description": "Image description."
          },
          "details": {
            "type": "string",
            "description": "Image details."
          },
          "alternateText": {
            "type": "string",
            "description": "The alternate text to be used for accessibility purposes."
          },
          "width": {
            "type": "integer",
            "readOnly": true,
            "description": "Original photo width."
          },
          "height": {
            "type": "integer",
            "readOnly": true,
            "description": "Original photo height."
          },
          "derivatives": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The URL to derivative image.\nDerivative images are alternate versions of the original image (e.g., smaller versions used to improve page-load times on your site). They are primarily used with our Pages product."
                },
                "width": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Derivative photo width."
                },
                "height": {
                  "type": "integer",
                  "readOnly": true,
                  "description": "Derivative photo height."
                }
              },
              "description": "If no derivative photos are available, this attribute is omitted rather than empty."
            }
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 50,
            "description": "Primary key. Unique alphanumeric (Latin-1) ID assigned by the Customer."
          },
          "uid": {
            "type": "string",
            "readOnly": true,
            "description": "A static globally unique id for the location. Note that this field cannot be used in place of the location id in API calls to get or update location information."
          },
          "accountId": {
            "type": "string",
            "maxLength": 50,
            "description": "Must refer to an **account.id** that already exists."
          },
          "timestamp": {
            "type": "integer",
            "format": "int64",
            "readOnly": true,
            "description": "The timestamp of the most recent change to this location record.  Will be ignored when the client is saving location data to Yext.\n\n**NOTE:** The timestamp may change even if observable fields stay the same.\n"
          },
          "timezone": {
            "readOnly": true,
            "description": "The timezone of the location\n",
            "minLength": 0,
            "type": "string"
          },
          "locationType": {
            "$ref": "#/components/schemas/LocationType"
          },
          "locationName": {
            "type": "string",
            "maxLength": 100,
            "description": "Cannot include:\n* inappropriate language\n* HTML markup or entities\n* a URL or domain name\n* a phone number\n* control characters ([\\x00-\\x1F\\x7F])\n\nShould be in appropriate letter case (e.g., not in all capital letters)\n"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "middleName": {
            "type": "string",
            "description": "The middle name of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "officeName": {
            "type": "string",
            "description": "The name of the office where the healthcare professional works, if different from **locationName**\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "gender": {
            "type": "string",
            "description": "The gender of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n",
            "enum": [
              "FEMALE",
              "F",
              "MALE",
              "M",
              "UNSPECIFIED"
            ]
          },
          "npi": {
            "type": "string",
            "description": "The National Provider Identifier (NPI) of the healthcare provider\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.\n"
          },
          "address": {
            "type": "string",
            "maxLength": 255,
            "description": "Must be a valid address\n\nCannot be a P.O. Box\n"
          },
          "address2": {
            "type": "string",
            "maxLength": 255,
            "description": "Cannot be a P.O. Box"
          },
          "suppressAddress": {
            "type": "boolean",
            "description": "If true, do not show street address on listings. Defaults to false."
          },
          "displayAddress": {
            "type": "string",
            "maxLength": 255,
            "description": "Provides additional information to help consumers get to the location. This string appears along with the location's address (e.g., In Menlo Mall, 3rd Floor).\n\nIt may also be used in conjunction with a hidden address (i.e., when **suppressAddress** is true) to give consumers information about where the location is found (e.g., Servicing the New York area).\n\nCannot be a P.O. Box\n"
          },
          "city": {
            "type": "string",
            "maxLength": 80
          },
          "state": {
            "type": "string",
            "maxLength": 80,
            "description": "For US locations, the two-character code of the location’s state, or DC for the District of Columbia\nFor non-US locations, the name of the location’s province / region / state\n"
          },
          "sublocality": {
            "type": "string",
            "maxLength": 255,
            "description": "The name of the location's sublocality."
          },
          "zip": {
            "type": "string",
            "maxLength": 10,
            "description": "The location's postal code. For US locations, this field contains the five- or nine-digit ZIP code (the hyphen is optional). Validations are only done on `zip` if `countryCode` is US."
          },
          "countryCode": {
            "type": "string",
            "maxLength": 2,
            "description": "The two-character ISO 3166-1 code of the location's country or region. If omitted, US is used."
          },
          "serviceArea": {
            "type": "object",
            "properties": {
              "radius": {
                "type": "number",
                "format": "double",
                "description": "The distance around the location that the business serves\n\n**NOTE:** This field is no longer supported by Google My Business and is deprecated. We no longer accept or store values for **`radius`**.\n"
              },
              "unit": {
                "type": "string",
                "description": "The unit in which radius is measured.\n\n**NOTE:** This field is no longer supported by Google My Business and is deprecated. We no longer accept or store values for **`units`**.\n"
              },
              "places": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "A list of places served by the location, where each place is either:\n* a postal code, or\n* the name of a city.\n"
              }
            },
            "description": "Area that is served by this location. It may be specified as a radius from the location's address or as a list of cities and/or postal codes.\n\n**Only for Google My Business:** Currently, **serviceArea** is only supported by Google My Business and will not affect your listings on other sites.\n"
          },
          "phone": {
            "type": "string",
            "description": "Must be a valid phone number."
          },
          "isPhoneTracked": {
            "type": "boolean",
            "description": "Set to true if the number listed in **phone** is a tracked phone number.\n\n**NOTE:** When updating **isPhoneTracked**, you must provide a value for **phone** in the same request.\n"
          },
          "localPhone": {
            "type": "string",
            "description": "Must be a valid, non-toll-free phone number.\n\nRequired if:\n* **isPhoneTracked** is true and the non-tracked number is a toll-free number, **OR**\n* **isPhoneTracked** is false and **phone** is a toll-free number\n"
          },
          "alternatePhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "faxPhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "mobilePhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "tollFreePhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "ttyPhone": {
            "type": "string",
            "description": "Must be a valid phone number, based on the country specified in `countryCode`. Phone numbers for US locations must contain 10 digits."
          },
          "categoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Yext Category IDs. A Location must have at least one and at most 10 Categories.\n\nIDs must be valid and selectable (i.e., cannot be parent categories).\n\n**NOTE:** The list of category IDs that you send us must be comprehensive. For example, if you send us a list of IDs that does not include IDs that you sent in your last update, Yext considers the missing categories to be deleted, and we remove them from your listings.\n"
          },
          "featuredMessage": {
            "type": "string",
            "maxLength": 50,
            "description": "The Featured Message. Default: Call today!\n\nCannot include:\n* inappropriate language\n* HTML markup\n* a URL or domain name\n* a phone number\n* control characters ([\\x00-\\x1F\\x7F])\n* insufficient spacing\n\nIf you submit a Featured Message that contains profanity or more than 50 characters, it will be ignored. The success response will contain a warning message explaining why your Featured Message wasn't stored in the system.\n"
          },
          "featuredMessageUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "Valid URL to which the Featured Message is linked"
          },
          "websiteUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL of the location's website. This URL will be shown on your listings unless you specify a value for `displayWebsiteUrl`.\n\nMust be a valid URL and is required whenever `displayWebsiteUrl` is specified.\n"
          },
          "displayWebsiteUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `websiteUrl`. You can use `displayWebsiteUrl` to display a short, memorable web address that redirects consumers to the URL given in `websiteUrl`.\n\nMust be a valid URL and be specified along with `websiteUrl`.\n"
          },
          "reservationUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "A valid URL used for reservations at this location."
          },
          "displayReservationUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `reservationUrl`. You can use `displayReservationUrl` to display a short, memorable web address that redirects consumers to the URL given in `reservationUrl`.\n\nMust be a valid URL and be specified along with `reservationUrl`.\n"
          },
          "menuUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL of the location's menu."
          },
          "displayMenuUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `menuUrl`. You can use `displayMenuUrl` to display a short, memorable web address that redirects consumers to the URL given in `menuUrl`.\n\nMust be a valid URL and be specified along with `menuUrl`.\n"
          },
          "orderUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL used to place orders that will be fulfilled at the location."
          },
          "displayOrderUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL that is shown on your listings in place of `orderUrl`. You can use `displayOrderUrl` to display a short, memorable web address that redirects consumers to the URL given in `orderUrl`.\n\nMust be a valid URL and be specified along with `orderUrl`.\n"
          },
          "hours": {
            "type": "string",
            "maxLength": 255,
            "description": "Hours should be submitted as a comma-separated list of days, where each day's hours are specified as follows:\n\nd:oh:om:ch:cm\n* d = day of the week –\n  * 1 – Sunday\n  * 2 – Monday\n  * 3 – Tuesday\n  * 4 – Wednesday\n  * 5 – Thursday\n  * 6 – Friday\n  * 7 – Saturday\n* oh:om = opening time in 24-hour format\n* ch:cm = closing time in 24-hour format\n\nTimes with single-digit hours (e.g., 9 AM) can be submitted with or without a leading zero (9:00 or 09:00).\n\n**Example:** open 9 AM to 5 PM Monday and Tuesday, open 10 AM to 4 PM on Saturday – 2:9:00:17:00,3:9:00:17:00,7:10:00:16:00\n\nSPECIAL CASES:\n* To indicate that a location is open 24 hours on a specific day, set 00:00 as both the opening and closing time for that day.\n  * **Example:** open all day on Saturdays – 7:00:00:00:00\n* To indicate that a location is closed on a specific day, omit that day from the list or set it as closed (\"closed\" is not case sensitive).\n  * **Example:** closed on Sundays – 1:closed\n  * **NOTE:** If a location is closed seven days a week, set at least one day to closed. Otherwise, **hours** is an empty string, and we assume you are not submitting hours information for that location.\n* To indicate that a location has split hours on a specific day, submit a set of hours for each block of time the location is open.\n  * **Example:** open from 9:00 AM to 12:00 PM and again from 1:00 PM to 5:00 PM on Mondays – 2:9:00:12:00,2:13:00:17:00\n\n**NOTE:** To set hours for specific days of the year rather than days of the week, use **holidayHours**.\n"
          },
          "additionalHoursText": {
            "type": "string",
            "maxLength": 255,
            "description": "Additional information about business hours that does not fit in **hours** (e.g., Closed during the winter)"
          },
          "holidayHours": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "hours": {
                  "type": "string",
                  "description": "Special opening and closing times in 24-hour format (OH:OM:CH:CM, where OH:OM is the opening time and CH:CM is the closing time).\n\nTimes with single-digit hours (e.g., 9 AM) can be submitted with or without a leading zero (9:00 or 09:00).\n\nExamples:\n* 9:00:15:00 — Opening at 9:00 AM, closing at 3:00 PM\n* \"\" (empty string) — Closed all day\n* 0:00:0:00 or 0:00:23:59 — Open 24 hours\n* 9:00:15:00,17:00:19:00 — Split hours: open from 9:00 AM to 3:00 PM and again from 5:00 PM to 7:00 PM\n\n**NOTE:** If **isRegularHours** is set to true, we will ignore this field.\n"
                },
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "The date on which the holiday hours will be in effect"
                },
                "isRegularHours": {
                  "type": "boolean",
                  "default": false,
                  "description": "Indicates whether the holiday hours are the same as the regular business hours for the given date. If set to true, we will update the holiday hours if the regular business hours change for the date's day of the week."
                }
              }
            },
            "description": "Holiday hours for this location.\n\n**NOTE:** hours must be set in order for holidayHours to appear on your listings)\n"
          },
          "description": {
            "type": "string",
            "minLength": 10,
            "maxLength": 5000
          },
          "conditionsTreated": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the conditions treated by the healthcare provider\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.\n"
          },
          "certifications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the certifications held by the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "educationList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The kind of education or training completed",
                  "enum": [
                    "FELLOWSHIP",
                    "INTERNSHIP",
                    "MEDICAL_SCHOOL",
                    "RESIDENCY"
                  ]
                },
                "institutionName": {
                  "type": "string",
                  "description": "The name of the institution where the healthcare professional received the education or training"
                },
                "yearCompleted": {
                  "type": "string",
                  "description": "The year the healthcare professional completed the education or training"
                }
              }
            },
            "description": "A list of the types of education and training completed by the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "degrees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the degrees earned by the healthcare professional\n\n**NOTE:**  This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n\nValid values:\n\n* `ANP` (Adult Nurse Practitioner)\n* `APN` (Advanced Practice Nurse)\n* `APRN` (Advanced Practice Registered Nurse)\n* `ARNP` (Advanced Registered Nurse Practitioner)\n* `CNM` (Certified Nurse Midwife)\n* `CNP` (Certified Nurse Practitioner)\n* `CNS` (Clinical Nurse Specialist)\n* `CPNP` (Certified Pediatric Nurse Practitioner)\n* `CRNA` (Certified Registered Nurse Anesthetist)\n* `CRNP` (Certified Registered Nurse Practitioner)\n* `DC` (Doctor of Chiropractic)\n* `DDS` (Doctor of Dental Surgery)\n* `DMD` (Doctor of Dental Medicine)\n* `DO` (Doctor of Osteopathy)\n* `DPM` (Doctor of Podiatric Medicine)\n* `DVM` (Doctor of Veterinary Medicine)\n* `FNP` (Family Nurse Practitioner)\n* `GNP` (Geriatric Nurse Practitioner)\n* `LAC` (Licensed Acupuncturist)\n* `LPN` (Licensed Practical Nurse)\n* `MD` (Medical Doctor)\n* `ND` (Naturopathic Doctor)\n* `NP` (Nurse Practitioner)\n* `OD` (Doctor of Optometry)\n* `PA` (Physician Assistant)\n* `PAC` (Physician Assistant Certified)\n* `PHARMD` (Doctor of Pharmacy)\n* `PHD` (Doctor of Philosophy)\n* `PNP` (Pediatric Nurse Practitioner)\n* `VMD` (Veterinary Medical Doctor)\n* `WHNP` (Womens Health Nurse Practitioner)\n"
          },
          "admittingHospitals": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of hospitals where the healthcare professional admits patients\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "acceptingNewPatients": {
            "type": "boolean",
            "description": "Indicates whether the healthcare provider is accepting new patients\n\nDefault is true\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL` or `HEALTHCARE_FACILITY`.\n"
          },
          "closed": {
            "type": "object",
            "properties": {
              "isClosed": {
                "type": "boolean",
                "description": "Indicates whether the location is closed"
              }
            },
            "description": "A set of field-value pairs indicating whether the location is closed and, if it is closed, the date of its closing.\n\n**NOTE:** This field does not appear in the GET response unless it has been explicitly set in a PUT request.\n"
          },
          "paymentOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The payment methods accepted at this location\n\nValid elements depend on the location's country. For US locations, valid elements are:\n* AMERICANEXPRESS\n* CASH\n* CHECK\n* DINERSCLUB\n* DISCOVER\n* FINANCING\n* INVOICE\n* MASTERCARD\n* TRAVELERSCHECK\n* VISA\n* ANDROIDPAY\n* APPLEPAY\n* SAMSUNGPAY\n* BITCOIN\n* PAYPAL\n"
          },
          "insuranceAccepted": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of insurance policies accepted by the healthcare provider\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n"
          },
          "logo": {
            "$ref": "#/components/schemas/Photo-2"
          },
          "photos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Photo-2"
            },
            "description": "Up to 50 Photos.\n\n**NOTE:** The list of photos that you send us must be comprehensive. For example, if you send us a list of photos that does not include photos that you sent in your last update, Yext considers the missing photos to be deleted, and we remove them from your listings.\n"
          },
          "headshot": {
            "type": "object",
            "description": "A portrait of the healthcare professional\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `HEALTHCARE_PROFESSIONAL`.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo-2"
              }
            ]
          },
          "videoUrls": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 255
            },
            "description": "Valid YouTube URLs for embedding a video on some publisher sites.\n\n**NOTE:** Currently, only the first URL in the Array appears in your listings.\n"
          },
          "instagramHandle": {
            "type": "string",
            "description": "Valid Instagram username for the location (e.g., NewCityFiat (without the leading \"@\"))"
          },
          "twitterHandle": {
            "type": "string",
            "maxLength": 15,
            "description": "Valid Twitter handle for the location (e.g., JohnSmith (without the leading '@')).\nIf you submit an invalid Twitter handle, it will be ignored. The success response will contain a warning message explaining why your Twitter handle wasn't stored in the system."
          },
          "googleWebsiteOverride": {
            "type": "string",
            "maxLength": 255,
            "description": "The URL you would like to submit to Google My Business in place of the one given in **websiteUrl** (if applicable).\n\nFor example, if you want to analyze the traffic driven by your Google listings separately from other traffic, enter the alternate URL that you will use for tracking in this field.\n"
          },
          "googleCoverPhoto": {
            "type": "object",
            "description": "The cover photo for your business's Google profile\n\nNOTE: Your cover photo must meet all of the following requirements:\n* have a 16:9 aspect ratio\n* be at least 480 x 270 pixels\n* be no more than 2120 x 1192 pixels\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo-2"
              }
            ]
          },
          "googleProfilePhoto": {
            "type": "object",
            "description": "The profile photo for your business's Google profile\n\n**NOTE:** Your profile picture must meet all of the following requirements:\n* be a square\n* be at least 250 x 250 pixels\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo-2"
              }
            ]
          },
          "googleAttributes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID Of the Google My Business keyword\n\nKeywords are determined by the location's primary category (e.g., `has_drive_through`, `has_fitting_room`, `kitchen_in_room`).\n"
                },
                "optionIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "The unique IDs of any options selected for the keyword.\n\nKeyword options provide more details on how the keyword applies to the location (e.g., if **`id`** is `has_drive_through`, **`optionIds`** may be `true` or `false`).\n"
                }
              }
            },
            "description": "The Google My Business attributes for this location.\n"
          },
          "facebookPageUrl": {
            "type": "string",
            "maxLength": 255,
            "description": "URL for the location's Facebook Page.\n\nValid formats:\n* facebook.com/profile.php?id=[numId]\n* facebook.com/group.php?gid=[numId]\n* facebook.com/groups/[numId]\n* facebook.com/[Name]\n* facebook.com/pages/[Name]/[numId]\n\nwhere [Name] is a String and [numId] is an Integer\n\nIf you submit a URL that is not in one of the valid formats, it will be ignored. The success response will contain a warning message explaining why the URL wasn't stored in the system.\n\n**NOTE:** This value is automatically set to the location's Facebook Page URL. You can only manually set **facebookPageUrl** if the location meets one of the following criteria:\n* It is not subscribed to a Listings package that contains Facebook.\n* It is opted out of Facebook.\n"
          },
          "facebookCallToAction": {
            "description": "Designates the Facebook Call-to-Action button text and value      ",
            "type": "object",
            "properties": {
              "type": {
                "description": "The action the consumer is being prompted to take by the button's text",
                "enum": [
                  "NONE",
                  "BOOK_NOW",
                  "CALL_NOW",
                  "CONTACT_US",
                  "SEND_MESSAGE",
                  "USE_APP",
                  "PLAY_GAME",
                  "SHOP_NOW",
                  "SIGN_UP",
                  "WATCH_VIDEO",
                  "SEND_EMAIL",
                  "LEARN_MORE",
                  "PURCHASE_GIFT_CARDS",
                  "ORDER_NOW",
                  "FOLLOW_PAGE"
                ],
                "type": "string"
              },
              "value": {
                "description": "Indicates where consumers will be directed to upon clicking the Call-to-Action button (e.g., a URL). It can be a free-form string or an embedded value, depending on what the user specifies.\n\nFor example, if the user sets the Facebook Call-to-Action as \" 'Sign Up' using 'Website URL' \" in the Yext platform, **`type`** will be `SIGN_UP` and **`value`** will be `[[websiteUrl]]`.\n\nThe Call-to-Action will have the same behavior if the user sets the value to \"Custom Value\" in the platform and embeds a field.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "facebookCoverPhoto": {
            "type": "object",
            "description": "The cover photo for your business's Facebook profile\n\nDisplayed as a 851 x 315 pixel image\n\nYou must have a cover photo in order for your listing to appear on Facebook.\n\n**NOTE:** Your cover photo must be at least 400 pixels wide.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo-2"
              }
            ]
          },
          "facebookProfilePicture": {
            "type": "object",
            "description": "The profile picture for your business's Facebook profile\n\nYou must have a profile picture in order for your listing to appear on Facebook.\n\n**NOTE:** Your profile picture must be larger than 180 x 180 pixels.\n",
            "allOf": [
              {
                "$ref": "#/components/schemas/Photo-2"
              }
            ]
          },
          "uberLinkType": {
            "type": "string",
            "description": "Indicates whether the embedded Uber link for this location appears as text or a button\n\nWhen consumers click on this link on a mobile device, the Uber app (if installed) will open with your location set as the trip destination. If the Uber app is not installed, the consumer will be prompted to download it.\n",
            "enum": [
              "LINK",
              "BUTTON"
            ]
          },
          "uberLinkText": {
            "type": "string",
            "maxLength": 100,
            "description": "The text of the embedded Uber link\n\nDefault is \"Ride there with Uber\".\n\n**NOTE:** This field is only available if **uberLinkType** is LINK.\n"
          },
          "uberTripBrandingText": {
            "type": "string",
            "maxLength": 28,
            "description": "The text of the call-to-action that will appear in the Uber app during a trip to your location (e.g., Check out our menu!)\n\n**NOTE:** If a value for **uberTripBrandingText** is provided, values must also be provided for **uberTripBrandingUrl** and **uberTripBrandingDescription**.\n"
          },
          "uberTripBrandingUrl": {
            "type": "string",
            "description": "The URL that the consumer will be redirected to when tapping on the call-to-action in the Uber app during a trip to your location.\n\n**NOTE:** If a value for **uberTripBrandingUrl** is provided, values must also be provided for **uberTripBrandingText** and **uberTripBrandingDescription**.\n"
          },
          "uberTripBrandingDescription": {
            "type": "string",
            "maxLength": 150,
            "description": "A longer description that will appear near the call-to-action in the Uber app during a trip to your location.\n\n**NOTE:** If a value for **uberTripBrandingDescription** is provided, values must also be provided for **uberTripBrandingText** and **uberTripBrandingUrl**.\n"
          },
          "uberEmbedCode": {
            "type": "string",
            "readOnly": true,
            "description": "The Yext-powered code that can be copied and pasted into the markup of emails or web pages where the embedded Uber link should appear"
          },
          "uberLink": {
            "type": "string",
            "readOnly": true,
            "description": "The Yext-powered link that can be copied and pasted into the markup of Yext Pages where the embedded Uber link should appear"
          },
          "uberLinkRaw": {
            "type": "string",
            "readOnly": true,
            "description": "The Uber universal link for the location.\n\nFor more information on universal links, see Uber's developer documentation.\n\n**NOTE**: This field is only available in the LiveAPI and only for US locations. \n"
          },
          "yearEstablished": {
            "type": "string",
            "maxLength": 4,
            "description": "The year that this location was opened, not the number of years it was open\n\nMinimum of 1000, maximum of current year + 10.\n"
          },
          "displayLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude where the map pin should be displayed, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "displayLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude where the map pin should be displayed, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "routableLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for driving directions to the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "routableLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for driving directions to the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "walkableLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for walking directions to the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "walkableLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for walking directions to the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "pickupLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for pickup spot for the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "pickupLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for pickup spot for the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "dropoffLat": {
            "type": "number",
            "format": "double",
            "description": "Latitude to use for drop off spot for the location, as provided by you\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "dropoffLng": {
            "type": "number",
            "format": "double",
            "description": "Longitude to use for drop off spot for the location, as provided by you\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextDisplayLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude where the map pin should be displayed, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextDisplayLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude where the map pin should be displayed, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextRoutableLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for driving directions to the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextRoutableLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for driving directions to the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextWalkableLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for walking directions to the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextWalkableLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for walking directions to the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextPickupLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for pickup spot for the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextPickupLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for pickup spot for the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "yextDropoffLat": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Latitude to use for drop off spot for the location, as calculated by Yext\n\nBetween -90.0 and 90.0, inclusive\n"
          },
          "yextDropoffLng": {
            "type": "number",
            "format": "double",
            "readOnly": true,
            "description": "Longitude to use for drop off spot for the location, as calculated by Yext\n\nBetween -180.0 and 180.0, inclusive\n"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 255
            },
            "description": "Up to five emails addresses for reaching this location\n\nMust be valid email addresses\n"
          },
          "specialities": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 specialities (e.g., for food and dining: Chicago style)\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "associations": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 association memberships relevant to the location (e.g., New York Doctors Association)\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "products": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 products sold at this location\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 services offered at this location\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "brands": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 brands sold by this location\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "language": {
            "type": "string",
            "maxLength": 10,
            "description": "Language code of the language in which this location's information is provided. This language is considered the Location's primary language in our system.\n\n\nIf you would like to provide your Location data in more than one language, you can create a Language Profile for each of these additional (alternate) languages.\n"
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 languages spoken at this location.\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 100
            },
            "description": "Up to 100 keywords may be provided\n\nAll strings must be non-empty when trimmed of whitespace.\n"
          },
          "menusLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Menus. This label will appear on your location's listings."
          },
          "menuIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Menus associated with this location."
          },
          "bioListsLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Bio lists. This label will appear on your location's listings."
          },
          "bioListIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Bio lists associated with this location."
          },
          "productListsLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Product & Services lists. This label will appear on your location's listings."
          },
          "productListIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Product lists associated with this location."
          },
          "eventListsLabel": {
            "type": "string",
            "description": "Label to be used for this location’s Event lists. This label will appear on your location's listings."
          },
          "eventListIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of Event lists associated with this location."
          },
          "folderId": {
            "type": "string",
            "description": "The folder that this location is in. If the location is in the customer-level (root) folder, its folderId will be 0. Must be a valid, existing Yext Folder ID or 0"
          },
          "labelIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the location labels that have been added to this location. Location labels help you identify locations that share a certain characteristic; they do not appear on your location's listings.\n\n**NOTE:** You can only add labels that have already been created via our web interface. Currently, it is not possible to create new labels via the API.\n\nIn Locations: Update requests:\n* If the **`v`** parameter is before `20180223`: setting the value of **`labelIds`** to an empty array has no effect on the current value\n* If the **`v`** parameter is `20180223` or after: setting the value of **`labelIds`** to an empty array deletes the current value\n"
          },
          "customFields": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            },
            "description": "A set of key-value pairs indicating the location's custom fields and their values. The keys are the **`ids`** of the custom fields, and the values are the fields' contents for this location.\n\nTo retrieve a list of custom fields for your account, use the Custom Fields: List endpoint.\n\nIf a field's **`type`** is `SINGLE_OPTION` or `MULTI_OPTION`, the option or options that apply to this location must be represented by their **`key`**s.\n\nExamples of each type of custom field:\n\n* BOOLEAN:\n    * `{ \"9662\": \"true\" }`\n* DAILY_TIMES:\n    * `{ \"10012\": { \"dailyTimes\": \"2:7:00,3:7:00,4:7:00,5:7:00,6:7:00,7:7:00,1:7:00\" } }`\n* DATE:\n    * `{ \"7066\": \"2016-10-12\" }`\n* GALLERY:\n    * `{ \"7070\": [ { \"url\": \"http://a.mktgcdn.com/p/ounkg7aq6Oy029-sRf4CIH64/128x128.jpg\" }, { \"url\": \"http://a.mktgcdn.com/p/YkQGqxK8jFBqOlailQ9QIBsgs/1.0000/316x316.png\" } ] }`\n* HOURS:\n    * `{ \"10011\": { \"hours\": \"1:7:00:20:00,2:7:00:20:00,3:7:00:20:00,4:7:00:20:00,5:7:00:20:00,6:7:00:20:00,7:7:00:20:00\", \"additionalHoursText\": \"Also by appointment\" }`\n* LOCATION_LIST:\n    * `{ \"8098\" : [ \"locationId1\", \"locationId2\" ] }`\n* MULTILINE_TEXT (up to 4,000 characters):\n    * `{ \"1592\": \"Take Route 13 south. Pass Riverrun Reservoir. At the traffic light before the post office, turn right off of Route 13. Pass the library and community center on your right and then pass a diner on your left. Cross over the bridge and at the third intersection, turn left onto Jones Street. We are located on the right side in the middle of the block.\" }`\n* MULTI_OPTION:\n    * `{ \"7068\": [\"2614\", \"2615\"] }` (`\"2614\"` and `\"2615\"` are the options' **`key`**s)\n* NUMBER:\n    * `{ \"7078\": \"123\" }`\n* PHOTO:\n    * `{ \"7071\": { \"url\": \"http://a.mktgcdn.com/p/bRtQXQZP2kEzgy2C8/800x800.jpg\", \"description\": \"New storefront\", \"details\": \"A picture of the new storefront\" } }`\n    * `{ \"7071\": null }` (This setting will clear the existing value of the Photo custom field.)\n* SINGLE_OPTION:\n    * `{ \"7069\": \"2617\" }` (`\"2617\"` is the option's **`key`**)\n* TEXT (up to 255 characters):\n    * `{ \"6157\": \"Buy One, Get One 50% Off\" }`\n* TEXT_LIST:\n    * `{ \"7072\": [ \"Item 1\", \"Item 2\", \"Item 3\" ] }`\n* URL:\n    * `{ \"9381\": \"http://www.location.example.com\" }`\n* VIDEO:\n    * `{ \"7077\": { \"url\": \"http://www.youtube.com/watch?v=6KQPho\" } }`\n* VIDEO_GALLERY:\n    * `{ \"8452\": [ { \"url\": \"http://www.youtube.com/watch?v=B1EC1U\" }, { \"url\": \"http://www.youtube.com/watch?v=SkEtnN\" } ] }`\n"
          },
          "intelligentSearchTrackingEnabled": {
            "type": "boolean",
            "description": "Indicates whether Intelligent Search Tracker is enabled.\n\nThe Intelligent Search Tracker allows you to understand your performance in local search.\n"
          },
          "intelligentSearchTrackingFrequency": {
            "type": "string",
            "enum": [
              "WEEKLY",
              "MONTHLY",
              "QUARTERLY"
            ],
            "description": "How often we send search queries to track your search performance.\n"
          },
          "locationKeywords": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NAME",
                "PRIMARY_CATEGORY"
              ]
            },
            "description": "Keywords that we will use to track your search performance. These keywords are based on the location information you've stored in our system.\n"
          },
          "customKeywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional keywords you would like us to use when tracking your search performance\n"
          },
          "queryTemplates": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "KEYWORD",
                "KEYWORD_ZIP",
                "KEYWORD_CITY",
                "KEYWORD_IN_CITY",
                "KEYWORD_NEAR_ME",
                "KEYWORD_CITY_STATE"
              ]
            },
            "description": "The ways in which your keywords will be arranged in the search queries we use to track your performance\n"
          },
          "alternateNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Other names for your business that you would like us to use when tracking your search performance\n"
          },
          "alternateWebsites": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Other websites for your business that we should look for when tracking your search performance\n"
          },
          "competitors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The competitor's name"
                },
                "website": {
                  "type": "string",
                  "description": "The competitor's website."
                }
              }
            },
            "description": "The names and websites of the competitors whose search performance you would like to compare to your own\n"
          },
          "trackingSites": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "GOOGLE_DESKTOP",
                "GOOGLE_MOBILE",
                "BING_DESKTOP",
                "BING_MOBILE",
                "YAHOO_DESKTOP",
                "YAHOO_MOBILE"
              ]
            },
            "description": "The search engines that we will use to track your performance\n"
          },
          "isoRegionCode": {
            "type": "string",
            "readOnly": true,
            "description": "The ISO 3166-2 region code for the location.\n\nYext will determine the location’s code and update isoRegionCode with that value. If Yext is unable to determine the code for the location, the location’s ISO 3166-1 alpha-2 country code will be used.\n"
          },
          "reviewBalancingURL": {
            "type": "string",
            "maxLength": 255,
            "readOnly": true,
            "description": "Link to the balancing URL that will auto-direct consumers to certain sites to leave reviews, based on review-generation settings\n"
          },
          "firstPartyReviewPage": {
            "type": "string",
            "maxLength": 255,
            "readOnly": true,
            "description": "Link to the review-collection page, where consumers can leave first-party reviews\n"
          },
          "isClusterPrimary": {
            "type": "boolean",
            "description": "Indicates whether the location is the primary location in its group\n"
          },
          "schemaTypes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string"
            },
            "description": "List of Schema Types for this location, based on its categories\n"
          },
          "attire": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "DRESSY",
              "CASUAL",
              "FORMAL"
            ],
            "description": "The formality of clothing typically worn at this location\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.\n"
          },
          "priceRange": {
            "type": "string",
            "enum": [
              "UNSPECIFIED",
              "ONE",
              "TWO",
              "THREE",
              "FOUR"
            ],
            "description": "The typical price of products sold at this location, on a scale of 1 (low) to 4 (high)\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.\n"
          },
          "mealsServed": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Types of meals served at this location\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `RESTAURANT`.\n\nValid values:\n\n* `BREAKFAST`\n* `LUNCH`\n* `BRUNCH`\n* `HAPPY_HOUR`\n* `LATE_NIGHT`\n"
          },
          "locatedIn": {
            "type": "string",
            "description": "For ATMs, the external ID of the location that the ATM is installed in. The location must be in the same business account as the ATM.\n\n**NOTE:** This field is only available to locations whose **`locationType`** is `ATM`.\n"
          },
          "primaryContact": {
            "type": "string",
            "description": "ID of the user who is the primary Knowledge Assistant contact for the entity\n"
          },
          "reviewResponseConversationEnabled": {
            "type": "boolean",
            "description": "Indicates whether or not review response conversations are enabled for the Yext Knowledge Assistant\n"
          },
          "holidayHoursConfirmationEnabled": {
            "type": "boolean",
            "description": "Indicates whether or not holiday hour confirmation alerts are enabled for the Yext Knowledge Assistant\n"
          }
        }
      },
      "LocationSchema": {
        "type": "object",
        "properties": {
          "@context": {
            "type": "string"
          },
          "@type": {
            "type": "string"
          },
          "@id": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Image": {
            "type": "string"
          },
          "Geo": {
            "type": "object",
            "properties": {
              "@type": {
                "type": "string"
              },
              "Latitude": {
                "type": "number",
                "format": "double"
              },
              "Longitude": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "Address": {
            "type": "object",
            "properties": {
              "@type": {
                "type": "string"
              },
              "StreetAddress": {
                "type": "string"
              },
              "AddressLocality": {
                "type": "string"
              },
              "PostalCode": {
                "type": "string"
              },
              "AddressCountry": {
                "type": "string"
              }
            }
          },
          "Telephone": {
            "type": "string"
          },
          "OpeningHoursSpecification": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "@type": {
                  "type": "string"
                },
                "DayOfWeek": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "Opens": {
                  "type": "string"
                },
                "Closes": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Geo": {
        "type": "object",
        "description": "If location provided in geosearch cannot be geocoded, this field will be set to null.",
        "properties": {
          "latitude": {
            "type": "string",
            "description": "Latitude as returned by geocoder. If no value, returns \"\""
          },
          "longitude": {
            "type": "string",
            "description": "Longitude as returned by geocoder. If no value, returns \"\""
          },
          "address": {
            "type": "string",
            "description": "Address field as returned by geocoder. If no value, returns \"\""
          },
          "address2": {
            "type": "string",
            "description": "Address2 field as returned by geocoder. If no value, returns \"\""
          },
          "locality": {
            "type": "string",
            "description": "Locality (city) field as returned by geocoder. If no value, returns \"\""
          },
          "region": {
            "type": "string",
            "description": "Region (state) field as returned by geocoder. If no value, returns \"\""
          },
          "postalCode": {
            "type": "string",
            "description": "PostalCode (ZIP) field as returned by geocoder. If no value, returns \"\""
          },
          "country": {
            "type": "string",
            "description": "Country field as returned by geocoder. If no value, returns \"\""
          },
          "granularity": {
            "type": "string",
            "enum": [
              "POINT",
              "ADDRESS",
              "STREET",
              "SUBLOCALITY",
              "LOCALITY",
              "POSTALCODE",
              "REGION",
              "COUNTRY",
              "UNKNOWN"
            ]
          }
        },
        "required": [
          "latitude",
          "longitude",
          "address",
          "address2",
          "locality",
          "region",
          "postalCode",
          "country",
          "granularity"
        ]
      },
      "LocationDistance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "External location ID"
          },
          "distanceMiles": {
            "type": "number",
            "description": "Distance in miles between the Location and the location specified in the Geo object."
          },
          "distanceKilometers": {
            "type": "number",
            "description": "Distance in kilometers between the Location and the location specified in the Geo object."
          }
        }
      },
      "QuestionRequest": {
        "type": "object",
        "required": [
          "entityId",
          "name",
          "email",
          "questionText",
          "questionLanguage"
        ],
        "properties": {
          "entityId": {
            "type": "string",
            "description": "ID of the entity associated to this question."
          },
          "site": {
            "type": "string",
            "description": "Site on which to create this question."
          },
          "name": {
            "type": "string",
            "description": "The name of the author of the question."
          },
          "email": {
            "type": "string",
            "description": "The email of the author of the question."
          },
          "questionText": {
            "type": "string",
            "description": "The question that is being asked."
          },
          "questionDescription": {
            "type": "string",
            "description": "Additional details for this question."
          },
          "questionLanguage": {
            "type": "string",
            "description": "The language code of the language that the question is being asked in."
          }
        }
      },
      "CreateReview": {
        "type": "object",
        "required": [
          "entity",
          "authorName",
          "authorEmail",
          "rating",
          "content"
        ],
        "properties": {
          "entity": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID of the entity associated with this review."
              }
            }
          },
          "authorName": {
            "type": "string",
            "description": "The name of the person who wrote the review."
          },
          "authorEmail": {
            "type": "string",
            "description": "The email address of the person who wrote the review."
          },
          "title": {
            "type": "string",
            "description": "The title of the review."
          },
          "rating": {
            "type": "number",
            "format": "double",
            "description": "Normalized rating out of 5."
          },
          "content": {
            "type": "string",
            "description": "The content of the review."
          },
          "status": {
            "type": "string",
            "enum": [
              "LIVE",
              "QUARANTINED",
              "REMOVED"
            ],
            "description": "The status of the review. Defaults to `QUARANTINED` when creating.\n"
          },
          "reviewLabelNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The names of the Review Labels which will be attached to the resulting review.\n\nThis is an _upsert_ operation, meaning the system will determine if a Review Label exists\nalready in your account, and create and append a new label if not.\n"
          },
          "reviewDate": {
            "type": "string",
            "format": "date",
            "description": "If provided, the date you received the review from the customer. Defaults to the date the\nreview was uploaded to Yext.\n\n(`YYYY-MM-DD` format)\n"
          },
          "invitationUid": {
            "type": "string",
            "description": "The ID of the invitation which should be associated with this review."
          }
        }
      },
      "UpdateReview": {
        "type": "object",
        "properties": {
          "authorName": {
            "type": "string",
            "description": "The name of the person who wrote the review."
          },
          "authorEmail": {
            "type": "string",
            "description": "The email address of the person who wrote the review."
          },
          "title": {
            "type": "string",
            "description": "The title of the review."
          },
          "rating": {
            "type": "number",
            "format": "double",
            "description": "Normalized rating out of 5."
          },
          "content": {
            "type": "string",
            "description": "The content of the review."
          },
          "status": {
            "type": "string",
            "enum": [
              "LIVE",
              "QUARANTINED",
              "REMOVED"
            ],
            "description": "The status of the review. Defaults to `QUARANTINED` when creating.\n"
          },
          "reviewLabelNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The names of the Review Labels which will be attached to the resulting review.\n\nThis is an _upsert_ operation, meaning the system will determine if a Review Label exists\nalready in your account, and create and append a new label if not.\n"
          },
          "reviewDate": {
            "type": "string",
            "format": "date",
            "description": "If provided, the date you received the review from the customer. Defaults to the date the\nreview was uploaded to Yext.\n\n(`YYYY-MM-DD` format)\n"
          }
        }
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "Error Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ErrorResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMetaWithError"
                },
                "response": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "EntitySchemaResponse": {
        "description": "Entity Schema Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "EntitySchemaResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/EntitySchema"
                }
              }
            }
          }
        }
      },
      "MenuResponse": {
        "description": "Menu Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "MenuListResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Menu"
                }
              }
            }
          }
        }
      },
      "BioResponse": {
        "description": "Bio List Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "BioListResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Bio"
                }
              }
            }
          }
        }
      },
      "ProductResponse": {
        "description": "Product List Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "ProductListResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "EventResponse": {
        "description": "Event List Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "EventListResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      },
      "LanguageProfileResponse": {
        "description": "Language Profile Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "LanguageProfileResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          }
        }
      },
      "LanguageProfilesResponse": {
        "description": "Language Profiles Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "LanguageProfilesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "languageProfiles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "LanguageProfileSchemaResponse": {
        "description": "Language Profile Schema Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "LanguageProfileSchemaResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/LocationSchema"
                }
              }
            }
          }
        }
      },
      "LocationResponse": {
        "description": "Location Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "LocationResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          }
        }
      },
      "LocationsResponse": {
        "description": "Locations Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "LocationsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of Locations that meet filter criteria (ignores limit / offset)."
                    },
                    "locations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "LocationSchemaResponse": {
        "description": "Location Schema Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "LocationSchemaResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "$ref": "#/components/schemas/LocationSchema"
                }
              }
            }
          }
        }
      },
      "GeoSearchResponse": {
        "description": "Geo Search Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "GeoSearchResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "\nTotal number of Locations that meet filter criteria (ignores **`limit`** / **`offset`** parameters)\n"
                    },
                    "geo": {
                      "$ref": "#/components/schemas/Geo"
                    },
                    "locationDistances": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LocationDistance"
                      }
                    },
                    "locations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Location"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "EmptyResponse": {
        "description": "Empty Response.",
        "content": {
          "application/json": {
            "schema": {
              "title": "EmptyResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "ReviewsResponse": {
        "description": "Reviews Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "ReviewsResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "apiIdentifier": {
                      "type": "string",
                      "description": "The unique identifier which will need to be included in any further requests to\nupdate or delete this review.\n\nOne of:\n* A UUID generated at the time the Review Creation request is accepted.\n* The invitationUid, if the review is associated with an invitation.\n"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "StreamsResponse": {
        "description": "Streams Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "EntitiesResponse",
              "type": "object",
              "properties": {
                "meta": {
                  "$ref": "#/components/schemas/ResponseMeta"
                },
                "response": {
                  "type": "object",
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "\nTotal number of documents that meet the filter criteria.\n"
                    },
                    "docs": {
                      "type": "array",
                      "description": "Streams API documents containing your endpoint's configured fields.",
                      "items": {
                        "type": "object"
                      }
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "If the response of a request contains the last page of data, a **`pageToken`** value will not be returned."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "requestBodies": {
      "createQuestionRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/QuestionRequest"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "api_key": []
    },
    {
      "api-key": []
    }
  ],
  "tags": [
    {
      "name": "Live API"
    },
    {
      "name": "Streams API"
    }
  ]
}